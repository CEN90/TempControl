<transitionsystem>
<state id="1_0" atomicpropositions="" >
	<rebec name="room">
		<statevariables>
			<variable name="Room.currentTemp" type="int">22</variable>
			<variable name="Room.currentRegulation" type="int">0</variable>
			<variable name="Room.outside_air" type="int">0</variable>
		</statevariables>
		<queue>
			<message arrival="0" deadline="infinity" sender="room">updateStatus()</message>
		</queue>
		<now>0</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="controller">
		<statevariables>
			<variable name="Controller.currentTemp" type="int">22</variable>
			<variable name="Controller.isHeating" type="boolean">false</variable>
			<variable name="Controller.isCooling" type="boolean">false</variable>
		</statevariables>
		<queue>
		</queue>
		<now>0</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="sensor">
		<statevariables>
		</statevariables>
		<queue>
			<message arrival="0" deadline="infinity" sender="sensor">callSensor()</message>
		</queue>
		<now>0</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="hc_unit">
		<statevariables>
			<variable name="HC_Unit.heaterOn" type="boolean">false</variable>
			<variable name="HC_Unit.coolerOn" type="boolean">false</variable>
			<variable name="HC_Unit.currentRegulation" type="int">0</variable>
		</statevariables>
		<queue>
			<message arrival="0" deadline="infinity" sender="hc_unit">regulateTemp()</message>
		</queue>
		<now>0</now>
		<pc></pc>
		<res></res>
	</rebec>
</state>
<state id="2_0" atomicpropositions="" >
	<rebec name="room">
		<statevariables>
			<variable name="Room.currentTemp" type="int">21</variable>
			<variable name="Room.currentRegulation" type="int">0</variable>
			<variable name="Room.outside_air" type="int">1</variable>
		</statevariables>
		<queue>
			<message arrival="10" deadline="infinity" sender="room">updateStatus()</message>
		</queue>
		<now>0</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="controller">
		<statevariables>
			<variable name="Controller.currentTemp" type="int">22</variable>
			<variable name="Controller.isHeating" type="boolean">false</variable>
			<variable name="Controller.isCooling" type="boolean">false</variable>
		</statevariables>
		<queue>
		</queue>
		<now>0</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="sensor">
		<statevariables>
		</statevariables>
		<queue>
			<message arrival="0" deadline="infinity" sender="sensor">callSensor()</message>
		</queue>
		<now>0</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="hc_unit">
		<statevariables>
			<variable name="HC_Unit.heaterOn" type="boolean">false</variable>
			<variable name="HC_Unit.coolerOn" type="boolean">false</variable>
			<variable name="HC_Unit.currentRegulation" type="int">0</variable>
		</statevariables>
		<queue>
			<message arrival="0" deadline="infinity" sender="hc_unit">regulateTemp()</message>
		</queue>
		<now>0</now>
		<pc></pc>
		<res></res>
	</rebec>
</state>
<transition source="1_0" destination="2_0" executionTime="0" shift="0"> <messageserver sender="room" owner="room" title="UPDATESTATUS"/></transition>
<state id="3_0" atomicpropositions="" >
	<rebec name="room">
		<statevariables>
			<variable name="Room.currentTemp" type="int">22</variable>
			<variable name="Room.currentRegulation" type="int">0</variable>
			<variable name="Room.outside_air" type="int">0</variable>
		</statevariables>
		<queue>
			<message arrival="10" deadline="infinity" sender="room">updateStatus()</message>
		</queue>
		<now>0</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="controller">
		<statevariables>
			<variable name="Controller.currentTemp" type="int">22</variable>
			<variable name="Controller.isHeating" type="boolean">false</variable>
			<variable name="Controller.isCooling" type="boolean">false</variable>
		</statevariables>
		<queue>
		</queue>
		<now>0</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="sensor">
		<statevariables>
		</statevariables>
		<queue>
			<message arrival="0" deadline="infinity" sender="sensor">callSensor()</message>
		</queue>
		<now>0</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="hc_unit">
		<statevariables>
			<variable name="HC_Unit.heaterOn" type="boolean">false</variable>
			<variable name="HC_Unit.coolerOn" type="boolean">false</variable>
			<variable name="HC_Unit.currentRegulation" type="int">0</variable>
		</statevariables>
		<queue>
			<message arrival="0" deadline="infinity" sender="hc_unit">regulateTemp()</message>
		</queue>
		<now>0</now>
		<pc></pc>
		<res></res>
	</rebec>
</state>
<transition source="1_0" destination="3_0" executionTime="0" shift="0"> <messageserver sender="room" owner="room" title="UPDATESTATUS"/></transition>
<state id="4_0" atomicpropositions="" >
	<rebec name="room">
		<statevariables>
			<variable name="Room.currentTemp" type="int">23</variable>
			<variable name="Room.currentRegulation" type="int">0</variable>
			<variable name="Room.outside_air" type="int">-1</variable>
		</statevariables>
		<queue>
			<message arrival="10" deadline="infinity" sender="room">updateStatus()</message>
		</queue>
		<now>0</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="controller">
		<statevariables>
			<variable name="Controller.currentTemp" type="int">22</variable>
			<variable name="Controller.isHeating" type="boolean">false</variable>
			<variable name="Controller.isCooling" type="boolean">false</variable>
		</statevariables>
		<queue>
		</queue>
		<now>0</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="sensor">
		<statevariables>
		</statevariables>
		<queue>
			<message arrival="0" deadline="infinity" sender="sensor">callSensor()</message>
		</queue>
		<now>0</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="hc_unit">
		<statevariables>
			<variable name="HC_Unit.heaterOn" type="boolean">false</variable>
			<variable name="HC_Unit.coolerOn" type="boolean">false</variable>
			<variable name="HC_Unit.currentRegulation" type="int">0</variable>
		</statevariables>
		<queue>
			<message arrival="0" deadline="infinity" sender="hc_unit">regulateTemp()</message>
		</queue>
		<now>0</now>
		<pc></pc>
		<res></res>
	</rebec>
</state>
<transition source="1_0" destination="4_0" executionTime="0" shift="0"> <messageserver sender="room" owner="room" title="UPDATESTATUS"/></transition>
<state id="5_0" atomicpropositions="" >
	<rebec name="room">
		<statevariables>
			<variable name="Room.currentTemp" type="int">22</variable>
			<variable name="Room.currentRegulation" type="int">0</variable>
			<variable name="Room.outside_air" type="int">0</variable>
		</statevariables>
		<queue>
			<message arrival="0" deadline="infinity" sender="room">updateStatus()</message>
			<message arrival="0" deadline="infinity" sender="sensor">getTemp()</message>
		</queue>
		<now>0</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="controller">
		<statevariables>
			<variable name="Controller.currentTemp" type="int">22</variable>
			<variable name="Controller.isHeating" type="boolean">false</variable>
			<variable name="Controller.isCooling" type="boolean">false</variable>
		</statevariables>
		<queue>
		</queue>
		<now>0</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="sensor">
		<statevariables>
		</statevariables>
		<queue>
			<message arrival="2" deadline="infinity" sender="sensor">callSensor()</message>
		</queue>
		<now>0</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="hc_unit">
		<statevariables>
			<variable name="HC_Unit.heaterOn" type="boolean">false</variable>
			<variable name="HC_Unit.coolerOn" type="boolean">false</variable>
			<variable name="HC_Unit.currentRegulation" type="int">0</variable>
		</statevariables>
		<queue>
			<message arrival="0" deadline="infinity" sender="hc_unit">regulateTemp()</message>
		</queue>
		<now>0</now>
		<pc></pc>
		<res></res>
	</rebec>
</state>
<transition source="1_0" destination="5_0" executionTime="0" shift="0"> <messageserver sender="sensor" owner="sensor" title="CALLSENSOR"/></transition>
<state id="6_0" atomicpropositions="" >
	<rebec name="room">
		<statevariables>
			<variable name="Room.currentTemp" type="int">22</variable>
			<variable name="Room.currentRegulation" type="int">0</variable>
			<variable name="Room.outside_air" type="int">0</variable>
		</statevariables>
		<queue>
			<message arrival="0" deadline="infinity" sender="room">updateStatus()</message>
			<message arrival="0" deadline="infinity" sender="hc_unit">setRegulation(0)</message>
		</queue>
		<now>0</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="controller">
		<statevariables>
			<variable name="Controller.currentTemp" type="int">22</variable>
			<variable name="Controller.isHeating" type="boolean">false</variable>
			<variable name="Controller.isCooling" type="boolean">false</variable>
		</statevariables>
		<queue>
		</queue>
		<now>0</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="sensor">
		<statevariables>
		</statevariables>
		<queue>
			<message arrival="0" deadline="infinity" sender="sensor">callSensor()</message>
		</queue>
		<now>0</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="hc_unit">
		<statevariables>
			<variable name="HC_Unit.heaterOn" type="boolean">false</variable>
			<variable name="HC_Unit.coolerOn" type="boolean">false</variable>
			<variable name="HC_Unit.currentRegulation" type="int">0</variable>
		</statevariables>
		<queue>
			<message arrival="5" deadline="infinity" sender="hc_unit">regulateTemp()</message>
		</queue>
		<now>0</now>
		<pc></pc>
		<res></res>
	</rebec>
</state>
<transition source="1_0" destination="6_0" executionTime="0" shift="0"> <messageserver sender="hc_unit" owner="hc_unit" title="REGULATETEMP"/></transition>
<state id="7_0" atomicpropositions="" >
	<rebec name="room">
		<statevariables>
			<variable name="Room.currentTemp" type="int">21</variable>
			<variable name="Room.currentRegulation" type="int">0</variable>
			<variable name="Room.outside_air" type="int">1</variable>
		</statevariables>
		<queue>
			<message arrival="0" deadline="infinity" sender="sensor">getTemp()</message>
			<message arrival="10" deadline="infinity" sender="room">updateStatus()</message>
		</queue>
		<now>0</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="controller">
		<statevariables>
			<variable name="Controller.currentTemp" type="int">22</variable>
			<variable name="Controller.isHeating" type="boolean">false</variable>
			<variable name="Controller.isCooling" type="boolean">false</variable>
		</statevariables>
		<queue>
		</queue>
		<now>0</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="sensor">
		<statevariables>
		</statevariables>
		<queue>
			<message arrival="2" deadline="infinity" sender="sensor">callSensor()</message>
		</queue>
		<now>0</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="hc_unit">
		<statevariables>
			<variable name="HC_Unit.heaterOn" type="boolean">false</variable>
			<variable name="HC_Unit.coolerOn" type="boolean">false</variable>
			<variable name="HC_Unit.currentRegulation" type="int">0</variable>
		</statevariables>
		<queue>
			<message arrival="0" deadline="infinity" sender="hc_unit">regulateTemp()</message>
		</queue>
		<now>0</now>
		<pc></pc>
		<res></res>
	</rebec>
</state>
<transition source="2_0" destination="7_0" executionTime="0" shift="0"> <messageserver sender="sensor" owner="sensor" title="CALLSENSOR"/></transition>
<state id="8_0" atomicpropositions="" >
	<rebec name="room">
		<statevariables>
			<variable name="Room.currentTemp" type="int">21</variable>
			<variable name="Room.currentRegulation" type="int">0</variable>
			<variable name="Room.outside_air" type="int">1</variable>
		</statevariables>
		<queue>
			<message arrival="0" deadline="infinity" sender="hc_unit">setRegulation(0)</message>
			<message arrival="10" deadline="infinity" sender="room">updateStatus()</message>
		</queue>
		<now>0</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="controller">
		<statevariables>
			<variable name="Controller.currentTemp" type="int">22</variable>
			<variable name="Controller.isHeating" type="boolean">false</variable>
			<variable name="Controller.isCooling" type="boolean">false</variable>
		</statevariables>
		<queue>
		</queue>
		<now>0</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="sensor">
		<statevariables>
		</statevariables>
		<queue>
			<message arrival="0" deadline="infinity" sender="sensor">callSensor()</message>
		</queue>
		<now>0</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="hc_unit">
		<statevariables>
			<variable name="HC_Unit.heaterOn" type="boolean">false</variable>
			<variable name="HC_Unit.coolerOn" type="boolean">false</variable>
			<variable name="HC_Unit.currentRegulation" type="int">0</variable>
		</statevariables>
		<queue>
			<message arrival="5" deadline="infinity" sender="hc_unit">regulateTemp()</message>
		</queue>
		<now>0</now>
		<pc></pc>
		<res></res>
	</rebec>
</state>
<transition source="2_0" destination="8_0" executionTime="0" shift="0"> <messageserver sender="hc_unit" owner="hc_unit" title="REGULATETEMP"/></transition>
<state id="9_0" atomicpropositions="" >
	<rebec name="room">
		<statevariables>
			<variable name="Room.currentTemp" type="int">23</variable>
			<variable name="Room.currentRegulation" type="int">0</variable>
			<variable name="Room.outside_air" type="int">-1</variable>
		</statevariables>
		<queue>
			<message arrival="0" deadline="infinity" sender="sensor">getTemp()</message>
			<message arrival="10" deadline="infinity" sender="room">updateStatus()</message>
		</queue>
		<now>0</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="controller">
		<statevariables>
			<variable name="Controller.currentTemp" type="int">22</variable>
			<variable name="Controller.isHeating" type="boolean">false</variable>
			<variable name="Controller.isCooling" type="boolean">false</variable>
		</statevariables>
		<queue>
		</queue>
		<now>0</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="sensor">
		<statevariables>
		</statevariables>
		<queue>
			<message arrival="2" deadline="infinity" sender="sensor">callSensor()</message>
		</queue>
		<now>0</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="hc_unit">
		<statevariables>
			<variable name="HC_Unit.heaterOn" type="boolean">false</variable>
			<variable name="HC_Unit.coolerOn" type="boolean">false</variable>
			<variable name="HC_Unit.currentRegulation" type="int">0</variable>
		</statevariables>
		<queue>
			<message arrival="0" deadline="infinity" sender="hc_unit">regulateTemp()</message>
		</queue>
		<now>0</now>
		<pc></pc>
		<res></res>
	</rebec>
</state>
<transition source="4_0" destination="9_0" executionTime="0" shift="0"> <messageserver sender="sensor" owner="sensor" title="CALLSENSOR"/></transition>
<state id="10_0" atomicpropositions="" >
	<rebec name="room">
		<statevariables>
			<variable name="Room.currentTemp" type="int">23</variable>
			<variable name="Room.currentRegulation" type="int">0</variable>
			<variable name="Room.outside_air" type="int">-1</variable>
		</statevariables>
		<queue>
			<message arrival="0" deadline="infinity" sender="hc_unit">setRegulation(0)</message>
			<message arrival="10" deadline="infinity" sender="room">updateStatus()</message>
		</queue>
		<now>0</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="controller">
		<statevariables>
			<variable name="Controller.currentTemp" type="int">22</variable>
			<variable name="Controller.isHeating" type="boolean">false</variable>
			<variable name="Controller.isCooling" type="boolean">false</variable>
		</statevariables>
		<queue>
		</queue>
		<now>0</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="sensor">
		<statevariables>
		</statevariables>
		<queue>
			<message arrival="0" deadline="infinity" sender="sensor">callSensor()</message>
		</queue>
		<now>0</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="hc_unit">
		<statevariables>
			<variable name="HC_Unit.heaterOn" type="boolean">false</variable>
			<variable name="HC_Unit.coolerOn" type="boolean">false</variable>
			<variable name="HC_Unit.currentRegulation" type="int">0</variable>
		</statevariables>
		<queue>
			<message arrival="5" deadline="infinity" sender="hc_unit">regulateTemp()</message>
		</queue>
		<now>0</now>
		<pc></pc>
		<res></res>
	</rebec>
</state>
<transition source="4_0" destination="10_0" executionTime="0" shift="0"> <messageserver sender="hc_unit" owner="hc_unit" title="REGULATETEMP"/></transition>
<transition source="6_0" destination="8_0" executionTime="0" shift="0"> <messageserver sender="room" owner="room" title="UPDATESTATUS"/></transition>
<state id="11_0" atomicpropositions="" >
	<rebec name="room">
		<statevariables>
			<variable name="Room.currentTemp" type="int">22</variable>
			<variable name="Room.currentRegulation" type="int">0</variable>
			<variable name="Room.outside_air" type="int">0</variable>
		</statevariables>
		<queue>
			<message arrival="0" deadline="infinity" sender="hc_unit">setRegulation(0)</message>
			<message arrival="10" deadline="infinity" sender="room">updateStatus()</message>
		</queue>
		<now>0</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="controller">
		<statevariables>
			<variable name="Controller.currentTemp" type="int">22</variable>
			<variable name="Controller.isHeating" type="boolean">false</variable>
			<variable name="Controller.isCooling" type="boolean">false</variable>
		</statevariables>
		<queue>
		</queue>
		<now>0</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="sensor">
		<statevariables>
		</statevariables>
		<queue>
			<message arrival="0" deadline="infinity" sender="sensor">callSensor()</message>
		</queue>
		<now>0</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="hc_unit">
		<statevariables>
			<variable name="HC_Unit.heaterOn" type="boolean">false</variable>
			<variable name="HC_Unit.coolerOn" type="boolean">false</variable>
			<variable name="HC_Unit.currentRegulation" type="int">0</variable>
		</statevariables>
		<queue>
			<message arrival="5" deadline="infinity" sender="hc_unit">regulateTemp()</message>
		</queue>
		<now>0</now>
		<pc></pc>
		<res></res>
	</rebec>
</state>
<transition source="6_0" destination="11_0" executionTime="0" shift="0"> <messageserver sender="room" owner="room" title="UPDATESTATUS"/></transition>
<transition source="6_0" destination="10_0" executionTime="0" shift="0"> <messageserver sender="room" owner="room" title="UPDATESTATUS"/></transition>
<state id="12_0" atomicpropositions="" >
	<rebec name="room">
		<statevariables>
			<variable name="Room.currentTemp" type="int">22</variable>
			<variable name="Room.currentRegulation" type="int">0</variable>
			<variable name="Room.outside_air" type="int">0</variable>
		</statevariables>
		<queue>
			<message arrival="0" deadline="infinity" sender="room">updateStatus()</message>
		</queue>
		<now>0</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="controller">
		<statevariables>
			<variable name="Controller.currentTemp" type="int">22</variable>
			<variable name="Controller.isHeating" type="boolean">false</variable>
			<variable name="Controller.isCooling" type="boolean">false</variable>
		</statevariables>
		<queue>
		</queue>
		<now>0</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="sensor">
		<statevariables>
		</statevariables>
		<queue>
			<message arrival="0" deadline="infinity" sender="sensor">callSensor()</message>
		</queue>
		<now>0</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="hc_unit">
		<statevariables>
			<variable name="HC_Unit.heaterOn" type="boolean">false</variable>
			<variable name="HC_Unit.coolerOn" type="boolean">false</variable>
			<variable name="HC_Unit.currentRegulation" type="int">0</variable>
		</statevariables>
		<queue>
			<message arrival="5" deadline="infinity" sender="hc_unit">regulateTemp()</message>
		</queue>
		<now>0</now>
		<pc></pc>
		<res></res>
	</rebec>
</state>
<transition source="6_0" destination="12_0" executionTime="0" shift="0"> <messageserver sender="hc_unit" owner="room" title="SETREGULATION"/></transition>
<state id="13_0" atomicpropositions="" >
	<rebec name="room">
		<statevariables>
			<variable name="Room.currentTemp" type="int">22</variable>
			<variable name="Room.currentRegulation" type="int">0</variable>
			<variable name="Room.outside_air" type="int">0</variable>
		</statevariables>
		<queue>
			<message arrival="0" deadline="infinity" sender="room">updateStatus()</message>
			<message arrival="0" deadline="infinity" sender="hc_unit">setRegulation(0)</message>
			<message arrival="0" deadline="infinity" sender="sensor">getTemp()</message>
		</queue>
		<now>0</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="controller">
		<statevariables>
			<variable name="Controller.currentTemp" type="int">22</variable>
			<variable name="Controller.isHeating" type="boolean">false</variable>
			<variable name="Controller.isCooling" type="boolean">false</variable>
		</statevariables>
		<queue>
		</queue>
		<now>0</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="sensor">
		<statevariables>
		</statevariables>
		<queue>
			<message arrival="2" deadline="infinity" sender="sensor">callSensor()</message>
		</queue>
		<now>0</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="hc_unit">
		<statevariables>
			<variable name="HC_Unit.heaterOn" type="boolean">false</variable>
			<variable name="HC_Unit.coolerOn" type="boolean">false</variable>
			<variable name="HC_Unit.currentRegulation" type="int">0</variable>
		</statevariables>
		<queue>
			<message arrival="5" deadline="infinity" sender="hc_unit">regulateTemp()</message>
		</queue>
		<now>0</now>
		<pc></pc>
		<res></res>
	</rebec>
</state>
<transition source="6_0" destination="13_0" executionTime="0" shift="0"> <messageserver sender="sensor" owner="sensor" title="CALLSENSOR"/></transition>
<state id="14_0" atomicpropositions="" >
	<rebec name="room">
		<statevariables>
			<variable name="Room.currentTemp" type="int">21</variable>
			<variable name="Room.currentRegulation" type="int">0</variable>
			<variable name="Room.outside_air" type="int">1</variable>
		</statevariables>
		<queue>
			<message arrival="10" deadline="infinity" sender="room">updateStatus()</message>
		</queue>
		<now>0</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="controller">
		<statevariables>
			<variable name="Controller.currentTemp" type="int">22</variable>
			<variable name="Controller.isHeating" type="boolean">false</variable>
			<variable name="Controller.isCooling" type="boolean">false</variable>
		</statevariables>
		<queue>
		</queue>
		<now>0</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="sensor">
		<statevariables>
		</statevariables>
		<queue>
			<message arrival="0" deadline="infinity" sender="sensor">callSensor()</message>
		</queue>
		<now>0</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="hc_unit">
		<statevariables>
			<variable name="HC_Unit.heaterOn" type="boolean">false</variable>
			<variable name="HC_Unit.coolerOn" type="boolean">false</variable>
			<variable name="HC_Unit.currentRegulation" type="int">0</variable>
		</statevariables>
		<queue>
			<message arrival="5" deadline="infinity" sender="hc_unit">regulateTemp()</message>
		</queue>
		<now>0</now>
		<pc></pc>
		<res></res>
	</rebec>
</state>
<transition source="8_0" destination="14_0" executionTime="0" shift="0"> <messageserver sender="hc_unit" owner="room" title="SETREGULATION"/></transition>
<state id="15_0" atomicpropositions="" >
	<rebec name="room">
		<statevariables>
			<variable name="Room.currentTemp" type="int">21</variable>
			<variable name="Room.currentRegulation" type="int">0</variable>
			<variable name="Room.outside_air" type="int">1</variable>
		</statevariables>
		<queue>
			<message arrival="0" deadline="infinity" sender="hc_unit">setRegulation(0)</message>
			<message arrival="0" deadline="infinity" sender="sensor">getTemp()</message>
			<message arrival="10" deadline="infinity" sender="room">updateStatus()</message>
		</queue>
		<now>0</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="controller">
		<statevariables>
			<variable name="Controller.currentTemp" type="int">22</variable>
			<variable name="Controller.isHeating" type="boolean">false</variable>
			<variable name="Controller.isCooling" type="boolean">false</variable>
		</statevariables>
		<queue>
		</queue>
		<now>0</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="sensor">
		<statevariables>
		</statevariables>
		<queue>
			<message arrival="2" deadline="infinity" sender="sensor">callSensor()</message>
		</queue>
		<now>0</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="hc_unit">
		<statevariables>
			<variable name="HC_Unit.heaterOn" type="boolean">false</variable>
			<variable name="HC_Unit.coolerOn" type="boolean">false</variable>
			<variable name="HC_Unit.currentRegulation" type="int">0</variable>
		</statevariables>
		<queue>
			<message arrival="5" deadline="infinity" sender="hc_unit">regulateTemp()</message>
		</queue>
		<now>0</now>
		<pc></pc>
		<res></res>
	</rebec>
</state>
<transition source="8_0" destination="15_0" executionTime="0" shift="0"> <messageserver sender="sensor" owner="sensor" title="CALLSENSOR"/></transition>
<state id="16_0" atomicpropositions="" >
	<rebec name="room">
		<statevariables>
			<variable name="Room.currentTemp" type="int">23</variable>
			<variable name="Room.currentRegulation" type="int">0</variable>
			<variable name="Room.outside_air" type="int">-1</variable>
		</statevariables>
		<queue>
			<message arrival="10" deadline="infinity" sender="room">updateStatus()</message>
		</queue>
		<now>0</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="controller">
		<statevariables>
			<variable name="Controller.currentTemp" type="int">22</variable>
			<variable name="Controller.isHeating" type="boolean">false</variable>
			<variable name="Controller.isCooling" type="boolean">false</variable>
		</statevariables>
		<queue>
		</queue>
		<now>0</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="sensor">
		<statevariables>
		</statevariables>
		<queue>
			<message arrival="0" deadline="infinity" sender="room">setCurrent(23)</message>
			<message arrival="2" deadline="infinity" sender="sensor">callSensor()</message>
		</queue>
		<now>0</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="hc_unit">
		<statevariables>
			<variable name="HC_Unit.heaterOn" type="boolean">false</variable>
			<variable name="HC_Unit.coolerOn" type="boolean">false</variable>
			<variable name="HC_Unit.currentRegulation" type="int">0</variable>
		</statevariables>
		<queue>
			<message arrival="0" deadline="infinity" sender="hc_unit">regulateTemp()</message>
		</queue>
		<now>0</now>
		<pc></pc>
		<res></res>
	</rebec>
</state>
<transition source="9_0" destination="16_0" executionTime="0" shift="0"> <messageserver sender="sensor" owner="room" title="GETTEMP"/></transition>
<state id="17_0" atomicpropositions="" >
	<rebec name="room">
		<statevariables>
			<variable name="Room.currentTemp" type="int">23</variable>
			<variable name="Room.currentRegulation" type="int">0</variable>
			<variable name="Room.outside_air" type="int">-1</variable>
		</statevariables>
		<queue>
			<message arrival="0" deadline="infinity" sender="hc_unit">setRegulation(0)</message>
			<message arrival="0" deadline="infinity" sender="sensor">getTemp()</message>
			<message arrival="10" deadline="infinity" sender="room">updateStatus()</message>
		</queue>
		<now>0</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="controller">
		<statevariables>
			<variable name="Controller.currentTemp" type="int">22</variable>
			<variable name="Controller.isHeating" type="boolean">false</variable>
			<variable name="Controller.isCooling" type="boolean">false</variable>
		</statevariables>
		<queue>
		</queue>
		<now>0</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="sensor">
		<statevariables>
		</statevariables>
		<queue>
			<message arrival="2" deadline="infinity" sender="sensor">callSensor()</message>
		</queue>
		<now>0</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="hc_unit">
		<statevariables>
			<variable name="HC_Unit.heaterOn" type="boolean">false</variable>
			<variable name="HC_Unit.coolerOn" type="boolean">false</variable>
			<variable name="HC_Unit.currentRegulation" type="int">0</variable>
		</statevariables>
		<queue>
			<message arrival="5" deadline="infinity" sender="hc_unit">regulateTemp()</message>
		</queue>
		<now>0</now>
		<pc></pc>
		<res></res>
	</rebec>
</state>
<transition source="9_0" destination="17_0" executionTime="0" shift="0"> <messageserver sender="hc_unit" owner="hc_unit" title="REGULATETEMP"/></transition>
<state id="18_0" atomicpropositions="" >
	<rebec name="room">
		<statevariables>
			<variable name="Room.currentTemp" type="int">22</variable>
			<variable name="Room.currentRegulation" type="int">0</variable>
			<variable name="Room.outside_air" type="int">0</variable>
		</statevariables>
		<queue>
			<message arrival="10" deadline="infinity" sender="room">updateStatus()</message>
		</queue>
		<now>0</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="controller">
		<statevariables>
			<variable name="Controller.currentTemp" type="int">22</variable>
			<variable name="Controller.isHeating" type="boolean">false</variable>
			<variable name="Controller.isCooling" type="boolean">false</variable>
		</statevariables>
		<queue>
		</queue>
		<now>0</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="sensor">
		<statevariables>
		</statevariables>
		<queue>
			<message arrival="0" deadline="infinity" sender="sensor">callSensor()</message>
		</queue>
		<now>0</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="hc_unit">
		<statevariables>
			<variable name="HC_Unit.heaterOn" type="boolean">false</variable>
			<variable name="HC_Unit.coolerOn" type="boolean">false</variable>
			<variable name="HC_Unit.currentRegulation" type="int">0</variable>
		</statevariables>
		<queue>
			<message arrival="5" deadline="infinity" sender="hc_unit">regulateTemp()</message>
		</queue>
		<now>0</now>
		<pc></pc>
		<res></res>
	</rebec>
</state>
<transition source="11_0" destination="18_0" executionTime="0" shift="0"> <messageserver sender="hc_unit" owner="room" title="SETREGULATION"/></transition>
<state id="19_0" atomicpropositions="" >
	<rebec name="room">
		<statevariables>
			<variable name="Room.currentTemp" type="int">22</variable>
			<variable name="Room.currentRegulation" type="int">0</variable>
			<variable name="Room.outside_air" type="int">0</variable>
		</statevariables>
		<queue>
			<message arrival="0" deadline="infinity" sender="hc_unit">setRegulation(0)</message>
			<message arrival="0" deadline="infinity" sender="sensor">getTemp()</message>
			<message arrival="10" deadline="infinity" sender="room">updateStatus()</message>
		</queue>
		<now>0</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="controller">
		<statevariables>
			<variable name="Controller.currentTemp" type="int">22</variable>
			<variable name="Controller.isHeating" type="boolean">false</variable>
			<variable name="Controller.isCooling" type="boolean">false</variable>
		</statevariables>
		<queue>
		</queue>
		<now>0</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="sensor">
		<statevariables>
		</statevariables>
		<queue>
			<message arrival="2" deadline="infinity" sender="sensor">callSensor()</message>
		</queue>
		<now>0</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="hc_unit">
		<statevariables>
			<variable name="HC_Unit.heaterOn" type="boolean">false</variable>
			<variable name="HC_Unit.coolerOn" type="boolean">false</variable>
			<variable name="HC_Unit.currentRegulation" type="int">0</variable>
		</statevariables>
		<queue>
			<message arrival="5" deadline="infinity" sender="hc_unit">regulateTemp()</message>
		</queue>
		<now>0</now>
		<pc></pc>
		<res></res>
	</rebec>
</state>
<transition source="11_0" destination="19_0" executionTime="0" shift="0"> <messageserver sender="sensor" owner="sensor" title="CALLSENSOR"/></transition>
<transition source="13_0" destination="15_0" executionTime="0" shift="0"> <messageserver sender="room" owner="room" title="UPDATESTATUS"/></transition>
<transition source="13_0" destination="19_0" executionTime="0" shift="0"> <messageserver sender="room" owner="room" title="UPDATESTATUS"/></transition>
<transition source="13_0" destination="17_0" executionTime="0" shift="0"> <messageserver sender="room" owner="room" title="UPDATESTATUS"/></transition>
<state id="20_0" atomicpropositions="" >
	<rebec name="room">
		<statevariables>
			<variable name="Room.currentTemp" type="int">22</variable>
			<variable name="Room.currentRegulation" type="int">0</variable>
			<variable name="Room.outside_air" type="int">0</variable>
		</statevariables>
		<queue>
			<message arrival="0" deadline="infinity" sender="room">updateStatus()</message>
			<message arrival="0" deadline="infinity" sender="sensor">getTemp()</message>
		</queue>
		<now>0</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="controller">
		<statevariables>
			<variable name="Controller.currentTemp" type="int">22</variable>
			<variable name="Controller.isHeating" type="boolean">false</variable>
			<variable name="Controller.isCooling" type="boolean">false</variable>
		</statevariables>
		<queue>
		</queue>
		<now>0</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="sensor">
		<statevariables>
		</statevariables>
		<queue>
			<message arrival="2" deadline="infinity" sender="sensor">callSensor()</message>
		</queue>
		<now>0</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="hc_unit">
		<statevariables>
			<variable name="HC_Unit.heaterOn" type="boolean">false</variable>
			<variable name="HC_Unit.coolerOn" type="boolean">false</variable>
			<variable name="HC_Unit.currentRegulation" type="int">0</variable>
		</statevariables>
		<queue>
			<message arrival="5" deadline="infinity" sender="hc_unit">regulateTemp()</message>
		</queue>
		<now>0</now>
		<pc></pc>
		<res></res>
	</rebec>
</state>
<transition source="13_0" destination="20_0" executionTime="0" shift="0"> <messageserver sender="hc_unit" owner="room" title="SETREGULATION"/></transition>
<state id="21_0" atomicpropositions="" >
	<rebec name="room">
		<statevariables>
			<variable name="Room.currentTemp" type="int">22</variable>
			<variable name="Room.currentRegulation" type="int">0</variable>
			<variable name="Room.outside_air" type="int">0</variable>
		</statevariables>
		<queue>
			<message arrival="0" deadline="infinity" sender="room">updateStatus()</message>
			<message arrival="0" deadline="infinity" sender="hc_unit">setRegulation(0)</message>
		</queue>
		<now>0</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="controller">
		<statevariables>
			<variable name="Controller.currentTemp" type="int">22</variable>
			<variable name="Controller.isHeating" type="boolean">false</variable>
			<variable name="Controller.isCooling" type="boolean">false</variable>
		</statevariables>
		<queue>
		</queue>
		<now>0</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="sensor">
		<statevariables>
		</statevariables>
		<queue>
			<message arrival="0" deadline="infinity" sender="room">setCurrent(22)</message>
			<message arrival="2" deadline="infinity" sender="sensor">callSensor()</message>
		</queue>
		<now>0</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="hc_unit">
		<statevariables>
			<variable name="HC_Unit.heaterOn" type="boolean">false</variable>
			<variable name="HC_Unit.coolerOn" type="boolean">false</variable>
			<variable name="HC_Unit.currentRegulation" type="int">0</variable>
		</statevariables>
		<queue>
			<message arrival="5" deadline="infinity" sender="hc_unit">regulateTemp()</message>
		</queue>
		<now>0</now>
		<pc></pc>
		<res></res>
	</rebec>
</state>
<transition source="13_0" destination="21_0" executionTime="0" shift="0"> <messageserver sender="sensor" owner="room" title="GETTEMP"/></transition>
<state id="22_0" atomicpropositions="" >
	<rebec name="room">
		<statevariables>
			<variable name="Room.currentTemp" type="int">21</variable>
			<variable name="Room.currentRegulation" type="int">0</variable>
			<variable name="Room.outside_air" type="int">1</variable>
		</statevariables>
		<queue>
			<message arrival="0" deadline="infinity" sender="sensor">getTemp()</message>
			<message arrival="10" deadline="infinity" sender="room">updateStatus()</message>
		</queue>
		<now>0</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="controller">
		<statevariables>
			<variable name="Controller.currentTemp" type="int">22</variable>
			<variable name="Controller.isHeating" type="boolean">false</variable>
			<variable name="Controller.isCooling" type="boolean">false</variable>
		</statevariables>
		<queue>
		</queue>
		<now>0</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="sensor">
		<statevariables>
		</statevariables>
		<queue>
			<message arrival="2" deadline="infinity" sender="sensor">callSensor()</message>
		</queue>
		<now>0</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="hc_unit">
		<statevariables>
			<variable name="HC_Unit.heaterOn" type="boolean">false</variable>
			<variable name="HC_Unit.coolerOn" type="boolean">false</variable>
			<variable name="HC_Unit.currentRegulation" type="int">0</variable>
		</statevariables>
		<queue>
			<message arrival="5" deadline="infinity" sender="hc_unit">regulateTemp()</message>
		</queue>
		<now>0</now>
		<pc></pc>
		<res></res>
	</rebec>
</state>
<transition source="15_0" destination="22_0" executionTime="0" shift="0"> <messageserver sender="hc_unit" owner="room" title="SETREGULATION"/></transition>
<state id="23_0" atomicpropositions="" >
	<rebec name="room">
		<statevariables>
			<variable name="Room.currentTemp" type="int">21</variable>
			<variable name="Room.currentRegulation" type="int">0</variable>
			<variable name="Room.outside_air" type="int">1</variable>
		</statevariables>
		<queue>
			<message arrival="0" deadline="infinity" sender="hc_unit">setRegulation(0)</message>
			<message arrival="10" deadline="infinity" sender="room">updateStatus()</message>
		</queue>
		<now>0</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="controller">
		<statevariables>
			<variable name="Controller.currentTemp" type="int">22</variable>
			<variable name="Controller.isHeating" type="boolean">false</variable>
			<variable name="Controller.isCooling" type="boolean">false</variable>
		</statevariables>
		<queue>
		</queue>
		<now>0</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="sensor">
		<statevariables>
		</statevariables>
		<queue>
			<message arrival="0" deadline="infinity" sender="room">setCurrent(21)</message>
			<message arrival="2" deadline="infinity" sender="sensor">callSensor()</message>
		</queue>
		<now>0</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="hc_unit">
		<statevariables>
			<variable name="HC_Unit.heaterOn" type="boolean">false</variable>
			<variable name="HC_Unit.coolerOn" type="boolean">false</variable>
			<variable name="HC_Unit.currentRegulation" type="int">0</variable>
		</statevariables>
		<queue>
			<message arrival="5" deadline="infinity" sender="hc_unit">regulateTemp()</message>
		</queue>
		<now>0</now>
		<pc></pc>
		<res></res>
	</rebec>
</state>
<transition source="15_0" destination="23_0" executionTime="0" shift="0"> <messageserver sender="sensor" owner="room" title="GETTEMP"/></transition>
<state id="24_0" atomicpropositions="" >
	<rebec name="room">
		<statevariables>
			<variable name="Room.currentTemp" type="int">23</variable>
			<variable name="Room.currentRegulation" type="int">0</variable>
			<variable name="Room.outside_air" type="int">-1</variable>
		</statevariables>
		<queue>
			<message arrival="0" deadline="infinity" sender="sensor">getTemp()</message>
			<message arrival="10" deadline="infinity" sender="room">updateStatus()</message>
		</queue>
		<now>0</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="controller">
		<statevariables>
			<variable name="Controller.currentTemp" type="int">22</variable>
			<variable name="Controller.isHeating" type="boolean">false</variable>
			<variable name="Controller.isCooling" type="boolean">false</variable>
		</statevariables>
		<queue>
		</queue>
		<now>0</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="sensor">
		<statevariables>
		</statevariables>
		<queue>
			<message arrival="2" deadline="infinity" sender="sensor">callSensor()</message>
		</queue>
		<now>0</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="hc_unit">
		<statevariables>
			<variable name="HC_Unit.heaterOn" type="boolean">false</variable>
			<variable name="HC_Unit.coolerOn" type="boolean">false</variable>
			<variable name="HC_Unit.currentRegulation" type="int">0</variable>
		</statevariables>
		<queue>
			<message arrival="5" deadline="infinity" sender="hc_unit">regulateTemp()</message>
		</queue>
		<now>0</now>
		<pc></pc>
		<res></res>
	</rebec>
</state>
<transition source="17_0" destination="24_0" executionTime="0" shift="0"> <messageserver sender="hc_unit" owner="room" title="SETREGULATION"/></transition>
<state id="25_0" atomicpropositions="" >
	<rebec name="room">
		<statevariables>
			<variable name="Room.currentTemp" type="int">23</variable>
			<variable name="Room.currentRegulation" type="int">0</variable>
			<variable name="Room.outside_air" type="int">-1</variable>
		</statevariables>
		<queue>
			<message arrival="0" deadline="infinity" sender="hc_unit">setRegulation(0)</message>
			<message arrival="10" deadline="infinity" sender="room">updateStatus()</message>
		</queue>
		<now>0</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="controller">
		<statevariables>
			<variable name="Controller.currentTemp" type="int">22</variable>
			<variable name="Controller.isHeating" type="boolean">false</variable>
			<variable name="Controller.isCooling" type="boolean">false</variable>
		</statevariables>
		<queue>
		</queue>
		<now>0</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="sensor">
		<statevariables>
		</statevariables>
		<queue>
			<message arrival="0" deadline="infinity" sender="room">setCurrent(23)</message>
			<message arrival="2" deadline="infinity" sender="sensor">callSensor()</message>
		</queue>
		<now>0</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="hc_unit">
		<statevariables>
			<variable name="HC_Unit.heaterOn" type="boolean">false</variable>
			<variable name="HC_Unit.coolerOn" type="boolean">false</variable>
			<variable name="HC_Unit.currentRegulation" type="int">0</variable>
		</statevariables>
		<queue>
			<message arrival="5" deadline="infinity" sender="hc_unit">regulateTemp()</message>
		</queue>
		<now>0</now>
		<pc></pc>
		<res></res>
	</rebec>
</state>
<transition source="17_0" destination="25_0" executionTime="0" shift="0"> <messageserver sender="sensor" owner="room" title="GETTEMP"/></transition>
<state id="26_0" atomicpropositions="" >
	<rebec name="room">
		<statevariables>
			<variable name="Room.currentTemp" type="int">22</variable>
			<variable name="Room.currentRegulation" type="int">0</variable>
			<variable name="Room.outside_air" type="int">0</variable>
		</statevariables>
		<queue>
			<message arrival="0" deadline="infinity" sender="sensor">getTemp()</message>
			<message arrival="10" deadline="infinity" sender="room">updateStatus()</message>
		</queue>
		<now>0</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="controller">
		<statevariables>
			<variable name="Controller.currentTemp" type="int">22</variable>
			<variable name="Controller.isHeating" type="boolean">false</variable>
			<variable name="Controller.isCooling" type="boolean">false</variable>
		</statevariables>
		<queue>
		</queue>
		<now>0</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="sensor">
		<statevariables>
		</statevariables>
		<queue>
			<message arrival="2" deadline="infinity" sender="sensor">callSensor()</message>
		</queue>
		<now>0</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="hc_unit">
		<statevariables>
			<variable name="HC_Unit.heaterOn" type="boolean">false</variable>
			<variable name="HC_Unit.coolerOn" type="boolean">false</variable>
			<variable name="HC_Unit.currentRegulation" type="int">0</variable>
		</statevariables>
		<queue>
			<message arrival="5" deadline="infinity" sender="hc_unit">regulateTemp()</message>
		</queue>
		<now>0</now>
		<pc></pc>
		<res></res>
	</rebec>
</state>
<transition source="19_0" destination="26_0" executionTime="0" shift="0"> <messageserver sender="hc_unit" owner="room" title="SETREGULATION"/></transition>
<state id="27_0" atomicpropositions="" >
	<rebec name="room">
		<statevariables>
			<variable name="Room.currentTemp" type="int">22</variable>
			<variable name="Room.currentRegulation" type="int">0</variable>
			<variable name="Room.outside_air" type="int">0</variable>
		</statevariables>
		<queue>
			<message arrival="0" deadline="infinity" sender="hc_unit">setRegulation(0)</message>
			<message arrival="10" deadline="infinity" sender="room">updateStatus()</message>
		</queue>
		<now>0</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="controller">
		<statevariables>
			<variable name="Controller.currentTemp" type="int">22</variable>
			<variable name="Controller.isHeating" type="boolean">false</variable>
			<variable name="Controller.isCooling" type="boolean">false</variable>
		</statevariables>
		<queue>
		</queue>
		<now>0</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="sensor">
		<statevariables>
		</statevariables>
		<queue>
			<message arrival="0" deadline="infinity" sender="room">setCurrent(22)</message>
			<message arrival="2" deadline="infinity" sender="sensor">callSensor()</message>
		</queue>
		<now>0</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="hc_unit">
		<statevariables>
			<variable name="HC_Unit.heaterOn" type="boolean">false</variable>
			<variable name="HC_Unit.coolerOn" type="boolean">false</variable>
			<variable name="HC_Unit.currentRegulation" type="int">0</variable>
		</statevariables>
		<queue>
			<message arrival="5" deadline="infinity" sender="hc_unit">regulateTemp()</message>
		</queue>
		<now>0</now>
		<pc></pc>
		<res></res>
	</rebec>
</state>
<transition source="19_0" destination="27_0" executionTime="0" shift="0"> <messageserver sender="sensor" owner="room" title="GETTEMP"/></transition>
<state id="28_0" atomicpropositions="" >
	<rebec name="room">
		<statevariables>
			<variable name="Room.currentTemp" type="int">21</variable>
			<variable name="Room.currentRegulation" type="int">0</variable>
			<variable name="Room.outside_air" type="int">1</variable>
		</statevariables>
		<queue>
			<message arrival="0" deadline="infinity" sender="hc_unit">setRegulation(0)</message>
			<message arrival="10" deadline="infinity" sender="room">updateStatus()</message>
		</queue>
		<now>0</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="controller">
		<statevariables>
			<variable name="Controller.currentTemp" type="int">22</variable>
			<variable name="Controller.isHeating" type="boolean">false</variable>
			<variable name="Controller.isCooling" type="boolean">false</variable>
		</statevariables>
		<queue>
		</queue>
		<now>0</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="sensor">
		<statevariables>
		</statevariables>
		<queue>
			<message arrival="0" deadline="infinity" sender="room">setCurrent(22)</message>
			<message arrival="2" deadline="infinity" sender="sensor">callSensor()</message>
		</queue>
		<now>0</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="hc_unit">
		<statevariables>
			<variable name="HC_Unit.heaterOn" type="boolean">false</variable>
			<variable name="HC_Unit.coolerOn" type="boolean">false</variable>
			<variable name="HC_Unit.currentRegulation" type="int">0</variable>
		</statevariables>
		<queue>
			<message arrival="5" deadline="infinity" sender="hc_unit">regulateTemp()</message>
		</queue>
		<now>0</now>
		<pc></pc>
		<res></res>
	</rebec>
</state>
<transition source="21_0" destination="28_0" executionTime="0" shift="0"> <messageserver sender="room" owner="room" title="UPDATESTATUS"/></transition>
<transition source="21_0" destination="27_0" executionTime="0" shift="0"> <messageserver sender="room" owner="room" title="UPDATESTATUS"/></transition>
<state id="29_0" atomicpropositions="" >
	<rebec name="room">
		<statevariables>
			<variable name="Room.currentTemp" type="int">23</variable>
			<variable name="Room.currentRegulation" type="int">0</variable>
			<variable name="Room.outside_air" type="int">-1</variable>
		</statevariables>
		<queue>
			<message arrival="0" deadline="infinity" sender="hc_unit">setRegulation(0)</message>
			<message arrival="10" deadline="infinity" sender="room">updateStatus()</message>
		</queue>
		<now>0</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="controller">
		<statevariables>
			<variable name="Controller.currentTemp" type="int">22</variable>
			<variable name="Controller.isHeating" type="boolean">false</variable>
			<variable name="Controller.isCooling" type="boolean">false</variable>
		</statevariables>
		<queue>
		</queue>
		<now>0</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="sensor">
		<statevariables>
		</statevariables>
		<queue>
			<message arrival="0" deadline="infinity" sender="room">setCurrent(22)</message>
			<message arrival="2" deadline="infinity" sender="sensor">callSensor()</message>
		</queue>
		<now>0</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="hc_unit">
		<statevariables>
			<variable name="HC_Unit.heaterOn" type="boolean">false</variable>
			<variable name="HC_Unit.coolerOn" type="boolean">false</variable>
			<variable name="HC_Unit.currentRegulation" type="int">0</variable>
		</statevariables>
		<queue>
			<message arrival="5" deadline="infinity" sender="hc_unit">regulateTemp()</message>
		</queue>
		<now>0</now>
		<pc></pc>
		<res></res>
	</rebec>
</state>
<transition source="21_0" destination="29_0" executionTime="0" shift="0"> <messageserver sender="room" owner="room" title="UPDATESTATUS"/></transition>
<state id="30_0" atomicpropositions="" >
	<rebec name="room">
		<statevariables>
			<variable name="Room.currentTemp" type="int">22</variable>
			<variable name="Room.currentRegulation" type="int">0</variable>
			<variable name="Room.outside_air" type="int">0</variable>
		</statevariables>
		<queue>
			<message arrival="0" deadline="infinity" sender="room">updateStatus()</message>
		</queue>
		<now>0</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="controller">
		<statevariables>
			<variable name="Controller.currentTemp" type="int">22</variable>
			<variable name="Controller.isHeating" type="boolean">false</variable>
			<variable name="Controller.isCooling" type="boolean">false</variable>
		</statevariables>
		<queue>
		</queue>
		<now>0</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="sensor">
		<statevariables>
		</statevariables>
		<queue>
			<message arrival="0" deadline="infinity" sender="room">setCurrent(22)</message>
			<message arrival="2" deadline="infinity" sender="sensor">callSensor()</message>
		</queue>
		<now>0</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="hc_unit">
		<statevariables>
			<variable name="HC_Unit.heaterOn" type="boolean">false</variable>
			<variable name="HC_Unit.coolerOn" type="boolean">false</variable>
			<variable name="HC_Unit.currentRegulation" type="int">0</variable>
		</statevariables>
		<queue>
			<message arrival="5" deadline="infinity" sender="hc_unit">regulateTemp()</message>
		</queue>
		<now>0</now>
		<pc></pc>
		<res></res>
	</rebec>
</state>
<transition source="21_0" destination="30_0" executionTime="0" shift="0"> <messageserver sender="hc_unit" owner="room" title="SETREGULATION"/></transition>
<state id="31_0" atomicpropositions="" >
	<rebec name="room">
		<statevariables>
			<variable name="Room.currentTemp" type="int">22</variable>
			<variable name="Room.currentRegulation" type="int">0</variable>
			<variable name="Room.outside_air" type="int">0</variable>
		</statevariables>
		<queue>
			<message arrival="0" deadline="infinity" sender="room">updateStatus()</message>
			<message arrival="0" deadline="infinity" sender="hc_unit">setRegulation(0)</message>
		</queue>
		<now>0</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="controller">
		<statevariables>
			<variable name="Controller.currentTemp" type="int">22</variable>
			<variable name="Controller.isHeating" type="boolean">false</variable>
			<variable name="Controller.isCooling" type="boolean">false</variable>
		</statevariables>
		<queue>
			<message arrival="0" deadline="infinity" sender="sensor">setCurrent(22)</message>
		</queue>
		<now>0</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="sensor">
		<statevariables>
		</statevariables>
		<queue>
			<message arrival="2" deadline="infinity" sender="sensor">callSensor()</message>
		</queue>
		<now>0</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="hc_unit">
		<statevariables>
			<variable name="HC_Unit.heaterOn" type="boolean">false</variable>
			<variable name="HC_Unit.coolerOn" type="boolean">false</variable>
			<variable name="HC_Unit.currentRegulation" type="int">0</variable>
		</statevariables>
		<queue>
			<message arrival="5" deadline="infinity" sender="hc_unit">regulateTemp()</message>
		</queue>
		<now>0</now>
		<pc></pc>
		<res></res>
	</rebec>
</state>
<transition source="21_0" destination="31_0" executionTime="0" shift="0"> <messageserver sender="room" owner="sensor" title="SETCURRENT"/></transition>
<state id="32_0" atomicpropositions="" >
	<rebec name="room">
		<statevariables>
			<variable name="Room.currentTemp" type="int">21</variable>
			<variable name="Room.currentRegulation" type="int">0</variable>
			<variable name="Room.outside_air" type="int">1</variable>
		</statevariables>
		<queue>
			<message arrival="10" deadline="infinity" sender="room">updateStatus()</message>
		</queue>
		<now>0</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="controller">
		<statevariables>
			<variable name="Controller.currentTemp" type="int">22</variable>
			<variable name="Controller.isHeating" type="boolean">false</variable>
			<variable name="Controller.isCooling" type="boolean">false</variable>
		</statevariables>
		<queue>
		</queue>
		<now>0</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="sensor">
		<statevariables>
		</statevariables>
		<queue>
			<message arrival="0" deadline="infinity" sender="room">setCurrent(21)</message>
			<message arrival="2" deadline="infinity" sender="sensor">callSensor()</message>
		</queue>
		<now>0</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="hc_unit">
		<statevariables>
			<variable name="HC_Unit.heaterOn" type="boolean">false</variable>
			<variable name="HC_Unit.coolerOn" type="boolean">false</variable>
			<variable name="HC_Unit.currentRegulation" type="int">0</variable>
		</statevariables>
		<queue>
			<message arrival="5" deadline="infinity" sender="hc_unit">regulateTemp()</message>
		</queue>
		<now>0</now>
		<pc></pc>
		<res></res>
	</rebec>
</state>
<transition source="23_0" destination="32_0" executionTime="0" shift="0"> <messageserver sender="hc_unit" owner="room" title="SETREGULATION"/></transition>
<state id="33_0" atomicpropositions="" >
	<rebec name="room">
		<statevariables>
			<variable name="Room.currentTemp" type="int">21</variable>
			<variable name="Room.currentRegulation" type="int">0</variable>
			<variable name="Room.outside_air" type="int">1</variable>
		</statevariables>
		<queue>
			<message arrival="0" deadline="infinity" sender="hc_unit">setRegulation(0)</message>
			<message arrival="10" deadline="infinity" sender="room">updateStatus()</message>
		</queue>
		<now>0</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="controller">
		<statevariables>
			<variable name="Controller.currentTemp" type="int">22</variable>
			<variable name="Controller.isHeating" type="boolean">false</variable>
			<variable name="Controller.isCooling" type="boolean">false</variable>
		</statevariables>
		<queue>
			<message arrival="0" deadline="infinity" sender="sensor">setCurrent(21)</message>
		</queue>
		<now>0</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="sensor">
		<statevariables>
		</statevariables>
		<queue>
			<message arrival="2" deadline="infinity" sender="sensor">callSensor()</message>
		</queue>
		<now>0</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="hc_unit">
		<statevariables>
			<variable name="HC_Unit.heaterOn" type="boolean">false</variable>
			<variable name="HC_Unit.coolerOn" type="boolean">false</variable>
			<variable name="HC_Unit.currentRegulation" type="int">0</variable>
		</statevariables>
		<queue>
			<message arrival="5" deadline="infinity" sender="hc_unit">regulateTemp()</message>
		</queue>
		<now>0</now>
		<pc></pc>
		<res></res>
	</rebec>
</state>
<transition source="23_0" destination="33_0" executionTime="0" shift="0"> <messageserver sender="room" owner="sensor" title="SETCURRENT"/></transition>
<state id="34_0" atomicpropositions="" >
	<rebec name="room">
		<statevariables>
			<variable name="Room.currentTemp" type="int">23</variable>
			<variable name="Room.currentRegulation" type="int">0</variable>
			<variable name="Room.outside_air" type="int">-1</variable>
		</statevariables>
		<queue>
			<message arrival="10" deadline="infinity" sender="room">updateStatus()</message>
		</queue>
		<now>0</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="controller">
		<statevariables>
			<variable name="Controller.currentTemp" type="int">22</variable>
			<variable name="Controller.isHeating" type="boolean">false</variable>
			<variable name="Controller.isCooling" type="boolean">false</variable>
		</statevariables>
		<queue>
		</queue>
		<now>0</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="sensor">
		<statevariables>
		</statevariables>
		<queue>
			<message arrival="0" deadline="infinity" sender="room">setCurrent(23)</message>
			<message arrival="2" deadline="infinity" sender="sensor">callSensor()</message>
		</queue>
		<now>0</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="hc_unit">
		<statevariables>
			<variable name="HC_Unit.heaterOn" type="boolean">false</variable>
			<variable name="HC_Unit.coolerOn" type="boolean">false</variable>
			<variable name="HC_Unit.currentRegulation" type="int">0</variable>
		</statevariables>
		<queue>
			<message arrival="5" deadline="infinity" sender="hc_unit">regulateTemp()</message>
		</queue>
		<now>0</now>
		<pc></pc>
		<res></res>
	</rebec>
</state>
<transition source="24_0" destination="34_0" executionTime="0" shift="0"> <messageserver sender="sensor" owner="room" title="GETTEMP"/></transition>
<state id="35_0" atomicpropositions="" >
	<rebec name="room">
		<statevariables>
			<variable name="Room.currentTemp" type="int">22</variable>
			<variable name="Room.currentRegulation" type="int">0</variable>
			<variable name="Room.outside_air" type="int">0</variable>
		</statevariables>
		<queue>
			<message arrival="10" deadline="infinity" sender="room">updateStatus()</message>
		</queue>
		<now>0</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="controller">
		<statevariables>
			<variable name="Controller.currentTemp" type="int">22</variable>
			<variable name="Controller.isHeating" type="boolean">false</variable>
			<variable name="Controller.isCooling" type="boolean">false</variable>
		</statevariables>
		<queue>
		</queue>
		<now>0</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="sensor">
		<statevariables>
		</statevariables>
		<queue>
			<message arrival="0" deadline="infinity" sender="room">setCurrent(22)</message>
			<message arrival="2" deadline="infinity" sender="sensor">callSensor()</message>
		</queue>
		<now>0</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="hc_unit">
		<statevariables>
			<variable name="HC_Unit.heaterOn" type="boolean">false</variable>
			<variable name="HC_Unit.coolerOn" type="boolean">false</variable>
			<variable name="HC_Unit.currentRegulation" type="int">0</variable>
		</statevariables>
		<queue>
			<message arrival="5" deadline="infinity" sender="hc_unit">regulateTemp()</message>
		</queue>
		<now>0</now>
		<pc></pc>
		<res></res>
	</rebec>
</state>
<transition source="26_0" destination="35_0" executionTime="0" shift="0"> <messageserver sender="sensor" owner="room" title="GETTEMP"/></transition>
<transition source="27_0" destination="35_0" executionTime="0" shift="0"> <messageserver sender="hc_unit" owner="room" title="SETREGULATION"/></transition>
<state id="36_0" atomicpropositions="" >
	<rebec name="room">
		<statevariables>
			<variable name="Room.currentTemp" type="int">22</variable>
			<variable name="Room.currentRegulation" type="int">0</variable>
			<variable name="Room.outside_air" type="int">0</variable>
		</statevariables>
		<queue>
			<message arrival="0" deadline="infinity" sender="hc_unit">setRegulation(0)</message>
			<message arrival="10" deadline="infinity" sender="room">updateStatus()</message>
		</queue>
		<now>0</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="controller">
		<statevariables>
			<variable name="Controller.currentTemp" type="int">22</variable>
			<variable name="Controller.isHeating" type="boolean">false</variable>
			<variable name="Controller.isCooling" type="boolean">false</variable>
		</statevariables>
		<queue>
			<message arrival="0" deadline="infinity" sender="sensor">setCurrent(22)</message>
		</queue>
		<now>0</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="sensor">
		<statevariables>
		</statevariables>
		<queue>
			<message arrival="2" deadline="infinity" sender="sensor">callSensor()</message>
		</queue>
		<now>0</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="hc_unit">
		<statevariables>
			<variable name="HC_Unit.heaterOn" type="boolean">false</variable>
			<variable name="HC_Unit.coolerOn" type="boolean">false</variable>
			<variable name="HC_Unit.currentRegulation" type="int">0</variable>
		</statevariables>
		<queue>
			<message arrival="5" deadline="infinity" sender="hc_unit">regulateTemp()</message>
		</queue>
		<now>0</now>
		<pc></pc>
		<res></res>
	</rebec>
</state>
<transition source="27_0" destination="36_0" executionTime="0" shift="0"> <messageserver sender="room" owner="sensor" title="SETCURRENT"/></transition>
<state id="37_0" atomicpropositions="" >
	<rebec name="room">
		<statevariables>
			<variable name="Room.currentTemp" type="int">21</variable>
			<variable name="Room.currentRegulation" type="int">0</variable>
			<variable name="Room.outside_air" type="int">1</variable>
		</statevariables>
		<queue>
			<message arrival="0" deadline="infinity" sender="hc_unit">setRegulation(0)</message>
			<message arrival="10" deadline="infinity" sender="room">updateStatus()</message>
		</queue>
		<now>0</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="controller">
		<statevariables>
			<variable name="Controller.currentTemp" type="int">22</variable>
			<variable name="Controller.isHeating" type="boolean">false</variable>
			<variable name="Controller.isCooling" type="boolean">false</variable>
		</statevariables>
		<queue>
			<message arrival="0" deadline="infinity" sender="sensor">setCurrent(22)</message>
		</queue>
		<now>0</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="sensor">
		<statevariables>
		</statevariables>
		<queue>
			<message arrival="2" deadline="infinity" sender="sensor">callSensor()</message>
		</queue>
		<now>0</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="hc_unit">
		<statevariables>
			<variable name="HC_Unit.heaterOn" type="boolean">false</variable>
			<variable name="HC_Unit.coolerOn" type="boolean">false</variable>
			<variable name="HC_Unit.currentRegulation" type="int">0</variable>
		</statevariables>
		<queue>
			<message arrival="5" deadline="infinity" sender="hc_unit">regulateTemp()</message>
		</queue>
		<now>0</now>
		<pc></pc>
		<res></res>
	</rebec>
</state>
<transition source="31_0" destination="37_0" executionTime="0" shift="0"> <messageserver sender="room" owner="room" title="UPDATESTATUS"/></transition>
<transition source="31_0" destination="36_0" executionTime="0" shift="0"> <messageserver sender="room" owner="room" title="UPDATESTATUS"/></transition>
<state id="38_0" atomicpropositions="" >
	<rebec name="room">
		<statevariables>
			<variable name="Room.currentTemp" type="int">23</variable>
			<variable name="Room.currentRegulation" type="int">0</variable>
			<variable name="Room.outside_air" type="int">-1</variable>
		</statevariables>
		<queue>
			<message arrival="0" deadline="infinity" sender="hc_unit">setRegulation(0)</message>
			<message arrival="10" deadline="infinity" sender="room">updateStatus()</message>
		</queue>
		<now>0</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="controller">
		<statevariables>
			<variable name="Controller.currentTemp" type="int">22</variable>
			<variable name="Controller.isHeating" type="boolean">false</variable>
			<variable name="Controller.isCooling" type="boolean">false</variable>
		</statevariables>
		<queue>
			<message arrival="0" deadline="infinity" sender="sensor">setCurrent(22)</message>
		</queue>
		<now>0</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="sensor">
		<statevariables>
		</statevariables>
		<queue>
			<message arrival="2" deadline="infinity" sender="sensor">callSensor()</message>
		</queue>
		<now>0</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="hc_unit">
		<statevariables>
			<variable name="HC_Unit.heaterOn" type="boolean">false</variable>
			<variable name="HC_Unit.coolerOn" type="boolean">false</variable>
			<variable name="HC_Unit.currentRegulation" type="int">0</variable>
		</statevariables>
		<queue>
			<message arrival="5" deadline="infinity" sender="hc_unit">regulateTemp()</message>
		</queue>
		<now>0</now>
		<pc></pc>
		<res></res>
	</rebec>
</state>
<transition source="31_0" destination="38_0" executionTime="0" shift="0"> <messageserver sender="room" owner="room" title="UPDATESTATUS"/></transition>
<state id="39_0" atomicpropositions="" >
	<rebec name="room">
		<statevariables>
			<variable name="Room.currentTemp" type="int">22</variable>
			<variable name="Room.currentRegulation" type="int">0</variable>
			<variable name="Room.outside_air" type="int">0</variable>
		</statevariables>
		<queue>
			<message arrival="0" deadline="infinity" sender="room">updateStatus()</message>
		</queue>
		<now>0</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="controller">
		<statevariables>
			<variable name="Controller.currentTemp" type="int">22</variable>
			<variable name="Controller.isHeating" type="boolean">false</variable>
			<variable name="Controller.isCooling" type="boolean">false</variable>
		</statevariables>
		<queue>
			<message arrival="0" deadline="infinity" sender="sensor">setCurrent(22)</message>
		</queue>
		<now>0</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="sensor">
		<statevariables>
		</statevariables>
		<queue>
			<message arrival="2" deadline="infinity" sender="sensor">callSensor()</message>
		</queue>
		<now>0</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="hc_unit">
		<statevariables>
			<variable name="HC_Unit.heaterOn" type="boolean">false</variable>
			<variable name="HC_Unit.coolerOn" type="boolean">false</variable>
			<variable name="HC_Unit.currentRegulation" type="int">0</variable>
		</statevariables>
		<queue>
			<message arrival="5" deadline="infinity" sender="hc_unit">regulateTemp()</message>
		</queue>
		<now>0</now>
		<pc></pc>
		<res></res>
	</rebec>
</state>
<transition source="31_0" destination="39_0" executionTime="0" shift="0"> <messageserver sender="hc_unit" owner="room" title="SETREGULATION"/></transition>
<state id="40_0" atomicpropositions="" >
	<rebec name="room">
		<statevariables>
			<variable name="Room.currentTemp" type="int">22</variable>
			<variable name="Room.currentRegulation" type="int">0</variable>
			<variable name="Room.outside_air" type="int">0</variable>
		</statevariables>
		<queue>
			<message arrival="0" deadline="infinity" sender="room">updateStatus()</message>
			<message arrival="0" deadline="infinity" sender="hc_unit">setRegulation(0)</message>
		</queue>
		<now>0</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="controller">
		<statevariables>
			<variable name="Controller.currentTemp" type="int">22</variable>
			<variable name="Controller.isHeating" type="boolean">false</variable>
			<variable name="Controller.isCooling" type="boolean">false</variable>
		</statevariables>
		<queue>
			<message arrival="0" deadline="infinity" sender="controller">updateOutput()</message>
		</queue>
		<now>0</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="sensor">
		<statevariables>
		</statevariables>
		<queue>
			<message arrival="2" deadline="infinity" sender="sensor">callSensor()</message>
		</queue>
		<now>0</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="hc_unit">
		<statevariables>
			<variable name="HC_Unit.heaterOn" type="boolean">false</variable>
			<variable name="HC_Unit.coolerOn" type="boolean">false</variable>
			<variable name="HC_Unit.currentRegulation" type="int">0</variable>
		</statevariables>
		<queue>
			<message arrival="5" deadline="infinity" sender="hc_unit">regulateTemp()</message>
		</queue>
		<now>0</now>
		<pc></pc>
		<res></res>
	</rebec>
</state>
<transition source="31_0" destination="40_0" executionTime="0" shift="0"> <messageserver sender="sensor" owner="controller" title="SETCURRENT"/></transition>
<state id="41_0" atomicpropositions="" >
	<rebec name="room">
		<statevariables>
			<variable name="Room.currentTemp" type="int">21</variable>
			<variable name="Room.currentRegulation" type="int">0</variable>
			<variable name="Room.outside_air" type="int">1</variable>
		</statevariables>
		<queue>
			<message arrival="10" deadline="infinity" sender="room">updateStatus()</message>
		</queue>
		<now>0</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="controller">
		<statevariables>
			<variable name="Controller.currentTemp" type="int">22</variable>
			<variable name="Controller.isHeating" type="boolean">false</variable>
			<variable name="Controller.isCooling" type="boolean">false</variable>
		</statevariables>
		<queue>
			<message arrival="0" deadline="infinity" sender="sensor">setCurrent(21)</message>
		</queue>
		<now>0</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="sensor">
		<statevariables>
		</statevariables>
		<queue>
			<message arrival="2" deadline="infinity" sender="sensor">callSensor()</message>
		</queue>
		<now>0</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="hc_unit">
		<statevariables>
			<variable name="HC_Unit.heaterOn" type="boolean">false</variable>
			<variable name="HC_Unit.coolerOn" type="boolean">false</variable>
			<variable name="HC_Unit.currentRegulation" type="int">0</variable>
		</statevariables>
		<queue>
			<message arrival="5" deadline="infinity" sender="hc_unit">regulateTemp()</message>
		</queue>
		<now>0</now>
		<pc></pc>
		<res></res>
	</rebec>
</state>
<transition source="33_0" destination="41_0" executionTime="0" shift="0"> <messageserver sender="hc_unit" owner="room" title="SETREGULATION"/></transition>
<state id="42_0" atomicpropositions="" >
	<rebec name="room">
		<statevariables>
			<variable name="Room.currentTemp" type="int">21</variable>
			<variable name="Room.currentRegulation" type="int">0</variable>
			<variable name="Room.outside_air" type="int">1</variable>
		</statevariables>
		<queue>
			<message arrival="0" deadline="infinity" sender="hc_unit">setRegulation(0)</message>
			<message arrival="10" deadline="infinity" sender="room">updateStatus()</message>
		</queue>
		<now>0</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="controller">
		<statevariables>
			<variable name="Controller.currentTemp" type="int">21</variable>
			<variable name="Controller.isHeating" type="boolean">false</variable>
			<variable name="Controller.isCooling" type="boolean">false</variable>
		</statevariables>
		<queue>
			<message arrival="0" deadline="infinity" sender="controller">updateOutput()</message>
		</queue>
		<now>0</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="sensor">
		<statevariables>
		</statevariables>
		<queue>
			<message arrival="2" deadline="infinity" sender="sensor">callSensor()</message>
		</queue>
		<now>0</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="hc_unit">
		<statevariables>
			<variable name="HC_Unit.heaterOn" type="boolean">false</variable>
			<variable name="HC_Unit.coolerOn" type="boolean">false</variable>
			<variable name="HC_Unit.currentRegulation" type="int">0</variable>
		</statevariables>
		<queue>
			<message arrival="5" deadline="infinity" sender="hc_unit">regulateTemp()</message>
		</queue>
		<now>0</now>
		<pc></pc>
		<res></res>
	</rebec>
</state>
<transition source="33_0" destination="42_0" executionTime="0" shift="0"> <messageserver sender="sensor" owner="controller" title="SETCURRENT"/></transition>
<state id="43_0" atomicpropositions="" >
	<rebec name="room">
		<statevariables>
			<variable name="Room.currentTemp" type="int">23</variable>
			<variable name="Room.currentRegulation" type="int">0</variable>
			<variable name="Room.outside_air" type="int">-1</variable>
		</statevariables>
		<queue>
			<message arrival="10" deadline="infinity" sender="room">updateStatus()</message>
		</queue>
		<now>0</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="controller">
		<statevariables>
			<variable name="Controller.currentTemp" type="int">22</variable>
			<variable name="Controller.isHeating" type="boolean">false</variable>
			<variable name="Controller.isCooling" type="boolean">false</variable>
		</statevariables>
		<queue>
			<message arrival="0" deadline="infinity" sender="sensor">setCurrent(23)</message>
		</queue>
		<now>0</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="sensor">
		<statevariables>
		</statevariables>
		<queue>
			<message arrival="2" deadline="infinity" sender="sensor">callSensor()</message>
		</queue>
		<now>0</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="hc_unit">
		<statevariables>
			<variable name="HC_Unit.heaterOn" type="boolean">false</variable>
			<variable name="HC_Unit.coolerOn" type="boolean">false</variable>
			<variable name="HC_Unit.currentRegulation" type="int">0</variable>
		</statevariables>
		<queue>
			<message arrival="5" deadline="infinity" sender="hc_unit">regulateTemp()</message>
		</queue>
		<now>0</now>
		<pc></pc>
		<res></res>
	</rebec>
</state>
<transition source="34_0" destination="43_0" executionTime="0" shift="0"> <messageserver sender="room" owner="sensor" title="SETCURRENT"/></transition>
<state id="44_0" atomicpropositions="" >
	<rebec name="room">
		<statevariables>
			<variable name="Room.currentTemp" type="int">22</variable>
			<variable name="Room.currentRegulation" type="int">0</variable>
			<variable name="Room.outside_air" type="int">0</variable>
		</statevariables>
		<queue>
			<message arrival="10" deadline="infinity" sender="room">updateStatus()</message>
		</queue>
		<now>0</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="controller">
		<statevariables>
			<variable name="Controller.currentTemp" type="int">22</variable>
			<variable name="Controller.isHeating" type="boolean">false</variable>
			<variable name="Controller.isCooling" type="boolean">false</variable>
		</statevariables>
		<queue>
			<message arrival="0" deadline="infinity" sender="sensor">setCurrent(22)</message>
		</queue>
		<now>0</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="sensor">
		<statevariables>
		</statevariables>
		<queue>
			<message arrival="2" deadline="infinity" sender="sensor">callSensor()</message>
		</queue>
		<now>0</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="hc_unit">
		<statevariables>
			<variable name="HC_Unit.heaterOn" type="boolean">false</variable>
			<variable name="HC_Unit.coolerOn" type="boolean">false</variable>
			<variable name="HC_Unit.currentRegulation" type="int">0</variable>
		</statevariables>
		<queue>
			<message arrival="5" deadline="infinity" sender="hc_unit">regulateTemp()</message>
		</queue>
		<now>0</now>
		<pc></pc>
		<res></res>
	</rebec>
</state>
<transition source="35_0" destination="44_0" executionTime="0" shift="0"> <messageserver sender="room" owner="sensor" title="SETCURRENT"/></transition>
<transition source="36_0" destination="44_0" executionTime="0" shift="0"> <messageserver sender="hc_unit" owner="room" title="SETREGULATION"/></transition>
<state id="45_0" atomicpropositions="" >
	<rebec name="room">
		<statevariables>
			<variable name="Room.currentTemp" type="int">22</variable>
			<variable name="Room.currentRegulation" type="int">0</variable>
			<variable name="Room.outside_air" type="int">0</variable>
		</statevariables>
		<queue>
			<message arrival="0" deadline="infinity" sender="hc_unit">setRegulation(0)</message>
			<message arrival="10" deadline="infinity" sender="room">updateStatus()</message>
		</queue>
		<now>0</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="controller">
		<statevariables>
			<variable name="Controller.currentTemp" type="int">22</variable>
			<variable name="Controller.isHeating" type="boolean">false</variable>
			<variable name="Controller.isCooling" type="boolean">false</variable>
		</statevariables>
		<queue>
			<message arrival="0" deadline="infinity" sender="controller">updateOutput()</message>
		</queue>
		<now>0</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="sensor">
		<statevariables>
		</statevariables>
		<queue>
			<message arrival="2" deadline="infinity" sender="sensor">callSensor()</message>
		</queue>
		<now>0</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="hc_unit">
		<statevariables>
			<variable name="HC_Unit.heaterOn" type="boolean">false</variable>
			<variable name="HC_Unit.coolerOn" type="boolean">false</variable>
			<variable name="HC_Unit.currentRegulation" type="int">0</variable>
		</statevariables>
		<queue>
			<message arrival="5" deadline="infinity" sender="hc_unit">regulateTemp()</message>
		</queue>
		<now>0</now>
		<pc></pc>
		<res></res>
	</rebec>
</state>
<transition source="36_0" destination="45_0" executionTime="0" shift="0"> <messageserver sender="sensor" owner="controller" title="SETCURRENT"/></transition>
<state id="46_0" atomicpropositions="" >
	<rebec name="room">
		<statevariables>
			<variable name="Room.currentTemp" type="int">21</variable>
			<variable name="Room.currentRegulation" type="int">0</variable>
			<variable name="Room.outside_air" type="int">1</variable>
		</statevariables>
		<queue>
			<message arrival="0" deadline="infinity" sender="hc_unit">setRegulation(0)</message>
			<message arrival="10" deadline="infinity" sender="room">updateStatus()</message>
		</queue>
		<now>0</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="controller">
		<statevariables>
			<variable name="Controller.currentTemp" type="int">22</variable>
			<variable name="Controller.isHeating" type="boolean">false</variable>
			<variable name="Controller.isCooling" type="boolean">false</variable>
		</statevariables>
		<queue>
			<message arrival="0" deadline="infinity" sender="controller">updateOutput()</message>
		</queue>
		<now>0</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="sensor">
		<statevariables>
		</statevariables>
		<queue>
			<message arrival="2" deadline="infinity" sender="sensor">callSensor()</message>
		</queue>
		<now>0</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="hc_unit">
		<statevariables>
			<variable name="HC_Unit.heaterOn" type="boolean">false</variable>
			<variable name="HC_Unit.coolerOn" type="boolean">false</variable>
			<variable name="HC_Unit.currentRegulation" type="int">0</variable>
		</statevariables>
		<queue>
			<message arrival="5" deadline="infinity" sender="hc_unit">regulateTemp()</message>
		</queue>
		<now>0</now>
		<pc></pc>
		<res></res>
	</rebec>
</state>
<transition source="40_0" destination="46_0" executionTime="0" shift="0"> <messageserver sender="room" owner="room" title="UPDATESTATUS"/></transition>
<transition source="40_0" destination="45_0" executionTime="0" shift="0"> <messageserver sender="room" owner="room" title="UPDATESTATUS"/></transition>
<state id="47_0" atomicpropositions="" >
	<rebec name="room">
		<statevariables>
			<variable name="Room.currentTemp" type="int">23</variable>
			<variable name="Room.currentRegulation" type="int">0</variable>
			<variable name="Room.outside_air" type="int">-1</variable>
		</statevariables>
		<queue>
			<message arrival="0" deadline="infinity" sender="hc_unit">setRegulation(0)</message>
			<message arrival="10" deadline="infinity" sender="room">updateStatus()</message>
		</queue>
		<now>0</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="controller">
		<statevariables>
			<variable name="Controller.currentTemp" type="int">22</variable>
			<variable name="Controller.isHeating" type="boolean">false</variable>
			<variable name="Controller.isCooling" type="boolean">false</variable>
		</statevariables>
		<queue>
			<message arrival="0" deadline="infinity" sender="controller">updateOutput()</message>
		</queue>
		<now>0</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="sensor">
		<statevariables>
		</statevariables>
		<queue>
			<message arrival="2" deadline="infinity" sender="sensor">callSensor()</message>
		</queue>
		<now>0</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="hc_unit">
		<statevariables>
			<variable name="HC_Unit.heaterOn" type="boolean">false</variable>
			<variable name="HC_Unit.coolerOn" type="boolean">false</variable>
			<variable name="HC_Unit.currentRegulation" type="int">0</variable>
		</statevariables>
		<queue>
			<message arrival="5" deadline="infinity" sender="hc_unit">regulateTemp()</message>
		</queue>
		<now>0</now>
		<pc></pc>
		<res></res>
	</rebec>
</state>
<transition source="40_0" destination="47_0" executionTime="0" shift="0"> <messageserver sender="room" owner="room" title="UPDATESTATUS"/></transition>
<state id="48_0" atomicpropositions="" >
	<rebec name="room">
		<statevariables>
			<variable name="Room.currentTemp" type="int">22</variable>
			<variable name="Room.currentRegulation" type="int">0</variable>
			<variable name="Room.outside_air" type="int">0</variable>
		</statevariables>
		<queue>
			<message arrival="0" deadline="infinity" sender="room">updateStatus()</message>
		</queue>
		<now>0</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="controller">
		<statevariables>
			<variable name="Controller.currentTemp" type="int">22</variable>
			<variable name="Controller.isHeating" type="boolean">false</variable>
			<variable name="Controller.isCooling" type="boolean">false</variable>
		</statevariables>
		<queue>
			<message arrival="0" deadline="infinity" sender="controller">updateOutput()</message>
		</queue>
		<now>0</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="sensor">
		<statevariables>
		</statevariables>
		<queue>
			<message arrival="2" deadline="infinity" sender="sensor">callSensor()</message>
		</queue>
		<now>0</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="hc_unit">
		<statevariables>
			<variable name="HC_Unit.heaterOn" type="boolean">false</variable>
			<variable name="HC_Unit.coolerOn" type="boolean">false</variable>
			<variable name="HC_Unit.currentRegulation" type="int">0</variable>
		</statevariables>
		<queue>
			<message arrival="5" deadline="infinity" sender="hc_unit">regulateTemp()</message>
		</queue>
		<now>0</now>
		<pc></pc>
		<res></res>
	</rebec>
</state>
<transition source="40_0" destination="48_0" executionTime="0" shift="0"> <messageserver sender="hc_unit" owner="room" title="SETREGULATION"/></transition>
<state id="49_0" atomicpropositions="" >
	<rebec name="room">
		<statevariables>
			<variable name="Room.currentTemp" type="int">22</variable>
			<variable name="Room.currentRegulation" type="int">0</variable>
			<variable name="Room.outside_air" type="int">0</variable>
		</statevariables>
		<queue>
			<message arrival="0" deadline="infinity" sender="room">updateStatus()</message>
			<message arrival="0" deadline="infinity" sender="hc_unit">setRegulation(0)</message>
		</queue>
		<now>0</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="controller">
		<statevariables>
			<variable name="Controller.currentTemp" type="int">22</variable>
			<variable name="Controller.isHeating" type="boolean">false</variable>
			<variable name="Controller.isCooling" type="boolean">false</variable>
		</statevariables>
		<queue>
		</queue>
		<now>0</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="sensor">
		<statevariables>
		</statevariables>
		<queue>
			<message arrival="2" deadline="infinity" sender="sensor">callSensor()</message>
		</queue>
		<now>0</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="hc_unit">
		<statevariables>
			<variable name="HC_Unit.heaterOn" type="boolean">false</variable>
			<variable name="HC_Unit.coolerOn" type="boolean">false</variable>
			<variable name="HC_Unit.currentRegulation" type="int">0</variable>
		</statevariables>
		<queue>
			<message arrival="5" deadline="infinity" sender="hc_unit">regulateTemp()</message>
		</queue>
		<now>0</now>
		<pc></pc>
		<res></res>
	</rebec>
</state>
<transition source="40_0" destination="49_0" executionTime="0" shift="0"> <messageserver sender="controller" owner="controller" title="UPDATEOUTPUT"/></transition>
<state id="50_0" atomicpropositions="" >
	<rebec name="room">
		<statevariables>
			<variable name="Room.currentTemp" type="int">21</variable>
			<variable name="Room.currentRegulation" type="int">0</variable>
			<variable name="Room.outside_air" type="int">1</variable>
		</statevariables>
		<queue>
			<message arrival="10" deadline="infinity" sender="room">updateStatus()</message>
		</queue>
		<now>0</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="controller">
		<statevariables>
			<variable name="Controller.currentTemp" type="int">21</variable>
			<variable name="Controller.isHeating" type="boolean">false</variable>
			<variable name="Controller.isCooling" type="boolean">false</variable>
		</statevariables>
		<queue>
			<message arrival="0" deadline="infinity" sender="controller">updateOutput()</message>
		</queue>
		<now>0</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="sensor">
		<statevariables>
		</statevariables>
		<queue>
			<message arrival="2" deadline="infinity" sender="sensor">callSensor()</message>
		</queue>
		<now>0</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="hc_unit">
		<statevariables>
			<variable name="HC_Unit.heaterOn" type="boolean">false</variable>
			<variable name="HC_Unit.coolerOn" type="boolean">false</variable>
			<variable name="HC_Unit.currentRegulation" type="int">0</variable>
		</statevariables>
		<queue>
			<message arrival="5" deadline="infinity" sender="hc_unit">regulateTemp()</message>
		</queue>
		<now>0</now>
		<pc></pc>
		<res></res>
	</rebec>
</state>
<transition source="42_0" destination="50_0" executionTime="0" shift="0"> <messageserver sender="hc_unit" owner="room" title="SETREGULATION"/></transition>
<state id="51_0" atomicpropositions="" >
	<rebec name="room">
		<statevariables>
			<variable name="Room.currentTemp" type="int">21</variable>
			<variable name="Room.currentRegulation" type="int">0</variable>
			<variable name="Room.outside_air" type="int">1</variable>
		</statevariables>
		<queue>
			<message arrival="0" deadline="infinity" sender="hc_unit">setRegulation(0)</message>
			<message arrival="10" deadline="infinity" sender="room">updateStatus()</message>
		</queue>
		<now>0</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="controller">
		<statevariables>
			<variable name="Controller.currentTemp" type="int">21</variable>
			<variable name="Controller.isHeating" type="boolean">false</variable>
			<variable name="Controller.isCooling" type="boolean">false</variable>
		</statevariables>
		<queue>
		</queue>
		<now>0</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="sensor">
		<statevariables>
		</statevariables>
		<queue>
			<message arrival="2" deadline="infinity" sender="sensor">callSensor()</message>
		</queue>
		<now>0</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="hc_unit">
		<statevariables>
			<variable name="HC_Unit.heaterOn" type="boolean">false</variable>
			<variable name="HC_Unit.coolerOn" type="boolean">false</variable>
			<variable name="HC_Unit.currentRegulation" type="int">0</variable>
		</statevariables>
		<queue>
			<message arrival="5" deadline="infinity" sender="hc_unit">regulateTemp()</message>
		</queue>
		<now>0</now>
		<pc></pc>
		<res></res>
	</rebec>
</state>
<transition source="42_0" destination="51_0" executionTime="0" shift="0"> <messageserver sender="controller" owner="controller" title="UPDATEOUTPUT"/></transition>
<state id="52_0" atomicpropositions="" >
	<rebec name="room">
		<statevariables>
			<variable name="Room.currentTemp" type="int">23</variable>
			<variable name="Room.currentRegulation" type="int">0</variable>
			<variable name="Room.outside_air" type="int">-1</variable>
		</statevariables>
		<queue>
			<message arrival="10" deadline="infinity" sender="room">updateStatus()</message>
		</queue>
		<now>0</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="controller">
		<statevariables>
			<variable name="Controller.currentTemp" type="int">23</variable>
			<variable name="Controller.isHeating" type="boolean">false</variable>
			<variable name="Controller.isCooling" type="boolean">false</variable>
		</statevariables>
		<queue>
			<message arrival="0" deadline="infinity" sender="controller">updateOutput()</message>
		</queue>
		<now>0</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="sensor">
		<statevariables>
		</statevariables>
		<queue>
			<message arrival="2" deadline="infinity" sender="sensor">callSensor()</message>
		</queue>
		<now>0</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="hc_unit">
		<statevariables>
			<variable name="HC_Unit.heaterOn" type="boolean">false</variable>
			<variable name="HC_Unit.coolerOn" type="boolean">false</variable>
			<variable name="HC_Unit.currentRegulation" type="int">0</variable>
		</statevariables>
		<queue>
			<message arrival="5" deadline="infinity" sender="hc_unit">regulateTemp()</message>
		</queue>
		<now>0</now>
		<pc></pc>
		<res></res>
	</rebec>
</state>
<transition source="43_0" destination="52_0" executionTime="0" shift="0"> <messageserver sender="sensor" owner="controller" title="SETCURRENT"/></transition>
<state id="53_0" atomicpropositions="" >
	<rebec name="room">
		<statevariables>
			<variable name="Room.currentTemp" type="int">22</variable>
			<variable name="Room.currentRegulation" type="int">0</variable>
			<variable name="Room.outside_air" type="int">0</variable>
		</statevariables>
		<queue>
			<message arrival="10" deadline="infinity" sender="room">updateStatus()</message>
		</queue>
		<now>0</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="controller">
		<statevariables>
			<variable name="Controller.currentTemp" type="int">22</variable>
			<variable name="Controller.isHeating" type="boolean">false</variable>
			<variable name="Controller.isCooling" type="boolean">false</variable>
		</statevariables>
		<queue>
			<message arrival="0" deadline="infinity" sender="controller">updateOutput()</message>
		</queue>
		<now>0</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="sensor">
		<statevariables>
		</statevariables>
		<queue>
			<message arrival="2" deadline="infinity" sender="sensor">callSensor()</message>
		</queue>
		<now>0</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="hc_unit">
		<statevariables>
			<variable name="HC_Unit.heaterOn" type="boolean">false</variable>
			<variable name="HC_Unit.coolerOn" type="boolean">false</variable>
			<variable name="HC_Unit.currentRegulation" type="int">0</variable>
		</statevariables>
		<queue>
			<message arrival="5" deadline="infinity" sender="hc_unit">regulateTemp()</message>
		</queue>
		<now>0</now>
		<pc></pc>
		<res></res>
	</rebec>
</state>
<transition source="44_0" destination="53_0" executionTime="0" shift="0"> <messageserver sender="sensor" owner="controller" title="SETCURRENT"/></transition>
<transition source="45_0" destination="53_0" executionTime="0" shift="0"> <messageserver sender="hc_unit" owner="room" title="SETREGULATION"/></transition>
<state id="54_0" atomicpropositions="" >
	<rebec name="room">
		<statevariables>
			<variable name="Room.currentTemp" type="int">22</variable>
			<variable name="Room.currentRegulation" type="int">0</variable>
			<variable name="Room.outside_air" type="int">0</variable>
		</statevariables>
		<queue>
			<message arrival="0" deadline="infinity" sender="hc_unit">setRegulation(0)</message>
			<message arrival="10" deadline="infinity" sender="room">updateStatus()</message>
		</queue>
		<now>0</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="controller">
		<statevariables>
			<variable name="Controller.currentTemp" type="int">22</variable>
			<variable name="Controller.isHeating" type="boolean">false</variable>
			<variable name="Controller.isCooling" type="boolean">false</variable>
		</statevariables>
		<queue>
		</queue>
		<now>0</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="sensor">
		<statevariables>
		</statevariables>
		<queue>
			<message arrival="2" deadline="infinity" sender="sensor">callSensor()</message>
		</queue>
		<now>0</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="hc_unit">
		<statevariables>
			<variable name="HC_Unit.heaterOn" type="boolean">false</variable>
			<variable name="HC_Unit.coolerOn" type="boolean">false</variable>
			<variable name="HC_Unit.currentRegulation" type="int">0</variable>
		</statevariables>
		<queue>
			<message arrival="5" deadline="infinity" sender="hc_unit">regulateTemp()</message>
		</queue>
		<now>0</now>
		<pc></pc>
		<res></res>
	</rebec>
</state>
<transition source="45_0" destination="54_0" executionTime="0" shift="0"> <messageserver sender="controller" owner="controller" title="UPDATEOUTPUT"/></transition>
<state id="55_0" atomicpropositions="" >
	<rebec name="room">
		<statevariables>
			<variable name="Room.currentTemp" type="int">21</variable>
			<variable name="Room.currentRegulation" type="int">0</variable>
			<variable name="Room.outside_air" type="int">1</variable>
		</statevariables>
		<queue>
			<message arrival="0" deadline="infinity" sender="hc_unit">setRegulation(0)</message>
			<message arrival="10" deadline="infinity" sender="room">updateStatus()</message>
		</queue>
		<now>0</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="controller">
		<statevariables>
			<variable name="Controller.currentTemp" type="int">22</variable>
			<variable name="Controller.isHeating" type="boolean">false</variable>
			<variable name="Controller.isCooling" type="boolean">false</variable>
		</statevariables>
		<queue>
		</queue>
		<now>0</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="sensor">
		<statevariables>
		</statevariables>
		<queue>
			<message arrival="2" deadline="infinity" sender="sensor">callSensor()</message>
		</queue>
		<now>0</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="hc_unit">
		<statevariables>
			<variable name="HC_Unit.heaterOn" type="boolean">false</variable>
			<variable name="HC_Unit.coolerOn" type="boolean">false</variable>
			<variable name="HC_Unit.currentRegulation" type="int">0</variable>
		</statevariables>
		<queue>
			<message arrival="5" deadline="infinity" sender="hc_unit">regulateTemp()</message>
		</queue>
		<now>0</now>
		<pc></pc>
		<res></res>
	</rebec>
</state>
<transition source="49_0" destination="55_0" executionTime="0" shift="0"> <messageserver sender="room" owner="room" title="UPDATESTATUS"/></transition>
<transition source="49_0" destination="54_0" executionTime="0" shift="0"> <messageserver sender="room" owner="room" title="UPDATESTATUS"/></transition>
<state id="56_0" atomicpropositions="" >
	<rebec name="room">
		<statevariables>
			<variable name="Room.currentTemp" type="int">23</variable>
			<variable name="Room.currentRegulation" type="int">0</variable>
			<variable name="Room.outside_air" type="int">-1</variable>
		</statevariables>
		<queue>
			<message arrival="0" deadline="infinity" sender="hc_unit">setRegulation(0)</message>
			<message arrival="10" deadline="infinity" sender="room">updateStatus()</message>
		</queue>
		<now>0</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="controller">
		<statevariables>
			<variable name="Controller.currentTemp" type="int">22</variable>
			<variable name="Controller.isHeating" type="boolean">false</variable>
			<variable name="Controller.isCooling" type="boolean">false</variable>
		</statevariables>
		<queue>
		</queue>
		<now>0</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="sensor">
		<statevariables>
		</statevariables>
		<queue>
			<message arrival="2" deadline="infinity" sender="sensor">callSensor()</message>
		</queue>
		<now>0</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="hc_unit">
		<statevariables>
			<variable name="HC_Unit.heaterOn" type="boolean">false</variable>
			<variable name="HC_Unit.coolerOn" type="boolean">false</variable>
			<variable name="HC_Unit.currentRegulation" type="int">0</variable>
		</statevariables>
		<queue>
			<message arrival="5" deadline="infinity" sender="hc_unit">regulateTemp()</message>
		</queue>
		<now>0</now>
		<pc></pc>
		<res></res>
	</rebec>
</state>
<transition source="49_0" destination="56_0" executionTime="0" shift="0"> <messageserver sender="room" owner="room" title="UPDATESTATUS"/></transition>
<state id="57_0" atomicpropositions="" >
	<rebec name="room">
		<statevariables>
			<variable name="Room.currentTemp" type="int">22</variable>
			<variable name="Room.currentRegulation" type="int">0</variable>
			<variable name="Room.outside_air" type="int">0</variable>
		</statevariables>
		<queue>
			<message arrival="0" deadline="infinity" sender="room">updateStatus()</message>
		</queue>
		<now>0</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="controller">
		<statevariables>
			<variable name="Controller.currentTemp" type="int">22</variable>
			<variable name="Controller.isHeating" type="boolean">false</variable>
			<variable name="Controller.isCooling" type="boolean">false</variable>
		</statevariables>
		<queue>
		</queue>
		<now>0</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="sensor">
		<statevariables>
		</statevariables>
		<queue>
			<message arrival="2" deadline="infinity" sender="sensor">callSensor()</message>
		</queue>
		<now>0</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="hc_unit">
		<statevariables>
			<variable name="HC_Unit.heaterOn" type="boolean">false</variable>
			<variable name="HC_Unit.coolerOn" type="boolean">false</variable>
			<variable name="HC_Unit.currentRegulation" type="int">0</variable>
		</statevariables>
		<queue>
			<message arrival="5" deadline="infinity" sender="hc_unit">regulateTemp()</message>
		</queue>
		<now>0</now>
		<pc></pc>
		<res></res>
	</rebec>
</state>
<transition source="49_0" destination="57_0" executionTime="0" shift="0"> <messageserver sender="hc_unit" owner="room" title="SETREGULATION"/></transition>
<state id="58_0" atomicpropositions="" >
	<rebec name="room">
		<statevariables>
			<variable name="Room.currentTemp" type="int">21</variable>
			<variable name="Room.currentRegulation" type="int">0</variable>
			<variable name="Room.outside_air" type="int">1</variable>
		</statevariables>
		<queue>
			<message arrival="10" deadline="infinity" sender="room">updateStatus()</message>
		</queue>
		<now>0</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="controller">
		<statevariables>
			<variable name="Controller.currentTemp" type="int">21</variable>
			<variable name="Controller.isHeating" type="boolean">false</variable>
			<variable name="Controller.isCooling" type="boolean">false</variable>
		</statevariables>
		<queue>
		</queue>
		<now>0</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="sensor">
		<statevariables>
		</statevariables>
		<queue>
			<message arrival="2" deadline="infinity" sender="sensor">callSensor()</message>
		</queue>
		<now>0</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="hc_unit">
		<statevariables>
			<variable name="HC_Unit.heaterOn" type="boolean">false</variable>
			<variable name="HC_Unit.coolerOn" type="boolean">false</variable>
			<variable name="HC_Unit.currentRegulation" type="int">0</variable>
		</statevariables>
		<queue>
			<message arrival="5" deadline="infinity" sender="hc_unit">regulateTemp()</message>
		</queue>
		<now>0</now>
		<pc></pc>
		<res></res>
	</rebec>
</state>
<state id="59_0" atomicpropositions="" >
	<rebec name="room">
		<statevariables>
			<variable name="Room.currentTemp" type="int">21</variable>
			<variable name="Room.currentRegulation" type="int">0</variable>
			<variable name="Room.outside_air" type="int">1</variable>
		</statevariables>
		<queue>
			<message arrival="10" deadline="infinity" sender="room">updateStatus()</message>
		</queue>
		<now>2</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="controller">
		<statevariables>
			<variable name="Controller.currentTemp" type="int">21</variable>
			<variable name="Controller.isHeating" type="boolean">false</variable>
			<variable name="Controller.isCooling" type="boolean">false</variable>
		</statevariables>
		<queue>
		</queue>
		<now>2</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="sensor">
		<statevariables>
		</statevariables>
		<queue>
			<message arrival="2" deadline="infinity" sender="sensor">callSensor()</message>
		</queue>
		<now>2</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="hc_unit">
		<statevariables>
			<variable name="HC_Unit.heaterOn" type="boolean">false</variable>
			<variable name="HC_Unit.coolerOn" type="boolean">false</variable>
			<variable name="HC_Unit.currentRegulation" type="int">0</variable>
		</statevariables>
		<queue>
			<message arrival="5" deadline="infinity" sender="hc_unit">regulateTemp()</message>
		</queue>
		<now>2</now>
		<pc></pc>
		<res></res>
	</rebec>
</state>
<transition source="58_0" destination="59_0" executionTime="0" shift="0"> <time value="2"/></transition>
<transition source="51_0" destination="58_0" executionTime="0" shift="0"> <messageserver sender="hc_unit" owner="room" title="SETREGULATION"/></transition>
<state id="60_0" atomicpropositions="" >
	<rebec name="room">
		<statevariables>
			<variable name="Room.currentTemp" type="int">23</variable>
			<variable name="Room.currentRegulation" type="int">0</variable>
			<variable name="Room.outside_air" type="int">-1</variable>
		</statevariables>
		<queue>
			<message arrival="10" deadline="infinity" sender="room">updateStatus()</message>
		</queue>
		<now>0</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="controller">
		<statevariables>
			<variable name="Controller.currentTemp" type="int">23</variable>
			<variable name="Controller.isHeating" type="boolean">false</variable>
			<variable name="Controller.isCooling" type="boolean">false</variable>
		</statevariables>
		<queue>
		</queue>
		<now>0</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="sensor">
		<statevariables>
		</statevariables>
		<queue>
			<message arrival="2" deadline="infinity" sender="sensor">callSensor()</message>
		</queue>
		<now>0</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="hc_unit">
		<statevariables>
			<variable name="HC_Unit.heaterOn" type="boolean">false</variable>
			<variable name="HC_Unit.coolerOn" type="boolean">false</variable>
			<variable name="HC_Unit.currentRegulation" type="int">0</variable>
		</statevariables>
		<queue>
			<message arrival="5" deadline="infinity" sender="hc_unit">regulateTemp()</message>
		</queue>
		<now>0</now>
		<pc></pc>
		<res></res>
	</rebec>
</state>
<state id="61_0" atomicpropositions="" >
	<rebec name="room">
		<statevariables>
			<variable name="Room.currentTemp" type="int">23</variable>
			<variable name="Room.currentRegulation" type="int">0</variable>
			<variable name="Room.outside_air" type="int">-1</variable>
		</statevariables>
		<queue>
			<message arrival="10" deadline="infinity" sender="room">updateStatus()</message>
		</queue>
		<now>2</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="controller">
		<statevariables>
			<variable name="Controller.currentTemp" type="int">23</variable>
			<variable name="Controller.isHeating" type="boolean">false</variable>
			<variable name="Controller.isCooling" type="boolean">false</variable>
		</statevariables>
		<queue>
		</queue>
		<now>2</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="sensor">
		<statevariables>
		</statevariables>
		<queue>
			<message arrival="2" deadline="infinity" sender="sensor">callSensor()</message>
		</queue>
		<now>2</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="hc_unit">
		<statevariables>
			<variable name="HC_Unit.heaterOn" type="boolean">false</variable>
			<variable name="HC_Unit.coolerOn" type="boolean">false</variable>
			<variable name="HC_Unit.currentRegulation" type="int">0</variable>
		</statevariables>
		<queue>
			<message arrival="5" deadline="infinity" sender="hc_unit">regulateTemp()</message>
		</queue>
		<now>2</now>
		<pc></pc>
		<res></res>
	</rebec>
</state>
<transition source="60_0" destination="61_0" executionTime="0" shift="0"> <time value="2"/></transition>
<transition source="52_0" destination="60_0" executionTime="0" shift="0"> <messageserver sender="controller" owner="controller" title="UPDATEOUTPUT"/></transition>
<state id="62_0" atomicpropositions="" >
	<rebec name="room">
		<statevariables>
			<variable name="Room.currentTemp" type="int">22</variable>
			<variable name="Room.currentRegulation" type="int">0</variable>
			<variable name="Room.outside_air" type="int">0</variable>
		</statevariables>
		<queue>
			<message arrival="10" deadline="infinity" sender="room">updateStatus()</message>
		</queue>
		<now>0</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="controller">
		<statevariables>
			<variable name="Controller.currentTemp" type="int">22</variable>
			<variable name="Controller.isHeating" type="boolean">false</variable>
			<variable name="Controller.isCooling" type="boolean">false</variable>
		</statevariables>
		<queue>
		</queue>
		<now>0</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="sensor">
		<statevariables>
		</statevariables>
		<queue>
			<message arrival="2" deadline="infinity" sender="sensor">callSensor()</message>
		</queue>
		<now>0</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="hc_unit">
		<statevariables>
			<variable name="HC_Unit.heaterOn" type="boolean">false</variable>
			<variable name="HC_Unit.coolerOn" type="boolean">false</variable>
			<variable name="HC_Unit.currentRegulation" type="int">0</variable>
		</statevariables>
		<queue>
			<message arrival="5" deadline="infinity" sender="hc_unit">regulateTemp()</message>
		</queue>
		<now>0</now>
		<pc></pc>
		<res></res>
	</rebec>
</state>
<state id="63_0" atomicpropositions="" >
	<rebec name="room">
		<statevariables>
			<variable name="Room.currentTemp" type="int">22</variable>
			<variable name="Room.currentRegulation" type="int">0</variable>
			<variable name="Room.outside_air" type="int">0</variable>
		</statevariables>
		<queue>
			<message arrival="10" deadline="infinity" sender="room">updateStatus()</message>
		</queue>
		<now>2</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="controller">
		<statevariables>
			<variable name="Controller.currentTemp" type="int">22</variable>
			<variable name="Controller.isHeating" type="boolean">false</variable>
			<variable name="Controller.isCooling" type="boolean">false</variable>
		</statevariables>
		<queue>
		</queue>
		<now>2</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="sensor">
		<statevariables>
		</statevariables>
		<queue>
			<message arrival="2" deadline="infinity" sender="sensor">callSensor()</message>
		</queue>
		<now>2</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="hc_unit">
		<statevariables>
			<variable name="HC_Unit.heaterOn" type="boolean">false</variable>
			<variable name="HC_Unit.coolerOn" type="boolean">false</variable>
			<variable name="HC_Unit.currentRegulation" type="int">0</variable>
		</statevariables>
		<queue>
			<message arrival="5" deadline="infinity" sender="hc_unit">regulateTemp()</message>
		</queue>
		<now>2</now>
		<pc></pc>
		<res></res>
	</rebec>
</state>
<transition source="62_0" destination="63_0" executionTime="0" shift="0"> <time value="2"/></transition>
<transition source="53_0" destination="62_0" executionTime="0" shift="0"> <messageserver sender="controller" owner="controller" title="UPDATEOUTPUT"/></transition>
<transition source="54_0" destination="62_0" executionTime="0" shift="0"> <messageserver sender="hc_unit" owner="room" title="SETREGULATION"/></transition>
<state id="64_0" atomicpropositions="" >
	<rebec name="room">
		<statevariables>
			<variable name="Room.currentTemp" type="int">21</variable>
			<variable name="Room.currentRegulation" type="int">0</variable>
			<variable name="Room.outside_air" type="int">1</variable>
		</statevariables>
		<queue>
			<message arrival="10" deadline="infinity" sender="room">updateStatus()</message>
		</queue>
		<now>0</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="controller">
		<statevariables>
			<variable name="Controller.currentTemp" type="int">22</variable>
			<variable name="Controller.isHeating" type="boolean">false</variable>
			<variable name="Controller.isCooling" type="boolean">false</variable>
		</statevariables>
		<queue>
		</queue>
		<now>0</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="sensor">
		<statevariables>
		</statevariables>
		<queue>
			<message arrival="2" deadline="infinity" sender="sensor">callSensor()</message>
		</queue>
		<now>0</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="hc_unit">
		<statevariables>
			<variable name="HC_Unit.heaterOn" type="boolean">false</variable>
			<variable name="HC_Unit.coolerOn" type="boolean">false</variable>
			<variable name="HC_Unit.currentRegulation" type="int">0</variable>
		</statevariables>
		<queue>
			<message arrival="5" deadline="infinity" sender="hc_unit">regulateTemp()</message>
		</queue>
		<now>0</now>
		<pc></pc>
		<res></res>
	</rebec>
</state>
<state id="65_0" atomicpropositions="" >
	<rebec name="room">
		<statevariables>
			<variable name="Room.currentTemp" type="int">21</variable>
			<variable name="Room.currentRegulation" type="int">0</variable>
			<variable name="Room.outside_air" type="int">1</variable>
		</statevariables>
		<queue>
			<message arrival="10" deadline="infinity" sender="room">updateStatus()</message>
		</queue>
		<now>2</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="controller">
		<statevariables>
			<variable name="Controller.currentTemp" type="int">22</variable>
			<variable name="Controller.isHeating" type="boolean">false</variable>
			<variable name="Controller.isCooling" type="boolean">false</variable>
		</statevariables>
		<queue>
		</queue>
		<now>2</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="sensor">
		<statevariables>
		</statevariables>
		<queue>
			<message arrival="2" deadline="infinity" sender="sensor">callSensor()</message>
		</queue>
		<now>2</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="hc_unit">
		<statevariables>
			<variable name="HC_Unit.heaterOn" type="boolean">false</variable>
			<variable name="HC_Unit.coolerOn" type="boolean">false</variable>
			<variable name="HC_Unit.currentRegulation" type="int">0</variable>
		</statevariables>
		<queue>
			<message arrival="5" deadline="infinity" sender="hc_unit">regulateTemp()</message>
		</queue>
		<now>2</now>
		<pc></pc>
		<res></res>
	</rebec>
</state>
<transition source="64_0" destination="65_0" executionTime="0" shift="0"> <time value="2"/></transition>
<transition source="57_0" destination="64_0" executionTime="0" shift="0"> <messageserver sender="room" owner="room" title="UPDATESTATUS"/></transition>
<transition source="57_0" destination="62_0" executionTime="0" shift="0"> <messageserver sender="room" owner="room" title="UPDATESTATUS"/></transition>
<state id="66_0" atomicpropositions="" >
	<rebec name="room">
		<statevariables>
			<variable name="Room.currentTemp" type="int">23</variable>
			<variable name="Room.currentRegulation" type="int">0</variable>
			<variable name="Room.outside_air" type="int">-1</variable>
		</statevariables>
		<queue>
			<message arrival="10" deadline="infinity" sender="room">updateStatus()</message>
		</queue>
		<now>0</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="controller">
		<statevariables>
			<variable name="Controller.currentTemp" type="int">22</variable>
			<variable name="Controller.isHeating" type="boolean">false</variable>
			<variable name="Controller.isCooling" type="boolean">false</variable>
		</statevariables>
		<queue>
		</queue>
		<now>0</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="sensor">
		<statevariables>
		</statevariables>
		<queue>
			<message arrival="2" deadline="infinity" sender="sensor">callSensor()</message>
		</queue>
		<now>0</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="hc_unit">
		<statevariables>
			<variable name="HC_Unit.heaterOn" type="boolean">false</variable>
			<variable name="HC_Unit.coolerOn" type="boolean">false</variable>
			<variable name="HC_Unit.currentRegulation" type="int">0</variable>
		</statevariables>
		<queue>
			<message arrival="5" deadline="infinity" sender="hc_unit">regulateTemp()</message>
		</queue>
		<now>0</now>
		<pc></pc>
		<res></res>
	</rebec>
</state>
<state id="67_0" atomicpropositions="" >
	<rebec name="room">
		<statevariables>
			<variable name="Room.currentTemp" type="int">23</variable>
			<variable name="Room.currentRegulation" type="int">0</variable>
			<variable name="Room.outside_air" type="int">-1</variable>
		</statevariables>
		<queue>
			<message arrival="10" deadline="infinity" sender="room">updateStatus()</message>
		</queue>
		<now>2</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="controller">
		<statevariables>
			<variable name="Controller.currentTemp" type="int">22</variable>
			<variable name="Controller.isHeating" type="boolean">false</variable>
			<variable name="Controller.isCooling" type="boolean">false</variable>
		</statevariables>
		<queue>
		</queue>
		<now>2</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="sensor">
		<statevariables>
		</statevariables>
		<queue>
			<message arrival="2" deadline="infinity" sender="sensor">callSensor()</message>
		</queue>
		<now>2</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="hc_unit">
		<statevariables>
			<variable name="HC_Unit.heaterOn" type="boolean">false</variable>
			<variable name="HC_Unit.coolerOn" type="boolean">false</variable>
			<variable name="HC_Unit.currentRegulation" type="int">0</variable>
		</statevariables>
		<queue>
			<message arrival="5" deadline="infinity" sender="hc_unit">regulateTemp()</message>
		</queue>
		<now>2</now>
		<pc></pc>
		<res></res>
	</rebec>
</state>
<transition source="66_0" destination="67_0" executionTime="0" shift="0"> <time value="2"/></transition>
<transition source="57_0" destination="66_0" executionTime="0" shift="0"> <messageserver sender="room" owner="room" title="UPDATESTATUS"/></transition>
<transition source="25_0" destination="34_0" executionTime="0" shift="0"> <messageserver sender="hc_unit" owner="room" title="SETREGULATION"/></transition>
<state id="68_0" atomicpropositions="" >
	<rebec name="room">
		<statevariables>
			<variable name="Room.currentTemp" type="int">23</variable>
			<variable name="Room.currentRegulation" type="int">0</variable>
			<variable name="Room.outside_air" type="int">-1</variable>
		</statevariables>
		<queue>
			<message arrival="0" deadline="infinity" sender="hc_unit">setRegulation(0)</message>
			<message arrival="10" deadline="infinity" sender="room">updateStatus()</message>
		</queue>
		<now>0</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="controller">
		<statevariables>
			<variable name="Controller.currentTemp" type="int">22</variable>
			<variable name="Controller.isHeating" type="boolean">false</variable>
			<variable name="Controller.isCooling" type="boolean">false</variable>
		</statevariables>
		<queue>
			<message arrival="0" deadline="infinity" sender="sensor">setCurrent(23)</message>
		</queue>
		<now>0</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="sensor">
		<statevariables>
		</statevariables>
		<queue>
			<message arrival="2" deadline="infinity" sender="sensor">callSensor()</message>
		</queue>
		<now>0</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="hc_unit">
		<statevariables>
			<variable name="HC_Unit.heaterOn" type="boolean">false</variable>
			<variable name="HC_Unit.coolerOn" type="boolean">false</variable>
			<variable name="HC_Unit.currentRegulation" type="int">0</variable>
		</statevariables>
		<queue>
			<message arrival="5" deadline="infinity" sender="hc_unit">regulateTemp()</message>
		</queue>
		<now>0</now>
		<pc></pc>
		<res></res>
	</rebec>
</state>
<transition source="25_0" destination="68_0" executionTime="0" shift="0"> <messageserver sender="room" owner="sensor" title="SETCURRENT"/></transition>
<transition source="56_0" destination="66_0" executionTime="0" shift="0"> <messageserver sender="hc_unit" owner="room" title="SETREGULATION"/></transition>
<transition source="55_0" destination="64_0" executionTime="0" shift="0"> <messageserver sender="hc_unit" owner="room" title="SETREGULATION"/></transition>
<transition source="68_0" destination="43_0" executionTime="0" shift="0"> <messageserver sender="hc_unit" owner="room" title="SETREGULATION"/></transition>
<state id="69_0" atomicpropositions="" >
	<rebec name="room">
		<statevariables>
			<variable name="Room.currentTemp" type="int">23</variable>
			<variable name="Room.currentRegulation" type="int">0</variable>
			<variable name="Room.outside_air" type="int">-1</variable>
		</statevariables>
		<queue>
			<message arrival="0" deadline="infinity" sender="hc_unit">setRegulation(0)</message>
			<message arrival="10" deadline="infinity" sender="room">updateStatus()</message>
		</queue>
		<now>0</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="controller">
		<statevariables>
			<variable name="Controller.currentTemp" type="int">23</variable>
			<variable name="Controller.isHeating" type="boolean">false</variable>
			<variable name="Controller.isCooling" type="boolean">false</variable>
		</statevariables>
		<queue>
			<message arrival="0" deadline="infinity" sender="controller">updateOutput()</message>
		</queue>
		<now>0</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="sensor">
		<statevariables>
		</statevariables>
		<queue>
			<message arrival="2" deadline="infinity" sender="sensor">callSensor()</message>
		</queue>
		<now>0</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="hc_unit">
		<statevariables>
			<variable name="HC_Unit.heaterOn" type="boolean">false</variable>
			<variable name="HC_Unit.coolerOn" type="boolean">false</variable>
			<variable name="HC_Unit.currentRegulation" type="int">0</variable>
		</statevariables>
		<queue>
			<message arrival="5" deadline="infinity" sender="hc_unit">regulateTemp()</message>
		</queue>
		<now>0</now>
		<pc></pc>
		<res></res>
	</rebec>
</state>
<transition source="68_0" destination="69_0" executionTime="0" shift="0"> <messageserver sender="sensor" owner="controller" title="SETCURRENT"/></transition>
<state id="70_0" atomicpropositions="" >
	<rebec name="room">
		<statevariables>
			<variable name="Room.currentTemp" type="int">23</variable>
			<variable name="Room.currentRegulation" type="int">0</variable>
			<variable name="Room.outside_air" type="int">-1</variable>
		</statevariables>
		<queue>
			<message arrival="10" deadline="infinity" sender="room">updateStatus()</message>
		</queue>
		<now>0</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="controller">
		<statevariables>
			<variable name="Controller.currentTemp" type="int">22</variable>
			<variable name="Controller.isHeating" type="boolean">false</variable>
			<variable name="Controller.isCooling" type="boolean">false</variable>
		</statevariables>
		<queue>
		</queue>
		<now>0</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="sensor">
		<statevariables>
		</statevariables>
		<queue>
			<message arrival="0" deadline="infinity" sender="sensor">callSensor()</message>
		</queue>
		<now>0</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="hc_unit">
		<statevariables>
			<variable name="HC_Unit.heaterOn" type="boolean">false</variable>
			<variable name="HC_Unit.coolerOn" type="boolean">false</variable>
			<variable name="HC_Unit.currentRegulation" type="int">0</variable>
		</statevariables>
		<queue>
			<message arrival="5" deadline="infinity" sender="hc_unit">regulateTemp()</message>
		</queue>
		<now>0</now>
		<pc></pc>
		<res></res>
	</rebec>
</state>
<transition source="10_0" destination="70_0" executionTime="0" shift="0"> <messageserver sender="hc_unit" owner="room" title="SETREGULATION"/></transition>
<transition source="10_0" destination="17_0" executionTime="0" shift="0"> <messageserver sender="sensor" owner="sensor" title="CALLSENSOR"/></transition>
<transition source="22_0" destination="32_0" executionTime="0" shift="0"> <messageserver sender="sensor" owner="room" title="GETTEMP"/></transition>
<transition source="69_0" destination="52_0" executionTime="0" shift="0"> <messageserver sender="hc_unit" owner="room" title="SETREGULATION"/></transition>
<state id="71_0" atomicpropositions="" >
	<rebec name="room">
		<statevariables>
			<variable name="Room.currentTemp" type="int">23</variable>
			<variable name="Room.currentRegulation" type="int">0</variable>
			<variable name="Room.outside_air" type="int">-1</variable>
		</statevariables>
		<queue>
			<message arrival="0" deadline="infinity" sender="hc_unit">setRegulation(0)</message>
			<message arrival="10" deadline="infinity" sender="room">updateStatus()</message>
		</queue>
		<now>0</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="controller">
		<statevariables>
			<variable name="Controller.currentTemp" type="int">23</variable>
			<variable name="Controller.isHeating" type="boolean">false</variable>
			<variable name="Controller.isCooling" type="boolean">false</variable>
		</statevariables>
		<queue>
		</queue>
		<now>0</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="sensor">
		<statevariables>
		</statevariables>
		<queue>
			<message arrival="2" deadline="infinity" sender="sensor">callSensor()</message>
		</queue>
		<now>0</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="hc_unit">
		<statevariables>
			<variable name="HC_Unit.heaterOn" type="boolean">false</variable>
			<variable name="HC_Unit.coolerOn" type="boolean">false</variable>
			<variable name="HC_Unit.currentRegulation" type="int">0</variable>
		</statevariables>
		<queue>
			<message arrival="5" deadline="infinity" sender="hc_unit">regulateTemp()</message>
		</queue>
		<now>0</now>
		<pc></pc>
		<res></res>
	</rebec>
</state>
<transition source="69_0" destination="71_0" executionTime="0" shift="0"> <messageserver sender="controller" owner="controller" title="UPDATEOUTPUT"/></transition>
<transition source="70_0" destination="24_0" executionTime="0" shift="0"> <messageserver sender="sensor" owner="sensor" title="CALLSENSOR"/></transition>
<transition source="50_0" destination="58_0" executionTime="0" shift="0"> <messageserver sender="controller" owner="controller" title="UPDATEOUTPUT"/></transition>
<state id="72_0" atomicpropositions="" >
	<rebec name="room">
		<statevariables>
			<variable name="Room.currentTemp" type="int">21</variable>
			<variable name="Room.currentRegulation" type="int">0</variable>
			<variable name="Room.outside_air" type="int">1</variable>
		</statevariables>
		<queue>
			<message arrival="10" deadline="infinity" sender="room">updateStatus()</message>
		</queue>
		<now>0</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="controller">
		<statevariables>
			<variable name="Controller.currentTemp" type="int">22</variable>
			<variable name="Controller.isHeating" type="boolean">false</variable>
			<variable name="Controller.isCooling" type="boolean">false</variable>
		</statevariables>
		<queue>
			<message arrival="0" deadline="infinity" sender="controller">updateOutput()</message>
		</queue>
		<now>0</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="sensor">
		<statevariables>
		</statevariables>
		<queue>
			<message arrival="2" deadline="infinity" sender="sensor">callSensor()</message>
		</queue>
		<now>0</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="hc_unit">
		<statevariables>
			<variable name="HC_Unit.heaterOn" type="boolean">false</variable>
			<variable name="HC_Unit.coolerOn" type="boolean">false</variable>
			<variable name="HC_Unit.currentRegulation" type="int">0</variable>
		</statevariables>
		<queue>
			<message arrival="5" deadline="infinity" sender="hc_unit">regulateTemp()</message>
		</queue>
		<now>0</now>
		<pc></pc>
		<res></res>
	</rebec>
</state>
<transition source="48_0" destination="72_0" executionTime="0" shift="0"> <messageserver sender="room" owner="room" title="UPDATESTATUS"/></transition>
<transition source="48_0" destination="53_0" executionTime="0" shift="0"> <messageserver sender="room" owner="room" title="UPDATESTATUS"/></transition>
<state id="73_0" atomicpropositions="" >
	<rebec name="room">
		<statevariables>
			<variable name="Room.currentTemp" type="int">23</variable>
			<variable name="Room.currentRegulation" type="int">0</variable>
			<variable name="Room.outside_air" type="int">-1</variable>
		</statevariables>
		<queue>
			<message arrival="10" deadline="infinity" sender="room">updateStatus()</message>
		</queue>
		<now>0</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="controller">
		<statevariables>
			<variable name="Controller.currentTemp" type="int">22</variable>
			<variable name="Controller.isHeating" type="boolean">false</variable>
			<variable name="Controller.isCooling" type="boolean">false</variable>
		</statevariables>
		<queue>
			<message arrival="0" deadline="infinity" sender="controller">updateOutput()</message>
		</queue>
		<now>0</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="sensor">
		<statevariables>
		</statevariables>
		<queue>
			<message arrival="2" deadline="infinity" sender="sensor">callSensor()</message>
		</queue>
		<now>0</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="hc_unit">
		<statevariables>
			<variable name="HC_Unit.heaterOn" type="boolean">false</variable>
			<variable name="HC_Unit.coolerOn" type="boolean">false</variable>
			<variable name="HC_Unit.currentRegulation" type="int">0</variable>
		</statevariables>
		<queue>
			<message arrival="5" deadline="infinity" sender="hc_unit">regulateTemp()</message>
		</queue>
		<now>0</now>
		<pc></pc>
		<res></res>
	</rebec>
</state>
<transition source="48_0" destination="73_0" executionTime="0" shift="0"> <messageserver sender="room" owner="room" title="UPDATESTATUS"/></transition>
<transition source="48_0" destination="57_0" executionTime="0" shift="0"> <messageserver sender="controller" owner="controller" title="UPDATEOUTPUT"/></transition>
<transition source="71_0" destination="60_0" executionTime="0" shift="0"> <messageserver sender="hc_unit" owner="room" title="SETREGULATION"/></transition>
<transition source="20_0" destination="22_0" executionTime="0" shift="0"> <messageserver sender="room" owner="room" title="UPDATESTATUS"/></transition>
<transition source="20_0" destination="26_0" executionTime="0" shift="0"> <messageserver sender="room" owner="room" title="UPDATESTATUS"/></transition>
<transition source="20_0" destination="24_0" executionTime="0" shift="0"> <messageserver sender="room" owner="room" title="UPDATESTATUS"/></transition>
<transition source="20_0" destination="30_0" executionTime="0" shift="0"> <messageserver sender="sensor" owner="room" title="GETTEMP"/></transition>
<transition source="47_0" destination="73_0" executionTime="0" shift="0"> <messageserver sender="hc_unit" owner="room" title="SETREGULATION"/></transition>
<transition source="47_0" destination="56_0" executionTime="0" shift="0"> <messageserver sender="controller" owner="controller" title="UPDATEOUTPUT"/></transition>
<transition source="73_0" destination="66_0" executionTime="0" shift="0"> <messageserver sender="controller" owner="controller" title="UPDATEOUTPUT"/></transition>
<transition source="46_0" destination="72_0" executionTime="0" shift="0"> <messageserver sender="hc_unit" owner="room" title="SETREGULATION"/></transition>
<transition source="46_0" destination="55_0" executionTime="0" shift="0"> <messageserver sender="controller" owner="controller" title="UPDATEOUTPUT"/></transition>
<transition source="72_0" destination="64_0" executionTime="0" shift="0"> <messageserver sender="controller" owner="controller" title="UPDATEOUTPUT"/></transition>
<transition source="41_0" destination="50_0" executionTime="0" shift="0"> <messageserver sender="sensor" owner="controller" title="SETCURRENT"/></transition>
<state id="74_0" atomicpropositions="" >
	<rebec name="room">
		<statevariables>
			<variable name="Room.currentTemp" type="int">21</variable>
			<variable name="Room.currentRegulation" type="int">0</variable>
			<variable name="Room.outside_air" type="int">1</variable>
		</statevariables>
		<queue>
			<message arrival="10" deadline="infinity" sender="room">updateStatus()</message>
		</queue>
		<now>0</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="controller">
		<statevariables>
			<variable name="Controller.currentTemp" type="int">22</variable>
			<variable name="Controller.isHeating" type="boolean">false</variable>
			<variable name="Controller.isCooling" type="boolean">false</variable>
		</statevariables>
		<queue>
			<message arrival="0" deadline="infinity" sender="sensor">setCurrent(22)</message>
		</queue>
		<now>0</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="sensor">
		<statevariables>
		</statevariables>
		<queue>
			<message arrival="2" deadline="infinity" sender="sensor">callSensor()</message>
		</queue>
		<now>0</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="hc_unit">
		<statevariables>
			<variable name="HC_Unit.heaterOn" type="boolean">false</variable>
			<variable name="HC_Unit.coolerOn" type="boolean">false</variable>
			<variable name="HC_Unit.currentRegulation" type="int">0</variable>
		</statevariables>
		<queue>
			<message arrival="5" deadline="infinity" sender="hc_unit">regulateTemp()</message>
		</queue>
		<now>0</now>
		<pc></pc>
		<res></res>
	</rebec>
</state>
<transition source="39_0" destination="74_0" executionTime="0" shift="0"> <messageserver sender="room" owner="room" title="UPDATESTATUS"/></transition>
<transition source="39_0" destination="44_0" executionTime="0" shift="0"> <messageserver sender="room" owner="room" title="UPDATESTATUS"/></transition>
<state id="75_0" atomicpropositions="" >
	<rebec name="room">
		<statevariables>
			<variable name="Room.currentTemp" type="int">23</variable>
			<variable name="Room.currentRegulation" type="int">0</variable>
			<variable name="Room.outside_air" type="int">-1</variable>
		</statevariables>
		<queue>
			<message arrival="10" deadline="infinity" sender="room">updateStatus()</message>
		</queue>
		<now>0</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="controller">
		<statevariables>
			<variable name="Controller.currentTemp" type="int">22</variable>
			<variable name="Controller.isHeating" type="boolean">false</variable>
			<variable name="Controller.isCooling" type="boolean">false</variable>
		</statevariables>
		<queue>
			<message arrival="0" deadline="infinity" sender="sensor">setCurrent(22)</message>
		</queue>
		<now>0</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="sensor">
		<statevariables>
		</statevariables>
		<queue>
			<message arrival="2" deadline="infinity" sender="sensor">callSensor()</message>
		</queue>
		<now>0</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="hc_unit">
		<statevariables>
			<variable name="HC_Unit.heaterOn" type="boolean">false</variable>
			<variable name="HC_Unit.coolerOn" type="boolean">false</variable>
			<variable name="HC_Unit.currentRegulation" type="int">0</variable>
		</statevariables>
		<queue>
			<message arrival="5" deadline="infinity" sender="hc_unit">regulateTemp()</message>
		</queue>
		<now>0</now>
		<pc></pc>
		<res></res>
	</rebec>
</state>
<transition source="39_0" destination="75_0" executionTime="0" shift="0"> <messageserver sender="room" owner="room" title="UPDATESTATUS"/></transition>
<transition source="39_0" destination="48_0" executionTime="0" shift="0"> <messageserver sender="sensor" owner="controller" title="SETCURRENT"/></transition>
<transition source="38_0" destination="75_0" executionTime="0" shift="0"> <messageserver sender="hc_unit" owner="room" title="SETREGULATION"/></transition>
<transition source="38_0" destination="47_0" executionTime="0" shift="0"> <messageserver sender="sensor" owner="controller" title="SETCURRENT"/></transition>
<transition source="37_0" destination="74_0" executionTime="0" shift="0"> <messageserver sender="hc_unit" owner="room" title="SETREGULATION"/></transition>
<transition source="37_0" destination="46_0" executionTime="0" shift="0"> <messageserver sender="sensor" owner="controller" title="SETCURRENT"/></transition>
<transition source="32_0" destination="41_0" executionTime="0" shift="0"> <messageserver sender="room" owner="sensor" title="SETCURRENT"/></transition>
<transition source="75_0" destination="73_0" executionTime="0" shift="0"> <messageserver sender="sensor" owner="controller" title="SETCURRENT"/></transition>
<transition source="74_0" destination="72_0" executionTime="0" shift="0"> <messageserver sender="sensor" owner="controller" title="SETCURRENT"/></transition>
<state id="76_0" atomicpropositions="" >
	<rebec name="room">
		<statevariables>
			<variable name="Room.currentTemp" type="int">21</variable>
			<variable name="Room.currentRegulation" type="int">0</variable>
			<variable name="Room.outside_air" type="int">1</variable>
		</statevariables>
		<queue>
			<message arrival="10" deadline="infinity" sender="room">updateStatus()</message>
		</queue>
		<now>0</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="controller">
		<statevariables>
			<variable name="Controller.currentTemp" type="int">22</variable>
			<variable name="Controller.isHeating" type="boolean">false</variable>
			<variable name="Controller.isCooling" type="boolean">false</variable>
		</statevariables>
		<queue>
		</queue>
		<now>0</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="sensor">
		<statevariables>
		</statevariables>
		<queue>
			<message arrival="0" deadline="infinity" sender="room">setCurrent(22)</message>
			<message arrival="2" deadline="infinity" sender="sensor">callSensor()</message>
		</queue>
		<now>0</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="hc_unit">
		<statevariables>
			<variable name="HC_Unit.heaterOn" type="boolean">false</variable>
			<variable name="HC_Unit.coolerOn" type="boolean">false</variable>
			<variable name="HC_Unit.currentRegulation" type="int">0</variable>
		</statevariables>
		<queue>
			<message arrival="5" deadline="infinity" sender="hc_unit">regulateTemp()</message>
		</queue>
		<now>0</now>
		<pc></pc>
		<res></res>
	</rebec>
</state>
<transition source="30_0" destination="76_0" executionTime="0" shift="0"> <messageserver sender="room" owner="room" title="UPDATESTATUS"/></transition>
<transition source="30_0" destination="35_0" executionTime="0" shift="0"> <messageserver sender="room" owner="room" title="UPDATESTATUS"/></transition>
<state id="77_0" atomicpropositions="" >
	<rebec name="room">
		<statevariables>
			<variable name="Room.currentTemp" type="int">23</variable>
			<variable name="Room.currentRegulation" type="int">0</variable>
			<variable name="Room.outside_air" type="int">-1</variable>
		</statevariables>
		<queue>
			<message arrival="10" deadline="infinity" sender="room">updateStatus()</message>
		</queue>
		<now>0</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="controller">
		<statevariables>
			<variable name="Controller.currentTemp" type="int">22</variable>
			<variable name="Controller.isHeating" type="boolean">false</variable>
			<variable name="Controller.isCooling" type="boolean">false</variable>
		</statevariables>
		<queue>
		</queue>
		<now>0</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="sensor">
		<statevariables>
		</statevariables>
		<queue>
			<message arrival="0" deadline="infinity" sender="room">setCurrent(22)</message>
			<message arrival="2" deadline="infinity" sender="sensor">callSensor()</message>
		</queue>
		<now>0</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="hc_unit">
		<statevariables>
			<variable name="HC_Unit.heaterOn" type="boolean">false</variable>
			<variable name="HC_Unit.coolerOn" type="boolean">false</variable>
			<variable name="HC_Unit.currentRegulation" type="int">0</variable>
		</statevariables>
		<queue>
			<message arrival="5" deadline="infinity" sender="hc_unit">regulateTemp()</message>
		</queue>
		<now>0</now>
		<pc></pc>
		<res></res>
	</rebec>
</state>
<transition source="30_0" destination="77_0" executionTime="0" shift="0"> <messageserver sender="room" owner="room" title="UPDATESTATUS"/></transition>
<transition source="30_0" destination="39_0" executionTime="0" shift="0"> <messageserver sender="room" owner="sensor" title="SETCURRENT"/></transition>
<transition source="29_0" destination="77_0" executionTime="0" shift="0"> <messageserver sender="hc_unit" owner="room" title="SETREGULATION"/></transition>
<transition source="29_0" destination="38_0" executionTime="0" shift="0"> <messageserver sender="room" owner="sensor" title="SETCURRENT"/></transition>
<transition source="28_0" destination="76_0" executionTime="0" shift="0"> <messageserver sender="hc_unit" owner="room" title="SETREGULATION"/></transition>
<transition source="28_0" destination="37_0" executionTime="0" shift="0"> <messageserver sender="room" owner="sensor" title="SETCURRENT"/></transition>
<transition source="76_0" destination="74_0" executionTime="0" shift="0"> <messageserver sender="room" owner="sensor" title="SETCURRENT"/></transition>
<transition source="77_0" destination="75_0" executionTime="0" shift="0"> <messageserver sender="room" owner="sensor" title="SETCURRENT"/></transition>
<state id="78_0" atomicpropositions="" >
	<rebec name="room">
		<statevariables>
			<variable name="Room.currentTemp" type="int">22</variable>
			<variable name="Room.currentRegulation" type="int">0</variable>
			<variable name="Room.outside_air" type="int">0</variable>
		</statevariables>
		<queue>
			<message arrival="0" deadline="infinity" sender="sensor">getTemp()</message>
			<message arrival="10" deadline="infinity" sender="room">updateStatus()</message>
		</queue>
		<now>0</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="controller">
		<statevariables>
			<variable name="Controller.currentTemp" type="int">22</variable>
			<variable name="Controller.isHeating" type="boolean">false</variable>
			<variable name="Controller.isCooling" type="boolean">false</variable>
		</statevariables>
		<queue>
		</queue>
		<now>0</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="sensor">
		<statevariables>
		</statevariables>
		<queue>
			<message arrival="2" deadline="infinity" sender="sensor">callSensor()</message>
		</queue>
		<now>0</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="hc_unit">
		<statevariables>
			<variable name="HC_Unit.heaterOn" type="boolean">false</variable>
			<variable name="HC_Unit.coolerOn" type="boolean">false</variable>
			<variable name="HC_Unit.currentRegulation" type="int">0</variable>
		</statevariables>
		<queue>
			<message arrival="0" deadline="infinity" sender="hc_unit">regulateTemp()</message>
		</queue>
		<now>0</now>
		<pc></pc>
		<res></res>
	</rebec>
</state>
<transition source="3_0" destination="78_0" executionTime="0" shift="0"> <messageserver sender="sensor" owner="sensor" title="CALLSENSOR"/></transition>
<transition source="3_0" destination="11_0" executionTime="0" shift="0"> <messageserver sender="hc_unit" owner="hc_unit" title="REGULATETEMP"/></transition>
<state id="79_0" atomicpropositions="" >
	<rebec name="room">
		<statevariables>
			<variable name="Room.currentTemp" type="int">21</variable>
			<variable name="Room.currentRegulation" type="int">0</variable>
			<variable name="Room.outside_air" type="int">1</variable>
		</statevariables>
		<queue>
			<message arrival="10" deadline="infinity" sender="room">updateStatus()</message>
		</queue>
		<now>0</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="controller">
		<statevariables>
			<variable name="Controller.currentTemp" type="int">22</variable>
			<variable name="Controller.isHeating" type="boolean">false</variable>
			<variable name="Controller.isCooling" type="boolean">false</variable>
		</statevariables>
		<queue>
		</queue>
		<now>0</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="sensor">
		<statevariables>
		</statevariables>
		<queue>
			<message arrival="0" deadline="infinity" sender="room">setCurrent(21)</message>
			<message arrival="2" deadline="infinity" sender="sensor">callSensor()</message>
		</queue>
		<now>0</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="hc_unit">
		<statevariables>
			<variable name="HC_Unit.heaterOn" type="boolean">false</variable>
			<variable name="HC_Unit.coolerOn" type="boolean">false</variable>
			<variable name="HC_Unit.currentRegulation" type="int">0</variable>
		</statevariables>
		<queue>
			<message arrival="0" deadline="infinity" sender="hc_unit">regulateTemp()</message>
		</queue>
		<now>0</now>
		<pc></pc>
		<res></res>
	</rebec>
</state>
<transition source="7_0" destination="79_0" executionTime="0" shift="0"> <messageserver sender="sensor" owner="room" title="GETTEMP"/></transition>
<transition source="7_0" destination="15_0" executionTime="0" shift="0"> <messageserver sender="hc_unit" owner="hc_unit" title="REGULATETEMP"/></transition>
<state id="80_0" atomicpropositions="" >
	<rebec name="room">
		<statevariables>
			<variable name="Room.currentTemp" type="int">22</variable>
			<variable name="Room.currentRegulation" type="int">0</variable>
			<variable name="Room.outside_air" type="int">0</variable>
		</statevariables>
		<queue>
			<message arrival="10" deadline="infinity" sender="room">updateStatus()</message>
		</queue>
		<now>0</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="controller">
		<statevariables>
			<variable name="Controller.currentTemp" type="int">22</variable>
			<variable name="Controller.isHeating" type="boolean">false</variable>
			<variable name="Controller.isCooling" type="boolean">false</variable>
		</statevariables>
		<queue>
		</queue>
		<now>0</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="sensor">
		<statevariables>
		</statevariables>
		<queue>
			<message arrival="0" deadline="infinity" sender="room">setCurrent(22)</message>
			<message arrival="2" deadline="infinity" sender="sensor">callSensor()</message>
		</queue>
		<now>0</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="hc_unit">
		<statevariables>
			<variable name="HC_Unit.heaterOn" type="boolean">false</variable>
			<variable name="HC_Unit.coolerOn" type="boolean">false</variable>
			<variable name="HC_Unit.currentRegulation" type="int">0</variable>
		</statevariables>
		<queue>
			<message arrival="0" deadline="infinity" sender="hc_unit">regulateTemp()</message>
		</queue>
		<now>0</now>
		<pc></pc>
		<res></res>
	</rebec>
</state>
<transition source="78_0" destination="80_0" executionTime="0" shift="0"> <messageserver sender="sensor" owner="room" title="GETTEMP"/></transition>
<transition source="78_0" destination="19_0" executionTime="0" shift="0"> <messageserver sender="hc_unit" owner="hc_unit" title="REGULATETEMP"/></transition>
<state id="81_0" atomicpropositions="" >
	<rebec name="room">
		<statevariables>
			<variable name="Room.currentTemp" type="int">21</variable>
			<variable name="Room.currentRegulation" type="int">0</variable>
			<variable name="Room.outside_air" type="int">1</variable>
		</statevariables>
		<queue>
			<message arrival="10" deadline="infinity" sender="room">updateStatus()</message>
		</queue>
		<now>0</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="controller">
		<statevariables>
			<variable name="Controller.currentTemp" type="int">22</variable>
			<variable name="Controller.isHeating" type="boolean">false</variable>
			<variable name="Controller.isCooling" type="boolean">false</variable>
		</statevariables>
		<queue>
			<message arrival="0" deadline="infinity" sender="sensor">setCurrent(21)</message>
		</queue>
		<now>0</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="sensor">
		<statevariables>
		</statevariables>
		<queue>
			<message arrival="2" deadline="infinity" sender="sensor">callSensor()</message>
		</queue>
		<now>0</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="hc_unit">
		<statevariables>
			<variable name="HC_Unit.heaterOn" type="boolean">false</variable>
			<variable name="HC_Unit.coolerOn" type="boolean">false</variable>
			<variable name="HC_Unit.currentRegulation" type="int">0</variable>
		</statevariables>
		<queue>
			<message arrival="0" deadline="infinity" sender="hc_unit">regulateTemp()</message>
		</queue>
		<now>0</now>
		<pc></pc>
		<res></res>
	</rebec>
</state>
<transition source="79_0" destination="81_0" executionTime="0" shift="0"> <messageserver sender="room" owner="sensor" title="SETCURRENT"/></transition>
<transition source="79_0" destination="23_0" executionTime="0" shift="0"> <messageserver sender="hc_unit" owner="hc_unit" title="REGULATETEMP"/></transition>
<state id="82_0" atomicpropositions="" >
	<rebec name="room">
		<statevariables>
			<variable name="Room.currentTemp" type="int">22</variable>
			<variable name="Room.currentRegulation" type="int">0</variable>
			<variable name="Room.outside_air" type="int">0</variable>
		</statevariables>
		<queue>
			<message arrival="10" deadline="infinity" sender="room">updateStatus()</message>
		</queue>
		<now>0</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="controller">
		<statevariables>
			<variable name="Controller.currentTemp" type="int">22</variable>
			<variable name="Controller.isHeating" type="boolean">false</variable>
			<variable name="Controller.isCooling" type="boolean">false</variable>
		</statevariables>
		<queue>
			<message arrival="0" deadline="infinity" sender="sensor">setCurrent(22)</message>
		</queue>
		<now>0</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="sensor">
		<statevariables>
		</statevariables>
		<queue>
			<message arrival="2" deadline="infinity" sender="sensor">callSensor()</message>
		</queue>
		<now>0</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="hc_unit">
		<statevariables>
			<variable name="HC_Unit.heaterOn" type="boolean">false</variable>
			<variable name="HC_Unit.coolerOn" type="boolean">false</variable>
			<variable name="HC_Unit.currentRegulation" type="int">0</variable>
		</statevariables>
		<queue>
			<message arrival="0" deadline="infinity" sender="hc_unit">regulateTemp()</message>
		</queue>
		<now>0</now>
		<pc></pc>
		<res></res>
	</rebec>
</state>
<transition source="80_0" destination="82_0" executionTime="0" shift="0"> <messageserver sender="room" owner="sensor" title="SETCURRENT"/></transition>
<transition source="80_0" destination="27_0" executionTime="0" shift="0"> <messageserver sender="hc_unit" owner="hc_unit" title="REGULATETEMP"/></transition>
<state id="83_0" atomicpropositions="" >
	<rebec name="room">
		<statevariables>
			<variable name="Room.currentTemp" type="int">21</variable>
			<variable name="Room.currentRegulation" type="int">0</variable>
			<variable name="Room.outside_air" type="int">1</variable>
		</statevariables>
		<queue>
			<message arrival="10" deadline="infinity" sender="room">updateStatus()</message>
		</queue>
		<now>0</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="controller">
		<statevariables>
			<variable name="Controller.currentTemp" type="int">21</variable>
			<variable name="Controller.isHeating" type="boolean">false</variable>
			<variable name="Controller.isCooling" type="boolean">false</variable>
		</statevariables>
		<queue>
			<message arrival="0" deadline="infinity" sender="controller">updateOutput()</message>
		</queue>
		<now>0</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="sensor">
		<statevariables>
		</statevariables>
		<queue>
			<message arrival="2" deadline="infinity" sender="sensor">callSensor()</message>
		</queue>
		<now>0</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="hc_unit">
		<statevariables>
			<variable name="HC_Unit.heaterOn" type="boolean">false</variable>
			<variable name="HC_Unit.coolerOn" type="boolean">false</variable>
			<variable name="HC_Unit.currentRegulation" type="int">0</variable>
		</statevariables>
		<queue>
			<message arrival="0" deadline="infinity" sender="hc_unit">regulateTemp()</message>
		</queue>
		<now>0</now>
		<pc></pc>
		<res></res>
	</rebec>
</state>
<transition source="81_0" destination="83_0" executionTime="0" shift="0"> <messageserver sender="sensor" owner="controller" title="SETCURRENT"/></transition>
<transition source="81_0" destination="33_0" executionTime="0" shift="0"> <messageserver sender="hc_unit" owner="hc_unit" title="REGULATETEMP"/></transition>
<state id="84_0" atomicpropositions="" >
	<rebec name="room">
		<statevariables>
			<variable name="Room.currentTemp" type="int">22</variable>
			<variable name="Room.currentRegulation" type="int">0</variable>
			<variable name="Room.outside_air" type="int">0</variable>
		</statevariables>
		<queue>
			<message arrival="10" deadline="infinity" sender="room">updateStatus()</message>
		</queue>
		<now>0</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="controller">
		<statevariables>
			<variable name="Controller.currentTemp" type="int">22</variable>
			<variable name="Controller.isHeating" type="boolean">false</variable>
			<variable name="Controller.isCooling" type="boolean">false</variable>
		</statevariables>
		<queue>
			<message arrival="0" deadline="infinity" sender="controller">updateOutput()</message>
		</queue>
		<now>0</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="sensor">
		<statevariables>
		</statevariables>
		<queue>
			<message arrival="2" deadline="infinity" sender="sensor">callSensor()</message>
		</queue>
		<now>0</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="hc_unit">
		<statevariables>
			<variable name="HC_Unit.heaterOn" type="boolean">false</variable>
			<variable name="HC_Unit.coolerOn" type="boolean">false</variable>
			<variable name="HC_Unit.currentRegulation" type="int">0</variable>
		</statevariables>
		<queue>
			<message arrival="0" deadline="infinity" sender="hc_unit">regulateTemp()</message>
		</queue>
		<now>0</now>
		<pc></pc>
		<res></res>
	</rebec>
</state>
<transition source="82_0" destination="84_0" executionTime="0" shift="0"> <messageserver sender="sensor" owner="controller" title="SETCURRENT"/></transition>
<transition source="82_0" destination="36_0" executionTime="0" shift="0"> <messageserver sender="hc_unit" owner="hc_unit" title="REGULATETEMP"/></transition>
<state id="85_0" atomicpropositions="" >
	<rebec name="room">
		<statevariables>
			<variable name="Room.currentTemp" type="int">21</variable>
			<variable name="Room.currentRegulation" type="int">0</variable>
			<variable name="Room.outside_air" type="int">1</variable>
		</statevariables>
		<queue>
			<message arrival="10" deadline="infinity" sender="room">updateStatus()</message>
		</queue>
		<now>0</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="controller">
		<statevariables>
			<variable name="Controller.currentTemp" type="int">21</variable>
			<variable name="Controller.isHeating" type="boolean">false</variable>
			<variable name="Controller.isCooling" type="boolean">false</variable>
		</statevariables>
		<queue>
		</queue>
		<now>0</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="sensor">
		<statevariables>
		</statevariables>
		<queue>
			<message arrival="2" deadline="infinity" sender="sensor">callSensor()</message>
		</queue>
		<now>0</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="hc_unit">
		<statevariables>
			<variable name="HC_Unit.heaterOn" type="boolean">false</variable>
			<variable name="HC_Unit.coolerOn" type="boolean">false</variable>
			<variable name="HC_Unit.currentRegulation" type="int">0</variable>
		</statevariables>
		<queue>
			<message arrival="0" deadline="infinity" sender="hc_unit">regulateTemp()</message>
		</queue>
		<now>0</now>
		<pc></pc>
		<res></res>
	</rebec>
</state>
<transition source="83_0" destination="85_0" executionTime="0" shift="0"> <messageserver sender="controller" owner="controller" title="UPDATEOUTPUT"/></transition>
<transition source="83_0" destination="42_0" executionTime="0" shift="0"> <messageserver sender="hc_unit" owner="hc_unit" title="REGULATETEMP"/></transition>
<state id="86_0" atomicpropositions="" >
	<rebec name="room">
		<statevariables>
			<variable name="Room.currentTemp" type="int">22</variable>
			<variable name="Room.currentRegulation" type="int">0</variable>
			<variable name="Room.outside_air" type="int">0</variable>
		</statevariables>
		<queue>
			<message arrival="10" deadline="infinity" sender="room">updateStatus()</message>
		</queue>
		<now>0</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="controller">
		<statevariables>
			<variable name="Controller.currentTemp" type="int">22</variable>
			<variable name="Controller.isHeating" type="boolean">false</variable>
			<variable name="Controller.isCooling" type="boolean">false</variable>
		</statevariables>
		<queue>
		</queue>
		<now>0</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="sensor">
		<statevariables>
		</statevariables>
		<queue>
			<message arrival="2" deadline="infinity" sender="sensor">callSensor()</message>
		</queue>
		<now>0</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="hc_unit">
		<statevariables>
			<variable name="HC_Unit.heaterOn" type="boolean">false</variable>
			<variable name="HC_Unit.coolerOn" type="boolean">false</variable>
			<variable name="HC_Unit.currentRegulation" type="int">0</variable>
		</statevariables>
		<queue>
			<message arrival="0" deadline="infinity" sender="hc_unit">regulateTemp()</message>
		</queue>
		<now>0</now>
		<pc></pc>
		<res></res>
	</rebec>
</state>
<transition source="84_0" destination="86_0" executionTime="0" shift="0"> <messageserver sender="controller" owner="controller" title="UPDATEOUTPUT"/></transition>
<transition source="84_0" destination="45_0" executionTime="0" shift="0"> <messageserver sender="hc_unit" owner="hc_unit" title="REGULATETEMP"/></transition>
<transition source="85_0" destination="51_0" executionTime="0" shift="0"> <messageserver sender="hc_unit" owner="hc_unit" title="REGULATETEMP"/></transition>
<transition source="86_0" destination="54_0" executionTime="0" shift="0"> <messageserver sender="hc_unit" owner="hc_unit" title="REGULATETEMP"/></transition>
<transition source="18_0" destination="26_0" executionTime="0" shift="0"> <messageserver sender="sensor" owner="sensor" title="CALLSENSOR"/></transition>
<state id="87_0" atomicpropositions="" >
	<rebec name="room">
		<statevariables>
			<variable name="Room.currentTemp" type="int">23</variable>
			<variable name="Room.currentRegulation" type="int">0</variable>
			<variable name="Room.outside_air" type="int">-1</variable>
		</statevariables>
		<queue>
			<message arrival="10" deadline="infinity" sender="room">updateStatus()</message>
		</queue>
		<now>0</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="controller">
		<statevariables>
			<variable name="Controller.currentTemp" type="int">22</variable>
			<variable name="Controller.isHeating" type="boolean">false</variable>
			<variable name="Controller.isCooling" type="boolean">false</variable>
		</statevariables>
		<queue>
			<message arrival="0" deadline="infinity" sender="sensor">setCurrent(23)</message>
		</queue>
		<now>0</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="sensor">
		<statevariables>
		</statevariables>
		<queue>
			<message arrival="2" deadline="infinity" sender="sensor">callSensor()</message>
		</queue>
		<now>0</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="hc_unit">
		<statevariables>
			<variable name="HC_Unit.heaterOn" type="boolean">false</variable>
			<variable name="HC_Unit.coolerOn" type="boolean">false</variable>
			<variable name="HC_Unit.currentRegulation" type="int">0</variable>
		</statevariables>
		<queue>
			<message arrival="0" deadline="infinity" sender="hc_unit">regulateTemp()</message>
		</queue>
		<now>0</now>
		<pc></pc>
		<res></res>
	</rebec>
</state>
<transition source="16_0" destination="87_0" executionTime="0" shift="0"> <messageserver sender="room" owner="sensor" title="SETCURRENT"/></transition>
<transition source="16_0" destination="25_0" executionTime="0" shift="0"> <messageserver sender="hc_unit" owner="hc_unit" title="REGULATETEMP"/></transition>
<transition source="5_0" destination="7_0" executionTime="0" shift="0"> <messageserver sender="room" owner="room" title="UPDATESTATUS"/></transition>
<transition source="5_0" destination="78_0" executionTime="0" shift="0"> <messageserver sender="room" owner="room" title="UPDATESTATUS"/></transition>
<transition source="5_0" destination="9_0" executionTime="0" shift="0"> <messageserver sender="room" owner="room" title="UPDATESTATUS"/></transition>
<state id="88_0" atomicpropositions="" >
	<rebec name="room">
		<statevariables>
			<variable name="Room.currentTemp" type="int">22</variable>
			<variable name="Room.currentRegulation" type="int">0</variable>
			<variable name="Room.outside_air" type="int">0</variable>
		</statevariables>
		<queue>
			<message arrival="0" deadline="infinity" sender="room">updateStatus()</message>
		</queue>
		<now>0</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="controller">
		<statevariables>
			<variable name="Controller.currentTemp" type="int">22</variable>
			<variable name="Controller.isHeating" type="boolean">false</variable>
			<variable name="Controller.isCooling" type="boolean">false</variable>
		</statevariables>
		<queue>
		</queue>
		<now>0</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="sensor">
		<statevariables>
		</statevariables>
		<queue>
			<message arrival="0" deadline="infinity" sender="room">setCurrent(22)</message>
			<message arrival="2" deadline="infinity" sender="sensor">callSensor()</message>
		</queue>
		<now>0</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="hc_unit">
		<statevariables>
			<variable name="HC_Unit.heaterOn" type="boolean">false</variable>
			<variable name="HC_Unit.coolerOn" type="boolean">false</variable>
			<variable name="HC_Unit.currentRegulation" type="int">0</variable>
		</statevariables>
		<queue>
			<message arrival="0" deadline="infinity" sender="hc_unit">regulateTemp()</message>
		</queue>
		<now>0</now>
		<pc></pc>
		<res></res>
	</rebec>
</state>
<transition source="5_0" destination="88_0" executionTime="0" shift="0"> <messageserver sender="sensor" owner="room" title="GETTEMP"/></transition>
<transition source="5_0" destination="13_0" executionTime="0" shift="0"> <messageserver sender="hc_unit" owner="hc_unit" title="REGULATETEMP"/></transition>
<transition source="14_0" destination="22_0" executionTime="0" shift="0"> <messageserver sender="sensor" owner="sensor" title="CALLSENSOR"/></transition>
<transition source="12_0" destination="14_0" executionTime="0" shift="0"> <messageserver sender="room" owner="room" title="UPDATESTATUS"/></transition>
<transition source="12_0" destination="18_0" executionTime="0" shift="0"> <messageserver sender="room" owner="room" title="UPDATESTATUS"/></transition>
<transition source="12_0" destination="70_0" executionTime="0" shift="0"> <messageserver sender="room" owner="room" title="UPDATESTATUS"/></transition>
<transition source="12_0" destination="20_0" executionTime="0" shift="0"> <messageserver sender="sensor" owner="sensor" title="CALLSENSOR"/></transition>
<state id="89_0" atomicpropositions="" >
	<rebec name="room">
		<statevariables>
			<variable name="Room.currentTemp" type="int">23</variable>
			<variable name="Room.currentRegulation" type="int">0</variable>
			<variable name="Room.outside_air" type="int">-1</variable>
		</statevariables>
		<queue>
			<message arrival="10" deadline="infinity" sender="room">updateStatus()</message>
		</queue>
		<now>0</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="controller">
		<statevariables>
			<variable name="Controller.currentTemp" type="int">23</variable>
			<variable name="Controller.isHeating" type="boolean">false</variable>
			<variable name="Controller.isCooling" type="boolean">false</variable>
		</statevariables>
		<queue>
			<message arrival="0" deadline="infinity" sender="controller">updateOutput()</message>
		</queue>
		<now>0</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="sensor">
		<statevariables>
		</statevariables>
		<queue>
			<message arrival="2" deadline="infinity" sender="sensor">callSensor()</message>
		</queue>
		<now>0</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="hc_unit">
		<statevariables>
			<variable name="HC_Unit.heaterOn" type="boolean">false</variable>
			<variable name="HC_Unit.coolerOn" type="boolean">false</variable>
			<variable name="HC_Unit.currentRegulation" type="int">0</variable>
		</statevariables>
		<queue>
			<message arrival="0" deadline="infinity" sender="hc_unit">regulateTemp()</message>
		</queue>
		<now>0</now>
		<pc></pc>
		<res></res>
	</rebec>
</state>
<transition source="87_0" destination="89_0" executionTime="0" shift="0"> <messageserver sender="sensor" owner="controller" title="SETCURRENT"/></transition>
<transition source="87_0" destination="68_0" executionTime="0" shift="0"> <messageserver sender="hc_unit" owner="hc_unit" title="REGULATETEMP"/></transition>
<state id="90_0" atomicpropositions="" >
	<rebec name="room">
		<statevariables>
			<variable name="Room.currentTemp" type="int">21</variable>
			<variable name="Room.currentRegulation" type="int">0</variable>
			<variable name="Room.outside_air" type="int">1</variable>
		</statevariables>
		<queue>
			<message arrival="10" deadline="infinity" sender="room">updateStatus()</message>
		</queue>
		<now>0</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="controller">
		<statevariables>
			<variable name="Controller.currentTemp" type="int">22</variable>
			<variable name="Controller.isHeating" type="boolean">false</variable>
			<variable name="Controller.isCooling" type="boolean">false</variable>
		</statevariables>
		<queue>
		</queue>
		<now>0</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="sensor">
		<statevariables>
		</statevariables>
		<queue>
			<message arrival="0" deadline="infinity" sender="room">setCurrent(22)</message>
			<message arrival="2" deadline="infinity" sender="sensor">callSensor()</message>
		</queue>
		<now>0</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="hc_unit">
		<statevariables>
			<variable name="HC_Unit.heaterOn" type="boolean">false</variable>
			<variable name="HC_Unit.coolerOn" type="boolean">false</variable>
			<variable name="HC_Unit.currentRegulation" type="int">0</variable>
		</statevariables>
		<queue>
			<message arrival="0" deadline="infinity" sender="hc_unit">regulateTemp()</message>
		</queue>
		<now>0</now>
		<pc></pc>
		<res></res>
	</rebec>
</state>
<transition source="88_0" destination="90_0" executionTime="0" shift="0"> <messageserver sender="room" owner="room" title="UPDATESTATUS"/></transition>
<transition source="88_0" destination="80_0" executionTime="0" shift="0"> <messageserver sender="room" owner="room" title="UPDATESTATUS"/></transition>
<state id="91_0" atomicpropositions="" >
	<rebec name="room">
		<statevariables>
			<variable name="Room.currentTemp" type="int">23</variable>
			<variable name="Room.currentRegulation" type="int">0</variable>
			<variable name="Room.outside_air" type="int">-1</variable>
		</statevariables>
		<queue>
			<message arrival="10" deadline="infinity" sender="room">updateStatus()</message>
		</queue>
		<now>0</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="controller">
		<statevariables>
			<variable name="Controller.currentTemp" type="int">22</variable>
			<variable name="Controller.isHeating" type="boolean">false</variable>
			<variable name="Controller.isCooling" type="boolean">false</variable>
		</statevariables>
		<queue>
		</queue>
		<now>0</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="sensor">
		<statevariables>
		</statevariables>
		<queue>
			<message arrival="0" deadline="infinity" sender="room">setCurrent(22)</message>
			<message arrival="2" deadline="infinity" sender="sensor">callSensor()</message>
		</queue>
		<now>0</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="hc_unit">
		<statevariables>
			<variable name="HC_Unit.heaterOn" type="boolean">false</variable>
			<variable name="HC_Unit.coolerOn" type="boolean">false</variable>
			<variable name="HC_Unit.currentRegulation" type="int">0</variable>
		</statevariables>
		<queue>
			<message arrival="0" deadline="infinity" sender="hc_unit">regulateTemp()</message>
		</queue>
		<now>0</now>
		<pc></pc>
		<res></res>
	</rebec>
</state>
<transition source="88_0" destination="91_0" executionTime="0" shift="0"> <messageserver sender="room" owner="room" title="UPDATESTATUS"/></transition>
<state id="92_0" atomicpropositions="" >
	<rebec name="room">
		<statevariables>
			<variable name="Room.currentTemp" type="int">22</variable>
			<variable name="Room.currentRegulation" type="int">0</variable>
			<variable name="Room.outside_air" type="int">0</variable>
		</statevariables>
		<queue>
			<message arrival="0" deadline="infinity" sender="room">updateStatus()</message>
		</queue>
		<now>0</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="controller">
		<statevariables>
			<variable name="Controller.currentTemp" type="int">22</variable>
			<variable name="Controller.isHeating" type="boolean">false</variable>
			<variable name="Controller.isCooling" type="boolean">false</variable>
		</statevariables>
		<queue>
			<message arrival="0" deadline="infinity" sender="sensor">setCurrent(22)</message>
		</queue>
		<now>0</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="sensor">
		<statevariables>
		</statevariables>
		<queue>
			<message arrival="2" deadline="infinity" sender="sensor">callSensor()</message>
		</queue>
		<now>0</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="hc_unit">
		<statevariables>
			<variable name="HC_Unit.heaterOn" type="boolean">false</variable>
			<variable name="HC_Unit.coolerOn" type="boolean">false</variable>
			<variable name="HC_Unit.currentRegulation" type="int">0</variable>
		</statevariables>
		<queue>
			<message arrival="0" deadline="infinity" sender="hc_unit">regulateTemp()</message>
		</queue>
		<now>0</now>
		<pc></pc>
		<res></res>
	</rebec>
</state>
<transition source="88_0" destination="92_0" executionTime="0" shift="0"> <messageserver sender="room" owner="sensor" title="SETCURRENT"/></transition>
<transition source="88_0" destination="21_0" executionTime="0" shift="0"> <messageserver sender="hc_unit" owner="hc_unit" title="REGULATETEMP"/></transition>
<state id="93_0" atomicpropositions="" >
	<rebec name="room">
		<statevariables>
			<variable name="Room.currentTemp" type="int">23</variable>
			<variable name="Room.currentRegulation" type="int">0</variable>
			<variable name="Room.outside_air" type="int">-1</variable>
		</statevariables>
		<queue>
			<message arrival="10" deadline="infinity" sender="room">updateStatus()</message>
		</queue>
		<now>0</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="controller">
		<statevariables>
			<variable name="Controller.currentTemp" type="int">23</variable>
			<variable name="Controller.isHeating" type="boolean">false</variable>
			<variable name="Controller.isCooling" type="boolean">false</variable>
		</statevariables>
		<queue>
		</queue>
		<now>0</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="sensor">
		<statevariables>
		</statevariables>
		<queue>
			<message arrival="2" deadline="infinity" sender="sensor">callSensor()</message>
		</queue>
		<now>0</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="hc_unit">
		<statevariables>
			<variable name="HC_Unit.heaterOn" type="boolean">false</variable>
			<variable name="HC_Unit.coolerOn" type="boolean">false</variable>
			<variable name="HC_Unit.currentRegulation" type="int">0</variable>
		</statevariables>
		<queue>
			<message arrival="0" deadline="infinity" sender="hc_unit">regulateTemp()</message>
		</queue>
		<now>0</now>
		<pc></pc>
		<res></res>
	</rebec>
</state>
<transition source="89_0" destination="93_0" executionTime="0" shift="0"> <messageserver sender="controller" owner="controller" title="UPDATEOUTPUT"/></transition>
<transition source="89_0" destination="69_0" executionTime="0" shift="0"> <messageserver sender="hc_unit" owner="hc_unit" title="REGULATETEMP"/></transition>
<state id="94_0" atomicpropositions="" >
	<rebec name="room">
		<statevariables>
			<variable name="Room.currentTemp" type="int">21</variable>
			<variable name="Room.currentRegulation" type="int">0</variable>
			<variable name="Room.outside_air" type="int">1</variable>
		</statevariables>
		<queue>
			<message arrival="10" deadline="infinity" sender="room">updateStatus()</message>
		</queue>
		<now>0</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="controller">
		<statevariables>
			<variable name="Controller.currentTemp" type="int">22</variable>
			<variable name="Controller.isHeating" type="boolean">false</variable>
			<variable name="Controller.isCooling" type="boolean">false</variable>
		</statevariables>
		<queue>
			<message arrival="0" deadline="infinity" sender="sensor">setCurrent(22)</message>
		</queue>
		<now>0</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="sensor">
		<statevariables>
		</statevariables>
		<queue>
			<message arrival="2" deadline="infinity" sender="sensor">callSensor()</message>
		</queue>
		<now>0</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="hc_unit">
		<statevariables>
			<variable name="HC_Unit.heaterOn" type="boolean">false</variable>
			<variable name="HC_Unit.coolerOn" type="boolean">false</variable>
			<variable name="HC_Unit.currentRegulation" type="int">0</variable>
		</statevariables>
		<queue>
			<message arrival="0" deadline="infinity" sender="hc_unit">regulateTemp()</message>
		</queue>
		<now>0</now>
		<pc></pc>
		<res></res>
	</rebec>
</state>
<transition source="90_0" destination="94_0" executionTime="0" shift="0"> <messageserver sender="room" owner="sensor" title="SETCURRENT"/></transition>
<transition source="90_0" destination="28_0" executionTime="0" shift="0"> <messageserver sender="hc_unit" owner="hc_unit" title="REGULATETEMP"/></transition>
<state id="95_0" atomicpropositions="" >
	<rebec name="room">
		<statevariables>
			<variable name="Room.currentTemp" type="int">23</variable>
			<variable name="Room.currentRegulation" type="int">0</variable>
			<variable name="Room.outside_air" type="int">-1</variable>
		</statevariables>
		<queue>
			<message arrival="10" deadline="infinity" sender="room">updateStatus()</message>
		</queue>
		<now>0</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="controller">
		<statevariables>
			<variable name="Controller.currentTemp" type="int">22</variable>
			<variable name="Controller.isHeating" type="boolean">false</variable>
			<variable name="Controller.isCooling" type="boolean">false</variable>
		</statevariables>
		<queue>
			<message arrival="0" deadline="infinity" sender="sensor">setCurrent(22)</message>
		</queue>
		<now>0</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="sensor">
		<statevariables>
		</statevariables>
		<queue>
			<message arrival="2" deadline="infinity" sender="sensor">callSensor()</message>
		</queue>
		<now>0</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="hc_unit">
		<statevariables>
			<variable name="HC_Unit.heaterOn" type="boolean">false</variable>
			<variable name="HC_Unit.coolerOn" type="boolean">false</variable>
			<variable name="HC_Unit.currentRegulation" type="int">0</variable>
		</statevariables>
		<queue>
			<message arrival="0" deadline="infinity" sender="hc_unit">regulateTemp()</message>
		</queue>
		<now>0</now>
		<pc></pc>
		<res></res>
	</rebec>
</state>
<transition source="91_0" destination="95_0" executionTime="0" shift="0"> <messageserver sender="room" owner="sensor" title="SETCURRENT"/></transition>
<transition source="91_0" destination="29_0" executionTime="0" shift="0"> <messageserver sender="hc_unit" owner="hc_unit" title="REGULATETEMP"/></transition>
<transition source="92_0" destination="94_0" executionTime="0" shift="0"> <messageserver sender="room" owner="room" title="UPDATESTATUS"/></transition>
<transition source="92_0" destination="82_0" executionTime="0" shift="0"> <messageserver sender="room" owner="room" title="UPDATESTATUS"/></transition>
<transition source="92_0" destination="95_0" executionTime="0" shift="0"> <messageserver sender="room" owner="room" title="UPDATESTATUS"/></transition>
<state id="96_0" atomicpropositions="" >
	<rebec name="room">
		<statevariables>
			<variable name="Room.currentTemp" type="int">22</variable>
			<variable name="Room.currentRegulation" type="int">0</variable>
			<variable name="Room.outside_air" type="int">0</variable>
		</statevariables>
		<queue>
			<message arrival="0" deadline="infinity" sender="room">updateStatus()</message>
		</queue>
		<now>0</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="controller">
		<statevariables>
			<variable name="Controller.currentTemp" type="int">22</variable>
			<variable name="Controller.isHeating" type="boolean">false</variable>
			<variable name="Controller.isCooling" type="boolean">false</variable>
		</statevariables>
		<queue>
			<message arrival="0" deadline="infinity" sender="controller">updateOutput()</message>
		</queue>
		<now>0</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="sensor">
		<statevariables>
		</statevariables>
		<queue>
			<message arrival="2" deadline="infinity" sender="sensor">callSensor()</message>
		</queue>
		<now>0</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="hc_unit">
		<statevariables>
			<variable name="HC_Unit.heaterOn" type="boolean">false</variable>
			<variable name="HC_Unit.coolerOn" type="boolean">false</variable>
			<variable name="HC_Unit.currentRegulation" type="int">0</variable>
		</statevariables>
		<queue>
			<message arrival="0" deadline="infinity" sender="hc_unit">regulateTemp()</message>
		</queue>
		<now>0</now>
		<pc></pc>
		<res></res>
	</rebec>
</state>
<transition source="92_0" destination="96_0" executionTime="0" shift="0"> <messageserver sender="sensor" owner="controller" title="SETCURRENT"/></transition>
<transition source="92_0" destination="31_0" executionTime="0" shift="0"> <messageserver sender="hc_unit" owner="hc_unit" title="REGULATETEMP"/></transition>
<transition source="93_0" destination="71_0" executionTime="0" shift="0"> <messageserver sender="hc_unit" owner="hc_unit" title="REGULATETEMP"/></transition>
<state id="97_0" atomicpropositions="" >
	<rebec name="room">
		<statevariables>
			<variable name="Room.currentTemp" type="int">21</variable>
			<variable name="Room.currentRegulation" type="int">0</variable>
			<variable name="Room.outside_air" type="int">1</variable>
		</statevariables>
		<queue>
			<message arrival="10" deadline="infinity" sender="room">updateStatus()</message>
		</queue>
		<now>0</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="controller">
		<statevariables>
			<variable name="Controller.currentTemp" type="int">22</variable>
			<variable name="Controller.isHeating" type="boolean">false</variable>
			<variable name="Controller.isCooling" type="boolean">false</variable>
		</statevariables>
		<queue>
			<message arrival="0" deadline="infinity" sender="controller">updateOutput()</message>
		</queue>
		<now>0</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="sensor">
		<statevariables>
		</statevariables>
		<queue>
			<message arrival="2" deadline="infinity" sender="sensor">callSensor()</message>
		</queue>
		<now>0</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="hc_unit">
		<statevariables>
			<variable name="HC_Unit.heaterOn" type="boolean">false</variable>
			<variable name="HC_Unit.coolerOn" type="boolean">false</variable>
			<variable name="HC_Unit.currentRegulation" type="int">0</variable>
		</statevariables>
		<queue>
			<message arrival="0" deadline="infinity" sender="hc_unit">regulateTemp()</message>
		</queue>
		<now>0</now>
		<pc></pc>
		<res></res>
	</rebec>
</state>
<transition source="94_0" destination="97_0" executionTime="0" shift="0"> <messageserver sender="sensor" owner="controller" title="SETCURRENT"/></transition>
<transition source="94_0" destination="37_0" executionTime="0" shift="0"> <messageserver sender="hc_unit" owner="hc_unit" title="REGULATETEMP"/></transition>
<state id="98_0" atomicpropositions="" >
	<rebec name="room">
		<statevariables>
			<variable name="Room.currentTemp" type="int">23</variable>
			<variable name="Room.currentRegulation" type="int">0</variable>
			<variable name="Room.outside_air" type="int">-1</variable>
		</statevariables>
		<queue>
			<message arrival="10" deadline="infinity" sender="room">updateStatus()</message>
		</queue>
		<now>0</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="controller">
		<statevariables>
			<variable name="Controller.currentTemp" type="int">22</variable>
			<variable name="Controller.isHeating" type="boolean">false</variable>
			<variable name="Controller.isCooling" type="boolean">false</variable>
		</statevariables>
		<queue>
			<message arrival="0" deadline="infinity" sender="controller">updateOutput()</message>
		</queue>
		<now>0</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="sensor">
		<statevariables>
		</statevariables>
		<queue>
			<message arrival="2" deadline="infinity" sender="sensor">callSensor()</message>
		</queue>
		<now>0</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="hc_unit">
		<statevariables>
			<variable name="HC_Unit.heaterOn" type="boolean">false</variable>
			<variable name="HC_Unit.coolerOn" type="boolean">false</variable>
			<variable name="HC_Unit.currentRegulation" type="int">0</variable>
		</statevariables>
		<queue>
			<message arrival="0" deadline="infinity" sender="hc_unit">regulateTemp()</message>
		</queue>
		<now>0</now>
		<pc></pc>
		<res></res>
	</rebec>
</state>
<transition source="95_0" destination="98_0" executionTime="0" shift="0"> <messageserver sender="sensor" owner="controller" title="SETCURRENT"/></transition>
<transition source="95_0" destination="38_0" executionTime="0" shift="0"> <messageserver sender="hc_unit" owner="hc_unit" title="REGULATETEMP"/></transition>
<transition source="96_0" destination="97_0" executionTime="0" shift="0"> <messageserver sender="room" owner="room" title="UPDATESTATUS"/></transition>
<transition source="96_0" destination="84_0" executionTime="0" shift="0"> <messageserver sender="room" owner="room" title="UPDATESTATUS"/></transition>
<transition source="96_0" destination="98_0" executionTime="0" shift="0"> <messageserver sender="room" owner="room" title="UPDATESTATUS"/></transition>
<state id="99_0" atomicpropositions="" >
	<rebec name="room">
		<statevariables>
			<variable name="Room.currentTemp" type="int">22</variable>
			<variable name="Room.currentRegulation" type="int">0</variable>
			<variable name="Room.outside_air" type="int">0</variable>
		</statevariables>
		<queue>
			<message arrival="0" deadline="infinity" sender="room">updateStatus()</message>
		</queue>
		<now>0</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="controller">
		<statevariables>
			<variable name="Controller.currentTemp" type="int">22</variable>
			<variable name="Controller.isHeating" type="boolean">false</variable>
			<variable name="Controller.isCooling" type="boolean">false</variable>
		</statevariables>
		<queue>
		</queue>
		<now>0</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="sensor">
		<statevariables>
		</statevariables>
		<queue>
			<message arrival="2" deadline="infinity" sender="sensor">callSensor()</message>
		</queue>
		<now>0</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="hc_unit">
		<statevariables>
			<variable name="HC_Unit.heaterOn" type="boolean">false</variable>
			<variable name="HC_Unit.coolerOn" type="boolean">false</variable>
			<variable name="HC_Unit.currentRegulation" type="int">0</variable>
		</statevariables>
		<queue>
			<message arrival="0" deadline="infinity" sender="hc_unit">regulateTemp()</message>
		</queue>
		<now>0</now>
		<pc></pc>
		<res></res>
	</rebec>
</state>
<transition source="96_0" destination="99_0" executionTime="0" shift="0"> <messageserver sender="controller" owner="controller" title="UPDATEOUTPUT"/></transition>
<transition source="96_0" destination="40_0" executionTime="0" shift="0"> <messageserver sender="hc_unit" owner="hc_unit" title="REGULATETEMP"/></transition>
<state id="100_0" atomicpropositions="" >
	<rebec name="room">
		<statevariables>
			<variable name="Room.currentTemp" type="int">21</variable>
			<variable name="Room.currentRegulation" type="int">0</variable>
			<variable name="Room.outside_air" type="int">1</variable>
		</statevariables>
		<queue>
			<message arrival="10" deadline="infinity" sender="room">updateStatus()</message>
		</queue>
		<now>0</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="controller">
		<statevariables>
			<variable name="Controller.currentTemp" type="int">22</variable>
			<variable name="Controller.isHeating" type="boolean">false</variable>
			<variable name="Controller.isCooling" type="boolean">false</variable>
		</statevariables>
		<queue>
		</queue>
		<now>0</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="sensor">
		<statevariables>
		</statevariables>
		<queue>
			<message arrival="2" deadline="infinity" sender="sensor">callSensor()</message>
		</queue>
		<now>0</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="hc_unit">
		<statevariables>
			<variable name="HC_Unit.heaterOn" type="boolean">false</variable>
			<variable name="HC_Unit.coolerOn" type="boolean">false</variable>
			<variable name="HC_Unit.currentRegulation" type="int">0</variable>
		</statevariables>
		<queue>
			<message arrival="0" deadline="infinity" sender="hc_unit">regulateTemp()</message>
		</queue>
		<now>0</now>
		<pc></pc>
		<res></res>
	</rebec>
</state>
<transition source="97_0" destination="100_0" executionTime="0" shift="0"> <messageserver sender="controller" owner="controller" title="UPDATEOUTPUT"/></transition>
<transition source="97_0" destination="46_0" executionTime="0" shift="0"> <messageserver sender="hc_unit" owner="hc_unit" title="REGULATETEMP"/></transition>
<state id="101_0" atomicpropositions="" >
	<rebec name="room">
		<statevariables>
			<variable name="Room.currentTemp" type="int">23</variable>
			<variable name="Room.currentRegulation" type="int">0</variable>
			<variable name="Room.outside_air" type="int">-1</variable>
		</statevariables>
		<queue>
			<message arrival="10" deadline="infinity" sender="room">updateStatus()</message>
		</queue>
		<now>0</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="controller">
		<statevariables>
			<variable name="Controller.currentTemp" type="int">22</variable>
			<variable name="Controller.isHeating" type="boolean">false</variable>
			<variable name="Controller.isCooling" type="boolean">false</variable>
		</statevariables>
		<queue>
		</queue>
		<now>0</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="sensor">
		<statevariables>
		</statevariables>
		<queue>
			<message arrival="2" deadline="infinity" sender="sensor">callSensor()</message>
		</queue>
		<now>0</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="hc_unit">
		<statevariables>
			<variable name="HC_Unit.heaterOn" type="boolean">false</variable>
			<variable name="HC_Unit.coolerOn" type="boolean">false</variable>
			<variable name="HC_Unit.currentRegulation" type="int">0</variable>
		</statevariables>
		<queue>
			<message arrival="0" deadline="infinity" sender="hc_unit">regulateTemp()</message>
		</queue>
		<now>0</now>
		<pc></pc>
		<res></res>
	</rebec>
</state>
<transition source="98_0" destination="101_0" executionTime="0" shift="0"> <messageserver sender="controller" owner="controller" title="UPDATEOUTPUT"/></transition>
<transition source="98_0" destination="47_0" executionTime="0" shift="0"> <messageserver sender="hc_unit" owner="hc_unit" title="REGULATETEMP"/></transition>
<transition source="99_0" destination="100_0" executionTime="0" shift="0"> <messageserver sender="room" owner="room" title="UPDATESTATUS"/></transition>
<transition source="99_0" destination="86_0" executionTime="0" shift="0"> <messageserver sender="room" owner="room" title="UPDATESTATUS"/></transition>
<transition source="99_0" destination="101_0" executionTime="0" shift="0"> <messageserver sender="room" owner="room" title="UPDATESTATUS"/></transition>
<transition source="99_0" destination="49_0" executionTime="0" shift="0"> <messageserver sender="hc_unit" owner="hc_unit" title="REGULATETEMP"/></transition>
<transition source="100_0" destination="55_0" executionTime="0" shift="0"> <messageserver sender="hc_unit" owner="hc_unit" title="REGULATETEMP"/></transition>
<transition source="101_0" destination="56_0" executionTime="0" shift="0"> <messageserver sender="hc_unit" owner="hc_unit" title="REGULATETEMP"/></transition>
<state id="102_0" atomicpropositions="" >
	<rebec name="room">
		<statevariables>
			<variable name="Room.currentTemp" type="int">21</variable>
			<variable name="Room.currentRegulation" type="int">0</variable>
			<variable name="Room.outside_air" type="int">1</variable>
		</statevariables>
		<queue>
			<message arrival="2" deadline="infinity" sender="sensor">getTemp()</message>
			<message arrival="10" deadline="infinity" sender="room">updateStatus()</message>
		</queue>
		<now>2</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="controller">
		<statevariables>
			<variable name="Controller.currentTemp" type="int">22</variable>
			<variable name="Controller.isHeating" type="boolean">false</variable>
			<variable name="Controller.isCooling" type="boolean">false</variable>
		</statevariables>
		<queue>
		</queue>
		<now>2</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="sensor">
		<statevariables>
		</statevariables>
		<queue>
			<message arrival="4" deadline="infinity" sender="sensor">callSensor()</message>
		</queue>
		<now>2</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="hc_unit">
		<statevariables>
			<variable name="HC_Unit.heaterOn" type="boolean">false</variable>
			<variable name="HC_Unit.coolerOn" type="boolean">false</variable>
			<variable name="HC_Unit.currentRegulation" type="int">0</variable>
		</statevariables>
		<queue>
			<message arrival="5" deadline="infinity" sender="hc_unit">regulateTemp()</message>
		</queue>
		<now>2</now>
		<pc></pc>
		<res></res>
	</rebec>
</state>
<transition source="65_0" destination="102_0" executionTime="2" shift="0"> <messageserver sender="sensor" owner="sensor" title="CALLSENSOR"/></transition>
<state id="103_0" atomicpropositions="" >
	<rebec name="room">
		<statevariables>
			<variable name="Room.currentTemp" type="int">23</variable>
			<variable name="Room.currentRegulation" type="int">0</variable>
			<variable name="Room.outside_air" type="int">-1</variable>
		</statevariables>
		<queue>
			<message arrival="2" deadline="infinity" sender="sensor">getTemp()</message>
			<message arrival="10" deadline="infinity" sender="room">updateStatus()</message>
		</queue>
		<now>2</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="controller">
		<statevariables>
			<variable name="Controller.currentTemp" type="int">22</variable>
			<variable name="Controller.isHeating" type="boolean">false</variable>
			<variable name="Controller.isCooling" type="boolean">false</variable>
		</statevariables>
		<queue>
		</queue>
		<now>2</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="sensor">
		<statevariables>
		</statevariables>
		<queue>
			<message arrival="4" deadline="infinity" sender="sensor">callSensor()</message>
		</queue>
		<now>2</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="hc_unit">
		<statevariables>
			<variable name="HC_Unit.heaterOn" type="boolean">false</variable>
			<variable name="HC_Unit.coolerOn" type="boolean">false</variable>
			<variable name="HC_Unit.currentRegulation" type="int">0</variable>
		</statevariables>
		<queue>
			<message arrival="5" deadline="infinity" sender="hc_unit">regulateTemp()</message>
		</queue>
		<now>2</now>
		<pc></pc>
		<res></res>
	</rebec>
</state>
<transition source="67_0" destination="103_0" executionTime="2" shift="0"> <messageserver sender="sensor" owner="sensor" title="CALLSENSOR"/></transition>
<state id="104_0" atomicpropositions="" >
	<rebec name="room">
		<statevariables>
			<variable name="Room.currentTemp" type="int">23</variable>
			<variable name="Room.currentRegulation" type="int">0</variable>
			<variable name="Room.outside_air" type="int">-1</variable>
		</statevariables>
		<queue>
			<message arrival="2" deadline="infinity" sender="sensor">getTemp()</message>
			<message arrival="10" deadline="infinity" sender="room">updateStatus()</message>
		</queue>
		<now>2</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="controller">
		<statevariables>
			<variable name="Controller.currentTemp" type="int">23</variable>
			<variable name="Controller.isHeating" type="boolean">false</variable>
			<variable name="Controller.isCooling" type="boolean">false</variable>
		</statevariables>
		<queue>
		</queue>
		<now>2</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="sensor">
		<statevariables>
		</statevariables>
		<queue>
			<message arrival="4" deadline="infinity" sender="sensor">callSensor()</message>
		</queue>
		<now>2</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="hc_unit">
		<statevariables>
			<variable name="HC_Unit.heaterOn" type="boolean">false</variable>
			<variable name="HC_Unit.coolerOn" type="boolean">false</variable>
			<variable name="HC_Unit.currentRegulation" type="int">0</variable>
		</statevariables>
		<queue>
			<message arrival="5" deadline="infinity" sender="hc_unit">regulateTemp()</message>
		</queue>
		<now>2</now>
		<pc></pc>
		<res></res>
	</rebec>
</state>
<transition source="61_0" destination="104_0" executionTime="2" shift="0"> <messageserver sender="sensor" owner="sensor" title="CALLSENSOR"/></transition>
<state id="105_0" atomicpropositions="" >
	<rebec name="room">
		<statevariables>
			<variable name="Room.currentTemp" type="int">21</variable>
			<variable name="Room.currentRegulation" type="int">0</variable>
			<variable name="Room.outside_air" type="int">1</variable>
		</statevariables>
		<queue>
			<message arrival="10" deadline="infinity" sender="room">updateStatus()</message>
		</queue>
		<now>2</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="controller">
		<statevariables>
			<variable name="Controller.currentTemp" type="int">22</variable>
			<variable name="Controller.isHeating" type="boolean">false</variable>
			<variable name="Controller.isCooling" type="boolean">false</variable>
		</statevariables>
		<queue>
		</queue>
		<now>2</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="sensor">
		<statevariables>
		</statevariables>
		<queue>
			<message arrival="2" deadline="infinity" sender="room">setCurrent(21)</message>
			<message arrival="4" deadline="infinity" sender="sensor">callSensor()</message>
		</queue>
		<now>2</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="hc_unit">
		<statevariables>
			<variable name="HC_Unit.heaterOn" type="boolean">false</variable>
			<variable name="HC_Unit.coolerOn" type="boolean">false</variable>
			<variable name="HC_Unit.currentRegulation" type="int">0</variable>
		</statevariables>
		<queue>
			<message arrival="5" deadline="infinity" sender="hc_unit">regulateTemp()</message>
		</queue>
		<now>2</now>
		<pc></pc>
		<res></res>
	</rebec>
</state>
<transition source="102_0" destination="105_0" executionTime="2" shift="0"> <messageserver sender="sensor" owner="room" title="GETTEMP"/></transition>
<state id="106_0" atomicpropositions="" >
	<rebec name="room">
		<statevariables>
			<variable name="Room.currentTemp" type="int">23</variable>
			<variable name="Room.currentRegulation" type="int">0</variable>
			<variable name="Room.outside_air" type="int">-1</variable>
		</statevariables>
		<queue>
			<message arrival="10" deadline="infinity" sender="room">updateStatus()</message>
		</queue>
		<now>2</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="controller">
		<statevariables>
			<variable name="Controller.currentTemp" type="int">22</variable>
			<variable name="Controller.isHeating" type="boolean">false</variable>
			<variable name="Controller.isCooling" type="boolean">false</variable>
		</statevariables>
		<queue>
		</queue>
		<now>2</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="sensor">
		<statevariables>
		</statevariables>
		<queue>
			<message arrival="2" deadline="infinity" sender="room">setCurrent(23)</message>
			<message arrival="4" deadline="infinity" sender="sensor">callSensor()</message>
		</queue>
		<now>2</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="hc_unit">
		<statevariables>
			<variable name="HC_Unit.heaterOn" type="boolean">false</variable>
			<variable name="HC_Unit.coolerOn" type="boolean">false</variable>
			<variable name="HC_Unit.currentRegulation" type="int">0</variable>
		</statevariables>
		<queue>
			<message arrival="5" deadline="infinity" sender="hc_unit">regulateTemp()</message>
		</queue>
		<now>2</now>
		<pc></pc>
		<res></res>
	</rebec>
</state>
<transition source="103_0" destination="106_0" executionTime="2" shift="0"> <messageserver sender="sensor" owner="room" title="GETTEMP"/></transition>
<state id="107_0" atomicpropositions="" >
	<rebec name="room">
		<statevariables>
			<variable name="Room.currentTemp" type="int">23</variable>
			<variable name="Room.currentRegulation" type="int">0</variable>
			<variable name="Room.outside_air" type="int">-1</variable>
		</statevariables>
		<queue>
			<message arrival="10" deadline="infinity" sender="room">updateStatus()</message>
		</queue>
		<now>2</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="controller">
		<statevariables>
			<variable name="Controller.currentTemp" type="int">23</variable>
			<variable name="Controller.isHeating" type="boolean">false</variable>
			<variable name="Controller.isCooling" type="boolean">false</variable>
		</statevariables>
		<queue>
		</queue>
		<now>2</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="sensor">
		<statevariables>
		</statevariables>
		<queue>
			<message arrival="2" deadline="infinity" sender="room">setCurrent(23)</message>
			<message arrival="4" deadline="infinity" sender="sensor">callSensor()</message>
		</queue>
		<now>2</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="hc_unit">
		<statevariables>
			<variable name="HC_Unit.heaterOn" type="boolean">false</variable>
			<variable name="HC_Unit.coolerOn" type="boolean">false</variable>
			<variable name="HC_Unit.currentRegulation" type="int">0</variable>
		</statevariables>
		<queue>
			<message arrival="5" deadline="infinity" sender="hc_unit">regulateTemp()</message>
		</queue>
		<now>2</now>
		<pc></pc>
		<res></res>
	</rebec>
</state>
<transition source="104_0" destination="107_0" executionTime="2" shift="0"> <messageserver sender="sensor" owner="room" title="GETTEMP"/></transition>
<state id="108_0" atomicpropositions="" >
	<rebec name="room">
		<statevariables>
			<variable name="Room.currentTemp" type="int">21</variable>
			<variable name="Room.currentRegulation" type="int">0</variable>
			<variable name="Room.outside_air" type="int">1</variable>
		</statevariables>
		<queue>
			<message arrival="10" deadline="infinity" sender="room">updateStatus()</message>
		</queue>
		<now>2</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="controller">
		<statevariables>
			<variable name="Controller.currentTemp" type="int">22</variable>
			<variable name="Controller.isHeating" type="boolean">false</variable>
			<variable name="Controller.isCooling" type="boolean">false</variable>
		</statevariables>
		<queue>
			<message arrival="2" deadline="infinity" sender="sensor">setCurrent(21)</message>
		</queue>
		<now>2</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="sensor">
		<statevariables>
		</statevariables>
		<queue>
			<message arrival="4" deadline="infinity" sender="sensor">callSensor()</message>
		</queue>
		<now>2</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="hc_unit">
		<statevariables>
			<variable name="HC_Unit.heaterOn" type="boolean">false</variable>
			<variable name="HC_Unit.coolerOn" type="boolean">false</variable>
			<variable name="HC_Unit.currentRegulation" type="int">0</variable>
		</statevariables>
		<queue>
			<message arrival="5" deadline="infinity" sender="hc_unit">regulateTemp()</message>
		</queue>
		<now>2</now>
		<pc></pc>
		<res></res>
	</rebec>
</state>
<transition source="105_0" destination="108_0" executionTime="2" shift="0"> <messageserver sender="room" owner="sensor" title="SETCURRENT"/></transition>
<state id="109_0" atomicpropositions="" >
	<rebec name="room">
		<statevariables>
			<variable name="Room.currentTemp" type="int">23</variable>
			<variable name="Room.currentRegulation" type="int">0</variable>
			<variable name="Room.outside_air" type="int">-1</variable>
		</statevariables>
		<queue>
			<message arrival="10" deadline="infinity" sender="room">updateStatus()</message>
		</queue>
		<now>2</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="controller">
		<statevariables>
			<variable name="Controller.currentTemp" type="int">22</variable>
			<variable name="Controller.isHeating" type="boolean">false</variable>
			<variable name="Controller.isCooling" type="boolean">false</variable>
		</statevariables>
		<queue>
			<message arrival="2" deadline="infinity" sender="sensor">setCurrent(23)</message>
		</queue>
		<now>2</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="sensor">
		<statevariables>
		</statevariables>
		<queue>
			<message arrival="4" deadline="infinity" sender="sensor">callSensor()</message>
		</queue>
		<now>2</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="hc_unit">
		<statevariables>
			<variable name="HC_Unit.heaterOn" type="boolean">false</variable>
			<variable name="HC_Unit.coolerOn" type="boolean">false</variable>
			<variable name="HC_Unit.currentRegulation" type="int">0</variable>
		</statevariables>
		<queue>
			<message arrival="5" deadline="infinity" sender="hc_unit">regulateTemp()</message>
		</queue>
		<now>2</now>
		<pc></pc>
		<res></res>
	</rebec>
</state>
<transition source="106_0" destination="109_0" executionTime="2" shift="0"> <messageserver sender="room" owner="sensor" title="SETCURRENT"/></transition>
<state id="110_0" atomicpropositions="" >
	<rebec name="room">
		<statevariables>
			<variable name="Room.currentTemp" type="int">23</variable>
			<variable name="Room.currentRegulation" type="int">0</variable>
			<variable name="Room.outside_air" type="int">-1</variable>
		</statevariables>
		<queue>
			<message arrival="10" deadline="infinity" sender="room">updateStatus()</message>
		</queue>
		<now>2</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="controller">
		<statevariables>
			<variable name="Controller.currentTemp" type="int">23</variable>
			<variable name="Controller.isHeating" type="boolean">false</variable>
			<variable name="Controller.isCooling" type="boolean">false</variable>
		</statevariables>
		<queue>
			<message arrival="2" deadline="infinity" sender="sensor">setCurrent(23)</message>
		</queue>
		<now>2</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="sensor">
		<statevariables>
		</statevariables>
		<queue>
			<message arrival="4" deadline="infinity" sender="sensor">callSensor()</message>
		</queue>
		<now>2</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="hc_unit">
		<statevariables>
			<variable name="HC_Unit.heaterOn" type="boolean">false</variable>
			<variable name="HC_Unit.coolerOn" type="boolean">false</variable>
			<variable name="HC_Unit.currentRegulation" type="int">0</variable>
		</statevariables>
		<queue>
			<message arrival="5" deadline="infinity" sender="hc_unit">regulateTemp()</message>
		</queue>
		<now>2</now>
		<pc></pc>
		<res></res>
	</rebec>
</state>
<transition source="107_0" destination="110_0" executionTime="2" shift="0"> <messageserver sender="room" owner="sensor" title="SETCURRENT"/></transition>
<state id="111_0" atomicpropositions="" >
	<rebec name="room">
		<statevariables>
			<variable name="Room.currentTemp" type="int">21</variable>
			<variable name="Room.currentRegulation" type="int">0</variable>
			<variable name="Room.outside_air" type="int">1</variable>
		</statevariables>
		<queue>
			<message arrival="10" deadline="infinity" sender="room">updateStatus()</message>
		</queue>
		<now>2</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="controller">
		<statevariables>
			<variable name="Controller.currentTemp" type="int">21</variable>
			<variable name="Controller.isHeating" type="boolean">false</variable>
			<variable name="Controller.isCooling" type="boolean">false</variable>
		</statevariables>
		<queue>
			<message arrival="2" deadline="infinity" sender="controller">updateOutput()</message>
		</queue>
		<now>2</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="sensor">
		<statevariables>
		</statevariables>
		<queue>
			<message arrival="4" deadline="infinity" sender="sensor">callSensor()</message>
		</queue>
		<now>2</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="hc_unit">
		<statevariables>
			<variable name="HC_Unit.heaterOn" type="boolean">false</variable>
			<variable name="HC_Unit.coolerOn" type="boolean">false</variable>
			<variable name="HC_Unit.currentRegulation" type="int">0</variable>
		</statevariables>
		<queue>
			<message arrival="5" deadline="infinity" sender="hc_unit">regulateTemp()</message>
		</queue>
		<now>2</now>
		<pc></pc>
		<res></res>
	</rebec>
</state>
<transition source="108_0" destination="111_0" executionTime="2" shift="0"> <messageserver sender="sensor" owner="controller" title="SETCURRENT"/></transition>
<state id="112_0" atomicpropositions="" >
	<rebec name="room">
		<statevariables>
			<variable name="Room.currentTemp" type="int">23</variable>
			<variable name="Room.currentRegulation" type="int">0</variable>
			<variable name="Room.outside_air" type="int">-1</variable>
		</statevariables>
		<queue>
			<message arrival="10" deadline="infinity" sender="room">updateStatus()</message>
		</queue>
		<now>2</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="controller">
		<statevariables>
			<variable name="Controller.currentTemp" type="int">23</variable>
			<variable name="Controller.isHeating" type="boolean">false</variable>
			<variable name="Controller.isCooling" type="boolean">false</variable>
		</statevariables>
		<queue>
			<message arrival="2" deadline="infinity" sender="controller">updateOutput()</message>
		</queue>
		<now>2</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="sensor">
		<statevariables>
		</statevariables>
		<queue>
			<message arrival="4" deadline="infinity" sender="sensor">callSensor()</message>
		</queue>
		<now>2</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="hc_unit">
		<statevariables>
			<variable name="HC_Unit.heaterOn" type="boolean">false</variable>
			<variable name="HC_Unit.coolerOn" type="boolean">false</variable>
			<variable name="HC_Unit.currentRegulation" type="int">0</variable>
		</statevariables>
		<queue>
			<message arrival="5" deadline="infinity" sender="hc_unit">regulateTemp()</message>
		</queue>
		<now>2</now>
		<pc></pc>
		<res></res>
	</rebec>
</state>
<transition source="109_0" destination="112_0" executionTime="2" shift="0"> <messageserver sender="sensor" owner="controller" title="SETCURRENT"/></transition>
<transition source="110_0" destination="112_0" executionTime="2" shift="0"> <messageserver sender="sensor" owner="controller" title="SETCURRENT"/></transition>
<state id="113_0" atomicpropositions="" >
	<rebec name="room">
		<statevariables>
			<variable name="Room.currentTemp" type="int">21</variable>
			<variable name="Room.currentRegulation" type="int">0</variable>
			<variable name="Room.outside_air" type="int">1</variable>
		</statevariables>
		<queue>
			<message arrival="10" deadline="infinity" sender="room">updateStatus()</message>
		</queue>
		<now>2</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="controller">
		<statevariables>
			<variable name="Controller.currentTemp" type="int">21</variable>
			<variable name="Controller.isHeating" type="boolean">false</variable>
			<variable name="Controller.isCooling" type="boolean">false</variable>
		</statevariables>
		<queue>
		</queue>
		<now>2</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="sensor">
		<statevariables>
		</statevariables>
		<queue>
			<message arrival="4" deadline="infinity" sender="sensor">callSensor()</message>
		</queue>
		<now>2</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="hc_unit">
		<statevariables>
			<variable name="HC_Unit.heaterOn" type="boolean">false</variable>
			<variable name="HC_Unit.coolerOn" type="boolean">false</variable>
			<variable name="HC_Unit.currentRegulation" type="int">0</variable>
		</statevariables>
		<queue>
			<message arrival="5" deadline="infinity" sender="hc_unit">regulateTemp()</message>
		</queue>
		<now>2</now>
		<pc></pc>
		<res></res>
	</rebec>
</state>
<state id="114_0" atomicpropositions="" >
	<rebec name="room">
		<statevariables>
			<variable name="Room.currentTemp" type="int">21</variable>
			<variable name="Room.currentRegulation" type="int">0</variable>
			<variable name="Room.outside_air" type="int">1</variable>
		</statevariables>
		<queue>
			<message arrival="10" deadline="infinity" sender="room">updateStatus()</message>
		</queue>
		<now>4</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="controller">
		<statevariables>
			<variable name="Controller.currentTemp" type="int">21</variable>
			<variable name="Controller.isHeating" type="boolean">false</variable>
			<variable name="Controller.isCooling" type="boolean">false</variable>
		</statevariables>
		<queue>
		</queue>
		<now>4</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="sensor">
		<statevariables>
		</statevariables>
		<queue>
			<message arrival="4" deadline="infinity" sender="sensor">callSensor()</message>
		</queue>
		<now>4</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="hc_unit">
		<statevariables>
			<variable name="HC_Unit.heaterOn" type="boolean">false</variable>
			<variable name="HC_Unit.coolerOn" type="boolean">false</variable>
			<variable name="HC_Unit.currentRegulation" type="int">0</variable>
		</statevariables>
		<queue>
			<message arrival="5" deadline="infinity" sender="hc_unit">regulateTemp()</message>
		</queue>
		<now>4</now>
		<pc></pc>
		<res></res>
	</rebec>
</state>
<transition source="113_0" destination="114_0" executionTime="2" shift="0"> <time value="2"/></transition>
<transition source="111_0" destination="113_0" executionTime="2" shift="0"> <messageserver sender="controller" owner="controller" title="UPDATEOUTPUT"/></transition>
<state id="115_0" atomicpropositions="" >
	<rebec name="room">
		<statevariables>
			<variable name="Room.currentTemp" type="int">23</variable>
			<variable name="Room.currentRegulation" type="int">0</variable>
			<variable name="Room.outside_air" type="int">-1</variable>
		</statevariables>
		<queue>
			<message arrival="10" deadline="infinity" sender="room">updateStatus()</message>
		</queue>
		<now>2</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="controller">
		<statevariables>
			<variable name="Controller.currentTemp" type="int">23</variable>
			<variable name="Controller.isHeating" type="boolean">false</variable>
			<variable name="Controller.isCooling" type="boolean">false</variable>
		</statevariables>
		<queue>
		</queue>
		<now>2</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="sensor">
		<statevariables>
		</statevariables>
		<queue>
			<message arrival="4" deadline="infinity" sender="sensor">callSensor()</message>
		</queue>
		<now>2</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="hc_unit">
		<statevariables>
			<variable name="HC_Unit.heaterOn" type="boolean">false</variable>
			<variable name="HC_Unit.coolerOn" type="boolean">false</variable>
			<variable name="HC_Unit.currentRegulation" type="int">0</variable>
		</statevariables>
		<queue>
			<message arrival="5" deadline="infinity" sender="hc_unit">regulateTemp()</message>
		</queue>
		<now>2</now>
		<pc></pc>
		<res></res>
	</rebec>
</state>
<state id="116_0" atomicpropositions="" >
	<rebec name="room">
		<statevariables>
			<variable name="Room.currentTemp" type="int">23</variable>
			<variable name="Room.currentRegulation" type="int">0</variable>
			<variable name="Room.outside_air" type="int">-1</variable>
		</statevariables>
		<queue>
			<message arrival="10" deadline="infinity" sender="room">updateStatus()</message>
		</queue>
		<now>4</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="controller">
		<statevariables>
			<variable name="Controller.currentTemp" type="int">23</variable>
			<variable name="Controller.isHeating" type="boolean">false</variable>
			<variable name="Controller.isCooling" type="boolean">false</variable>
		</statevariables>
		<queue>
		</queue>
		<now>4</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="sensor">
		<statevariables>
		</statevariables>
		<queue>
			<message arrival="4" deadline="infinity" sender="sensor">callSensor()</message>
		</queue>
		<now>4</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="hc_unit">
		<statevariables>
			<variable name="HC_Unit.heaterOn" type="boolean">false</variable>
			<variable name="HC_Unit.coolerOn" type="boolean">false</variable>
			<variable name="HC_Unit.currentRegulation" type="int">0</variable>
		</statevariables>
		<queue>
			<message arrival="5" deadline="infinity" sender="hc_unit">regulateTemp()</message>
		</queue>
		<now>4</now>
		<pc></pc>
		<res></res>
	</rebec>
</state>
<transition source="115_0" destination="116_0" executionTime="2" shift="0"> <time value="2"/></transition>
<transition source="112_0" destination="115_0" executionTime="2" shift="0"> <messageserver sender="controller" owner="controller" title="UPDATEOUTPUT"/></transition>
<state id="117_0" atomicpropositions="" >
	<rebec name="room">
		<statevariables>
			<variable name="Room.currentTemp" type="int">21</variable>
			<variable name="Room.currentRegulation" type="int">0</variable>
			<variable name="Room.outside_air" type="int">1</variable>
		</statevariables>
		<queue>
			<message arrival="2" deadline="infinity" sender="sensor">getTemp()</message>
			<message arrival="10" deadline="infinity" sender="room">updateStatus()</message>
		</queue>
		<now>2</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="controller">
		<statevariables>
			<variable name="Controller.currentTemp" type="int">21</variable>
			<variable name="Controller.isHeating" type="boolean">false</variable>
			<variable name="Controller.isCooling" type="boolean">false</variable>
		</statevariables>
		<queue>
		</queue>
		<now>2</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="sensor">
		<statevariables>
		</statevariables>
		<queue>
			<message arrival="4" deadline="infinity" sender="sensor">callSensor()</message>
		</queue>
		<now>2</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="hc_unit">
		<statevariables>
			<variable name="HC_Unit.heaterOn" type="boolean">false</variable>
			<variable name="HC_Unit.coolerOn" type="boolean">false</variable>
			<variable name="HC_Unit.currentRegulation" type="int">0</variable>
		</statevariables>
		<queue>
			<message arrival="5" deadline="infinity" sender="hc_unit">regulateTemp()</message>
		</queue>
		<now>2</now>
		<pc></pc>
		<res></res>
	</rebec>
</state>
<transition source="59_0" destination="117_0" executionTime="2" shift="0"> <messageserver sender="sensor" owner="sensor" title="CALLSENSOR"/></transition>
<state id="118_0" atomicpropositions="" >
	<rebec name="room">
		<statevariables>
			<variable name="Room.currentTemp" type="int">22</variable>
			<variable name="Room.currentRegulation" type="int">0</variable>
			<variable name="Room.outside_air" type="int">0</variable>
		</statevariables>
		<queue>
			<message arrival="2" deadline="infinity" sender="sensor">getTemp()</message>
			<message arrival="10" deadline="infinity" sender="room">updateStatus()</message>
		</queue>
		<now>2</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="controller">
		<statevariables>
			<variable name="Controller.currentTemp" type="int">22</variable>
			<variable name="Controller.isHeating" type="boolean">false</variable>
			<variable name="Controller.isCooling" type="boolean">false</variable>
		</statevariables>
		<queue>
		</queue>
		<now>2</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="sensor">
		<statevariables>
		</statevariables>
		<queue>
			<message arrival="4" deadline="infinity" sender="sensor">callSensor()</message>
		</queue>
		<now>2</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="hc_unit">
		<statevariables>
			<variable name="HC_Unit.heaterOn" type="boolean">false</variable>
			<variable name="HC_Unit.coolerOn" type="boolean">false</variable>
			<variable name="HC_Unit.currentRegulation" type="int">0</variable>
		</statevariables>
		<queue>
			<message arrival="5" deadline="infinity" sender="hc_unit">regulateTemp()</message>
		</queue>
		<now>2</now>
		<pc></pc>
		<res></res>
	</rebec>
</state>
<transition source="63_0" destination="118_0" executionTime="2" shift="0"> <messageserver sender="sensor" owner="sensor" title="CALLSENSOR"/></transition>
<state id="119_0" atomicpropositions="" >
	<rebec name="room">
		<statevariables>
			<variable name="Room.currentTemp" type="int">21</variable>
			<variable name="Room.currentRegulation" type="int">0</variable>
			<variable name="Room.outside_air" type="int">1</variable>
		</statevariables>
		<queue>
			<message arrival="10" deadline="infinity" sender="room">updateStatus()</message>
		</queue>
		<now>2</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="controller">
		<statevariables>
			<variable name="Controller.currentTemp" type="int">21</variable>
			<variable name="Controller.isHeating" type="boolean">false</variable>
			<variable name="Controller.isCooling" type="boolean">false</variable>
		</statevariables>
		<queue>
		</queue>
		<now>2</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="sensor">
		<statevariables>
		</statevariables>
		<queue>
			<message arrival="2" deadline="infinity" sender="room">setCurrent(21)</message>
			<message arrival="4" deadline="infinity" sender="sensor">callSensor()</message>
		</queue>
		<now>2</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="hc_unit">
		<statevariables>
			<variable name="HC_Unit.heaterOn" type="boolean">false</variable>
			<variable name="HC_Unit.coolerOn" type="boolean">false</variable>
			<variable name="HC_Unit.currentRegulation" type="int">0</variable>
		</statevariables>
		<queue>
			<message arrival="5" deadline="infinity" sender="hc_unit">regulateTemp()</message>
		</queue>
		<now>2</now>
		<pc></pc>
		<res></res>
	</rebec>
</state>
<transition source="117_0" destination="119_0" executionTime="2" shift="0"> <messageserver sender="sensor" owner="room" title="GETTEMP"/></transition>
<state id="120_0" atomicpropositions="" >
	<rebec name="room">
		<statevariables>
			<variable name="Room.currentTemp" type="int">22</variable>
			<variable name="Room.currentRegulation" type="int">0</variable>
			<variable name="Room.outside_air" type="int">0</variable>
		</statevariables>
		<queue>
			<message arrival="10" deadline="infinity" sender="room">updateStatus()</message>
		</queue>
		<now>2</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="controller">
		<statevariables>
			<variable name="Controller.currentTemp" type="int">22</variable>
			<variable name="Controller.isHeating" type="boolean">false</variable>
			<variable name="Controller.isCooling" type="boolean">false</variable>
		</statevariables>
		<queue>
		</queue>
		<now>2</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="sensor">
		<statevariables>
		</statevariables>
		<queue>
			<message arrival="2" deadline="infinity" sender="room">setCurrent(22)</message>
			<message arrival="4" deadline="infinity" sender="sensor">callSensor()</message>
		</queue>
		<now>2</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="hc_unit">
		<statevariables>
			<variable name="HC_Unit.heaterOn" type="boolean">false</variable>
			<variable name="HC_Unit.coolerOn" type="boolean">false</variable>
			<variable name="HC_Unit.currentRegulation" type="int">0</variable>
		</statevariables>
		<queue>
			<message arrival="5" deadline="infinity" sender="hc_unit">regulateTemp()</message>
		</queue>
		<now>2</now>
		<pc></pc>
		<res></res>
	</rebec>
</state>
<transition source="118_0" destination="120_0" executionTime="2" shift="0"> <messageserver sender="sensor" owner="room" title="GETTEMP"/></transition>
<state id="121_0" atomicpropositions="" >
	<rebec name="room">
		<statevariables>
			<variable name="Room.currentTemp" type="int">21</variable>
			<variable name="Room.currentRegulation" type="int">0</variable>
			<variable name="Room.outside_air" type="int">1</variable>
		</statevariables>
		<queue>
			<message arrival="10" deadline="infinity" sender="room">updateStatus()</message>
		</queue>
		<now>2</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="controller">
		<statevariables>
			<variable name="Controller.currentTemp" type="int">21</variable>
			<variable name="Controller.isHeating" type="boolean">false</variable>
			<variable name="Controller.isCooling" type="boolean">false</variable>
		</statevariables>
		<queue>
			<message arrival="2" deadline="infinity" sender="sensor">setCurrent(21)</message>
		</queue>
		<now>2</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="sensor">
		<statevariables>
		</statevariables>
		<queue>
			<message arrival="4" deadline="infinity" sender="sensor">callSensor()</message>
		</queue>
		<now>2</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="hc_unit">
		<statevariables>
			<variable name="HC_Unit.heaterOn" type="boolean">false</variable>
			<variable name="HC_Unit.coolerOn" type="boolean">false</variable>
			<variable name="HC_Unit.currentRegulation" type="int">0</variable>
		</statevariables>
		<queue>
			<message arrival="5" deadline="infinity" sender="hc_unit">regulateTemp()</message>
		</queue>
		<now>2</now>
		<pc></pc>
		<res></res>
	</rebec>
</state>
<transition source="119_0" destination="121_0" executionTime="2" shift="0"> <messageserver sender="room" owner="sensor" title="SETCURRENT"/></transition>
<state id="122_0" atomicpropositions="" >
	<rebec name="room">
		<statevariables>
			<variable name="Room.currentTemp" type="int">22</variable>
			<variable name="Room.currentRegulation" type="int">0</variable>
			<variable name="Room.outside_air" type="int">0</variable>
		</statevariables>
		<queue>
			<message arrival="10" deadline="infinity" sender="room">updateStatus()</message>
		</queue>
		<now>2</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="controller">
		<statevariables>
			<variable name="Controller.currentTemp" type="int">22</variable>
			<variable name="Controller.isHeating" type="boolean">false</variable>
			<variable name="Controller.isCooling" type="boolean">false</variable>
		</statevariables>
		<queue>
			<message arrival="2" deadline="infinity" sender="sensor">setCurrent(22)</message>
		</queue>
		<now>2</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="sensor">
		<statevariables>
		</statevariables>
		<queue>
			<message arrival="4" deadline="infinity" sender="sensor">callSensor()</message>
		</queue>
		<now>2</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="hc_unit">
		<statevariables>
			<variable name="HC_Unit.heaterOn" type="boolean">false</variable>
			<variable name="HC_Unit.coolerOn" type="boolean">false</variable>
			<variable name="HC_Unit.currentRegulation" type="int">0</variable>
		</statevariables>
		<queue>
			<message arrival="5" deadline="infinity" sender="hc_unit">regulateTemp()</message>
		</queue>
		<now>2</now>
		<pc></pc>
		<res></res>
	</rebec>
</state>
<transition source="120_0" destination="122_0" executionTime="2" shift="0"> <messageserver sender="room" owner="sensor" title="SETCURRENT"/></transition>
<transition source="121_0" destination="111_0" executionTime="2" shift="0"> <messageserver sender="sensor" owner="controller" title="SETCURRENT"/></transition>
<state id="123_0" atomicpropositions="" >
	<rebec name="room">
		<statevariables>
			<variable name="Room.currentTemp" type="int">22</variable>
			<variable name="Room.currentRegulation" type="int">0</variable>
			<variable name="Room.outside_air" type="int">0</variable>
		</statevariables>
		<queue>
			<message arrival="10" deadline="infinity" sender="room">updateStatus()</message>
		</queue>
		<now>2</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="controller">
		<statevariables>
			<variable name="Controller.currentTemp" type="int">22</variable>
			<variable name="Controller.isHeating" type="boolean">false</variable>
			<variable name="Controller.isCooling" type="boolean">false</variable>
		</statevariables>
		<queue>
			<message arrival="2" deadline="infinity" sender="controller">updateOutput()</message>
		</queue>
		<now>2</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="sensor">
		<statevariables>
		</statevariables>
		<queue>
			<message arrival="4" deadline="infinity" sender="sensor">callSensor()</message>
		</queue>
		<now>2</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="hc_unit">
		<statevariables>
			<variable name="HC_Unit.heaterOn" type="boolean">false</variable>
			<variable name="HC_Unit.coolerOn" type="boolean">false</variable>
			<variable name="HC_Unit.currentRegulation" type="int">0</variable>
		</statevariables>
		<queue>
			<message arrival="5" deadline="infinity" sender="hc_unit">regulateTemp()</message>
		</queue>
		<now>2</now>
		<pc></pc>
		<res></res>
	</rebec>
</state>
<transition source="122_0" destination="123_0" executionTime="2" shift="0"> <messageserver sender="sensor" owner="controller" title="SETCURRENT"/></transition>
<state id="124_0" atomicpropositions="" >
	<rebec name="room">
		<statevariables>
			<variable name="Room.currentTemp" type="int">22</variable>
			<variable name="Room.currentRegulation" type="int">0</variable>
			<variable name="Room.outside_air" type="int">0</variable>
		</statevariables>
		<queue>
			<message arrival="10" deadline="infinity" sender="room">updateStatus()</message>
		</queue>
		<now>2</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="controller">
		<statevariables>
			<variable name="Controller.currentTemp" type="int">22</variable>
			<variable name="Controller.isHeating" type="boolean">false</variable>
			<variable name="Controller.isCooling" type="boolean">false</variable>
		</statevariables>
		<queue>
		</queue>
		<now>2</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="sensor">
		<statevariables>
		</statevariables>
		<queue>
			<message arrival="4" deadline="infinity" sender="sensor">callSensor()</message>
		</queue>
		<now>2</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="hc_unit">
		<statevariables>
			<variable name="HC_Unit.heaterOn" type="boolean">false</variable>
			<variable name="HC_Unit.coolerOn" type="boolean">false</variable>
			<variable name="HC_Unit.currentRegulation" type="int">0</variable>
		</statevariables>
		<queue>
			<message arrival="5" deadline="infinity" sender="hc_unit">regulateTemp()</message>
		</queue>
		<now>2</now>
		<pc></pc>
		<res></res>
	</rebec>
</state>
<state id="125_0" atomicpropositions="" >
	<rebec name="room">
		<statevariables>
			<variable name="Room.currentTemp" type="int">22</variable>
			<variable name="Room.currentRegulation" type="int">0</variable>
			<variable name="Room.outside_air" type="int">0</variable>
		</statevariables>
		<queue>
			<message arrival="10" deadline="infinity" sender="room">updateStatus()</message>
		</queue>
		<now>4</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="controller">
		<statevariables>
			<variable name="Controller.currentTemp" type="int">22</variable>
			<variable name="Controller.isHeating" type="boolean">false</variable>
			<variable name="Controller.isCooling" type="boolean">false</variable>
		</statevariables>
		<queue>
		</queue>
		<now>4</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="sensor">
		<statevariables>
		</statevariables>
		<queue>
			<message arrival="4" deadline="infinity" sender="sensor">callSensor()</message>
		</queue>
		<now>4</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="hc_unit">
		<statevariables>
			<variable name="HC_Unit.heaterOn" type="boolean">false</variable>
			<variable name="HC_Unit.coolerOn" type="boolean">false</variable>
			<variable name="HC_Unit.currentRegulation" type="int">0</variable>
		</statevariables>
		<queue>
			<message arrival="5" deadline="infinity" sender="hc_unit">regulateTemp()</message>
		</queue>
		<now>4</now>
		<pc></pc>
		<res></res>
	</rebec>
</state>
<transition source="124_0" destination="125_0" executionTime="2" shift="0"> <time value="2"/></transition>
<transition source="123_0" destination="124_0" executionTime="2" shift="0"> <messageserver sender="controller" owner="controller" title="UPDATEOUTPUT"/></transition>
<state id="126_0" atomicpropositions="" >
	<rebec name="room">
		<statevariables>
			<variable name="Room.currentTemp" type="int">21</variable>
			<variable name="Room.currentRegulation" type="int">0</variable>
			<variable name="Room.outside_air" type="int">1</variable>
		</statevariables>
		<queue>
			<message arrival="4" deadline="infinity" sender="sensor">getTemp()</message>
			<message arrival="10" deadline="infinity" sender="room">updateStatus()</message>
		</queue>
		<now>4</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="controller">
		<statevariables>
			<variable name="Controller.currentTemp" type="int">21</variable>
			<variable name="Controller.isHeating" type="boolean">false</variable>
			<variable name="Controller.isCooling" type="boolean">false</variable>
		</statevariables>
		<queue>
		</queue>
		<now>4</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="sensor">
		<statevariables>
		</statevariables>
		<queue>
			<message arrival="6" deadline="infinity" sender="sensor">callSensor()</message>
		</queue>
		<now>4</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="hc_unit">
		<statevariables>
			<variable name="HC_Unit.heaterOn" type="boolean">false</variable>
			<variable name="HC_Unit.coolerOn" type="boolean">false</variable>
			<variable name="HC_Unit.currentRegulation" type="int">0</variable>
		</statevariables>
		<queue>
			<message arrival="5" deadline="infinity" sender="hc_unit">regulateTemp()</message>
		</queue>
		<now>4</now>
		<pc></pc>
		<res></res>
	</rebec>
</state>
<transition source="114_0" destination="126_0" executionTime="4" shift="0"> <messageserver sender="sensor" owner="sensor" title="CALLSENSOR"/></transition>
<state id="127_0" atomicpropositions="" >
	<rebec name="room">
		<statevariables>
			<variable name="Room.currentTemp" type="int">23</variable>
			<variable name="Room.currentRegulation" type="int">0</variable>
			<variable name="Room.outside_air" type="int">-1</variable>
		</statevariables>
		<queue>
			<message arrival="4" deadline="infinity" sender="sensor">getTemp()</message>
			<message arrival="10" deadline="infinity" sender="room">updateStatus()</message>
		</queue>
		<now>4</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="controller">
		<statevariables>
			<variable name="Controller.currentTemp" type="int">23</variable>
			<variable name="Controller.isHeating" type="boolean">false</variable>
			<variable name="Controller.isCooling" type="boolean">false</variable>
		</statevariables>
		<queue>
		</queue>
		<now>4</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="sensor">
		<statevariables>
		</statevariables>
		<queue>
			<message arrival="6" deadline="infinity" sender="sensor">callSensor()</message>
		</queue>
		<now>4</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="hc_unit">
		<statevariables>
			<variable name="HC_Unit.heaterOn" type="boolean">false</variable>
			<variable name="HC_Unit.coolerOn" type="boolean">false</variable>
			<variable name="HC_Unit.currentRegulation" type="int">0</variable>
		</statevariables>
		<queue>
			<message arrival="5" deadline="infinity" sender="hc_unit">regulateTemp()</message>
		</queue>
		<now>4</now>
		<pc></pc>
		<res></res>
	</rebec>
</state>
<transition source="116_0" destination="127_0" executionTime="4" shift="0"> <messageserver sender="sensor" owner="sensor" title="CALLSENSOR"/></transition>
<state id="128_0" atomicpropositions="" >
	<rebec name="room">
		<statevariables>
			<variable name="Room.currentTemp" type="int">22</variable>
			<variable name="Room.currentRegulation" type="int">0</variable>
			<variable name="Room.outside_air" type="int">0</variable>
		</statevariables>
		<queue>
			<message arrival="4" deadline="infinity" sender="sensor">getTemp()</message>
			<message arrival="10" deadline="infinity" sender="room">updateStatus()</message>
		</queue>
		<now>4</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="controller">
		<statevariables>
			<variable name="Controller.currentTemp" type="int">22</variable>
			<variable name="Controller.isHeating" type="boolean">false</variable>
			<variable name="Controller.isCooling" type="boolean">false</variable>
		</statevariables>
		<queue>
		</queue>
		<now>4</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="sensor">
		<statevariables>
		</statevariables>
		<queue>
			<message arrival="6" deadline="infinity" sender="sensor">callSensor()</message>
		</queue>
		<now>4</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="hc_unit">
		<statevariables>
			<variable name="HC_Unit.heaterOn" type="boolean">false</variable>
			<variable name="HC_Unit.coolerOn" type="boolean">false</variable>
			<variable name="HC_Unit.currentRegulation" type="int">0</variable>
		</statevariables>
		<queue>
			<message arrival="5" deadline="infinity" sender="hc_unit">regulateTemp()</message>
		</queue>
		<now>4</now>
		<pc></pc>
		<res></res>
	</rebec>
</state>
<transition source="125_0" destination="128_0" executionTime="4" shift="0"> <messageserver sender="sensor" owner="sensor" title="CALLSENSOR"/></transition>
<state id="129_0" atomicpropositions="" >
	<rebec name="room">
		<statevariables>
			<variable name="Room.currentTemp" type="int">21</variable>
			<variable name="Room.currentRegulation" type="int">0</variable>
			<variable name="Room.outside_air" type="int">1</variable>
		</statevariables>
		<queue>
			<message arrival="10" deadline="infinity" sender="room">updateStatus()</message>
		</queue>
		<now>4</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="controller">
		<statevariables>
			<variable name="Controller.currentTemp" type="int">21</variable>
			<variable name="Controller.isHeating" type="boolean">false</variable>
			<variable name="Controller.isCooling" type="boolean">false</variable>
		</statevariables>
		<queue>
		</queue>
		<now>4</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="sensor">
		<statevariables>
		</statevariables>
		<queue>
			<message arrival="4" deadline="infinity" sender="room">setCurrent(21)</message>
			<message arrival="6" deadline="infinity" sender="sensor">callSensor()</message>
		</queue>
		<now>4</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="hc_unit">
		<statevariables>
			<variable name="HC_Unit.heaterOn" type="boolean">false</variable>
			<variable name="HC_Unit.coolerOn" type="boolean">false</variable>
			<variable name="HC_Unit.currentRegulation" type="int">0</variable>
		</statevariables>
		<queue>
			<message arrival="5" deadline="infinity" sender="hc_unit">regulateTemp()</message>
		</queue>
		<now>4</now>
		<pc></pc>
		<res></res>
	</rebec>
</state>
<transition source="126_0" destination="129_0" executionTime="4" shift="0"> <messageserver sender="sensor" owner="room" title="GETTEMP"/></transition>
<state id="130_0" atomicpropositions="" >
	<rebec name="room">
		<statevariables>
			<variable name="Room.currentTemp" type="int">23</variable>
			<variable name="Room.currentRegulation" type="int">0</variable>
			<variable name="Room.outside_air" type="int">-1</variable>
		</statevariables>
		<queue>
			<message arrival="10" deadline="infinity" sender="room">updateStatus()</message>
		</queue>
		<now>4</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="controller">
		<statevariables>
			<variable name="Controller.currentTemp" type="int">23</variable>
			<variable name="Controller.isHeating" type="boolean">false</variable>
			<variable name="Controller.isCooling" type="boolean">false</variable>
		</statevariables>
		<queue>
		</queue>
		<now>4</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="sensor">
		<statevariables>
		</statevariables>
		<queue>
			<message arrival="4" deadline="infinity" sender="room">setCurrent(23)</message>
			<message arrival="6" deadline="infinity" sender="sensor">callSensor()</message>
		</queue>
		<now>4</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="hc_unit">
		<statevariables>
			<variable name="HC_Unit.heaterOn" type="boolean">false</variable>
			<variable name="HC_Unit.coolerOn" type="boolean">false</variable>
			<variable name="HC_Unit.currentRegulation" type="int">0</variable>
		</statevariables>
		<queue>
			<message arrival="5" deadline="infinity" sender="hc_unit">regulateTemp()</message>
		</queue>
		<now>4</now>
		<pc></pc>
		<res></res>
	</rebec>
</state>
<transition source="127_0" destination="130_0" executionTime="4" shift="0"> <messageserver sender="sensor" owner="room" title="GETTEMP"/></transition>
<state id="131_0" atomicpropositions="" >
	<rebec name="room">
		<statevariables>
			<variable name="Room.currentTemp" type="int">22</variable>
			<variable name="Room.currentRegulation" type="int">0</variable>
			<variable name="Room.outside_air" type="int">0</variable>
		</statevariables>
		<queue>
			<message arrival="10" deadline="infinity" sender="room">updateStatus()</message>
		</queue>
		<now>4</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="controller">
		<statevariables>
			<variable name="Controller.currentTemp" type="int">22</variable>
			<variable name="Controller.isHeating" type="boolean">false</variable>
			<variable name="Controller.isCooling" type="boolean">false</variable>
		</statevariables>
		<queue>
		</queue>
		<now>4</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="sensor">
		<statevariables>
		</statevariables>
		<queue>
			<message arrival="4" deadline="infinity" sender="room">setCurrent(22)</message>
			<message arrival="6" deadline="infinity" sender="sensor">callSensor()</message>
		</queue>
		<now>4</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="hc_unit">
		<statevariables>
			<variable name="HC_Unit.heaterOn" type="boolean">false</variable>
			<variable name="HC_Unit.coolerOn" type="boolean">false</variable>
			<variable name="HC_Unit.currentRegulation" type="int">0</variable>
		</statevariables>
		<queue>
			<message arrival="5" deadline="infinity" sender="hc_unit">regulateTemp()</message>
		</queue>
		<now>4</now>
		<pc></pc>
		<res></res>
	</rebec>
</state>
<transition source="128_0" destination="131_0" executionTime="4" shift="0"> <messageserver sender="sensor" owner="room" title="GETTEMP"/></transition>
<state id="132_0" atomicpropositions="" >
	<rebec name="room">
		<statevariables>
			<variable name="Room.currentTemp" type="int">21</variable>
			<variable name="Room.currentRegulation" type="int">0</variable>
			<variable name="Room.outside_air" type="int">1</variable>
		</statevariables>
		<queue>
			<message arrival="10" deadline="infinity" sender="room">updateStatus()</message>
		</queue>
		<now>4</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="controller">
		<statevariables>
			<variable name="Controller.currentTemp" type="int">21</variable>
			<variable name="Controller.isHeating" type="boolean">false</variable>
			<variable name="Controller.isCooling" type="boolean">false</variable>
		</statevariables>
		<queue>
			<message arrival="4" deadline="infinity" sender="sensor">setCurrent(21)</message>
		</queue>
		<now>4</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="sensor">
		<statevariables>
		</statevariables>
		<queue>
			<message arrival="6" deadline="infinity" sender="sensor">callSensor()</message>
		</queue>
		<now>4</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="hc_unit">
		<statevariables>
			<variable name="HC_Unit.heaterOn" type="boolean">false</variable>
			<variable name="HC_Unit.coolerOn" type="boolean">false</variable>
			<variable name="HC_Unit.currentRegulation" type="int">0</variable>
		</statevariables>
		<queue>
			<message arrival="5" deadline="infinity" sender="hc_unit">regulateTemp()</message>
		</queue>
		<now>4</now>
		<pc></pc>
		<res></res>
	</rebec>
</state>
<transition source="129_0" destination="132_0" executionTime="4" shift="0"> <messageserver sender="room" owner="sensor" title="SETCURRENT"/></transition>
<state id="133_0" atomicpropositions="" >
	<rebec name="room">
		<statevariables>
			<variable name="Room.currentTemp" type="int">23</variable>
			<variable name="Room.currentRegulation" type="int">0</variable>
			<variable name="Room.outside_air" type="int">-1</variable>
		</statevariables>
		<queue>
			<message arrival="10" deadline="infinity" sender="room">updateStatus()</message>
		</queue>
		<now>4</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="controller">
		<statevariables>
			<variable name="Controller.currentTemp" type="int">23</variable>
			<variable name="Controller.isHeating" type="boolean">false</variable>
			<variable name="Controller.isCooling" type="boolean">false</variable>
		</statevariables>
		<queue>
			<message arrival="4" deadline="infinity" sender="sensor">setCurrent(23)</message>
		</queue>
		<now>4</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="sensor">
		<statevariables>
		</statevariables>
		<queue>
			<message arrival="6" deadline="infinity" sender="sensor">callSensor()</message>
		</queue>
		<now>4</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="hc_unit">
		<statevariables>
			<variable name="HC_Unit.heaterOn" type="boolean">false</variable>
			<variable name="HC_Unit.coolerOn" type="boolean">false</variable>
			<variable name="HC_Unit.currentRegulation" type="int">0</variable>
		</statevariables>
		<queue>
			<message arrival="5" deadline="infinity" sender="hc_unit">regulateTemp()</message>
		</queue>
		<now>4</now>
		<pc></pc>
		<res></res>
	</rebec>
</state>
<transition source="130_0" destination="133_0" executionTime="4" shift="0"> <messageserver sender="room" owner="sensor" title="SETCURRENT"/></transition>
<state id="134_0" atomicpropositions="" >
	<rebec name="room">
		<statevariables>
			<variable name="Room.currentTemp" type="int">22</variable>
			<variable name="Room.currentRegulation" type="int">0</variable>
			<variable name="Room.outside_air" type="int">0</variable>
		</statevariables>
		<queue>
			<message arrival="10" deadline="infinity" sender="room">updateStatus()</message>
		</queue>
		<now>4</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="controller">
		<statevariables>
			<variable name="Controller.currentTemp" type="int">22</variable>
			<variable name="Controller.isHeating" type="boolean">false</variable>
			<variable name="Controller.isCooling" type="boolean">false</variable>
		</statevariables>
		<queue>
			<message arrival="4" deadline="infinity" sender="sensor">setCurrent(22)</message>
		</queue>
		<now>4</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="sensor">
		<statevariables>
		</statevariables>
		<queue>
			<message arrival="6" deadline="infinity" sender="sensor">callSensor()</message>
		</queue>
		<now>4</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="hc_unit">
		<statevariables>
			<variable name="HC_Unit.heaterOn" type="boolean">false</variable>
			<variable name="HC_Unit.coolerOn" type="boolean">false</variable>
			<variable name="HC_Unit.currentRegulation" type="int">0</variable>
		</statevariables>
		<queue>
			<message arrival="5" deadline="infinity" sender="hc_unit">regulateTemp()</message>
		</queue>
		<now>4</now>
		<pc></pc>
		<res></res>
	</rebec>
</state>
<transition source="131_0" destination="134_0" executionTime="4" shift="0"> <messageserver sender="room" owner="sensor" title="SETCURRENT"/></transition>
<state id="135_0" atomicpropositions="" >
	<rebec name="room">
		<statevariables>
			<variable name="Room.currentTemp" type="int">21</variable>
			<variable name="Room.currentRegulation" type="int">0</variable>
			<variable name="Room.outside_air" type="int">1</variable>
		</statevariables>
		<queue>
			<message arrival="10" deadline="infinity" sender="room">updateStatus()</message>
		</queue>
		<now>4</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="controller">
		<statevariables>
			<variable name="Controller.currentTemp" type="int">21</variable>
			<variable name="Controller.isHeating" type="boolean">false</variable>
			<variable name="Controller.isCooling" type="boolean">false</variable>
		</statevariables>
		<queue>
			<message arrival="4" deadline="infinity" sender="controller">updateOutput()</message>
		</queue>
		<now>4</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="sensor">
		<statevariables>
		</statevariables>
		<queue>
			<message arrival="6" deadline="infinity" sender="sensor">callSensor()</message>
		</queue>
		<now>4</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="hc_unit">
		<statevariables>
			<variable name="HC_Unit.heaterOn" type="boolean">false</variable>
			<variable name="HC_Unit.coolerOn" type="boolean">false</variable>
			<variable name="HC_Unit.currentRegulation" type="int">0</variable>
		</statevariables>
		<queue>
			<message arrival="5" deadline="infinity" sender="hc_unit">regulateTemp()</message>
		</queue>
		<now>4</now>
		<pc></pc>
		<res></res>
	</rebec>
</state>
<transition source="132_0" destination="135_0" executionTime="4" shift="0"> <messageserver sender="sensor" owner="controller" title="SETCURRENT"/></transition>
<state id="136_0" atomicpropositions="" >
	<rebec name="room">
		<statevariables>
			<variable name="Room.currentTemp" type="int">23</variable>
			<variable name="Room.currentRegulation" type="int">0</variable>
			<variable name="Room.outside_air" type="int">-1</variable>
		</statevariables>
		<queue>
			<message arrival="10" deadline="infinity" sender="room">updateStatus()</message>
		</queue>
		<now>4</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="controller">
		<statevariables>
			<variable name="Controller.currentTemp" type="int">23</variable>
			<variable name="Controller.isHeating" type="boolean">false</variable>
			<variable name="Controller.isCooling" type="boolean">false</variable>
		</statevariables>
		<queue>
			<message arrival="4" deadline="infinity" sender="controller">updateOutput()</message>
		</queue>
		<now>4</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="sensor">
		<statevariables>
		</statevariables>
		<queue>
			<message arrival="6" deadline="infinity" sender="sensor">callSensor()</message>
		</queue>
		<now>4</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="hc_unit">
		<statevariables>
			<variable name="HC_Unit.heaterOn" type="boolean">false</variable>
			<variable name="HC_Unit.coolerOn" type="boolean">false</variable>
			<variable name="HC_Unit.currentRegulation" type="int">0</variable>
		</statevariables>
		<queue>
			<message arrival="5" deadline="infinity" sender="hc_unit">regulateTemp()</message>
		</queue>
		<now>4</now>
		<pc></pc>
		<res></res>
	</rebec>
</state>
<transition source="133_0" destination="136_0" executionTime="4" shift="0"> <messageserver sender="sensor" owner="controller" title="SETCURRENT"/></transition>
<state id="137_0" atomicpropositions="" >
	<rebec name="room">
		<statevariables>
			<variable name="Room.currentTemp" type="int">22</variable>
			<variable name="Room.currentRegulation" type="int">0</variable>
			<variable name="Room.outside_air" type="int">0</variable>
		</statevariables>
		<queue>
			<message arrival="10" deadline="infinity" sender="room">updateStatus()</message>
		</queue>
		<now>4</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="controller">
		<statevariables>
			<variable name="Controller.currentTemp" type="int">22</variable>
			<variable name="Controller.isHeating" type="boolean">false</variable>
			<variable name="Controller.isCooling" type="boolean">false</variable>
		</statevariables>
		<queue>
			<message arrival="4" deadline="infinity" sender="controller">updateOutput()</message>
		</queue>
		<now>4</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="sensor">
		<statevariables>
		</statevariables>
		<queue>
			<message arrival="6" deadline="infinity" sender="sensor">callSensor()</message>
		</queue>
		<now>4</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="hc_unit">
		<statevariables>
			<variable name="HC_Unit.heaterOn" type="boolean">false</variable>
			<variable name="HC_Unit.coolerOn" type="boolean">false</variable>
			<variable name="HC_Unit.currentRegulation" type="int">0</variable>
		</statevariables>
		<queue>
			<message arrival="5" deadline="infinity" sender="hc_unit">regulateTemp()</message>
		</queue>
		<now>4</now>
		<pc></pc>
		<res></res>
	</rebec>
</state>
<transition source="134_0" destination="137_0" executionTime="4" shift="0"> <messageserver sender="sensor" owner="controller" title="SETCURRENT"/></transition>
<state id="138_0" atomicpropositions="" >
	<rebec name="room">
		<statevariables>
			<variable name="Room.currentTemp" type="int">21</variable>
			<variable name="Room.currentRegulation" type="int">0</variable>
			<variable name="Room.outside_air" type="int">1</variable>
		</statevariables>
		<queue>
			<message arrival="10" deadline="infinity" sender="room">updateStatus()</message>
		</queue>
		<now>4</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="controller">
		<statevariables>
			<variable name="Controller.currentTemp" type="int">21</variable>
			<variable name="Controller.isHeating" type="boolean">false</variable>
			<variable name="Controller.isCooling" type="boolean">false</variable>
		</statevariables>
		<queue>
		</queue>
		<now>4</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="sensor">
		<statevariables>
		</statevariables>
		<queue>
			<message arrival="6" deadline="infinity" sender="sensor">callSensor()</message>
		</queue>
		<now>4</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="hc_unit">
		<statevariables>
			<variable name="HC_Unit.heaterOn" type="boolean">false</variable>
			<variable name="HC_Unit.coolerOn" type="boolean">false</variable>
			<variable name="HC_Unit.currentRegulation" type="int">0</variable>
		</statevariables>
		<queue>
			<message arrival="5" deadline="infinity" sender="hc_unit">regulateTemp()</message>
		</queue>
		<now>4</now>
		<pc></pc>
		<res></res>
	</rebec>
</state>
<state id="139_0" atomicpropositions="" >
	<rebec name="room">
		<statevariables>
			<variable name="Room.currentTemp" type="int">21</variable>
			<variable name="Room.currentRegulation" type="int">0</variable>
			<variable name="Room.outside_air" type="int">1</variable>
		</statevariables>
		<queue>
			<message arrival="10" deadline="infinity" sender="room">updateStatus()</message>
		</queue>
		<now>5</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="controller">
		<statevariables>
			<variable name="Controller.currentTemp" type="int">21</variable>
			<variable name="Controller.isHeating" type="boolean">false</variable>
			<variable name="Controller.isCooling" type="boolean">false</variable>
		</statevariables>
		<queue>
		</queue>
		<now>5</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="sensor">
		<statevariables>
		</statevariables>
		<queue>
			<message arrival="6" deadline="infinity" sender="sensor">callSensor()</message>
		</queue>
		<now>5</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="hc_unit">
		<statevariables>
			<variable name="HC_Unit.heaterOn" type="boolean">false</variable>
			<variable name="HC_Unit.coolerOn" type="boolean">false</variable>
			<variable name="HC_Unit.currentRegulation" type="int">0</variable>
		</statevariables>
		<queue>
			<message arrival="5" deadline="infinity" sender="hc_unit">regulateTemp()</message>
		</queue>
		<now>5</now>
		<pc></pc>
		<res></res>
	</rebec>
</state>
<transition source="138_0" destination="139_0" executionTime="4" shift="0"> <time value="1"/></transition>
<transition source="135_0" destination="138_0" executionTime="4" shift="0"> <messageserver sender="controller" owner="controller" title="UPDATEOUTPUT"/></transition>
<state id="140_0" atomicpropositions="" >
	<rebec name="room">
		<statevariables>
			<variable name="Room.currentTemp" type="int">23</variable>
			<variable name="Room.currentRegulation" type="int">0</variable>
			<variable name="Room.outside_air" type="int">-1</variable>
		</statevariables>
		<queue>
			<message arrival="10" deadline="infinity" sender="room">updateStatus()</message>
		</queue>
		<now>4</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="controller">
		<statevariables>
			<variable name="Controller.currentTemp" type="int">23</variable>
			<variable name="Controller.isHeating" type="boolean">false</variable>
			<variable name="Controller.isCooling" type="boolean">false</variable>
		</statevariables>
		<queue>
		</queue>
		<now>4</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="sensor">
		<statevariables>
		</statevariables>
		<queue>
			<message arrival="6" deadline="infinity" sender="sensor">callSensor()</message>
		</queue>
		<now>4</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="hc_unit">
		<statevariables>
			<variable name="HC_Unit.heaterOn" type="boolean">false</variable>
			<variable name="HC_Unit.coolerOn" type="boolean">false</variable>
			<variable name="HC_Unit.currentRegulation" type="int">0</variable>
		</statevariables>
		<queue>
			<message arrival="5" deadline="infinity" sender="hc_unit">regulateTemp()</message>
		</queue>
		<now>4</now>
		<pc></pc>
		<res></res>
	</rebec>
</state>
<state id="141_0" atomicpropositions="" >
	<rebec name="room">
		<statevariables>
			<variable name="Room.currentTemp" type="int">23</variable>
			<variable name="Room.currentRegulation" type="int">0</variable>
			<variable name="Room.outside_air" type="int">-1</variable>
		</statevariables>
		<queue>
			<message arrival="10" deadline="infinity" sender="room">updateStatus()</message>
		</queue>
		<now>5</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="controller">
		<statevariables>
			<variable name="Controller.currentTemp" type="int">23</variable>
			<variable name="Controller.isHeating" type="boolean">false</variable>
			<variable name="Controller.isCooling" type="boolean">false</variable>
		</statevariables>
		<queue>
		</queue>
		<now>5</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="sensor">
		<statevariables>
		</statevariables>
		<queue>
			<message arrival="6" deadline="infinity" sender="sensor">callSensor()</message>
		</queue>
		<now>5</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="hc_unit">
		<statevariables>
			<variable name="HC_Unit.heaterOn" type="boolean">false</variable>
			<variable name="HC_Unit.coolerOn" type="boolean">false</variable>
			<variable name="HC_Unit.currentRegulation" type="int">0</variable>
		</statevariables>
		<queue>
			<message arrival="5" deadline="infinity" sender="hc_unit">regulateTemp()</message>
		</queue>
		<now>5</now>
		<pc></pc>
		<res></res>
	</rebec>
</state>
<transition source="140_0" destination="141_0" executionTime="4" shift="0"> <time value="1"/></transition>
<transition source="136_0" destination="140_0" executionTime="4" shift="0"> <messageserver sender="controller" owner="controller" title="UPDATEOUTPUT"/></transition>
<state id="142_0" atomicpropositions="" >
	<rebec name="room">
		<statevariables>
			<variable name="Room.currentTemp" type="int">22</variable>
			<variable name="Room.currentRegulation" type="int">0</variable>
			<variable name="Room.outside_air" type="int">0</variable>
		</statevariables>
		<queue>
			<message arrival="10" deadline="infinity" sender="room">updateStatus()</message>
		</queue>
		<now>4</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="controller">
		<statevariables>
			<variable name="Controller.currentTemp" type="int">22</variable>
			<variable name="Controller.isHeating" type="boolean">false</variable>
			<variable name="Controller.isCooling" type="boolean">false</variable>
		</statevariables>
		<queue>
		</queue>
		<now>4</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="sensor">
		<statevariables>
		</statevariables>
		<queue>
			<message arrival="6" deadline="infinity" sender="sensor">callSensor()</message>
		</queue>
		<now>4</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="hc_unit">
		<statevariables>
			<variable name="HC_Unit.heaterOn" type="boolean">false</variable>
			<variable name="HC_Unit.coolerOn" type="boolean">false</variable>
			<variable name="HC_Unit.currentRegulation" type="int">0</variable>
		</statevariables>
		<queue>
			<message arrival="5" deadline="infinity" sender="hc_unit">regulateTemp()</message>
		</queue>
		<now>4</now>
		<pc></pc>
		<res></res>
	</rebec>
</state>
<state id="143_0" atomicpropositions="" >
	<rebec name="room">
		<statevariables>
			<variable name="Room.currentTemp" type="int">22</variable>
			<variable name="Room.currentRegulation" type="int">0</variable>
			<variable name="Room.outside_air" type="int">0</variable>
		</statevariables>
		<queue>
			<message arrival="10" deadline="infinity" sender="room">updateStatus()</message>
		</queue>
		<now>5</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="controller">
		<statevariables>
			<variable name="Controller.currentTemp" type="int">22</variable>
			<variable name="Controller.isHeating" type="boolean">false</variable>
			<variable name="Controller.isCooling" type="boolean">false</variable>
		</statevariables>
		<queue>
		</queue>
		<now>5</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="sensor">
		<statevariables>
		</statevariables>
		<queue>
			<message arrival="6" deadline="infinity" sender="sensor">callSensor()</message>
		</queue>
		<now>5</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="hc_unit">
		<statevariables>
			<variable name="HC_Unit.heaterOn" type="boolean">false</variable>
			<variable name="HC_Unit.coolerOn" type="boolean">false</variable>
			<variable name="HC_Unit.currentRegulation" type="int">0</variable>
		</statevariables>
		<queue>
			<message arrival="5" deadline="infinity" sender="hc_unit">regulateTemp()</message>
		</queue>
		<now>5</now>
		<pc></pc>
		<res></res>
	</rebec>
</state>
<transition source="142_0" destination="143_0" executionTime="4" shift="0"> <time value="1"/></transition>
<transition source="137_0" destination="142_0" executionTime="4" shift="0"> <messageserver sender="controller" owner="controller" title="UPDATEOUTPUT"/></transition>
<state id="144_0" atomicpropositions="" >
	<rebec name="room">
		<statevariables>
			<variable name="Room.currentTemp" type="int">21</variable>
			<variable name="Room.currentRegulation" type="int">0</variable>
			<variable name="Room.outside_air" type="int">1</variable>
		</statevariables>
		<queue>
			<message arrival="5" deadline="infinity" sender="hc_unit">setRegulation(0)</message>
			<message arrival="10" deadline="infinity" sender="room">updateStatus()</message>
		</queue>
		<now>5</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="controller">
		<statevariables>
			<variable name="Controller.currentTemp" type="int">21</variable>
			<variable name="Controller.isHeating" type="boolean">false</variable>
			<variable name="Controller.isCooling" type="boolean">false</variable>
		</statevariables>
		<queue>
		</queue>
		<now>5</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="sensor">
		<statevariables>
		</statevariables>
		<queue>
			<message arrival="6" deadline="infinity" sender="sensor">callSensor()</message>
		</queue>
		<now>5</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="hc_unit">
		<statevariables>
			<variable name="HC_Unit.heaterOn" type="boolean">false</variable>
			<variable name="HC_Unit.coolerOn" type="boolean">false</variable>
			<variable name="HC_Unit.currentRegulation" type="int">0</variable>
		</statevariables>
		<queue>
			<message arrival="10" deadline="infinity" sender="hc_unit">regulateTemp()</message>
		</queue>
		<now>5</now>
		<pc></pc>
		<res></res>
	</rebec>
</state>
<transition source="139_0" destination="144_0" executionTime="5" shift="0"> <messageserver sender="hc_unit" owner="hc_unit" title="REGULATETEMP"/></transition>
<state id="145_0" atomicpropositions="" >
	<rebec name="room">
		<statevariables>
			<variable name="Room.currentTemp" type="int">23</variable>
			<variable name="Room.currentRegulation" type="int">0</variable>
			<variable name="Room.outside_air" type="int">-1</variable>
		</statevariables>
		<queue>
			<message arrival="5" deadline="infinity" sender="hc_unit">setRegulation(0)</message>
			<message arrival="10" deadline="infinity" sender="room">updateStatus()</message>
		</queue>
		<now>5</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="controller">
		<statevariables>
			<variable name="Controller.currentTemp" type="int">23</variable>
			<variable name="Controller.isHeating" type="boolean">false</variable>
			<variable name="Controller.isCooling" type="boolean">false</variable>
		</statevariables>
		<queue>
		</queue>
		<now>5</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="sensor">
		<statevariables>
		</statevariables>
		<queue>
			<message arrival="6" deadline="infinity" sender="sensor">callSensor()</message>
		</queue>
		<now>5</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="hc_unit">
		<statevariables>
			<variable name="HC_Unit.heaterOn" type="boolean">false</variable>
			<variable name="HC_Unit.coolerOn" type="boolean">false</variable>
			<variable name="HC_Unit.currentRegulation" type="int">0</variable>
		</statevariables>
		<queue>
			<message arrival="10" deadline="infinity" sender="hc_unit">regulateTemp()</message>
		</queue>
		<now>5</now>
		<pc></pc>
		<res></res>
	</rebec>
</state>
<transition source="141_0" destination="145_0" executionTime="5" shift="0"> <messageserver sender="hc_unit" owner="hc_unit" title="REGULATETEMP"/></transition>
<state id="146_0" atomicpropositions="" >
	<rebec name="room">
		<statevariables>
			<variable name="Room.currentTemp" type="int">22</variable>
			<variable name="Room.currentRegulation" type="int">0</variable>
			<variable name="Room.outside_air" type="int">0</variable>
		</statevariables>
		<queue>
			<message arrival="5" deadline="infinity" sender="hc_unit">setRegulation(0)</message>
			<message arrival="10" deadline="infinity" sender="room">updateStatus()</message>
		</queue>
		<now>5</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="controller">
		<statevariables>
			<variable name="Controller.currentTemp" type="int">22</variable>
			<variable name="Controller.isHeating" type="boolean">false</variable>
			<variable name="Controller.isCooling" type="boolean">false</variable>
		</statevariables>
		<queue>
		</queue>
		<now>5</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="sensor">
		<statevariables>
		</statevariables>
		<queue>
			<message arrival="6" deadline="infinity" sender="sensor">callSensor()</message>
		</queue>
		<now>5</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="hc_unit">
		<statevariables>
			<variable name="HC_Unit.heaterOn" type="boolean">false</variable>
			<variable name="HC_Unit.coolerOn" type="boolean">false</variable>
			<variable name="HC_Unit.currentRegulation" type="int">0</variable>
		</statevariables>
		<queue>
			<message arrival="10" deadline="infinity" sender="hc_unit">regulateTemp()</message>
		</queue>
		<now>5</now>
		<pc></pc>
		<res></res>
	</rebec>
</state>
<transition source="143_0" destination="146_0" executionTime="5" shift="0"> <messageserver sender="hc_unit" owner="hc_unit" title="REGULATETEMP"/></transition>
<state id="147_0" atomicpropositions="" >
	<rebec name="room">
		<statevariables>
			<variable name="Room.currentTemp" type="int">21</variable>
			<variable name="Room.currentRegulation" type="int">0</variable>
			<variable name="Room.outside_air" type="int">1</variable>
		</statevariables>
		<queue>
			<message arrival="10" deadline="infinity" sender="room">updateStatus()</message>
		</queue>
		<now>5</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="controller">
		<statevariables>
			<variable name="Controller.currentTemp" type="int">21</variable>
			<variable name="Controller.isHeating" type="boolean">false</variable>
			<variable name="Controller.isCooling" type="boolean">false</variable>
		</statevariables>
		<queue>
		</queue>
		<now>5</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="sensor">
		<statevariables>
		</statevariables>
		<queue>
			<message arrival="6" deadline="infinity" sender="sensor">callSensor()</message>
		</queue>
		<now>5</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="hc_unit">
		<statevariables>
			<variable name="HC_Unit.heaterOn" type="boolean">false</variable>
			<variable name="HC_Unit.coolerOn" type="boolean">false</variable>
			<variable name="HC_Unit.currentRegulation" type="int">0</variable>
		</statevariables>
		<queue>
			<message arrival="10" deadline="infinity" sender="hc_unit">regulateTemp()</message>
		</queue>
		<now>5</now>
		<pc></pc>
		<res></res>
	</rebec>
</state>
<state id="148_0" atomicpropositions="" >
	<rebec name="room">
		<statevariables>
			<variable name="Room.currentTemp" type="int">21</variable>
			<variable name="Room.currentRegulation" type="int">0</variable>
			<variable name="Room.outside_air" type="int">1</variable>
		</statevariables>
		<queue>
			<message arrival="10" deadline="infinity" sender="room">updateStatus()</message>
		</queue>
		<now>6</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="controller">
		<statevariables>
			<variable name="Controller.currentTemp" type="int">21</variable>
			<variable name="Controller.isHeating" type="boolean">false</variable>
			<variable name="Controller.isCooling" type="boolean">false</variable>
		</statevariables>
		<queue>
		</queue>
		<now>6</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="sensor">
		<statevariables>
		</statevariables>
		<queue>
			<message arrival="6" deadline="infinity" sender="sensor">callSensor()</message>
		</queue>
		<now>6</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="hc_unit">
		<statevariables>
			<variable name="HC_Unit.heaterOn" type="boolean">false</variable>
			<variable name="HC_Unit.coolerOn" type="boolean">false</variable>
			<variable name="HC_Unit.currentRegulation" type="int">0</variable>
		</statevariables>
		<queue>
			<message arrival="10" deadline="infinity" sender="hc_unit">regulateTemp()</message>
		</queue>
		<now>6</now>
		<pc></pc>
		<res></res>
	</rebec>
</state>
<transition source="147_0" destination="148_0" executionTime="5" shift="0"> <time value="1"/></transition>
<transition source="144_0" destination="147_0" executionTime="5" shift="0"> <messageserver sender="hc_unit" owner="room" title="SETREGULATION"/></transition>
<state id="149_0" atomicpropositions="" >
	<rebec name="room">
		<statevariables>
			<variable name="Room.currentTemp" type="int">23</variable>
			<variable name="Room.currentRegulation" type="int">0</variable>
			<variable name="Room.outside_air" type="int">-1</variable>
		</statevariables>
		<queue>
			<message arrival="10" deadline="infinity" sender="room">updateStatus()</message>
		</queue>
		<now>5</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="controller">
		<statevariables>
			<variable name="Controller.currentTemp" type="int">23</variable>
			<variable name="Controller.isHeating" type="boolean">false</variable>
			<variable name="Controller.isCooling" type="boolean">false</variable>
		</statevariables>
		<queue>
		</queue>
		<now>5</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="sensor">
		<statevariables>
		</statevariables>
		<queue>
			<message arrival="6" deadline="infinity" sender="sensor">callSensor()</message>
		</queue>
		<now>5</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="hc_unit">
		<statevariables>
			<variable name="HC_Unit.heaterOn" type="boolean">false</variable>
			<variable name="HC_Unit.coolerOn" type="boolean">false</variable>
			<variable name="HC_Unit.currentRegulation" type="int">0</variable>
		</statevariables>
		<queue>
			<message arrival="10" deadline="infinity" sender="hc_unit">regulateTemp()</message>
		</queue>
		<now>5</now>
		<pc></pc>
		<res></res>
	</rebec>
</state>
<state id="150_0" atomicpropositions="" >
	<rebec name="room">
		<statevariables>
			<variable name="Room.currentTemp" type="int">23</variable>
			<variable name="Room.currentRegulation" type="int">0</variable>
			<variable name="Room.outside_air" type="int">-1</variable>
		</statevariables>
		<queue>
			<message arrival="10" deadline="infinity" sender="room">updateStatus()</message>
		</queue>
		<now>6</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="controller">
		<statevariables>
			<variable name="Controller.currentTemp" type="int">23</variable>
			<variable name="Controller.isHeating" type="boolean">false</variable>
			<variable name="Controller.isCooling" type="boolean">false</variable>
		</statevariables>
		<queue>
		</queue>
		<now>6</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="sensor">
		<statevariables>
		</statevariables>
		<queue>
			<message arrival="6" deadline="infinity" sender="sensor">callSensor()</message>
		</queue>
		<now>6</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="hc_unit">
		<statevariables>
			<variable name="HC_Unit.heaterOn" type="boolean">false</variable>
			<variable name="HC_Unit.coolerOn" type="boolean">false</variable>
			<variable name="HC_Unit.currentRegulation" type="int">0</variable>
		</statevariables>
		<queue>
			<message arrival="10" deadline="infinity" sender="hc_unit">regulateTemp()</message>
		</queue>
		<now>6</now>
		<pc></pc>
		<res></res>
	</rebec>
</state>
<transition source="149_0" destination="150_0" executionTime="5" shift="0"> <time value="1"/></transition>
<transition source="145_0" destination="149_0" executionTime="5" shift="0"> <messageserver sender="hc_unit" owner="room" title="SETREGULATION"/></transition>
<state id="151_0" atomicpropositions="" >
	<rebec name="room">
		<statevariables>
			<variable name="Room.currentTemp" type="int">22</variable>
			<variable name="Room.currentRegulation" type="int">0</variable>
			<variable name="Room.outside_air" type="int">0</variable>
		</statevariables>
		<queue>
			<message arrival="10" deadline="infinity" sender="room">updateStatus()</message>
		</queue>
		<now>5</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="controller">
		<statevariables>
			<variable name="Controller.currentTemp" type="int">22</variable>
			<variable name="Controller.isHeating" type="boolean">false</variable>
			<variable name="Controller.isCooling" type="boolean">false</variable>
		</statevariables>
		<queue>
		</queue>
		<now>5</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="sensor">
		<statevariables>
		</statevariables>
		<queue>
			<message arrival="6" deadline="infinity" sender="sensor">callSensor()</message>
		</queue>
		<now>5</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="hc_unit">
		<statevariables>
			<variable name="HC_Unit.heaterOn" type="boolean">false</variable>
			<variable name="HC_Unit.coolerOn" type="boolean">false</variable>
			<variable name="HC_Unit.currentRegulation" type="int">0</variable>
		</statevariables>
		<queue>
			<message arrival="10" deadline="infinity" sender="hc_unit">regulateTemp()</message>
		</queue>
		<now>5</now>
		<pc></pc>
		<res></res>
	</rebec>
</state>
<state id="152_0" atomicpropositions="" >
	<rebec name="room">
		<statevariables>
			<variable name="Room.currentTemp" type="int">22</variable>
			<variable name="Room.currentRegulation" type="int">0</variable>
			<variable name="Room.outside_air" type="int">0</variable>
		</statevariables>
		<queue>
			<message arrival="10" deadline="infinity" sender="room">updateStatus()</message>
		</queue>
		<now>6</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="controller">
		<statevariables>
			<variable name="Controller.currentTemp" type="int">22</variable>
			<variable name="Controller.isHeating" type="boolean">false</variable>
			<variable name="Controller.isCooling" type="boolean">false</variable>
		</statevariables>
		<queue>
		</queue>
		<now>6</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="sensor">
		<statevariables>
		</statevariables>
		<queue>
			<message arrival="6" deadline="infinity" sender="sensor">callSensor()</message>
		</queue>
		<now>6</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="hc_unit">
		<statevariables>
			<variable name="HC_Unit.heaterOn" type="boolean">false</variable>
			<variable name="HC_Unit.coolerOn" type="boolean">false</variable>
			<variable name="HC_Unit.currentRegulation" type="int">0</variable>
		</statevariables>
		<queue>
			<message arrival="10" deadline="infinity" sender="hc_unit">regulateTemp()</message>
		</queue>
		<now>6</now>
		<pc></pc>
		<res></res>
	</rebec>
</state>
<transition source="151_0" destination="152_0" executionTime="5" shift="0"> <time value="1"/></transition>
<transition source="146_0" destination="151_0" executionTime="5" shift="0"> <messageserver sender="hc_unit" owner="room" title="SETREGULATION"/></transition>
<state id="153_0" atomicpropositions="" >
	<rebec name="room">
		<statevariables>
			<variable name="Room.currentTemp" type="int">21</variable>
			<variable name="Room.currentRegulation" type="int">0</variable>
			<variable name="Room.outside_air" type="int">1</variable>
		</statevariables>
		<queue>
			<message arrival="6" deadline="infinity" sender="sensor">getTemp()</message>
			<message arrival="10" deadline="infinity" sender="room">updateStatus()</message>
		</queue>
		<now>6</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="controller">
		<statevariables>
			<variable name="Controller.currentTemp" type="int">21</variable>
			<variable name="Controller.isHeating" type="boolean">false</variable>
			<variable name="Controller.isCooling" type="boolean">false</variable>
		</statevariables>
		<queue>
		</queue>
		<now>6</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="sensor">
		<statevariables>
		</statevariables>
		<queue>
			<message arrival="8" deadline="infinity" sender="sensor">callSensor()</message>
		</queue>
		<now>6</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="hc_unit">
		<statevariables>
			<variable name="HC_Unit.heaterOn" type="boolean">false</variable>
			<variable name="HC_Unit.coolerOn" type="boolean">false</variable>
			<variable name="HC_Unit.currentRegulation" type="int">0</variable>
		</statevariables>
		<queue>
			<message arrival="10" deadline="infinity" sender="hc_unit">regulateTemp()</message>
		</queue>
		<now>6</now>
		<pc></pc>
		<res></res>
	</rebec>
</state>
<transition source="148_0" destination="153_0" executionTime="6" shift="0"> <messageserver sender="sensor" owner="sensor" title="CALLSENSOR"/></transition>
<state id="154_0" atomicpropositions="" >
	<rebec name="room">
		<statevariables>
			<variable name="Room.currentTemp" type="int">23</variable>
			<variable name="Room.currentRegulation" type="int">0</variable>
			<variable name="Room.outside_air" type="int">-1</variable>
		</statevariables>
		<queue>
			<message arrival="6" deadline="infinity" sender="sensor">getTemp()</message>
			<message arrival="10" deadline="infinity" sender="room">updateStatus()</message>
		</queue>
		<now>6</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="controller">
		<statevariables>
			<variable name="Controller.currentTemp" type="int">23</variable>
			<variable name="Controller.isHeating" type="boolean">false</variable>
			<variable name="Controller.isCooling" type="boolean">false</variable>
		</statevariables>
		<queue>
		</queue>
		<now>6</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="sensor">
		<statevariables>
		</statevariables>
		<queue>
			<message arrival="8" deadline="infinity" sender="sensor">callSensor()</message>
		</queue>
		<now>6</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="hc_unit">
		<statevariables>
			<variable name="HC_Unit.heaterOn" type="boolean">false</variable>
			<variable name="HC_Unit.coolerOn" type="boolean">false</variable>
			<variable name="HC_Unit.currentRegulation" type="int">0</variable>
		</statevariables>
		<queue>
			<message arrival="10" deadline="infinity" sender="hc_unit">regulateTemp()</message>
		</queue>
		<now>6</now>
		<pc></pc>
		<res></res>
	</rebec>
</state>
<transition source="150_0" destination="154_0" executionTime="6" shift="0"> <messageserver sender="sensor" owner="sensor" title="CALLSENSOR"/></transition>
<state id="155_0" atomicpropositions="" >
	<rebec name="room">
		<statevariables>
			<variable name="Room.currentTemp" type="int">22</variable>
			<variable name="Room.currentRegulation" type="int">0</variable>
			<variable name="Room.outside_air" type="int">0</variable>
		</statevariables>
		<queue>
			<message arrival="6" deadline="infinity" sender="sensor">getTemp()</message>
			<message arrival="10" deadline="infinity" sender="room">updateStatus()</message>
		</queue>
		<now>6</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="controller">
		<statevariables>
			<variable name="Controller.currentTemp" type="int">22</variable>
			<variable name="Controller.isHeating" type="boolean">false</variable>
			<variable name="Controller.isCooling" type="boolean">false</variable>
		</statevariables>
		<queue>
		</queue>
		<now>6</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="sensor">
		<statevariables>
		</statevariables>
		<queue>
			<message arrival="8" deadline="infinity" sender="sensor">callSensor()</message>
		</queue>
		<now>6</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="hc_unit">
		<statevariables>
			<variable name="HC_Unit.heaterOn" type="boolean">false</variable>
			<variable name="HC_Unit.coolerOn" type="boolean">false</variable>
			<variable name="HC_Unit.currentRegulation" type="int">0</variable>
		</statevariables>
		<queue>
			<message arrival="10" deadline="infinity" sender="hc_unit">regulateTemp()</message>
		</queue>
		<now>6</now>
		<pc></pc>
		<res></res>
	</rebec>
</state>
<transition source="152_0" destination="155_0" executionTime="6" shift="0"> <messageserver sender="sensor" owner="sensor" title="CALLSENSOR"/></transition>
<state id="156_0" atomicpropositions="" >
	<rebec name="room">
		<statevariables>
			<variable name="Room.currentTemp" type="int">21</variable>
			<variable name="Room.currentRegulation" type="int">0</variable>
			<variable name="Room.outside_air" type="int">1</variable>
		</statevariables>
		<queue>
			<message arrival="10" deadline="infinity" sender="room">updateStatus()</message>
		</queue>
		<now>6</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="controller">
		<statevariables>
			<variable name="Controller.currentTemp" type="int">21</variable>
			<variable name="Controller.isHeating" type="boolean">false</variable>
			<variable name="Controller.isCooling" type="boolean">false</variable>
		</statevariables>
		<queue>
		</queue>
		<now>6</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="sensor">
		<statevariables>
		</statevariables>
		<queue>
			<message arrival="6" deadline="infinity" sender="room">setCurrent(21)</message>
			<message arrival="8" deadline="infinity" sender="sensor">callSensor()</message>
		</queue>
		<now>6</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="hc_unit">
		<statevariables>
			<variable name="HC_Unit.heaterOn" type="boolean">false</variable>
			<variable name="HC_Unit.coolerOn" type="boolean">false</variable>
			<variable name="HC_Unit.currentRegulation" type="int">0</variable>
		</statevariables>
		<queue>
			<message arrival="10" deadline="infinity" sender="hc_unit">regulateTemp()</message>
		</queue>
		<now>6</now>
		<pc></pc>
		<res></res>
	</rebec>
</state>
<transition source="153_0" destination="156_0" executionTime="6" shift="0"> <messageserver sender="sensor" owner="room" title="GETTEMP"/></transition>
<state id="157_0" atomicpropositions="" >
	<rebec name="room">
		<statevariables>
			<variable name="Room.currentTemp" type="int">23</variable>
			<variable name="Room.currentRegulation" type="int">0</variable>
			<variable name="Room.outside_air" type="int">-1</variable>
		</statevariables>
		<queue>
			<message arrival="10" deadline="infinity" sender="room">updateStatus()</message>
		</queue>
		<now>6</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="controller">
		<statevariables>
			<variable name="Controller.currentTemp" type="int">23</variable>
			<variable name="Controller.isHeating" type="boolean">false</variable>
			<variable name="Controller.isCooling" type="boolean">false</variable>
		</statevariables>
		<queue>
		</queue>
		<now>6</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="sensor">
		<statevariables>
		</statevariables>
		<queue>
			<message arrival="6" deadline="infinity" sender="room">setCurrent(23)</message>
			<message arrival="8" deadline="infinity" sender="sensor">callSensor()</message>
		</queue>
		<now>6</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="hc_unit">
		<statevariables>
			<variable name="HC_Unit.heaterOn" type="boolean">false</variable>
			<variable name="HC_Unit.coolerOn" type="boolean">false</variable>
			<variable name="HC_Unit.currentRegulation" type="int">0</variable>
		</statevariables>
		<queue>
			<message arrival="10" deadline="infinity" sender="hc_unit">regulateTemp()</message>
		</queue>
		<now>6</now>
		<pc></pc>
		<res></res>
	</rebec>
</state>
<transition source="154_0" destination="157_0" executionTime="6" shift="0"> <messageserver sender="sensor" owner="room" title="GETTEMP"/></transition>
<state id="158_0" atomicpropositions="" >
	<rebec name="room">
		<statevariables>
			<variable name="Room.currentTemp" type="int">22</variable>
			<variable name="Room.currentRegulation" type="int">0</variable>
			<variable name="Room.outside_air" type="int">0</variable>
		</statevariables>
		<queue>
			<message arrival="10" deadline="infinity" sender="room">updateStatus()</message>
		</queue>
		<now>6</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="controller">
		<statevariables>
			<variable name="Controller.currentTemp" type="int">22</variable>
			<variable name="Controller.isHeating" type="boolean">false</variable>
			<variable name="Controller.isCooling" type="boolean">false</variable>
		</statevariables>
		<queue>
		</queue>
		<now>6</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="sensor">
		<statevariables>
		</statevariables>
		<queue>
			<message arrival="6" deadline="infinity" sender="room">setCurrent(22)</message>
			<message arrival="8" deadline="infinity" sender="sensor">callSensor()</message>
		</queue>
		<now>6</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="hc_unit">
		<statevariables>
			<variable name="HC_Unit.heaterOn" type="boolean">false</variable>
			<variable name="HC_Unit.coolerOn" type="boolean">false</variable>
			<variable name="HC_Unit.currentRegulation" type="int">0</variable>
		</statevariables>
		<queue>
			<message arrival="10" deadline="infinity" sender="hc_unit">regulateTemp()</message>
		</queue>
		<now>6</now>
		<pc></pc>
		<res></res>
	</rebec>
</state>
<transition source="155_0" destination="158_0" executionTime="6" shift="0"> <messageserver sender="sensor" owner="room" title="GETTEMP"/></transition>
<state id="159_0" atomicpropositions="" >
	<rebec name="room">
		<statevariables>
			<variable name="Room.currentTemp" type="int">21</variable>
			<variable name="Room.currentRegulation" type="int">0</variable>
			<variable name="Room.outside_air" type="int">1</variable>
		</statevariables>
		<queue>
			<message arrival="10" deadline="infinity" sender="room">updateStatus()</message>
		</queue>
		<now>6</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="controller">
		<statevariables>
			<variable name="Controller.currentTemp" type="int">21</variable>
			<variable name="Controller.isHeating" type="boolean">false</variable>
			<variable name="Controller.isCooling" type="boolean">false</variable>
		</statevariables>
		<queue>
			<message arrival="6" deadline="infinity" sender="sensor">setCurrent(21)</message>
		</queue>
		<now>6</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="sensor">
		<statevariables>
		</statevariables>
		<queue>
			<message arrival="8" deadline="infinity" sender="sensor">callSensor()</message>
		</queue>
		<now>6</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="hc_unit">
		<statevariables>
			<variable name="HC_Unit.heaterOn" type="boolean">false</variable>
			<variable name="HC_Unit.coolerOn" type="boolean">false</variable>
			<variable name="HC_Unit.currentRegulation" type="int">0</variable>
		</statevariables>
		<queue>
			<message arrival="10" deadline="infinity" sender="hc_unit">regulateTemp()</message>
		</queue>
		<now>6</now>
		<pc></pc>
		<res></res>
	</rebec>
</state>
<transition source="156_0" destination="159_0" executionTime="6" shift="0"> <messageserver sender="room" owner="sensor" title="SETCURRENT"/></transition>
<state id="160_0" atomicpropositions="" >
	<rebec name="room">
		<statevariables>
			<variable name="Room.currentTemp" type="int">23</variable>
			<variable name="Room.currentRegulation" type="int">0</variable>
			<variable name="Room.outside_air" type="int">-1</variable>
		</statevariables>
		<queue>
			<message arrival="10" deadline="infinity" sender="room">updateStatus()</message>
		</queue>
		<now>6</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="controller">
		<statevariables>
			<variable name="Controller.currentTemp" type="int">23</variable>
			<variable name="Controller.isHeating" type="boolean">false</variable>
			<variable name="Controller.isCooling" type="boolean">false</variable>
		</statevariables>
		<queue>
			<message arrival="6" deadline="infinity" sender="sensor">setCurrent(23)</message>
		</queue>
		<now>6</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="sensor">
		<statevariables>
		</statevariables>
		<queue>
			<message arrival="8" deadline="infinity" sender="sensor">callSensor()</message>
		</queue>
		<now>6</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="hc_unit">
		<statevariables>
			<variable name="HC_Unit.heaterOn" type="boolean">false</variable>
			<variable name="HC_Unit.coolerOn" type="boolean">false</variable>
			<variable name="HC_Unit.currentRegulation" type="int">0</variable>
		</statevariables>
		<queue>
			<message arrival="10" deadline="infinity" sender="hc_unit">regulateTemp()</message>
		</queue>
		<now>6</now>
		<pc></pc>
		<res></res>
	</rebec>
</state>
<transition source="157_0" destination="160_0" executionTime="6" shift="0"> <messageserver sender="room" owner="sensor" title="SETCURRENT"/></transition>
<state id="161_0" atomicpropositions="" >
	<rebec name="room">
		<statevariables>
			<variable name="Room.currentTemp" type="int">22</variable>
			<variable name="Room.currentRegulation" type="int">0</variable>
			<variable name="Room.outside_air" type="int">0</variable>
		</statevariables>
		<queue>
			<message arrival="10" deadline="infinity" sender="room">updateStatus()</message>
		</queue>
		<now>6</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="controller">
		<statevariables>
			<variable name="Controller.currentTemp" type="int">22</variable>
			<variable name="Controller.isHeating" type="boolean">false</variable>
			<variable name="Controller.isCooling" type="boolean">false</variable>
		</statevariables>
		<queue>
			<message arrival="6" deadline="infinity" sender="sensor">setCurrent(22)</message>
		</queue>
		<now>6</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="sensor">
		<statevariables>
		</statevariables>
		<queue>
			<message arrival="8" deadline="infinity" sender="sensor">callSensor()</message>
		</queue>
		<now>6</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="hc_unit">
		<statevariables>
			<variable name="HC_Unit.heaterOn" type="boolean">false</variable>
			<variable name="HC_Unit.coolerOn" type="boolean">false</variable>
			<variable name="HC_Unit.currentRegulation" type="int">0</variable>
		</statevariables>
		<queue>
			<message arrival="10" deadline="infinity" sender="hc_unit">regulateTemp()</message>
		</queue>
		<now>6</now>
		<pc></pc>
		<res></res>
	</rebec>
</state>
<transition source="158_0" destination="161_0" executionTime="6" shift="0"> <messageserver sender="room" owner="sensor" title="SETCURRENT"/></transition>
<state id="162_0" atomicpropositions="" >
	<rebec name="room">
		<statevariables>
			<variable name="Room.currentTemp" type="int">21</variable>
			<variable name="Room.currentRegulation" type="int">0</variable>
			<variable name="Room.outside_air" type="int">1</variable>
		</statevariables>
		<queue>
			<message arrival="10" deadline="infinity" sender="room">updateStatus()</message>
		</queue>
		<now>6</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="controller">
		<statevariables>
			<variable name="Controller.currentTemp" type="int">21</variable>
			<variable name="Controller.isHeating" type="boolean">false</variable>
			<variable name="Controller.isCooling" type="boolean">false</variable>
		</statevariables>
		<queue>
			<message arrival="6" deadline="infinity" sender="controller">updateOutput()</message>
		</queue>
		<now>6</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="sensor">
		<statevariables>
		</statevariables>
		<queue>
			<message arrival="8" deadline="infinity" sender="sensor">callSensor()</message>
		</queue>
		<now>6</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="hc_unit">
		<statevariables>
			<variable name="HC_Unit.heaterOn" type="boolean">false</variable>
			<variable name="HC_Unit.coolerOn" type="boolean">false</variable>
			<variable name="HC_Unit.currentRegulation" type="int">0</variable>
		</statevariables>
		<queue>
			<message arrival="10" deadline="infinity" sender="hc_unit">regulateTemp()</message>
		</queue>
		<now>6</now>
		<pc></pc>
		<res></res>
	</rebec>
</state>
<transition source="159_0" destination="162_0" executionTime="6" shift="0"> <messageserver sender="sensor" owner="controller" title="SETCURRENT"/></transition>
<state id="163_0" atomicpropositions="" >
	<rebec name="room">
		<statevariables>
			<variable name="Room.currentTemp" type="int">23</variable>
			<variable name="Room.currentRegulation" type="int">0</variable>
			<variable name="Room.outside_air" type="int">-1</variable>
		</statevariables>
		<queue>
			<message arrival="10" deadline="infinity" sender="room">updateStatus()</message>
		</queue>
		<now>6</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="controller">
		<statevariables>
			<variable name="Controller.currentTemp" type="int">23</variable>
			<variable name="Controller.isHeating" type="boolean">false</variable>
			<variable name="Controller.isCooling" type="boolean">false</variable>
		</statevariables>
		<queue>
			<message arrival="6" deadline="infinity" sender="controller">updateOutput()</message>
		</queue>
		<now>6</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="sensor">
		<statevariables>
		</statevariables>
		<queue>
			<message arrival="8" deadline="infinity" sender="sensor">callSensor()</message>
		</queue>
		<now>6</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="hc_unit">
		<statevariables>
			<variable name="HC_Unit.heaterOn" type="boolean">false</variable>
			<variable name="HC_Unit.coolerOn" type="boolean">false</variable>
			<variable name="HC_Unit.currentRegulation" type="int">0</variable>
		</statevariables>
		<queue>
			<message arrival="10" deadline="infinity" sender="hc_unit">regulateTemp()</message>
		</queue>
		<now>6</now>
		<pc></pc>
		<res></res>
	</rebec>
</state>
<transition source="160_0" destination="163_0" executionTime="6" shift="0"> <messageserver sender="sensor" owner="controller" title="SETCURRENT"/></transition>
<state id="164_0" atomicpropositions="" >
	<rebec name="room">
		<statevariables>
			<variable name="Room.currentTemp" type="int">22</variable>
			<variable name="Room.currentRegulation" type="int">0</variable>
			<variable name="Room.outside_air" type="int">0</variable>
		</statevariables>
		<queue>
			<message arrival="10" deadline="infinity" sender="room">updateStatus()</message>
		</queue>
		<now>6</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="controller">
		<statevariables>
			<variable name="Controller.currentTemp" type="int">22</variable>
			<variable name="Controller.isHeating" type="boolean">false</variable>
			<variable name="Controller.isCooling" type="boolean">false</variable>
		</statevariables>
		<queue>
			<message arrival="6" deadline="infinity" sender="controller">updateOutput()</message>
		</queue>
		<now>6</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="sensor">
		<statevariables>
		</statevariables>
		<queue>
			<message arrival="8" deadline="infinity" sender="sensor">callSensor()</message>
		</queue>
		<now>6</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="hc_unit">
		<statevariables>
			<variable name="HC_Unit.heaterOn" type="boolean">false</variable>
			<variable name="HC_Unit.coolerOn" type="boolean">false</variable>
			<variable name="HC_Unit.currentRegulation" type="int">0</variable>
		</statevariables>
		<queue>
			<message arrival="10" deadline="infinity" sender="hc_unit">regulateTemp()</message>
		</queue>
		<now>6</now>
		<pc></pc>
		<res></res>
	</rebec>
</state>
<transition source="161_0" destination="164_0" executionTime="6" shift="0"> <messageserver sender="sensor" owner="controller" title="SETCURRENT"/></transition>
<state id="165_0" atomicpropositions="" >
	<rebec name="room">
		<statevariables>
			<variable name="Room.currentTemp" type="int">21</variable>
			<variable name="Room.currentRegulation" type="int">0</variable>
			<variable name="Room.outside_air" type="int">1</variable>
		</statevariables>
		<queue>
			<message arrival="10" deadline="infinity" sender="room">updateStatus()</message>
		</queue>
		<now>6</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="controller">
		<statevariables>
			<variable name="Controller.currentTemp" type="int">21</variable>
			<variable name="Controller.isHeating" type="boolean">false</variable>
			<variable name="Controller.isCooling" type="boolean">false</variable>
		</statevariables>
		<queue>
		</queue>
		<now>6</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="sensor">
		<statevariables>
		</statevariables>
		<queue>
			<message arrival="8" deadline="infinity" sender="sensor">callSensor()</message>
		</queue>
		<now>6</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="hc_unit">
		<statevariables>
			<variable name="HC_Unit.heaterOn" type="boolean">false</variable>
			<variable name="HC_Unit.coolerOn" type="boolean">false</variable>
			<variable name="HC_Unit.currentRegulation" type="int">0</variable>
		</statevariables>
		<queue>
			<message arrival="10" deadline="infinity" sender="hc_unit">regulateTemp()</message>
		</queue>
		<now>6</now>
		<pc></pc>
		<res></res>
	</rebec>
</state>
<state id="166_0" atomicpropositions="" >
	<rebec name="room">
		<statevariables>
			<variable name="Room.currentTemp" type="int">21</variable>
			<variable name="Room.currentRegulation" type="int">0</variable>
			<variable name="Room.outside_air" type="int">1</variable>
		</statevariables>
		<queue>
			<message arrival="10" deadline="infinity" sender="room">updateStatus()</message>
		</queue>
		<now>8</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="controller">
		<statevariables>
			<variable name="Controller.currentTemp" type="int">21</variable>
			<variable name="Controller.isHeating" type="boolean">false</variable>
			<variable name="Controller.isCooling" type="boolean">false</variable>
		</statevariables>
		<queue>
		</queue>
		<now>8</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="sensor">
		<statevariables>
		</statevariables>
		<queue>
			<message arrival="8" deadline="infinity" sender="sensor">callSensor()</message>
		</queue>
		<now>8</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="hc_unit">
		<statevariables>
			<variable name="HC_Unit.heaterOn" type="boolean">false</variable>
			<variable name="HC_Unit.coolerOn" type="boolean">false</variable>
			<variable name="HC_Unit.currentRegulation" type="int">0</variable>
		</statevariables>
		<queue>
			<message arrival="10" deadline="infinity" sender="hc_unit">regulateTemp()</message>
		</queue>
		<now>8</now>
		<pc></pc>
		<res></res>
	</rebec>
</state>
<transition source="165_0" destination="166_0" executionTime="6" shift="0"> <time value="2"/></transition>
<transition source="162_0" destination="165_0" executionTime="6" shift="0"> <messageserver sender="controller" owner="controller" title="UPDATEOUTPUT"/></transition>
<state id="167_0" atomicpropositions="" >
	<rebec name="room">
		<statevariables>
			<variable name="Room.currentTemp" type="int">23</variable>
			<variable name="Room.currentRegulation" type="int">0</variable>
			<variable name="Room.outside_air" type="int">-1</variable>
		</statevariables>
		<queue>
			<message arrival="10" deadline="infinity" sender="room">updateStatus()</message>
		</queue>
		<now>6</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="controller">
		<statevariables>
			<variable name="Controller.currentTemp" type="int">23</variable>
			<variable name="Controller.isHeating" type="boolean">false</variable>
			<variable name="Controller.isCooling" type="boolean">false</variable>
		</statevariables>
		<queue>
		</queue>
		<now>6</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="sensor">
		<statevariables>
		</statevariables>
		<queue>
			<message arrival="8" deadline="infinity" sender="sensor">callSensor()</message>
		</queue>
		<now>6</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="hc_unit">
		<statevariables>
			<variable name="HC_Unit.heaterOn" type="boolean">false</variable>
			<variable name="HC_Unit.coolerOn" type="boolean">false</variable>
			<variable name="HC_Unit.currentRegulation" type="int">0</variable>
		</statevariables>
		<queue>
			<message arrival="10" deadline="infinity" sender="hc_unit">regulateTemp()</message>
		</queue>
		<now>6</now>
		<pc></pc>
		<res></res>
	</rebec>
</state>
<state id="168_0" atomicpropositions="" >
	<rebec name="room">
		<statevariables>
			<variable name="Room.currentTemp" type="int">23</variable>
			<variable name="Room.currentRegulation" type="int">0</variable>
			<variable name="Room.outside_air" type="int">-1</variable>
		</statevariables>
		<queue>
			<message arrival="10" deadline="infinity" sender="room">updateStatus()</message>
		</queue>
		<now>8</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="controller">
		<statevariables>
			<variable name="Controller.currentTemp" type="int">23</variable>
			<variable name="Controller.isHeating" type="boolean">false</variable>
			<variable name="Controller.isCooling" type="boolean">false</variable>
		</statevariables>
		<queue>
		</queue>
		<now>8</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="sensor">
		<statevariables>
		</statevariables>
		<queue>
			<message arrival="8" deadline="infinity" sender="sensor">callSensor()</message>
		</queue>
		<now>8</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="hc_unit">
		<statevariables>
			<variable name="HC_Unit.heaterOn" type="boolean">false</variable>
			<variable name="HC_Unit.coolerOn" type="boolean">false</variable>
			<variable name="HC_Unit.currentRegulation" type="int">0</variable>
		</statevariables>
		<queue>
			<message arrival="10" deadline="infinity" sender="hc_unit">regulateTemp()</message>
		</queue>
		<now>8</now>
		<pc></pc>
		<res></res>
	</rebec>
</state>
<transition source="167_0" destination="168_0" executionTime="6" shift="0"> <time value="2"/></transition>
<transition source="163_0" destination="167_0" executionTime="6" shift="0"> <messageserver sender="controller" owner="controller" title="UPDATEOUTPUT"/></transition>
<state id="169_0" atomicpropositions="" >
	<rebec name="room">
		<statevariables>
			<variable name="Room.currentTemp" type="int">22</variable>
			<variable name="Room.currentRegulation" type="int">0</variable>
			<variable name="Room.outside_air" type="int">0</variable>
		</statevariables>
		<queue>
			<message arrival="10" deadline="infinity" sender="room">updateStatus()</message>
		</queue>
		<now>6</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="controller">
		<statevariables>
			<variable name="Controller.currentTemp" type="int">22</variable>
			<variable name="Controller.isHeating" type="boolean">false</variable>
			<variable name="Controller.isCooling" type="boolean">false</variable>
		</statevariables>
		<queue>
		</queue>
		<now>6</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="sensor">
		<statevariables>
		</statevariables>
		<queue>
			<message arrival="8" deadline="infinity" sender="sensor">callSensor()</message>
		</queue>
		<now>6</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="hc_unit">
		<statevariables>
			<variable name="HC_Unit.heaterOn" type="boolean">false</variable>
			<variable name="HC_Unit.coolerOn" type="boolean">false</variable>
			<variable name="HC_Unit.currentRegulation" type="int">0</variable>
		</statevariables>
		<queue>
			<message arrival="10" deadline="infinity" sender="hc_unit">regulateTemp()</message>
		</queue>
		<now>6</now>
		<pc></pc>
		<res></res>
	</rebec>
</state>
<state id="170_0" atomicpropositions="" >
	<rebec name="room">
		<statevariables>
			<variable name="Room.currentTemp" type="int">22</variable>
			<variable name="Room.currentRegulation" type="int">0</variable>
			<variable name="Room.outside_air" type="int">0</variable>
		</statevariables>
		<queue>
			<message arrival="10" deadline="infinity" sender="room">updateStatus()</message>
		</queue>
		<now>8</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="controller">
		<statevariables>
			<variable name="Controller.currentTemp" type="int">22</variable>
			<variable name="Controller.isHeating" type="boolean">false</variable>
			<variable name="Controller.isCooling" type="boolean">false</variable>
		</statevariables>
		<queue>
		</queue>
		<now>8</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="sensor">
		<statevariables>
		</statevariables>
		<queue>
			<message arrival="8" deadline="infinity" sender="sensor">callSensor()</message>
		</queue>
		<now>8</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="hc_unit">
		<statevariables>
			<variable name="HC_Unit.heaterOn" type="boolean">false</variable>
			<variable name="HC_Unit.coolerOn" type="boolean">false</variable>
			<variable name="HC_Unit.currentRegulation" type="int">0</variable>
		</statevariables>
		<queue>
			<message arrival="10" deadline="infinity" sender="hc_unit">regulateTemp()</message>
		</queue>
		<now>8</now>
		<pc></pc>
		<res></res>
	</rebec>
</state>
<transition source="169_0" destination="170_0" executionTime="6" shift="0"> <time value="2"/></transition>
<transition source="164_0" destination="169_0" executionTime="6" shift="0"> <messageserver sender="controller" owner="controller" title="UPDATEOUTPUT"/></transition>
<state id="171_0" atomicpropositions="" >
	<rebec name="room">
		<statevariables>
			<variable name="Room.currentTemp" type="int">21</variable>
			<variable name="Room.currentRegulation" type="int">0</variable>
			<variable name="Room.outside_air" type="int">1</variable>
		</statevariables>
		<queue>
			<message arrival="8" deadline="infinity" sender="sensor">getTemp()</message>
			<message arrival="10" deadline="infinity" sender="room">updateStatus()</message>
		</queue>
		<now>8</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="controller">
		<statevariables>
			<variable name="Controller.currentTemp" type="int">21</variable>
			<variable name="Controller.isHeating" type="boolean">false</variable>
			<variable name="Controller.isCooling" type="boolean">false</variable>
		</statevariables>
		<queue>
		</queue>
		<now>8</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="sensor">
		<statevariables>
		</statevariables>
		<queue>
			<message arrival="10" deadline="infinity" sender="sensor">callSensor()</message>
		</queue>
		<now>8</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="hc_unit">
		<statevariables>
			<variable name="HC_Unit.heaterOn" type="boolean">false</variable>
			<variable name="HC_Unit.coolerOn" type="boolean">false</variable>
			<variable name="HC_Unit.currentRegulation" type="int">0</variable>
		</statevariables>
		<queue>
			<message arrival="10" deadline="infinity" sender="hc_unit">regulateTemp()</message>
		</queue>
		<now>8</now>
		<pc></pc>
		<res></res>
	</rebec>
</state>
<transition source="166_0" destination="171_0" executionTime="8" shift="0"> <messageserver sender="sensor" owner="sensor" title="CALLSENSOR"/></transition>
<state id="172_0" atomicpropositions="" >
	<rebec name="room">
		<statevariables>
			<variable name="Room.currentTemp" type="int">23</variable>
			<variable name="Room.currentRegulation" type="int">0</variable>
			<variable name="Room.outside_air" type="int">-1</variable>
		</statevariables>
		<queue>
			<message arrival="8" deadline="infinity" sender="sensor">getTemp()</message>
			<message arrival="10" deadline="infinity" sender="room">updateStatus()</message>
		</queue>
		<now>8</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="controller">
		<statevariables>
			<variable name="Controller.currentTemp" type="int">23</variable>
			<variable name="Controller.isHeating" type="boolean">false</variable>
			<variable name="Controller.isCooling" type="boolean">false</variable>
		</statevariables>
		<queue>
		</queue>
		<now>8</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="sensor">
		<statevariables>
		</statevariables>
		<queue>
			<message arrival="10" deadline="infinity" sender="sensor">callSensor()</message>
		</queue>
		<now>8</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="hc_unit">
		<statevariables>
			<variable name="HC_Unit.heaterOn" type="boolean">false</variable>
			<variable name="HC_Unit.coolerOn" type="boolean">false</variable>
			<variable name="HC_Unit.currentRegulation" type="int">0</variable>
		</statevariables>
		<queue>
			<message arrival="10" deadline="infinity" sender="hc_unit">regulateTemp()</message>
		</queue>
		<now>8</now>
		<pc></pc>
		<res></res>
	</rebec>
</state>
<transition source="168_0" destination="172_0" executionTime="8" shift="0"> <messageserver sender="sensor" owner="sensor" title="CALLSENSOR"/></transition>
<state id="173_0" atomicpropositions="" >
	<rebec name="room">
		<statevariables>
			<variable name="Room.currentTemp" type="int">22</variable>
			<variable name="Room.currentRegulation" type="int">0</variable>
			<variable name="Room.outside_air" type="int">0</variable>
		</statevariables>
		<queue>
			<message arrival="8" deadline="infinity" sender="sensor">getTemp()</message>
			<message arrival="10" deadline="infinity" sender="room">updateStatus()</message>
		</queue>
		<now>8</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="controller">
		<statevariables>
			<variable name="Controller.currentTemp" type="int">22</variable>
			<variable name="Controller.isHeating" type="boolean">false</variable>
			<variable name="Controller.isCooling" type="boolean">false</variable>
		</statevariables>
		<queue>
		</queue>
		<now>8</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="sensor">
		<statevariables>
		</statevariables>
		<queue>
			<message arrival="10" deadline="infinity" sender="sensor">callSensor()</message>
		</queue>
		<now>8</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="hc_unit">
		<statevariables>
			<variable name="HC_Unit.heaterOn" type="boolean">false</variable>
			<variable name="HC_Unit.coolerOn" type="boolean">false</variable>
			<variable name="HC_Unit.currentRegulation" type="int">0</variable>
		</statevariables>
		<queue>
			<message arrival="10" deadline="infinity" sender="hc_unit">regulateTemp()</message>
		</queue>
		<now>8</now>
		<pc></pc>
		<res></res>
	</rebec>
</state>
<transition source="170_0" destination="173_0" executionTime="8" shift="0"> <messageserver sender="sensor" owner="sensor" title="CALLSENSOR"/></transition>
<state id="174_0" atomicpropositions="" >
	<rebec name="room">
		<statevariables>
			<variable name="Room.currentTemp" type="int">21</variable>
			<variable name="Room.currentRegulation" type="int">0</variable>
			<variable name="Room.outside_air" type="int">1</variable>
		</statevariables>
		<queue>
			<message arrival="10" deadline="infinity" sender="room">updateStatus()</message>
		</queue>
		<now>8</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="controller">
		<statevariables>
			<variable name="Controller.currentTemp" type="int">21</variable>
			<variable name="Controller.isHeating" type="boolean">false</variable>
			<variable name="Controller.isCooling" type="boolean">false</variable>
		</statevariables>
		<queue>
		</queue>
		<now>8</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="sensor">
		<statevariables>
		</statevariables>
		<queue>
			<message arrival="8" deadline="infinity" sender="room">setCurrent(21)</message>
			<message arrival="10" deadline="infinity" sender="sensor">callSensor()</message>
		</queue>
		<now>8</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="hc_unit">
		<statevariables>
			<variable name="HC_Unit.heaterOn" type="boolean">false</variable>
			<variable name="HC_Unit.coolerOn" type="boolean">false</variable>
			<variable name="HC_Unit.currentRegulation" type="int">0</variable>
		</statevariables>
		<queue>
			<message arrival="10" deadline="infinity" sender="hc_unit">regulateTemp()</message>
		</queue>
		<now>8</now>
		<pc></pc>
		<res></res>
	</rebec>
</state>
<transition source="171_0" destination="174_0" executionTime="8" shift="0"> <messageserver sender="sensor" owner="room" title="GETTEMP"/></transition>
<state id="175_0" atomicpropositions="" >
	<rebec name="room">
		<statevariables>
			<variable name="Room.currentTemp" type="int">23</variable>
			<variable name="Room.currentRegulation" type="int">0</variable>
			<variable name="Room.outside_air" type="int">-1</variable>
		</statevariables>
		<queue>
			<message arrival="10" deadline="infinity" sender="room">updateStatus()</message>
		</queue>
		<now>8</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="controller">
		<statevariables>
			<variable name="Controller.currentTemp" type="int">23</variable>
			<variable name="Controller.isHeating" type="boolean">false</variable>
			<variable name="Controller.isCooling" type="boolean">false</variable>
		</statevariables>
		<queue>
		</queue>
		<now>8</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="sensor">
		<statevariables>
		</statevariables>
		<queue>
			<message arrival="8" deadline="infinity" sender="room">setCurrent(23)</message>
			<message arrival="10" deadline="infinity" sender="sensor">callSensor()</message>
		</queue>
		<now>8</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="hc_unit">
		<statevariables>
			<variable name="HC_Unit.heaterOn" type="boolean">false</variable>
			<variable name="HC_Unit.coolerOn" type="boolean">false</variable>
			<variable name="HC_Unit.currentRegulation" type="int">0</variable>
		</statevariables>
		<queue>
			<message arrival="10" deadline="infinity" sender="hc_unit">regulateTemp()</message>
		</queue>
		<now>8</now>
		<pc></pc>
		<res></res>
	</rebec>
</state>
<transition source="172_0" destination="175_0" executionTime="8" shift="0"> <messageserver sender="sensor" owner="room" title="GETTEMP"/></transition>
<state id="176_0" atomicpropositions="" >
	<rebec name="room">
		<statevariables>
			<variable name="Room.currentTemp" type="int">22</variable>
			<variable name="Room.currentRegulation" type="int">0</variable>
			<variable name="Room.outside_air" type="int">0</variable>
		</statevariables>
		<queue>
			<message arrival="10" deadline="infinity" sender="room">updateStatus()</message>
		</queue>
		<now>8</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="controller">
		<statevariables>
			<variable name="Controller.currentTemp" type="int">22</variable>
			<variable name="Controller.isHeating" type="boolean">false</variable>
			<variable name="Controller.isCooling" type="boolean">false</variable>
		</statevariables>
		<queue>
		</queue>
		<now>8</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="sensor">
		<statevariables>
		</statevariables>
		<queue>
			<message arrival="8" deadline="infinity" sender="room">setCurrent(22)</message>
			<message arrival="10" deadline="infinity" sender="sensor">callSensor()</message>
		</queue>
		<now>8</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="hc_unit">
		<statevariables>
			<variable name="HC_Unit.heaterOn" type="boolean">false</variable>
			<variable name="HC_Unit.coolerOn" type="boolean">false</variable>
			<variable name="HC_Unit.currentRegulation" type="int">0</variable>
		</statevariables>
		<queue>
			<message arrival="10" deadline="infinity" sender="hc_unit">regulateTemp()</message>
		</queue>
		<now>8</now>
		<pc></pc>
		<res></res>
	</rebec>
</state>
<transition source="173_0" destination="176_0" executionTime="8" shift="0"> <messageserver sender="sensor" owner="room" title="GETTEMP"/></transition>
<state id="177_0" atomicpropositions="" >
	<rebec name="room">
		<statevariables>
			<variable name="Room.currentTemp" type="int">21</variable>
			<variable name="Room.currentRegulation" type="int">0</variable>
			<variable name="Room.outside_air" type="int">1</variable>
		</statevariables>
		<queue>
			<message arrival="10" deadline="infinity" sender="room">updateStatus()</message>
		</queue>
		<now>8</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="controller">
		<statevariables>
			<variable name="Controller.currentTemp" type="int">21</variable>
			<variable name="Controller.isHeating" type="boolean">false</variable>
			<variable name="Controller.isCooling" type="boolean">false</variable>
		</statevariables>
		<queue>
			<message arrival="8" deadline="infinity" sender="sensor">setCurrent(21)</message>
		</queue>
		<now>8</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="sensor">
		<statevariables>
		</statevariables>
		<queue>
			<message arrival="10" deadline="infinity" sender="sensor">callSensor()</message>
		</queue>
		<now>8</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="hc_unit">
		<statevariables>
			<variable name="HC_Unit.heaterOn" type="boolean">false</variable>
			<variable name="HC_Unit.coolerOn" type="boolean">false</variable>
			<variable name="HC_Unit.currentRegulation" type="int">0</variable>
		</statevariables>
		<queue>
			<message arrival="10" deadline="infinity" sender="hc_unit">regulateTemp()</message>
		</queue>
		<now>8</now>
		<pc></pc>
		<res></res>
	</rebec>
</state>
<transition source="174_0" destination="177_0" executionTime="8" shift="0"> <messageserver sender="room" owner="sensor" title="SETCURRENT"/></transition>
<state id="178_0" atomicpropositions="" >
	<rebec name="room">
		<statevariables>
			<variable name="Room.currentTemp" type="int">23</variable>
			<variable name="Room.currentRegulation" type="int">0</variable>
			<variable name="Room.outside_air" type="int">-1</variable>
		</statevariables>
		<queue>
			<message arrival="10" deadline="infinity" sender="room">updateStatus()</message>
		</queue>
		<now>8</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="controller">
		<statevariables>
			<variable name="Controller.currentTemp" type="int">23</variable>
			<variable name="Controller.isHeating" type="boolean">false</variable>
			<variable name="Controller.isCooling" type="boolean">false</variable>
		</statevariables>
		<queue>
			<message arrival="8" deadline="infinity" sender="sensor">setCurrent(23)</message>
		</queue>
		<now>8</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="sensor">
		<statevariables>
		</statevariables>
		<queue>
			<message arrival="10" deadline="infinity" sender="sensor">callSensor()</message>
		</queue>
		<now>8</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="hc_unit">
		<statevariables>
			<variable name="HC_Unit.heaterOn" type="boolean">false</variable>
			<variable name="HC_Unit.coolerOn" type="boolean">false</variable>
			<variable name="HC_Unit.currentRegulation" type="int">0</variable>
		</statevariables>
		<queue>
			<message arrival="10" deadline="infinity" sender="hc_unit">regulateTemp()</message>
		</queue>
		<now>8</now>
		<pc></pc>
		<res></res>
	</rebec>
</state>
<transition source="175_0" destination="178_0" executionTime="8" shift="0"> <messageserver sender="room" owner="sensor" title="SETCURRENT"/></transition>
<state id="179_0" atomicpropositions="" >
	<rebec name="room">
		<statevariables>
			<variable name="Room.currentTemp" type="int">22</variable>
			<variable name="Room.currentRegulation" type="int">0</variable>
			<variable name="Room.outside_air" type="int">0</variable>
		</statevariables>
		<queue>
			<message arrival="10" deadline="infinity" sender="room">updateStatus()</message>
		</queue>
		<now>8</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="controller">
		<statevariables>
			<variable name="Controller.currentTemp" type="int">22</variable>
			<variable name="Controller.isHeating" type="boolean">false</variable>
			<variable name="Controller.isCooling" type="boolean">false</variable>
		</statevariables>
		<queue>
			<message arrival="8" deadline="infinity" sender="sensor">setCurrent(22)</message>
		</queue>
		<now>8</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="sensor">
		<statevariables>
		</statevariables>
		<queue>
			<message arrival="10" deadline="infinity" sender="sensor">callSensor()</message>
		</queue>
		<now>8</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="hc_unit">
		<statevariables>
			<variable name="HC_Unit.heaterOn" type="boolean">false</variable>
			<variable name="HC_Unit.coolerOn" type="boolean">false</variable>
			<variable name="HC_Unit.currentRegulation" type="int">0</variable>
		</statevariables>
		<queue>
			<message arrival="10" deadline="infinity" sender="hc_unit">regulateTemp()</message>
		</queue>
		<now>8</now>
		<pc></pc>
		<res></res>
	</rebec>
</state>
<transition source="176_0" destination="179_0" executionTime="8" shift="0"> <messageserver sender="room" owner="sensor" title="SETCURRENT"/></transition>
<state id="180_0" atomicpropositions="" >
	<rebec name="room">
		<statevariables>
			<variable name="Room.currentTemp" type="int">21</variable>
			<variable name="Room.currentRegulation" type="int">0</variable>
			<variable name="Room.outside_air" type="int">1</variable>
		</statevariables>
		<queue>
			<message arrival="10" deadline="infinity" sender="room">updateStatus()</message>
		</queue>
		<now>8</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="controller">
		<statevariables>
			<variable name="Controller.currentTemp" type="int">21</variable>
			<variable name="Controller.isHeating" type="boolean">false</variable>
			<variable name="Controller.isCooling" type="boolean">false</variable>
		</statevariables>
		<queue>
			<message arrival="8" deadline="infinity" sender="controller">updateOutput()</message>
		</queue>
		<now>8</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="sensor">
		<statevariables>
		</statevariables>
		<queue>
			<message arrival="10" deadline="infinity" sender="sensor">callSensor()</message>
		</queue>
		<now>8</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="hc_unit">
		<statevariables>
			<variable name="HC_Unit.heaterOn" type="boolean">false</variable>
			<variable name="HC_Unit.coolerOn" type="boolean">false</variable>
			<variable name="HC_Unit.currentRegulation" type="int">0</variable>
		</statevariables>
		<queue>
			<message arrival="10" deadline="infinity" sender="hc_unit">regulateTemp()</message>
		</queue>
		<now>8</now>
		<pc></pc>
		<res></res>
	</rebec>
</state>
<transition source="177_0" destination="180_0" executionTime="8" shift="0"> <messageserver sender="sensor" owner="controller" title="SETCURRENT"/></transition>
<state id="181_0" atomicpropositions="" >
	<rebec name="room">
		<statevariables>
			<variable name="Room.currentTemp" type="int">23</variable>
			<variable name="Room.currentRegulation" type="int">0</variable>
			<variable name="Room.outside_air" type="int">-1</variable>
		</statevariables>
		<queue>
			<message arrival="10" deadline="infinity" sender="room">updateStatus()</message>
		</queue>
		<now>8</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="controller">
		<statevariables>
			<variable name="Controller.currentTemp" type="int">23</variable>
			<variable name="Controller.isHeating" type="boolean">false</variable>
			<variable name="Controller.isCooling" type="boolean">false</variable>
		</statevariables>
		<queue>
			<message arrival="8" deadline="infinity" sender="controller">updateOutput()</message>
		</queue>
		<now>8</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="sensor">
		<statevariables>
		</statevariables>
		<queue>
			<message arrival="10" deadline="infinity" sender="sensor">callSensor()</message>
		</queue>
		<now>8</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="hc_unit">
		<statevariables>
			<variable name="HC_Unit.heaterOn" type="boolean">false</variable>
			<variable name="HC_Unit.coolerOn" type="boolean">false</variable>
			<variable name="HC_Unit.currentRegulation" type="int">0</variable>
		</statevariables>
		<queue>
			<message arrival="10" deadline="infinity" sender="hc_unit">regulateTemp()</message>
		</queue>
		<now>8</now>
		<pc></pc>
		<res></res>
	</rebec>
</state>
<transition source="178_0" destination="181_0" executionTime="8" shift="0"> <messageserver sender="sensor" owner="controller" title="SETCURRENT"/></transition>
<state id="182_0" atomicpropositions="" >
	<rebec name="room">
		<statevariables>
			<variable name="Room.currentTemp" type="int">22</variable>
			<variable name="Room.currentRegulation" type="int">0</variable>
			<variable name="Room.outside_air" type="int">0</variable>
		</statevariables>
		<queue>
			<message arrival="10" deadline="infinity" sender="room">updateStatus()</message>
		</queue>
		<now>8</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="controller">
		<statevariables>
			<variable name="Controller.currentTemp" type="int">22</variable>
			<variable name="Controller.isHeating" type="boolean">false</variable>
			<variable name="Controller.isCooling" type="boolean">false</variable>
		</statevariables>
		<queue>
			<message arrival="8" deadline="infinity" sender="controller">updateOutput()</message>
		</queue>
		<now>8</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="sensor">
		<statevariables>
		</statevariables>
		<queue>
			<message arrival="10" deadline="infinity" sender="sensor">callSensor()</message>
		</queue>
		<now>8</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="hc_unit">
		<statevariables>
			<variable name="HC_Unit.heaterOn" type="boolean">false</variable>
			<variable name="HC_Unit.coolerOn" type="boolean">false</variable>
			<variable name="HC_Unit.currentRegulation" type="int">0</variable>
		</statevariables>
		<queue>
			<message arrival="10" deadline="infinity" sender="hc_unit">regulateTemp()</message>
		</queue>
		<now>8</now>
		<pc></pc>
		<res></res>
	</rebec>
</state>
<transition source="179_0" destination="182_0" executionTime="8" shift="0"> <messageserver sender="sensor" owner="controller" title="SETCURRENT"/></transition>
<state id="183_0" atomicpropositions="" >
	<rebec name="room">
		<statevariables>
			<variable name="Room.currentTemp" type="int">21</variable>
			<variable name="Room.currentRegulation" type="int">0</variable>
			<variable name="Room.outside_air" type="int">1</variable>
		</statevariables>
		<queue>
			<message arrival="10" deadline="infinity" sender="room">updateStatus()</message>
		</queue>
		<now>8</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="controller">
		<statevariables>
			<variable name="Controller.currentTemp" type="int">21</variable>
			<variable name="Controller.isHeating" type="boolean">false</variable>
			<variable name="Controller.isCooling" type="boolean">false</variable>
		</statevariables>
		<queue>
		</queue>
		<now>8</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="sensor">
		<statevariables>
		</statevariables>
		<queue>
			<message arrival="10" deadline="infinity" sender="sensor">callSensor()</message>
		</queue>
		<now>8</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="hc_unit">
		<statevariables>
			<variable name="HC_Unit.heaterOn" type="boolean">false</variable>
			<variable name="HC_Unit.coolerOn" type="boolean">false</variable>
			<variable name="HC_Unit.currentRegulation" type="int">0</variable>
		</statevariables>
		<queue>
			<message arrival="10" deadline="infinity" sender="hc_unit">regulateTemp()</message>
		</queue>
		<now>8</now>
		<pc></pc>
		<res></res>
	</rebec>
</state>
<state id="184_0" atomicpropositions="" >
	<rebec name="room">
		<statevariables>
			<variable name="Room.currentTemp" type="int">21</variable>
			<variable name="Room.currentRegulation" type="int">0</variable>
			<variable name="Room.outside_air" type="int">1</variable>
		</statevariables>
		<queue>
			<message arrival="10" deadline="infinity" sender="room">updateStatus()</message>
		</queue>
		<now>10</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="controller">
		<statevariables>
			<variable name="Controller.currentTemp" type="int">21</variable>
			<variable name="Controller.isHeating" type="boolean">false</variable>
			<variable name="Controller.isCooling" type="boolean">false</variable>
		</statevariables>
		<queue>
		</queue>
		<now>10</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="sensor">
		<statevariables>
		</statevariables>
		<queue>
			<message arrival="10" deadline="infinity" sender="sensor">callSensor()</message>
		</queue>
		<now>10</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="hc_unit">
		<statevariables>
			<variable name="HC_Unit.heaterOn" type="boolean">false</variable>
			<variable name="HC_Unit.coolerOn" type="boolean">false</variable>
			<variable name="HC_Unit.currentRegulation" type="int">0</variable>
		</statevariables>
		<queue>
			<message arrival="10" deadline="infinity" sender="hc_unit">regulateTemp()</message>
		</queue>
		<now>10</now>
		<pc></pc>
		<res></res>
	</rebec>
</state>
<transition source="183_0" destination="184_0" executionTime="8" shift="0"> <time value="2"/></transition>
<transition source="180_0" destination="183_0" executionTime="8" shift="0"> <messageserver sender="controller" owner="controller" title="UPDATEOUTPUT"/></transition>
<state id="185_0" atomicpropositions="" >
	<rebec name="room">
		<statevariables>
			<variable name="Room.currentTemp" type="int">23</variable>
			<variable name="Room.currentRegulation" type="int">0</variable>
			<variable name="Room.outside_air" type="int">-1</variable>
		</statevariables>
		<queue>
			<message arrival="10" deadline="infinity" sender="room">updateStatus()</message>
		</queue>
		<now>8</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="controller">
		<statevariables>
			<variable name="Controller.currentTemp" type="int">23</variable>
			<variable name="Controller.isHeating" type="boolean">false</variable>
			<variable name="Controller.isCooling" type="boolean">false</variable>
		</statevariables>
		<queue>
		</queue>
		<now>8</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="sensor">
		<statevariables>
		</statevariables>
		<queue>
			<message arrival="10" deadline="infinity" sender="sensor">callSensor()</message>
		</queue>
		<now>8</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="hc_unit">
		<statevariables>
			<variable name="HC_Unit.heaterOn" type="boolean">false</variable>
			<variable name="HC_Unit.coolerOn" type="boolean">false</variable>
			<variable name="HC_Unit.currentRegulation" type="int">0</variable>
		</statevariables>
		<queue>
			<message arrival="10" deadline="infinity" sender="hc_unit">regulateTemp()</message>
		</queue>
		<now>8</now>
		<pc></pc>
		<res></res>
	</rebec>
</state>
<state id="186_0" atomicpropositions="" >
	<rebec name="room">
		<statevariables>
			<variable name="Room.currentTemp" type="int">23</variable>
			<variable name="Room.currentRegulation" type="int">0</variable>
			<variable name="Room.outside_air" type="int">-1</variable>
		</statevariables>
		<queue>
			<message arrival="10" deadline="infinity" sender="room">updateStatus()</message>
		</queue>
		<now>10</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="controller">
		<statevariables>
			<variable name="Controller.currentTemp" type="int">23</variable>
			<variable name="Controller.isHeating" type="boolean">false</variable>
			<variable name="Controller.isCooling" type="boolean">false</variable>
		</statevariables>
		<queue>
		</queue>
		<now>10</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="sensor">
		<statevariables>
		</statevariables>
		<queue>
			<message arrival="10" deadline="infinity" sender="sensor">callSensor()</message>
		</queue>
		<now>10</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="hc_unit">
		<statevariables>
			<variable name="HC_Unit.heaterOn" type="boolean">false</variable>
			<variable name="HC_Unit.coolerOn" type="boolean">false</variable>
			<variable name="HC_Unit.currentRegulation" type="int">0</variable>
		</statevariables>
		<queue>
			<message arrival="10" deadline="infinity" sender="hc_unit">regulateTemp()</message>
		</queue>
		<now>10</now>
		<pc></pc>
		<res></res>
	</rebec>
</state>
<transition source="185_0" destination="186_0" executionTime="8" shift="0"> <time value="2"/></transition>
<transition source="181_0" destination="185_0" executionTime="8" shift="0"> <messageserver sender="controller" owner="controller" title="UPDATEOUTPUT"/></transition>
<state id="187_0" atomicpropositions="" >
	<rebec name="room">
		<statevariables>
			<variable name="Room.currentTemp" type="int">22</variable>
			<variable name="Room.currentRegulation" type="int">0</variable>
			<variable name="Room.outside_air" type="int">0</variable>
		</statevariables>
		<queue>
			<message arrival="10" deadline="infinity" sender="room">updateStatus()</message>
		</queue>
		<now>8</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="controller">
		<statevariables>
			<variable name="Controller.currentTemp" type="int">22</variable>
			<variable name="Controller.isHeating" type="boolean">false</variable>
			<variable name="Controller.isCooling" type="boolean">false</variable>
		</statevariables>
		<queue>
		</queue>
		<now>8</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="sensor">
		<statevariables>
		</statevariables>
		<queue>
			<message arrival="10" deadline="infinity" sender="sensor">callSensor()</message>
		</queue>
		<now>8</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="hc_unit">
		<statevariables>
			<variable name="HC_Unit.heaterOn" type="boolean">false</variable>
			<variable name="HC_Unit.coolerOn" type="boolean">false</variable>
			<variable name="HC_Unit.currentRegulation" type="int">0</variable>
		</statevariables>
		<queue>
			<message arrival="10" deadline="infinity" sender="hc_unit">regulateTemp()</message>
		</queue>
		<now>8</now>
		<pc></pc>
		<res></res>
	</rebec>
</state>
<transition source="187_0" destination="1_0" executionTime="8" shift="10"> <time value="2"/></transition>
<transition source="182_0" destination="187_0" executionTime="8" shift="0"> <messageserver sender="controller" owner="controller" title="UPDATEOUTPUT"/></transition>
<state id="188_0" atomicpropositions="" >
	<rebec name="room">
		<statevariables>
			<variable name="Room.currentTemp" type="int">20</variable>
			<variable name="Room.currentRegulation" type="int">0</variable>
			<variable name="Room.outside_air" type="int">1</variable>
		</statevariables>
		<queue>
			<message arrival="20" deadline="infinity" sender="room">updateStatus()</message>
		</queue>
		<now>10</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="controller">
		<statevariables>
			<variable name="Controller.currentTemp" type="int">21</variable>
			<variable name="Controller.isHeating" type="boolean">false</variable>
			<variable name="Controller.isCooling" type="boolean">false</variable>
		</statevariables>
		<queue>
		</queue>
		<now>10</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="sensor">
		<statevariables>
		</statevariables>
		<queue>
			<message arrival="10" deadline="infinity" sender="sensor">callSensor()</message>
		</queue>
		<now>10</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="hc_unit">
		<statevariables>
			<variable name="HC_Unit.heaterOn" type="boolean">false</variable>
			<variable name="HC_Unit.coolerOn" type="boolean">false</variable>
			<variable name="HC_Unit.currentRegulation" type="int">0</variable>
		</statevariables>
		<queue>
			<message arrival="10" deadline="infinity" sender="hc_unit">regulateTemp()</message>
		</queue>
		<now>10</now>
		<pc></pc>
		<res></res>
	</rebec>
</state>
<transition source="184_0" destination="188_0" executionTime="10" shift="0"> <messageserver sender="room" owner="room" title="UPDATESTATUS"/></transition>
<state id="189_0" atomicpropositions="" >
	<rebec name="room">
		<statevariables>
			<variable name="Room.currentTemp" type="int">21</variable>
			<variable name="Room.currentRegulation" type="int">0</variable>
			<variable name="Room.outside_air" type="int">0</variable>
		</statevariables>
		<queue>
			<message arrival="20" deadline="infinity" sender="room">updateStatus()</message>
		</queue>
		<now>10</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="controller">
		<statevariables>
			<variable name="Controller.currentTemp" type="int">21</variable>
			<variable name="Controller.isHeating" type="boolean">false</variable>
			<variable name="Controller.isCooling" type="boolean">false</variable>
		</statevariables>
		<queue>
		</queue>
		<now>10</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="sensor">
		<statevariables>
		</statevariables>
		<queue>
			<message arrival="10" deadline="infinity" sender="sensor">callSensor()</message>
		</queue>
		<now>10</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="hc_unit">
		<statevariables>
			<variable name="HC_Unit.heaterOn" type="boolean">false</variable>
			<variable name="HC_Unit.coolerOn" type="boolean">false</variable>
			<variable name="HC_Unit.currentRegulation" type="int">0</variable>
		</statevariables>
		<queue>
			<message arrival="10" deadline="infinity" sender="hc_unit">regulateTemp()</message>
		</queue>
		<now>10</now>
		<pc></pc>
		<res></res>
	</rebec>
</state>
<transition source="184_0" destination="189_0" executionTime="10" shift="0"> <messageserver sender="room" owner="room" title="UPDATESTATUS"/></transition>
<state id="190_0" atomicpropositions="" >
	<rebec name="room">
		<statevariables>
			<variable name="Room.currentTemp" type="int">22</variable>
			<variable name="Room.currentRegulation" type="int">0</variable>
			<variable name="Room.outside_air" type="int">-1</variable>
		</statevariables>
		<queue>
			<message arrival="20" deadline="infinity" sender="room">updateStatus()</message>
		</queue>
		<now>10</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="controller">
		<statevariables>
			<variable name="Controller.currentTemp" type="int">21</variable>
			<variable name="Controller.isHeating" type="boolean">false</variable>
			<variable name="Controller.isCooling" type="boolean">false</variable>
		</statevariables>
		<queue>
		</queue>
		<now>10</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="sensor">
		<statevariables>
		</statevariables>
		<queue>
			<message arrival="10" deadline="infinity" sender="sensor">callSensor()</message>
		</queue>
		<now>10</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="hc_unit">
		<statevariables>
			<variable name="HC_Unit.heaterOn" type="boolean">false</variable>
			<variable name="HC_Unit.coolerOn" type="boolean">false</variable>
			<variable name="HC_Unit.currentRegulation" type="int">0</variable>
		</statevariables>
		<queue>
			<message arrival="10" deadline="infinity" sender="hc_unit">regulateTemp()</message>
		</queue>
		<now>10</now>
		<pc></pc>
		<res></res>
	</rebec>
</state>
<transition source="184_0" destination="190_0" executionTime="10" shift="0"> <messageserver sender="room" owner="room" title="UPDATESTATUS"/></transition>
<state id="191_0" atomicpropositions="" >
	<rebec name="room">
		<statevariables>
			<variable name="Room.currentTemp" type="int">21</variable>
			<variable name="Room.currentRegulation" type="int">0</variable>
			<variable name="Room.outside_air" type="int">1</variable>
		</statevariables>
		<queue>
			<message arrival="10" deadline="infinity" sender="room">updateStatus()</message>
			<message arrival="10" deadline="infinity" sender="sensor">getTemp()</message>
		</queue>
		<now>10</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="controller">
		<statevariables>
			<variable name="Controller.currentTemp" type="int">21</variable>
			<variable name="Controller.isHeating" type="boolean">false</variable>
			<variable name="Controller.isCooling" type="boolean">false</variable>
		</statevariables>
		<queue>
		</queue>
		<now>10</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="sensor">
		<statevariables>
		</statevariables>
		<queue>
			<message arrival="12" deadline="infinity" sender="sensor">callSensor()</message>
		</queue>
		<now>10</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="hc_unit">
		<statevariables>
			<variable name="HC_Unit.heaterOn" type="boolean">false</variable>
			<variable name="HC_Unit.coolerOn" type="boolean">false</variable>
			<variable name="HC_Unit.currentRegulation" type="int">0</variable>
		</statevariables>
		<queue>
			<message arrival="10" deadline="infinity" sender="hc_unit">regulateTemp()</message>
		</queue>
		<now>10</now>
		<pc></pc>
		<res></res>
	</rebec>
</state>
<transition source="184_0" destination="191_0" executionTime="10" shift="0"> <messageserver sender="sensor" owner="sensor" title="CALLSENSOR"/></transition>
<state id="192_0" atomicpropositions="" >
	<rebec name="room">
		<statevariables>
			<variable name="Room.currentTemp" type="int">21</variable>
			<variable name="Room.currentRegulation" type="int">0</variable>
			<variable name="Room.outside_air" type="int">1</variable>
		</statevariables>
		<queue>
			<message arrival="10" deadline="infinity" sender="room">updateStatus()</message>
			<message arrival="10" deadline="infinity" sender="hc_unit">setRegulation(0)</message>
		</queue>
		<now>10</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="controller">
		<statevariables>
			<variable name="Controller.currentTemp" type="int">21</variable>
			<variable name="Controller.isHeating" type="boolean">false</variable>
			<variable name="Controller.isCooling" type="boolean">false</variable>
		</statevariables>
		<queue>
		</queue>
		<now>10</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="sensor">
		<statevariables>
		</statevariables>
		<queue>
			<message arrival="10" deadline="infinity" sender="sensor">callSensor()</message>
		</queue>
		<now>10</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="hc_unit">
		<statevariables>
			<variable name="HC_Unit.heaterOn" type="boolean">false</variable>
			<variable name="HC_Unit.coolerOn" type="boolean">false</variable>
			<variable name="HC_Unit.currentRegulation" type="int">0</variable>
		</statevariables>
		<queue>
			<message arrival="15" deadline="infinity" sender="hc_unit">regulateTemp()</message>
		</queue>
		<now>10</now>
		<pc></pc>
		<res></res>
	</rebec>
</state>
<transition source="184_0" destination="192_0" executionTime="10" shift="0"> <messageserver sender="hc_unit" owner="hc_unit" title="REGULATETEMP"/></transition>
<state id="193_0" atomicpropositions="" >
	<rebec name="room">
		<statevariables>
			<variable name="Room.currentTemp" type="int">22</variable>
			<variable name="Room.currentRegulation" type="int">0</variable>
			<variable name="Room.outside_air" type="int">1</variable>
		</statevariables>
		<queue>
			<message arrival="20" deadline="infinity" sender="room">updateStatus()</message>
		</queue>
		<now>10</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="controller">
		<statevariables>
			<variable name="Controller.currentTemp" type="int">23</variable>
			<variable name="Controller.isHeating" type="boolean">false</variable>
			<variable name="Controller.isCooling" type="boolean">false</variable>
		</statevariables>
		<queue>
		</queue>
		<now>10</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="sensor">
		<statevariables>
		</statevariables>
		<queue>
			<message arrival="10" deadline="infinity" sender="sensor">callSensor()</message>
		</queue>
		<now>10</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="hc_unit">
		<statevariables>
			<variable name="HC_Unit.heaterOn" type="boolean">false</variable>
			<variable name="HC_Unit.coolerOn" type="boolean">false</variable>
			<variable name="HC_Unit.currentRegulation" type="int">0</variable>
		</statevariables>
		<queue>
			<message arrival="10" deadline="infinity" sender="hc_unit">regulateTemp()</message>
		</queue>
		<now>10</now>
		<pc></pc>
		<res></res>
	</rebec>
</state>
<transition source="186_0" destination="193_0" executionTime="10" shift="0"> <messageserver sender="room" owner="room" title="UPDATESTATUS"/></transition>
<state id="194_0" atomicpropositions="" >
	<rebec name="room">
		<statevariables>
			<variable name="Room.currentTemp" type="int">23</variable>
			<variable name="Room.currentRegulation" type="int">0</variable>
			<variable name="Room.outside_air" type="int">0</variable>
		</statevariables>
		<queue>
			<message arrival="20" deadline="infinity" sender="room">updateStatus()</message>
		</queue>
		<now>10</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="controller">
		<statevariables>
			<variable name="Controller.currentTemp" type="int">23</variable>
			<variable name="Controller.isHeating" type="boolean">false</variable>
			<variable name="Controller.isCooling" type="boolean">false</variable>
		</statevariables>
		<queue>
		</queue>
		<now>10</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="sensor">
		<statevariables>
		</statevariables>
		<queue>
			<message arrival="10" deadline="infinity" sender="sensor">callSensor()</message>
		</queue>
		<now>10</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="hc_unit">
		<statevariables>
			<variable name="HC_Unit.heaterOn" type="boolean">false</variable>
			<variable name="HC_Unit.coolerOn" type="boolean">false</variable>
			<variable name="HC_Unit.currentRegulation" type="int">0</variable>
		</statevariables>
		<queue>
			<message arrival="10" deadline="infinity" sender="hc_unit">regulateTemp()</message>
		</queue>
		<now>10</now>
		<pc></pc>
		<res></res>
	</rebec>
</state>
<transition source="186_0" destination="194_0" executionTime="10" shift="0"> <messageserver sender="room" owner="room" title="UPDATESTATUS"/></transition>
<state id="195_0" atomicpropositions="" >
	<rebec name="room">
		<statevariables>
			<variable name="Room.currentTemp" type="int">24</variable>
			<variable name="Room.currentRegulation" type="int">0</variable>
			<variable name="Room.outside_air" type="int">-1</variable>
		</statevariables>
		<queue>
			<message arrival="20" deadline="infinity" sender="room">updateStatus()</message>
		</queue>
		<now>10</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="controller">
		<statevariables>
			<variable name="Controller.currentTemp" type="int">23</variable>
			<variable name="Controller.isHeating" type="boolean">false</variable>
			<variable name="Controller.isCooling" type="boolean">false</variable>
		</statevariables>
		<queue>
		</queue>
		<now>10</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="sensor">
		<statevariables>
		</statevariables>
		<queue>
			<message arrival="10" deadline="infinity" sender="sensor">callSensor()</message>
		</queue>
		<now>10</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="hc_unit">
		<statevariables>
			<variable name="HC_Unit.heaterOn" type="boolean">false</variable>
			<variable name="HC_Unit.coolerOn" type="boolean">false</variable>
			<variable name="HC_Unit.currentRegulation" type="int">0</variable>
		</statevariables>
		<queue>
			<message arrival="10" deadline="infinity" sender="hc_unit">regulateTemp()</message>
		</queue>
		<now>10</now>
		<pc></pc>
		<res></res>
	</rebec>
</state>
<transition source="186_0" destination="195_0" executionTime="10" shift="0"> <messageserver sender="room" owner="room" title="UPDATESTATUS"/></transition>
<state id="196_0" atomicpropositions="" >
	<rebec name="room">
		<statevariables>
			<variable name="Room.currentTemp" type="int">23</variable>
			<variable name="Room.currentRegulation" type="int">0</variable>
			<variable name="Room.outside_air" type="int">-1</variable>
		</statevariables>
		<queue>
			<message arrival="10" deadline="infinity" sender="room">updateStatus()</message>
			<message arrival="10" deadline="infinity" sender="sensor">getTemp()</message>
		</queue>
		<now>10</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="controller">
		<statevariables>
			<variable name="Controller.currentTemp" type="int">23</variable>
			<variable name="Controller.isHeating" type="boolean">false</variable>
			<variable name="Controller.isCooling" type="boolean">false</variable>
		</statevariables>
		<queue>
		</queue>
		<now>10</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="sensor">
		<statevariables>
		</statevariables>
		<queue>
			<message arrival="12" deadline="infinity" sender="sensor">callSensor()</message>
		</queue>
		<now>10</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="hc_unit">
		<statevariables>
			<variable name="HC_Unit.heaterOn" type="boolean">false</variable>
			<variable name="HC_Unit.coolerOn" type="boolean">false</variable>
			<variable name="HC_Unit.currentRegulation" type="int">0</variable>
		</statevariables>
		<queue>
			<message arrival="10" deadline="infinity" sender="hc_unit">regulateTemp()</message>
		</queue>
		<now>10</now>
		<pc></pc>
		<res></res>
	</rebec>
</state>
<transition source="186_0" destination="196_0" executionTime="10" shift="0"> <messageserver sender="sensor" owner="sensor" title="CALLSENSOR"/></transition>
<state id="197_0" atomicpropositions="" >
	<rebec name="room">
		<statevariables>
			<variable name="Room.currentTemp" type="int">23</variable>
			<variable name="Room.currentRegulation" type="int">0</variable>
			<variable name="Room.outside_air" type="int">-1</variable>
		</statevariables>
		<queue>
			<message arrival="10" deadline="infinity" sender="room">updateStatus()</message>
			<message arrival="10" deadline="infinity" sender="hc_unit">setRegulation(0)</message>
		</queue>
		<now>10</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="controller">
		<statevariables>
			<variable name="Controller.currentTemp" type="int">23</variable>
			<variable name="Controller.isHeating" type="boolean">false</variable>
			<variable name="Controller.isCooling" type="boolean">false</variable>
		</statevariables>
		<queue>
		</queue>
		<now>10</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="sensor">
		<statevariables>
		</statevariables>
		<queue>
			<message arrival="10" deadline="infinity" sender="sensor">callSensor()</message>
		</queue>
		<now>10</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="hc_unit">
		<statevariables>
			<variable name="HC_Unit.heaterOn" type="boolean">false</variable>
			<variable name="HC_Unit.coolerOn" type="boolean">false</variable>
			<variable name="HC_Unit.currentRegulation" type="int">0</variable>
		</statevariables>
		<queue>
			<message arrival="15" deadline="infinity" sender="hc_unit">regulateTemp()</message>
		</queue>
		<now>10</now>
		<pc></pc>
		<res></res>
	</rebec>
</state>
<transition source="186_0" destination="197_0" executionTime="10" shift="0"> <messageserver sender="hc_unit" owner="hc_unit" title="REGULATETEMP"/></transition>
<state id="198_0" atomicpropositions="" >
	<rebec name="room">
		<statevariables>
			<variable name="Room.currentTemp" type="int">21</variable>
			<variable name="Room.currentRegulation" type="int">0</variable>
			<variable name="Room.outside_air" type="int">0</variable>
		</statevariables>
		<queue>
			<message arrival="10" deadline="infinity" sender="sensor">getTemp()</message>
			<message arrival="20" deadline="infinity" sender="room">updateStatus()</message>
		</queue>
		<now>10</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="controller">
		<statevariables>
			<variable name="Controller.currentTemp" type="int">21</variable>
			<variable name="Controller.isHeating" type="boolean">false</variable>
			<variable name="Controller.isCooling" type="boolean">false</variable>
		</statevariables>
		<queue>
		</queue>
		<now>10</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="sensor">
		<statevariables>
		</statevariables>
		<queue>
			<message arrival="12" deadline="infinity" sender="sensor">callSensor()</message>
		</queue>
		<now>10</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="hc_unit">
		<statevariables>
			<variable name="HC_Unit.heaterOn" type="boolean">false</variable>
			<variable name="HC_Unit.coolerOn" type="boolean">false</variable>
			<variable name="HC_Unit.currentRegulation" type="int">0</variable>
		</statevariables>
		<queue>
			<message arrival="10" deadline="infinity" sender="hc_unit">regulateTemp()</message>
		</queue>
		<now>10</now>
		<pc></pc>
		<res></res>
	</rebec>
</state>
<transition source="189_0" destination="198_0" executionTime="10" shift="0"> <messageserver sender="sensor" owner="sensor" title="CALLSENSOR"/></transition>
<state id="199_0" atomicpropositions="" >
	<rebec name="room">
		<statevariables>
			<variable name="Room.currentTemp" type="int">21</variable>
			<variable name="Room.currentRegulation" type="int">0</variable>
			<variable name="Room.outside_air" type="int">0</variable>
		</statevariables>
		<queue>
			<message arrival="10" deadline="infinity" sender="hc_unit">setRegulation(0)</message>
			<message arrival="20" deadline="infinity" sender="room">updateStatus()</message>
		</queue>
		<now>10</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="controller">
		<statevariables>
			<variable name="Controller.currentTemp" type="int">21</variable>
			<variable name="Controller.isHeating" type="boolean">false</variable>
			<variable name="Controller.isCooling" type="boolean">false</variable>
		</statevariables>
		<queue>
		</queue>
		<now>10</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="sensor">
		<statevariables>
		</statevariables>
		<queue>
			<message arrival="10" deadline="infinity" sender="sensor">callSensor()</message>
		</queue>
		<now>10</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="hc_unit">
		<statevariables>
			<variable name="HC_Unit.heaterOn" type="boolean">false</variable>
			<variable name="HC_Unit.coolerOn" type="boolean">false</variable>
			<variable name="HC_Unit.currentRegulation" type="int">0</variable>
		</statevariables>
		<queue>
			<message arrival="15" deadline="infinity" sender="hc_unit">regulateTemp()</message>
		</queue>
		<now>10</now>
		<pc></pc>
		<res></res>
	</rebec>
</state>
<transition source="189_0" destination="199_0" executionTime="10" shift="0"> <messageserver sender="hc_unit" owner="hc_unit" title="REGULATETEMP"/></transition>
<state id="200_0" atomicpropositions="" >
	<rebec name="room">
		<statevariables>
			<variable name="Room.currentTemp" type="int">20</variable>
			<variable name="Room.currentRegulation" type="int">0</variable>
			<variable name="Room.outside_air" type="int">1</variable>
		</statevariables>
		<queue>
			<message arrival="10" deadline="infinity" sender="hc_unit">setRegulation(0)</message>
			<message arrival="20" deadline="infinity" sender="room">updateStatus()</message>
		</queue>
		<now>10</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="controller">
		<statevariables>
			<variable name="Controller.currentTemp" type="int">21</variable>
			<variable name="Controller.isHeating" type="boolean">false</variable>
			<variable name="Controller.isCooling" type="boolean">false</variable>
		</statevariables>
		<queue>
		</queue>
		<now>10</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="sensor">
		<statevariables>
		</statevariables>
		<queue>
			<message arrival="10" deadline="infinity" sender="sensor">callSensor()</message>
		</queue>
		<now>10</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="hc_unit">
		<statevariables>
			<variable name="HC_Unit.heaterOn" type="boolean">false</variable>
			<variable name="HC_Unit.coolerOn" type="boolean">false</variable>
			<variable name="HC_Unit.currentRegulation" type="int">0</variable>
		</statevariables>
		<queue>
			<message arrival="15" deadline="infinity" sender="hc_unit">regulateTemp()</message>
		</queue>
		<now>10</now>
		<pc></pc>
		<res></res>
	</rebec>
</state>
<transition source="192_0" destination="200_0" executionTime="10" shift="0"> <messageserver sender="room" owner="room" title="UPDATESTATUS"/></transition>
<transition source="192_0" destination="199_0" executionTime="10" shift="0"> <messageserver sender="room" owner="room" title="UPDATESTATUS"/></transition>
<state id="201_0" atomicpropositions="" >
	<rebec name="room">
		<statevariables>
			<variable name="Room.currentTemp" type="int">22</variable>
			<variable name="Room.currentRegulation" type="int">0</variable>
			<variable name="Room.outside_air" type="int">-1</variable>
		</statevariables>
		<queue>
			<message arrival="10" deadline="infinity" sender="hc_unit">setRegulation(0)</message>
			<message arrival="20" deadline="infinity" sender="room">updateStatus()</message>
		</queue>
		<now>10</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="controller">
		<statevariables>
			<variable name="Controller.currentTemp" type="int">21</variable>
			<variable name="Controller.isHeating" type="boolean">false</variable>
			<variable name="Controller.isCooling" type="boolean">false</variable>
		</statevariables>
		<queue>
		</queue>
		<now>10</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="sensor">
		<statevariables>
		</statevariables>
		<queue>
			<message arrival="10" deadline="infinity" sender="sensor">callSensor()</message>
		</queue>
		<now>10</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="hc_unit">
		<statevariables>
			<variable name="HC_Unit.heaterOn" type="boolean">false</variable>
			<variable name="HC_Unit.coolerOn" type="boolean">false</variable>
			<variable name="HC_Unit.currentRegulation" type="int">0</variable>
		</statevariables>
		<queue>
			<message arrival="15" deadline="infinity" sender="hc_unit">regulateTemp()</message>
		</queue>
		<now>10</now>
		<pc></pc>
		<res></res>
	</rebec>
</state>
<transition source="192_0" destination="201_0" executionTime="10" shift="0"> <messageserver sender="room" owner="room" title="UPDATESTATUS"/></transition>
<state id="202_0" atomicpropositions="" >
	<rebec name="room">
		<statevariables>
			<variable name="Room.currentTemp" type="int">21</variable>
			<variable name="Room.currentRegulation" type="int">0</variable>
			<variable name="Room.outside_air" type="int">1</variable>
		</statevariables>
		<queue>
			<message arrival="10" deadline="infinity" sender="room">updateStatus()</message>
		</queue>
		<now>10</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="controller">
		<statevariables>
			<variable name="Controller.currentTemp" type="int">21</variable>
			<variable name="Controller.isHeating" type="boolean">false</variable>
			<variable name="Controller.isCooling" type="boolean">false</variable>
		</statevariables>
		<queue>
		</queue>
		<now>10</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="sensor">
		<statevariables>
		</statevariables>
		<queue>
			<message arrival="10" deadline="infinity" sender="sensor">callSensor()</message>
		</queue>
		<now>10</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="hc_unit">
		<statevariables>
			<variable name="HC_Unit.heaterOn" type="boolean">false</variable>
			<variable name="HC_Unit.coolerOn" type="boolean">false</variable>
			<variable name="HC_Unit.currentRegulation" type="int">0</variable>
		</statevariables>
		<queue>
			<message arrival="15" deadline="infinity" sender="hc_unit">regulateTemp()</message>
		</queue>
		<now>10</now>
		<pc></pc>
		<res></res>
	</rebec>
</state>
<transition source="192_0" destination="202_0" executionTime="10" shift="0"> <messageserver sender="hc_unit" owner="room" title="SETREGULATION"/></transition>
<state id="203_0" atomicpropositions="" >
	<rebec name="room">
		<statevariables>
			<variable name="Room.currentTemp" type="int">21</variable>
			<variable name="Room.currentRegulation" type="int">0</variable>
			<variable name="Room.outside_air" type="int">1</variable>
		</statevariables>
		<queue>
			<message arrival="10" deadline="infinity" sender="room">updateStatus()</message>
			<message arrival="10" deadline="infinity" sender="hc_unit">setRegulation(0)</message>
			<message arrival="10" deadline="infinity" sender="sensor">getTemp()</message>
		</queue>
		<now>10</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="controller">
		<statevariables>
			<variable name="Controller.currentTemp" type="int">21</variable>
			<variable name="Controller.isHeating" type="boolean">false</variable>
			<variable name="Controller.isCooling" type="boolean">false</variable>
		</statevariables>
		<queue>
		</queue>
		<now>10</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="sensor">
		<statevariables>
		</statevariables>
		<queue>
			<message arrival="12" deadline="infinity" sender="sensor">callSensor()</message>
		</queue>
		<now>10</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="hc_unit">
		<statevariables>
			<variable name="HC_Unit.heaterOn" type="boolean">false</variable>
			<variable name="HC_Unit.coolerOn" type="boolean">false</variable>
			<variable name="HC_Unit.currentRegulation" type="int">0</variable>
		</statevariables>
		<queue>
			<message arrival="15" deadline="infinity" sender="hc_unit">regulateTemp()</message>
		</queue>
		<now>10</now>
		<pc></pc>
		<res></res>
	</rebec>
</state>
<transition source="192_0" destination="203_0" executionTime="10" shift="0"> <messageserver sender="sensor" owner="sensor" title="CALLSENSOR"/></transition>
<state id="204_0" atomicpropositions="" >
	<rebec name="room">
		<statevariables>
			<variable name="Room.currentTemp" type="int">23</variable>
			<variable name="Room.currentRegulation" type="int">0</variable>
			<variable name="Room.outside_air" type="int">0</variable>
		</statevariables>
		<queue>
			<message arrival="10" deadline="infinity" sender="sensor">getTemp()</message>
			<message arrival="20" deadline="infinity" sender="room">updateStatus()</message>
		</queue>
		<now>10</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="controller">
		<statevariables>
			<variable name="Controller.currentTemp" type="int">23</variable>
			<variable name="Controller.isHeating" type="boolean">false</variable>
			<variable name="Controller.isCooling" type="boolean">false</variable>
		</statevariables>
		<queue>
		</queue>
		<now>10</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="sensor">
		<statevariables>
		</statevariables>
		<queue>
			<message arrival="12" deadline="infinity" sender="sensor">callSensor()</message>
		</queue>
		<now>10</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="hc_unit">
		<statevariables>
			<variable name="HC_Unit.heaterOn" type="boolean">false</variable>
			<variable name="HC_Unit.coolerOn" type="boolean">false</variable>
			<variable name="HC_Unit.currentRegulation" type="int">0</variable>
		</statevariables>
		<queue>
			<message arrival="10" deadline="infinity" sender="hc_unit">regulateTemp()</message>
		</queue>
		<now>10</now>
		<pc></pc>
		<res></res>
	</rebec>
</state>
<transition source="194_0" destination="204_0" executionTime="10" shift="0"> <messageserver sender="sensor" owner="sensor" title="CALLSENSOR"/></transition>
<state id="205_0" atomicpropositions="" >
	<rebec name="room">
		<statevariables>
			<variable name="Room.currentTemp" type="int">23</variable>
			<variable name="Room.currentRegulation" type="int">0</variable>
			<variable name="Room.outside_air" type="int">0</variable>
		</statevariables>
		<queue>
			<message arrival="10" deadline="infinity" sender="hc_unit">setRegulation(0)</message>
			<message arrival="20" deadline="infinity" sender="room">updateStatus()</message>
		</queue>
		<now>10</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="controller">
		<statevariables>
			<variable name="Controller.currentTemp" type="int">23</variable>
			<variable name="Controller.isHeating" type="boolean">false</variable>
			<variable name="Controller.isCooling" type="boolean">false</variable>
		</statevariables>
		<queue>
		</queue>
		<now>10</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="sensor">
		<statevariables>
		</statevariables>
		<queue>
			<message arrival="10" deadline="infinity" sender="sensor">callSensor()</message>
		</queue>
		<now>10</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="hc_unit">
		<statevariables>
			<variable name="HC_Unit.heaterOn" type="boolean">false</variable>
			<variable name="HC_Unit.coolerOn" type="boolean">false</variable>
			<variable name="HC_Unit.currentRegulation" type="int">0</variable>
		</statevariables>
		<queue>
			<message arrival="15" deadline="infinity" sender="hc_unit">regulateTemp()</message>
		</queue>
		<now>10</now>
		<pc></pc>
		<res></res>
	</rebec>
</state>
<transition source="194_0" destination="205_0" executionTime="10" shift="0"> <messageserver sender="hc_unit" owner="hc_unit" title="REGULATETEMP"/></transition>
<state id="206_0" atomicpropositions="" >
	<rebec name="room">
		<statevariables>
			<variable name="Room.currentTemp" type="int">22</variable>
			<variable name="Room.currentRegulation" type="int">0</variable>
			<variable name="Room.outside_air" type="int">1</variable>
		</statevariables>
		<queue>
			<message arrival="10" deadline="infinity" sender="hc_unit">setRegulation(0)</message>
			<message arrival="20" deadline="infinity" sender="room">updateStatus()</message>
		</queue>
		<now>10</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="controller">
		<statevariables>
			<variable name="Controller.currentTemp" type="int">23</variable>
			<variable name="Controller.isHeating" type="boolean">false</variable>
			<variable name="Controller.isCooling" type="boolean">false</variable>
		</statevariables>
		<queue>
		</queue>
		<now>10</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="sensor">
		<statevariables>
		</statevariables>
		<queue>
			<message arrival="10" deadline="infinity" sender="sensor">callSensor()</message>
		</queue>
		<now>10</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="hc_unit">
		<statevariables>
			<variable name="HC_Unit.heaterOn" type="boolean">false</variable>
			<variable name="HC_Unit.coolerOn" type="boolean">false</variable>
			<variable name="HC_Unit.currentRegulation" type="int">0</variable>
		</statevariables>
		<queue>
			<message arrival="15" deadline="infinity" sender="hc_unit">regulateTemp()</message>
		</queue>
		<now>10</now>
		<pc></pc>
		<res></res>
	</rebec>
</state>
<transition source="197_0" destination="206_0" executionTime="10" shift="0"> <messageserver sender="room" owner="room" title="UPDATESTATUS"/></transition>
<transition source="197_0" destination="205_0" executionTime="10" shift="0"> <messageserver sender="room" owner="room" title="UPDATESTATUS"/></transition>
<state id="207_0" atomicpropositions="" >
	<rebec name="room">
		<statevariables>
			<variable name="Room.currentTemp" type="int">24</variable>
			<variable name="Room.currentRegulation" type="int">0</variable>
			<variable name="Room.outside_air" type="int">-1</variable>
		</statevariables>
		<queue>
			<message arrival="10" deadline="infinity" sender="hc_unit">setRegulation(0)</message>
			<message arrival="20" deadline="infinity" sender="room">updateStatus()</message>
		</queue>
		<now>10</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="controller">
		<statevariables>
			<variable name="Controller.currentTemp" type="int">23</variable>
			<variable name="Controller.isHeating" type="boolean">false</variable>
			<variable name="Controller.isCooling" type="boolean">false</variable>
		</statevariables>
		<queue>
		</queue>
		<now>10</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="sensor">
		<statevariables>
		</statevariables>
		<queue>
			<message arrival="10" deadline="infinity" sender="sensor">callSensor()</message>
		</queue>
		<now>10</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="hc_unit">
		<statevariables>
			<variable name="HC_Unit.heaterOn" type="boolean">false</variable>
			<variable name="HC_Unit.coolerOn" type="boolean">false</variable>
			<variable name="HC_Unit.currentRegulation" type="int">0</variable>
		</statevariables>
		<queue>
			<message arrival="15" deadline="infinity" sender="hc_unit">regulateTemp()</message>
		</queue>
		<now>10</now>
		<pc></pc>
		<res></res>
	</rebec>
</state>
<transition source="197_0" destination="207_0" executionTime="10" shift="0"> <messageserver sender="room" owner="room" title="UPDATESTATUS"/></transition>
<state id="208_0" atomicpropositions="" >
	<rebec name="room">
		<statevariables>
			<variable name="Room.currentTemp" type="int">23</variable>
			<variable name="Room.currentRegulation" type="int">0</variable>
			<variable name="Room.outside_air" type="int">-1</variable>
		</statevariables>
		<queue>
			<message arrival="10" deadline="infinity" sender="room">updateStatus()</message>
		</queue>
		<now>10</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="controller">
		<statevariables>
			<variable name="Controller.currentTemp" type="int">23</variable>
			<variable name="Controller.isHeating" type="boolean">false</variable>
			<variable name="Controller.isCooling" type="boolean">false</variable>
		</statevariables>
		<queue>
		</queue>
		<now>10</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="sensor">
		<statevariables>
		</statevariables>
		<queue>
			<message arrival="10" deadline="infinity" sender="sensor">callSensor()</message>
		</queue>
		<now>10</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="hc_unit">
		<statevariables>
			<variable name="HC_Unit.heaterOn" type="boolean">false</variable>
			<variable name="HC_Unit.coolerOn" type="boolean">false</variable>
			<variable name="HC_Unit.currentRegulation" type="int">0</variable>
		</statevariables>
		<queue>
			<message arrival="15" deadline="infinity" sender="hc_unit">regulateTemp()</message>
		</queue>
		<now>10</now>
		<pc></pc>
		<res></res>
	</rebec>
</state>
<transition source="197_0" destination="208_0" executionTime="10" shift="0"> <messageserver sender="hc_unit" owner="room" title="SETREGULATION"/></transition>
<state id="209_0" atomicpropositions="" >
	<rebec name="room">
		<statevariables>
			<variable name="Room.currentTemp" type="int">23</variable>
			<variable name="Room.currentRegulation" type="int">0</variable>
			<variable name="Room.outside_air" type="int">-1</variable>
		</statevariables>
		<queue>
			<message arrival="10" deadline="infinity" sender="room">updateStatus()</message>
			<message arrival="10" deadline="infinity" sender="hc_unit">setRegulation(0)</message>
			<message arrival="10" deadline="infinity" sender="sensor">getTemp()</message>
		</queue>
		<now>10</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="controller">
		<statevariables>
			<variable name="Controller.currentTemp" type="int">23</variable>
			<variable name="Controller.isHeating" type="boolean">false</variable>
			<variable name="Controller.isCooling" type="boolean">false</variable>
		</statevariables>
		<queue>
		</queue>
		<now>10</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="sensor">
		<statevariables>
		</statevariables>
		<queue>
			<message arrival="12" deadline="infinity" sender="sensor">callSensor()</message>
		</queue>
		<now>10</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="hc_unit">
		<statevariables>
			<variable name="HC_Unit.heaterOn" type="boolean">false</variable>
			<variable name="HC_Unit.coolerOn" type="boolean">false</variable>
			<variable name="HC_Unit.currentRegulation" type="int">0</variable>
		</statevariables>
		<queue>
			<message arrival="15" deadline="infinity" sender="hc_unit">regulateTemp()</message>
		</queue>
		<now>10</now>
		<pc></pc>
		<res></res>
	</rebec>
</state>
<transition source="197_0" destination="209_0" executionTime="10" shift="0"> <messageserver sender="sensor" owner="sensor" title="CALLSENSOR"/></transition>
<state id="210_0" atomicpropositions="" >
	<rebec name="room">
		<statevariables>
			<variable name="Room.currentTemp" type="int">21</variable>
			<variable name="Room.currentRegulation" type="int">0</variable>
			<variable name="Room.outside_air" type="int">0</variable>
		</statevariables>
		<queue>
			<message arrival="20" deadline="infinity" sender="room">updateStatus()</message>
		</queue>
		<now>10</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="controller">
		<statevariables>
			<variable name="Controller.currentTemp" type="int">21</variable>
			<variable name="Controller.isHeating" type="boolean">false</variable>
			<variable name="Controller.isCooling" type="boolean">false</variable>
		</statevariables>
		<queue>
		</queue>
		<now>10</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="sensor">
		<statevariables>
		</statevariables>
		<queue>
			<message arrival="10" deadline="infinity" sender="sensor">callSensor()</message>
		</queue>
		<now>10</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="hc_unit">
		<statevariables>
			<variable name="HC_Unit.heaterOn" type="boolean">false</variable>
			<variable name="HC_Unit.coolerOn" type="boolean">false</variable>
			<variable name="HC_Unit.currentRegulation" type="int">0</variable>
		</statevariables>
		<queue>
			<message arrival="15" deadline="infinity" sender="hc_unit">regulateTemp()</message>
		</queue>
		<now>10</now>
		<pc></pc>
		<res></res>
	</rebec>
</state>
<transition source="199_0" destination="210_0" executionTime="10" shift="0"> <messageserver sender="hc_unit" owner="room" title="SETREGULATION"/></transition>
<state id="211_0" atomicpropositions="" >
	<rebec name="room">
		<statevariables>
			<variable name="Room.currentTemp" type="int">21</variable>
			<variable name="Room.currentRegulation" type="int">0</variable>
			<variable name="Room.outside_air" type="int">0</variable>
		</statevariables>
		<queue>
			<message arrival="10" deadline="infinity" sender="hc_unit">setRegulation(0)</message>
			<message arrival="10" deadline="infinity" sender="sensor">getTemp()</message>
			<message arrival="20" deadline="infinity" sender="room">updateStatus()</message>
		</queue>
		<now>10</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="controller">
		<statevariables>
			<variable name="Controller.currentTemp" type="int">21</variable>
			<variable name="Controller.isHeating" type="boolean">false</variable>
			<variable name="Controller.isCooling" type="boolean">false</variable>
		</statevariables>
		<queue>
		</queue>
		<now>10</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="sensor">
		<statevariables>
		</statevariables>
		<queue>
			<message arrival="12" deadline="infinity" sender="sensor">callSensor()</message>
		</queue>
		<now>10</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="hc_unit">
		<statevariables>
			<variable name="HC_Unit.heaterOn" type="boolean">false</variable>
			<variable name="HC_Unit.coolerOn" type="boolean">false</variable>
			<variable name="HC_Unit.currentRegulation" type="int">0</variable>
		</statevariables>
		<queue>
			<message arrival="15" deadline="infinity" sender="hc_unit">regulateTemp()</message>
		</queue>
		<now>10</now>
		<pc></pc>
		<res></res>
	</rebec>
</state>
<transition source="199_0" destination="211_0" executionTime="10" shift="0"> <messageserver sender="sensor" owner="sensor" title="CALLSENSOR"/></transition>
<state id="212_0" atomicpropositions="" >
	<rebec name="room">
		<statevariables>
			<variable name="Room.currentTemp" type="int">20</variable>
			<variable name="Room.currentRegulation" type="int">0</variable>
			<variable name="Room.outside_air" type="int">1</variable>
		</statevariables>
		<queue>
			<message arrival="10" deadline="infinity" sender="hc_unit">setRegulation(0)</message>
			<message arrival="10" deadline="infinity" sender="sensor">getTemp()</message>
			<message arrival="20" deadline="infinity" sender="room">updateStatus()</message>
		</queue>
		<now>10</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="controller">
		<statevariables>
			<variable name="Controller.currentTemp" type="int">21</variable>
			<variable name="Controller.isHeating" type="boolean">false</variable>
			<variable name="Controller.isCooling" type="boolean">false</variable>
		</statevariables>
		<queue>
		</queue>
		<now>10</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="sensor">
		<statevariables>
		</statevariables>
		<queue>
			<message arrival="12" deadline="infinity" sender="sensor">callSensor()</message>
		</queue>
		<now>10</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="hc_unit">
		<statevariables>
			<variable name="HC_Unit.heaterOn" type="boolean">false</variable>
			<variable name="HC_Unit.coolerOn" type="boolean">false</variable>
			<variable name="HC_Unit.currentRegulation" type="int">0</variable>
		</statevariables>
		<queue>
			<message arrival="15" deadline="infinity" sender="hc_unit">regulateTemp()</message>
		</queue>
		<now>10</now>
		<pc></pc>
		<res></res>
	</rebec>
</state>
<transition source="203_0" destination="212_0" executionTime="10" shift="0"> <messageserver sender="room" owner="room" title="UPDATESTATUS"/></transition>
<transition source="203_0" destination="211_0" executionTime="10" shift="0"> <messageserver sender="room" owner="room" title="UPDATESTATUS"/></transition>
<state id="213_0" atomicpropositions="" >
	<rebec name="room">
		<statevariables>
			<variable name="Room.currentTemp" type="int">22</variable>
			<variable name="Room.currentRegulation" type="int">0</variable>
			<variable name="Room.outside_air" type="int">-1</variable>
		</statevariables>
		<queue>
			<message arrival="10" deadline="infinity" sender="hc_unit">setRegulation(0)</message>
			<message arrival="10" deadline="infinity" sender="sensor">getTemp()</message>
			<message arrival="20" deadline="infinity" sender="room">updateStatus()</message>
		</queue>
		<now>10</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="controller">
		<statevariables>
			<variable name="Controller.currentTemp" type="int">21</variable>
			<variable name="Controller.isHeating" type="boolean">false</variable>
			<variable name="Controller.isCooling" type="boolean">false</variable>
		</statevariables>
		<queue>
		</queue>
		<now>10</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="sensor">
		<statevariables>
		</statevariables>
		<queue>
			<message arrival="12" deadline="infinity" sender="sensor">callSensor()</message>
		</queue>
		<now>10</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="hc_unit">
		<statevariables>
			<variable name="HC_Unit.heaterOn" type="boolean">false</variable>
			<variable name="HC_Unit.coolerOn" type="boolean">false</variable>
			<variable name="HC_Unit.currentRegulation" type="int">0</variable>
		</statevariables>
		<queue>
			<message arrival="15" deadline="infinity" sender="hc_unit">regulateTemp()</message>
		</queue>
		<now>10</now>
		<pc></pc>
		<res></res>
	</rebec>
</state>
<transition source="203_0" destination="213_0" executionTime="10" shift="0"> <messageserver sender="room" owner="room" title="UPDATESTATUS"/></transition>
<state id="214_0" atomicpropositions="" >
	<rebec name="room">
		<statevariables>
			<variable name="Room.currentTemp" type="int">21</variable>
			<variable name="Room.currentRegulation" type="int">0</variable>
			<variable name="Room.outside_air" type="int">1</variable>
		</statevariables>
		<queue>
			<message arrival="10" deadline="infinity" sender="room">updateStatus()</message>
			<message arrival="10" deadline="infinity" sender="sensor">getTemp()</message>
		</queue>
		<now>10</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="controller">
		<statevariables>
			<variable name="Controller.currentTemp" type="int">21</variable>
			<variable name="Controller.isHeating" type="boolean">false</variable>
			<variable name="Controller.isCooling" type="boolean">false</variable>
		</statevariables>
		<queue>
		</queue>
		<now>10</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="sensor">
		<statevariables>
		</statevariables>
		<queue>
			<message arrival="12" deadline="infinity" sender="sensor">callSensor()</message>
		</queue>
		<now>10</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="hc_unit">
		<statevariables>
			<variable name="HC_Unit.heaterOn" type="boolean">false</variable>
			<variable name="HC_Unit.coolerOn" type="boolean">false</variable>
			<variable name="HC_Unit.currentRegulation" type="int">0</variable>
		</statevariables>
		<queue>
			<message arrival="15" deadline="infinity" sender="hc_unit">regulateTemp()</message>
		</queue>
		<now>10</now>
		<pc></pc>
		<res></res>
	</rebec>
</state>
<transition source="203_0" destination="214_0" executionTime="10" shift="0"> <messageserver sender="hc_unit" owner="room" title="SETREGULATION"/></transition>
<state id="215_0" atomicpropositions="" >
	<rebec name="room">
		<statevariables>
			<variable name="Room.currentTemp" type="int">21</variable>
			<variable name="Room.currentRegulation" type="int">0</variable>
			<variable name="Room.outside_air" type="int">1</variable>
		</statevariables>
		<queue>
			<message arrival="10" deadline="infinity" sender="room">updateStatus()</message>
			<message arrival="10" deadline="infinity" sender="hc_unit">setRegulation(0)</message>
		</queue>
		<now>10</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="controller">
		<statevariables>
			<variable name="Controller.currentTemp" type="int">21</variable>
			<variable name="Controller.isHeating" type="boolean">false</variable>
			<variable name="Controller.isCooling" type="boolean">false</variable>
		</statevariables>
		<queue>
		</queue>
		<now>10</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="sensor">
		<statevariables>
		</statevariables>
		<queue>
			<message arrival="10" deadline="infinity" sender="room">setCurrent(21)</message>
			<message arrival="12" deadline="infinity" sender="sensor">callSensor()</message>
		</queue>
		<now>10</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="hc_unit">
		<statevariables>
			<variable name="HC_Unit.heaterOn" type="boolean">false</variable>
			<variable name="HC_Unit.coolerOn" type="boolean">false</variable>
			<variable name="HC_Unit.currentRegulation" type="int">0</variable>
		</statevariables>
		<queue>
			<message arrival="15" deadline="infinity" sender="hc_unit">regulateTemp()</message>
		</queue>
		<now>10</now>
		<pc></pc>
		<res></res>
	</rebec>
</state>
<transition source="203_0" destination="215_0" executionTime="10" shift="0"> <messageserver sender="sensor" owner="room" title="GETTEMP"/></transition>
<state id="216_0" atomicpropositions="" >
	<rebec name="room">
		<statevariables>
			<variable name="Room.currentTemp" type="int">23</variable>
			<variable name="Room.currentRegulation" type="int">0</variable>
			<variable name="Room.outside_air" type="int">0</variable>
		</statevariables>
		<queue>
			<message arrival="20" deadline="infinity" sender="room">updateStatus()</message>
		</queue>
		<now>10</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="controller">
		<statevariables>
			<variable name="Controller.currentTemp" type="int">23</variable>
			<variable name="Controller.isHeating" type="boolean">false</variable>
			<variable name="Controller.isCooling" type="boolean">false</variable>
		</statevariables>
		<queue>
		</queue>
		<now>10</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="sensor">
		<statevariables>
		</statevariables>
		<queue>
			<message arrival="10" deadline="infinity" sender="room">setCurrent(23)</message>
			<message arrival="12" deadline="infinity" sender="sensor">callSensor()</message>
		</queue>
		<now>10</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="hc_unit">
		<statevariables>
			<variable name="HC_Unit.heaterOn" type="boolean">false</variable>
			<variable name="HC_Unit.coolerOn" type="boolean">false</variable>
			<variable name="HC_Unit.currentRegulation" type="int">0</variable>
		</statevariables>
		<queue>
			<message arrival="10" deadline="infinity" sender="hc_unit">regulateTemp()</message>
		</queue>
		<now>10</now>
		<pc></pc>
		<res></res>
	</rebec>
</state>
<transition source="204_0" destination="216_0" executionTime="10" shift="0"> <messageserver sender="sensor" owner="room" title="GETTEMP"/></transition>
<state id="217_0" atomicpropositions="" >
	<rebec name="room">
		<statevariables>
			<variable name="Room.currentTemp" type="int">23</variable>
			<variable name="Room.currentRegulation" type="int">0</variable>
			<variable name="Room.outside_air" type="int">0</variable>
		</statevariables>
		<queue>
			<message arrival="10" deadline="infinity" sender="hc_unit">setRegulation(0)</message>
			<message arrival="10" deadline="infinity" sender="sensor">getTemp()</message>
			<message arrival="20" deadline="infinity" sender="room">updateStatus()</message>
		</queue>
		<now>10</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="controller">
		<statevariables>
			<variable name="Controller.currentTemp" type="int">23</variable>
			<variable name="Controller.isHeating" type="boolean">false</variable>
			<variable name="Controller.isCooling" type="boolean">false</variable>
		</statevariables>
		<queue>
		</queue>
		<now>10</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="sensor">
		<statevariables>
		</statevariables>
		<queue>
			<message arrival="12" deadline="infinity" sender="sensor">callSensor()</message>
		</queue>
		<now>10</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="hc_unit">
		<statevariables>
			<variable name="HC_Unit.heaterOn" type="boolean">false</variable>
			<variable name="HC_Unit.coolerOn" type="boolean">false</variable>
			<variable name="HC_Unit.currentRegulation" type="int">0</variable>
		</statevariables>
		<queue>
			<message arrival="15" deadline="infinity" sender="hc_unit">regulateTemp()</message>
		</queue>
		<now>10</now>
		<pc></pc>
		<res></res>
	</rebec>
</state>
<transition source="204_0" destination="217_0" executionTime="10" shift="0"> <messageserver sender="hc_unit" owner="hc_unit" title="REGULATETEMP"/></transition>
<state id="218_0" atomicpropositions="" >
	<rebec name="room">
		<statevariables>
			<variable name="Room.currentTemp" type="int">22</variable>
			<variable name="Room.currentRegulation" type="int">0</variable>
			<variable name="Room.outside_air" type="int">1</variable>
		</statevariables>
		<queue>
			<message arrival="20" deadline="infinity" sender="room">updateStatus()</message>
		</queue>
		<now>10</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="controller">
		<statevariables>
			<variable name="Controller.currentTemp" type="int">23</variable>
			<variable name="Controller.isHeating" type="boolean">false</variable>
			<variable name="Controller.isCooling" type="boolean">false</variable>
		</statevariables>
		<queue>
		</queue>
		<now>10</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="sensor">
		<statevariables>
		</statevariables>
		<queue>
			<message arrival="10" deadline="infinity" sender="sensor">callSensor()</message>
		</queue>
		<now>10</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="hc_unit">
		<statevariables>
			<variable name="HC_Unit.heaterOn" type="boolean">false</variable>
			<variable name="HC_Unit.coolerOn" type="boolean">false</variable>
			<variable name="HC_Unit.currentRegulation" type="int">0</variable>
		</statevariables>
		<queue>
			<message arrival="15" deadline="infinity" sender="hc_unit">regulateTemp()</message>
		</queue>
		<now>10</now>
		<pc></pc>
		<res></res>
	</rebec>
</state>
<transition source="206_0" destination="218_0" executionTime="10" shift="0"> <messageserver sender="hc_unit" owner="room" title="SETREGULATION"/></transition>
<state id="219_0" atomicpropositions="" >
	<rebec name="room">
		<statevariables>
			<variable name="Room.currentTemp" type="int">22</variable>
			<variable name="Room.currentRegulation" type="int">0</variable>
			<variable name="Room.outside_air" type="int">1</variable>
		</statevariables>
		<queue>
			<message arrival="10" deadline="infinity" sender="hc_unit">setRegulation(0)</message>
			<message arrival="10" deadline="infinity" sender="sensor">getTemp()</message>
			<message arrival="20" deadline="infinity" sender="room">updateStatus()</message>
		</queue>
		<now>10</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="controller">
		<statevariables>
			<variable name="Controller.currentTemp" type="int">23</variable>
			<variable name="Controller.isHeating" type="boolean">false</variable>
			<variable name="Controller.isCooling" type="boolean">false</variable>
		</statevariables>
		<queue>
		</queue>
		<now>10</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="sensor">
		<statevariables>
		</statevariables>
		<queue>
			<message arrival="12" deadline="infinity" sender="sensor">callSensor()</message>
		</queue>
		<now>10</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="hc_unit">
		<statevariables>
			<variable name="HC_Unit.heaterOn" type="boolean">false</variable>
			<variable name="HC_Unit.coolerOn" type="boolean">false</variable>
			<variable name="HC_Unit.currentRegulation" type="int">0</variable>
		</statevariables>
		<queue>
			<message arrival="15" deadline="infinity" sender="hc_unit">regulateTemp()</message>
		</queue>
		<now>10</now>
		<pc></pc>
		<res></res>
	</rebec>
</state>
<transition source="206_0" destination="219_0" executionTime="10" shift="0"> <messageserver sender="sensor" owner="sensor" title="CALLSENSOR"/></transition>
<transition source="209_0" destination="219_0" executionTime="10" shift="0"> <messageserver sender="room" owner="room" title="UPDATESTATUS"/></transition>
<transition source="209_0" destination="217_0" executionTime="10" shift="0"> <messageserver sender="room" owner="room" title="UPDATESTATUS"/></transition>
<state id="220_0" atomicpropositions="" >
	<rebec name="room">
		<statevariables>
			<variable name="Room.currentTemp" type="int">24</variable>
			<variable name="Room.currentRegulation" type="int">0</variable>
			<variable name="Room.outside_air" type="int">-1</variable>
		</statevariables>
		<queue>
			<message arrival="10" deadline="infinity" sender="hc_unit">setRegulation(0)</message>
			<message arrival="10" deadline="infinity" sender="sensor">getTemp()</message>
			<message arrival="20" deadline="infinity" sender="room">updateStatus()</message>
		</queue>
		<now>10</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="controller">
		<statevariables>
			<variable name="Controller.currentTemp" type="int">23</variable>
			<variable name="Controller.isHeating" type="boolean">false</variable>
			<variable name="Controller.isCooling" type="boolean">false</variable>
		</statevariables>
		<queue>
		</queue>
		<now>10</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="sensor">
		<statevariables>
		</statevariables>
		<queue>
			<message arrival="12" deadline="infinity" sender="sensor">callSensor()</message>
		</queue>
		<now>10</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="hc_unit">
		<statevariables>
			<variable name="HC_Unit.heaterOn" type="boolean">false</variable>
			<variable name="HC_Unit.coolerOn" type="boolean">false</variable>
			<variable name="HC_Unit.currentRegulation" type="int">0</variable>
		</statevariables>
		<queue>
			<message arrival="15" deadline="infinity" sender="hc_unit">regulateTemp()</message>
		</queue>
		<now>10</now>
		<pc></pc>
		<res></res>
	</rebec>
</state>
<transition source="209_0" destination="220_0" executionTime="10" shift="0"> <messageserver sender="room" owner="room" title="UPDATESTATUS"/></transition>
<state id="221_0" atomicpropositions="" >
	<rebec name="room">
		<statevariables>
			<variable name="Room.currentTemp" type="int">23</variable>
			<variable name="Room.currentRegulation" type="int">0</variable>
			<variable name="Room.outside_air" type="int">-1</variable>
		</statevariables>
		<queue>
			<message arrival="10" deadline="infinity" sender="room">updateStatus()</message>
			<message arrival="10" deadline="infinity" sender="sensor">getTemp()</message>
		</queue>
		<now>10</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="controller">
		<statevariables>
			<variable name="Controller.currentTemp" type="int">23</variable>
			<variable name="Controller.isHeating" type="boolean">false</variable>
			<variable name="Controller.isCooling" type="boolean">false</variable>
		</statevariables>
		<queue>
		</queue>
		<now>10</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="sensor">
		<statevariables>
		</statevariables>
		<queue>
			<message arrival="12" deadline="infinity" sender="sensor">callSensor()</message>
		</queue>
		<now>10</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="hc_unit">
		<statevariables>
			<variable name="HC_Unit.heaterOn" type="boolean">false</variable>
			<variable name="HC_Unit.coolerOn" type="boolean">false</variable>
			<variable name="HC_Unit.currentRegulation" type="int">0</variable>
		</statevariables>
		<queue>
			<message arrival="15" deadline="infinity" sender="hc_unit">regulateTemp()</message>
		</queue>
		<now>10</now>
		<pc></pc>
		<res></res>
	</rebec>
</state>
<transition source="209_0" destination="221_0" executionTime="10" shift="0"> <messageserver sender="hc_unit" owner="room" title="SETREGULATION"/></transition>
<state id="222_0" atomicpropositions="" >
	<rebec name="room">
		<statevariables>
			<variable name="Room.currentTemp" type="int">23</variable>
			<variable name="Room.currentRegulation" type="int">0</variable>
			<variable name="Room.outside_air" type="int">-1</variable>
		</statevariables>
		<queue>
			<message arrival="10" deadline="infinity" sender="room">updateStatus()</message>
			<message arrival="10" deadline="infinity" sender="hc_unit">setRegulation(0)</message>
		</queue>
		<now>10</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="controller">
		<statevariables>
			<variable name="Controller.currentTemp" type="int">23</variable>
			<variable name="Controller.isHeating" type="boolean">false</variable>
			<variable name="Controller.isCooling" type="boolean">false</variable>
		</statevariables>
		<queue>
		</queue>
		<now>10</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="sensor">
		<statevariables>
		</statevariables>
		<queue>
			<message arrival="10" deadline="infinity" sender="room">setCurrent(23)</message>
			<message arrival="12" deadline="infinity" sender="sensor">callSensor()</message>
		</queue>
		<now>10</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="hc_unit">
		<statevariables>
			<variable name="HC_Unit.heaterOn" type="boolean">false</variable>
			<variable name="HC_Unit.coolerOn" type="boolean">false</variable>
			<variable name="HC_Unit.currentRegulation" type="int">0</variable>
		</statevariables>
		<queue>
			<message arrival="15" deadline="infinity" sender="hc_unit">regulateTemp()</message>
		</queue>
		<now>10</now>
		<pc></pc>
		<res></res>
	</rebec>
</state>
<transition source="209_0" destination="222_0" executionTime="10" shift="0"> <messageserver sender="sensor" owner="room" title="GETTEMP"/></transition>
<state id="223_0" atomicpropositions="" >
	<rebec name="room">
		<statevariables>
			<variable name="Room.currentTemp" type="int">21</variable>
			<variable name="Room.currentRegulation" type="int">0</variable>
			<variable name="Room.outside_air" type="int">0</variable>
		</statevariables>
		<queue>
			<message arrival="10" deadline="infinity" sender="sensor">getTemp()</message>
			<message arrival="20" deadline="infinity" sender="room">updateStatus()</message>
		</queue>
		<now>10</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="controller">
		<statevariables>
			<variable name="Controller.currentTemp" type="int">21</variable>
			<variable name="Controller.isHeating" type="boolean">false</variable>
			<variable name="Controller.isCooling" type="boolean">false</variable>
		</statevariables>
		<queue>
		</queue>
		<now>10</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="sensor">
		<statevariables>
		</statevariables>
		<queue>
			<message arrival="12" deadline="infinity" sender="sensor">callSensor()</message>
		</queue>
		<now>10</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="hc_unit">
		<statevariables>
			<variable name="HC_Unit.heaterOn" type="boolean">false</variable>
			<variable name="HC_Unit.coolerOn" type="boolean">false</variable>
			<variable name="HC_Unit.currentRegulation" type="int">0</variable>
		</statevariables>
		<queue>
			<message arrival="15" deadline="infinity" sender="hc_unit">regulateTemp()</message>
		</queue>
		<now>10</now>
		<pc></pc>
		<res></res>
	</rebec>
</state>
<transition source="211_0" destination="223_0" executionTime="10" shift="0"> <messageserver sender="hc_unit" owner="room" title="SETREGULATION"/></transition>
<state id="224_0" atomicpropositions="" >
	<rebec name="room">
		<statevariables>
			<variable name="Room.currentTemp" type="int">21</variable>
			<variable name="Room.currentRegulation" type="int">0</variable>
			<variable name="Room.outside_air" type="int">0</variable>
		</statevariables>
		<queue>
			<message arrival="10" deadline="infinity" sender="hc_unit">setRegulation(0)</message>
			<message arrival="20" deadline="infinity" sender="room">updateStatus()</message>
		</queue>
		<now>10</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="controller">
		<statevariables>
			<variable name="Controller.currentTemp" type="int">21</variable>
			<variable name="Controller.isHeating" type="boolean">false</variable>
			<variable name="Controller.isCooling" type="boolean">false</variable>
		</statevariables>
		<queue>
		</queue>
		<now>10</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="sensor">
		<statevariables>
		</statevariables>
		<queue>
			<message arrival="10" deadline="infinity" sender="room">setCurrent(21)</message>
			<message arrival="12" deadline="infinity" sender="sensor">callSensor()</message>
		</queue>
		<now>10</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="hc_unit">
		<statevariables>
			<variable name="HC_Unit.heaterOn" type="boolean">false</variable>
			<variable name="HC_Unit.coolerOn" type="boolean">false</variable>
			<variable name="HC_Unit.currentRegulation" type="int">0</variable>
		</statevariables>
		<queue>
			<message arrival="15" deadline="infinity" sender="hc_unit">regulateTemp()</message>
		</queue>
		<now>10</now>
		<pc></pc>
		<res></res>
	</rebec>
</state>
<transition source="211_0" destination="224_0" executionTime="10" shift="0"> <messageserver sender="sensor" owner="room" title="GETTEMP"/></transition>
<state id="225_0" atomicpropositions="" >
	<rebec name="room">
		<statevariables>
			<variable name="Room.currentTemp" type="int">20</variable>
			<variable name="Room.currentRegulation" type="int">0</variable>
			<variable name="Room.outside_air" type="int">1</variable>
		</statevariables>
		<queue>
			<message arrival="10" deadline="infinity" sender="hc_unit">setRegulation(0)</message>
			<message arrival="20" deadline="infinity" sender="room">updateStatus()</message>
		</queue>
		<now>10</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="controller">
		<statevariables>
			<variable name="Controller.currentTemp" type="int">21</variable>
			<variable name="Controller.isHeating" type="boolean">false</variable>
			<variable name="Controller.isCooling" type="boolean">false</variable>
		</statevariables>
		<queue>
		</queue>
		<now>10</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="sensor">
		<statevariables>
		</statevariables>
		<queue>
			<message arrival="10" deadline="infinity" sender="room">setCurrent(21)</message>
			<message arrival="12" deadline="infinity" sender="sensor">callSensor()</message>
		</queue>
		<now>10</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="hc_unit">
		<statevariables>
			<variable name="HC_Unit.heaterOn" type="boolean">false</variable>
			<variable name="HC_Unit.coolerOn" type="boolean">false</variable>
			<variable name="HC_Unit.currentRegulation" type="int">0</variable>
		</statevariables>
		<queue>
			<message arrival="15" deadline="infinity" sender="hc_unit">regulateTemp()</message>
		</queue>
		<now>10</now>
		<pc></pc>
		<res></res>
	</rebec>
</state>
<transition source="215_0" destination="225_0" executionTime="10" shift="0"> <messageserver sender="room" owner="room" title="UPDATESTATUS"/></transition>
<transition source="215_0" destination="224_0" executionTime="10" shift="0"> <messageserver sender="room" owner="room" title="UPDATESTATUS"/></transition>
<state id="226_0" atomicpropositions="" >
	<rebec name="room">
		<statevariables>
			<variable name="Room.currentTemp" type="int">22</variable>
			<variable name="Room.currentRegulation" type="int">0</variable>
			<variable name="Room.outside_air" type="int">-1</variable>
		</statevariables>
		<queue>
			<message arrival="10" deadline="infinity" sender="hc_unit">setRegulation(0)</message>
			<message arrival="20" deadline="infinity" sender="room">updateStatus()</message>
		</queue>
		<now>10</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="controller">
		<statevariables>
			<variable name="Controller.currentTemp" type="int">21</variable>
			<variable name="Controller.isHeating" type="boolean">false</variable>
			<variable name="Controller.isCooling" type="boolean">false</variable>
		</statevariables>
		<queue>
		</queue>
		<now>10</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="sensor">
		<statevariables>
		</statevariables>
		<queue>
			<message arrival="10" deadline="infinity" sender="room">setCurrent(21)</message>
			<message arrival="12" deadline="infinity" sender="sensor">callSensor()</message>
		</queue>
		<now>10</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="hc_unit">
		<statevariables>
			<variable name="HC_Unit.heaterOn" type="boolean">false</variable>
			<variable name="HC_Unit.coolerOn" type="boolean">false</variable>
			<variable name="HC_Unit.currentRegulation" type="int">0</variable>
		</statevariables>
		<queue>
			<message arrival="15" deadline="infinity" sender="hc_unit">regulateTemp()</message>
		</queue>
		<now>10</now>
		<pc></pc>
		<res></res>
	</rebec>
</state>
<transition source="215_0" destination="226_0" executionTime="10" shift="0"> <messageserver sender="room" owner="room" title="UPDATESTATUS"/></transition>
<state id="227_0" atomicpropositions="" >
	<rebec name="room">
		<statevariables>
			<variable name="Room.currentTemp" type="int">21</variable>
			<variable name="Room.currentRegulation" type="int">0</variable>
			<variable name="Room.outside_air" type="int">1</variable>
		</statevariables>
		<queue>
			<message arrival="10" deadline="infinity" sender="room">updateStatus()</message>
		</queue>
		<now>10</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="controller">
		<statevariables>
			<variable name="Controller.currentTemp" type="int">21</variable>
			<variable name="Controller.isHeating" type="boolean">false</variable>
			<variable name="Controller.isCooling" type="boolean">false</variable>
		</statevariables>
		<queue>
		</queue>
		<now>10</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="sensor">
		<statevariables>
		</statevariables>
		<queue>
			<message arrival="10" deadline="infinity" sender="room">setCurrent(21)</message>
			<message arrival="12" deadline="infinity" sender="sensor">callSensor()</message>
		</queue>
		<now>10</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="hc_unit">
		<statevariables>
			<variable name="HC_Unit.heaterOn" type="boolean">false</variable>
			<variable name="HC_Unit.coolerOn" type="boolean">false</variable>
			<variable name="HC_Unit.currentRegulation" type="int">0</variable>
		</statevariables>
		<queue>
			<message arrival="15" deadline="infinity" sender="hc_unit">regulateTemp()</message>
		</queue>
		<now>10</now>
		<pc></pc>
		<res></res>
	</rebec>
</state>
<transition source="215_0" destination="227_0" executionTime="10" shift="0"> <messageserver sender="hc_unit" owner="room" title="SETREGULATION"/></transition>
<state id="228_0" atomicpropositions="" >
	<rebec name="room">
		<statevariables>
			<variable name="Room.currentTemp" type="int">21</variable>
			<variable name="Room.currentRegulation" type="int">0</variable>
			<variable name="Room.outside_air" type="int">1</variable>
		</statevariables>
		<queue>
			<message arrival="10" deadline="infinity" sender="room">updateStatus()</message>
			<message arrival="10" deadline="infinity" sender="hc_unit">setRegulation(0)</message>
		</queue>
		<now>10</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="controller">
		<statevariables>
			<variable name="Controller.currentTemp" type="int">21</variable>
			<variable name="Controller.isHeating" type="boolean">false</variable>
			<variable name="Controller.isCooling" type="boolean">false</variable>
		</statevariables>
		<queue>
			<message arrival="10" deadline="infinity" sender="sensor">setCurrent(21)</message>
		</queue>
		<now>10</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="sensor">
		<statevariables>
		</statevariables>
		<queue>
			<message arrival="12" deadline="infinity" sender="sensor">callSensor()</message>
		</queue>
		<now>10</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="hc_unit">
		<statevariables>
			<variable name="HC_Unit.heaterOn" type="boolean">false</variable>
			<variable name="HC_Unit.coolerOn" type="boolean">false</variable>
			<variable name="HC_Unit.currentRegulation" type="int">0</variable>
		</statevariables>
		<queue>
			<message arrival="15" deadline="infinity" sender="hc_unit">regulateTemp()</message>
		</queue>
		<now>10</now>
		<pc></pc>
		<res></res>
	</rebec>
</state>
<transition source="215_0" destination="228_0" executionTime="10" shift="0"> <messageserver sender="room" owner="sensor" title="SETCURRENT"/></transition>
<state id="229_0" atomicpropositions="" >
	<rebec name="room">
		<statevariables>
			<variable name="Room.currentTemp" type="int">23</variable>
			<variable name="Room.currentRegulation" type="int">0</variable>
			<variable name="Room.outside_air" type="int">0</variable>
		</statevariables>
		<queue>
			<message arrival="10" deadline="infinity" sender="sensor">getTemp()</message>
			<message arrival="20" deadline="infinity" sender="room">updateStatus()</message>
		</queue>
		<now>10</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="controller">
		<statevariables>
			<variable name="Controller.currentTemp" type="int">23</variable>
			<variable name="Controller.isHeating" type="boolean">false</variable>
			<variable name="Controller.isCooling" type="boolean">false</variable>
		</statevariables>
		<queue>
		</queue>
		<now>10</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="sensor">
		<statevariables>
		</statevariables>
		<queue>
			<message arrival="12" deadline="infinity" sender="sensor">callSensor()</message>
		</queue>
		<now>10</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="hc_unit">
		<statevariables>
			<variable name="HC_Unit.heaterOn" type="boolean">false</variable>
			<variable name="HC_Unit.coolerOn" type="boolean">false</variable>
			<variable name="HC_Unit.currentRegulation" type="int">0</variable>
		</statevariables>
		<queue>
			<message arrival="15" deadline="infinity" sender="hc_unit">regulateTemp()</message>
		</queue>
		<now>10</now>
		<pc></pc>
		<res></res>
	</rebec>
</state>
<transition source="217_0" destination="229_0" executionTime="10" shift="0"> <messageserver sender="hc_unit" owner="room" title="SETREGULATION"/></transition>
<state id="230_0" atomicpropositions="" >
	<rebec name="room">
		<statevariables>
			<variable name="Room.currentTemp" type="int">23</variable>
			<variable name="Room.currentRegulation" type="int">0</variable>
			<variable name="Room.outside_air" type="int">0</variable>
		</statevariables>
		<queue>
			<message arrival="10" deadline="infinity" sender="hc_unit">setRegulation(0)</message>
			<message arrival="20" deadline="infinity" sender="room">updateStatus()</message>
		</queue>
		<now>10</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="controller">
		<statevariables>
			<variable name="Controller.currentTemp" type="int">23</variable>
			<variable name="Controller.isHeating" type="boolean">false</variable>
			<variable name="Controller.isCooling" type="boolean">false</variable>
		</statevariables>
		<queue>
		</queue>
		<now>10</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="sensor">
		<statevariables>
		</statevariables>
		<queue>
			<message arrival="10" deadline="infinity" sender="room">setCurrent(23)</message>
			<message arrival="12" deadline="infinity" sender="sensor">callSensor()</message>
		</queue>
		<now>10</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="hc_unit">
		<statevariables>
			<variable name="HC_Unit.heaterOn" type="boolean">false</variable>
			<variable name="HC_Unit.coolerOn" type="boolean">false</variable>
			<variable name="HC_Unit.currentRegulation" type="int">0</variable>
		</statevariables>
		<queue>
			<message arrival="15" deadline="infinity" sender="hc_unit">regulateTemp()</message>
		</queue>
		<now>10</now>
		<pc></pc>
		<res></res>
	</rebec>
</state>
<transition source="217_0" destination="230_0" executionTime="10" shift="0"> <messageserver sender="sensor" owner="room" title="GETTEMP"/></transition>
<state id="231_0" atomicpropositions="" >
	<rebec name="room">
		<statevariables>
			<variable name="Room.currentTemp" type="int">22</variable>
			<variable name="Room.currentRegulation" type="int">0</variable>
			<variable name="Room.outside_air" type="int">1</variable>
		</statevariables>
		<queue>
			<message arrival="10" deadline="infinity" sender="sensor">getTemp()</message>
			<message arrival="20" deadline="infinity" sender="room">updateStatus()</message>
		</queue>
		<now>10</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="controller">
		<statevariables>
			<variable name="Controller.currentTemp" type="int">23</variable>
			<variable name="Controller.isHeating" type="boolean">false</variable>
			<variable name="Controller.isCooling" type="boolean">false</variable>
		</statevariables>
		<queue>
		</queue>
		<now>10</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="sensor">
		<statevariables>
		</statevariables>
		<queue>
			<message arrival="12" deadline="infinity" sender="sensor">callSensor()</message>
		</queue>
		<now>10</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="hc_unit">
		<statevariables>
			<variable name="HC_Unit.heaterOn" type="boolean">false</variable>
			<variable name="HC_Unit.coolerOn" type="boolean">false</variable>
			<variable name="HC_Unit.currentRegulation" type="int">0</variable>
		</statevariables>
		<queue>
			<message arrival="15" deadline="infinity" sender="hc_unit">regulateTemp()</message>
		</queue>
		<now>10</now>
		<pc></pc>
		<res></res>
	</rebec>
</state>
<transition source="219_0" destination="231_0" executionTime="10" shift="0"> <messageserver sender="hc_unit" owner="room" title="SETREGULATION"/></transition>
<state id="232_0" atomicpropositions="" >
	<rebec name="room">
		<statevariables>
			<variable name="Room.currentTemp" type="int">22</variable>
			<variable name="Room.currentRegulation" type="int">0</variable>
			<variable name="Room.outside_air" type="int">1</variable>
		</statevariables>
		<queue>
			<message arrival="10" deadline="infinity" sender="hc_unit">setRegulation(0)</message>
			<message arrival="20" deadline="infinity" sender="room">updateStatus()</message>
		</queue>
		<now>10</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="controller">
		<statevariables>
			<variable name="Controller.currentTemp" type="int">23</variable>
			<variable name="Controller.isHeating" type="boolean">false</variable>
			<variable name="Controller.isCooling" type="boolean">false</variable>
		</statevariables>
		<queue>
		</queue>
		<now>10</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="sensor">
		<statevariables>
		</statevariables>
		<queue>
			<message arrival="10" deadline="infinity" sender="room">setCurrent(22)</message>
			<message arrival="12" deadline="infinity" sender="sensor">callSensor()</message>
		</queue>
		<now>10</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="hc_unit">
		<statevariables>
			<variable name="HC_Unit.heaterOn" type="boolean">false</variable>
			<variable name="HC_Unit.coolerOn" type="boolean">false</variable>
			<variable name="HC_Unit.currentRegulation" type="int">0</variable>
		</statevariables>
		<queue>
			<message arrival="15" deadline="infinity" sender="hc_unit">regulateTemp()</message>
		</queue>
		<now>10</now>
		<pc></pc>
		<res></res>
	</rebec>
</state>
<transition source="219_0" destination="232_0" executionTime="10" shift="0"> <messageserver sender="sensor" owner="room" title="GETTEMP"/></transition>
<state id="233_0" atomicpropositions="" >
	<rebec name="room">
		<statevariables>
			<variable name="Room.currentTemp" type="int">22</variable>
			<variable name="Room.currentRegulation" type="int">0</variable>
			<variable name="Room.outside_air" type="int">1</variable>
		</statevariables>
		<queue>
			<message arrival="10" deadline="infinity" sender="hc_unit">setRegulation(0)</message>
			<message arrival="20" deadline="infinity" sender="room">updateStatus()</message>
		</queue>
		<now>10</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="controller">
		<statevariables>
			<variable name="Controller.currentTemp" type="int">23</variable>
			<variable name="Controller.isHeating" type="boolean">false</variable>
			<variable name="Controller.isCooling" type="boolean">false</variable>
		</statevariables>
		<queue>
		</queue>
		<now>10</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="sensor">
		<statevariables>
		</statevariables>
		<queue>
			<message arrival="10" deadline="infinity" sender="room">setCurrent(23)</message>
			<message arrival="12" deadline="infinity" sender="sensor">callSensor()</message>
		</queue>
		<now>10</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="hc_unit">
		<statevariables>
			<variable name="HC_Unit.heaterOn" type="boolean">false</variable>
			<variable name="HC_Unit.coolerOn" type="boolean">false</variable>
			<variable name="HC_Unit.currentRegulation" type="int">0</variable>
		</statevariables>
		<queue>
			<message arrival="15" deadline="infinity" sender="hc_unit">regulateTemp()</message>
		</queue>
		<now>10</now>
		<pc></pc>
		<res></res>
	</rebec>
</state>
<transition source="222_0" destination="233_0" executionTime="10" shift="0"> <messageserver sender="room" owner="room" title="UPDATESTATUS"/></transition>
<transition source="222_0" destination="230_0" executionTime="10" shift="0"> <messageserver sender="room" owner="room" title="UPDATESTATUS"/></transition>
<state id="234_0" atomicpropositions="" >
	<rebec name="room">
		<statevariables>
			<variable name="Room.currentTemp" type="int">24</variable>
			<variable name="Room.currentRegulation" type="int">0</variable>
			<variable name="Room.outside_air" type="int">-1</variable>
		</statevariables>
		<queue>
			<message arrival="10" deadline="infinity" sender="hc_unit">setRegulation(0)</message>
			<message arrival="20" deadline="infinity" sender="room">updateStatus()</message>
		</queue>
		<now>10</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="controller">
		<statevariables>
			<variable name="Controller.currentTemp" type="int">23</variable>
			<variable name="Controller.isHeating" type="boolean">false</variable>
			<variable name="Controller.isCooling" type="boolean">false</variable>
		</statevariables>
		<queue>
		</queue>
		<now>10</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="sensor">
		<statevariables>
		</statevariables>
		<queue>
			<message arrival="10" deadline="infinity" sender="room">setCurrent(23)</message>
			<message arrival="12" deadline="infinity" sender="sensor">callSensor()</message>
		</queue>
		<now>10</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="hc_unit">
		<statevariables>
			<variable name="HC_Unit.heaterOn" type="boolean">false</variable>
			<variable name="HC_Unit.coolerOn" type="boolean">false</variable>
			<variable name="HC_Unit.currentRegulation" type="int">0</variable>
		</statevariables>
		<queue>
			<message arrival="15" deadline="infinity" sender="hc_unit">regulateTemp()</message>
		</queue>
		<now>10</now>
		<pc></pc>
		<res></res>
	</rebec>
</state>
<transition source="222_0" destination="234_0" executionTime="10" shift="0"> <messageserver sender="room" owner="room" title="UPDATESTATUS"/></transition>
<state id="235_0" atomicpropositions="" >
	<rebec name="room">
		<statevariables>
			<variable name="Room.currentTemp" type="int">23</variable>
			<variable name="Room.currentRegulation" type="int">0</variable>
			<variable name="Room.outside_air" type="int">-1</variable>
		</statevariables>
		<queue>
			<message arrival="10" deadline="infinity" sender="room">updateStatus()</message>
		</queue>
		<now>10</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="controller">
		<statevariables>
			<variable name="Controller.currentTemp" type="int">23</variable>
			<variable name="Controller.isHeating" type="boolean">false</variable>
			<variable name="Controller.isCooling" type="boolean">false</variable>
		</statevariables>
		<queue>
		</queue>
		<now>10</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="sensor">
		<statevariables>
		</statevariables>
		<queue>
			<message arrival="10" deadline="infinity" sender="room">setCurrent(23)</message>
			<message arrival="12" deadline="infinity" sender="sensor">callSensor()</message>
		</queue>
		<now>10</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="hc_unit">
		<statevariables>
			<variable name="HC_Unit.heaterOn" type="boolean">false</variable>
			<variable name="HC_Unit.coolerOn" type="boolean">false</variable>
			<variable name="HC_Unit.currentRegulation" type="int">0</variable>
		</statevariables>
		<queue>
			<message arrival="15" deadline="infinity" sender="hc_unit">regulateTemp()</message>
		</queue>
		<now>10</now>
		<pc></pc>
		<res></res>
	</rebec>
</state>
<transition source="222_0" destination="235_0" executionTime="10" shift="0"> <messageserver sender="hc_unit" owner="room" title="SETREGULATION"/></transition>
<state id="236_0" atomicpropositions="" >
	<rebec name="room">
		<statevariables>
			<variable name="Room.currentTemp" type="int">23</variable>
			<variable name="Room.currentRegulation" type="int">0</variable>
			<variable name="Room.outside_air" type="int">-1</variable>
		</statevariables>
		<queue>
			<message arrival="10" deadline="infinity" sender="room">updateStatus()</message>
			<message arrival="10" deadline="infinity" sender="hc_unit">setRegulation(0)</message>
		</queue>
		<now>10</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="controller">
		<statevariables>
			<variable name="Controller.currentTemp" type="int">23</variable>
			<variable name="Controller.isHeating" type="boolean">false</variable>
			<variable name="Controller.isCooling" type="boolean">false</variable>
		</statevariables>
		<queue>
			<message arrival="10" deadline="infinity" sender="sensor">setCurrent(23)</message>
		</queue>
		<now>10</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="sensor">
		<statevariables>
		</statevariables>
		<queue>
			<message arrival="12" deadline="infinity" sender="sensor">callSensor()</message>
		</queue>
		<now>10</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="hc_unit">
		<statevariables>
			<variable name="HC_Unit.heaterOn" type="boolean">false</variable>
			<variable name="HC_Unit.coolerOn" type="boolean">false</variable>
			<variable name="HC_Unit.currentRegulation" type="int">0</variable>
		</statevariables>
		<queue>
			<message arrival="15" deadline="infinity" sender="hc_unit">regulateTemp()</message>
		</queue>
		<now>10</now>
		<pc></pc>
		<res></res>
	</rebec>
</state>
<transition source="222_0" destination="236_0" executionTime="10" shift="0"> <messageserver sender="room" owner="sensor" title="SETCURRENT"/></transition>
<state id="237_0" atomicpropositions="" >
	<rebec name="room">
		<statevariables>
			<variable name="Room.currentTemp" type="int">21</variable>
			<variable name="Room.currentRegulation" type="int">0</variable>
			<variable name="Room.outside_air" type="int">0</variable>
		</statevariables>
		<queue>
			<message arrival="20" deadline="infinity" sender="room">updateStatus()</message>
		</queue>
		<now>10</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="controller">
		<statevariables>
			<variable name="Controller.currentTemp" type="int">21</variable>
			<variable name="Controller.isHeating" type="boolean">false</variable>
			<variable name="Controller.isCooling" type="boolean">false</variable>
		</statevariables>
		<queue>
		</queue>
		<now>10</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="sensor">
		<statevariables>
		</statevariables>
		<queue>
			<message arrival="10" deadline="infinity" sender="room">setCurrent(21)</message>
			<message arrival="12" deadline="infinity" sender="sensor">callSensor()</message>
		</queue>
		<now>10</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="hc_unit">
		<statevariables>
			<variable name="HC_Unit.heaterOn" type="boolean">false</variable>
			<variable name="HC_Unit.coolerOn" type="boolean">false</variable>
			<variable name="HC_Unit.currentRegulation" type="int">0</variable>
		</statevariables>
		<queue>
			<message arrival="15" deadline="infinity" sender="hc_unit">regulateTemp()</message>
		</queue>
		<now>10</now>
		<pc></pc>
		<res></res>
	</rebec>
</state>
<transition source="224_0" destination="237_0" executionTime="10" shift="0"> <messageserver sender="hc_unit" owner="room" title="SETREGULATION"/></transition>
<state id="238_0" atomicpropositions="" >
	<rebec name="room">
		<statevariables>
			<variable name="Room.currentTemp" type="int">21</variable>
			<variable name="Room.currentRegulation" type="int">0</variable>
			<variable name="Room.outside_air" type="int">0</variable>
		</statevariables>
		<queue>
			<message arrival="10" deadline="infinity" sender="hc_unit">setRegulation(0)</message>
			<message arrival="20" deadline="infinity" sender="room">updateStatus()</message>
		</queue>
		<now>10</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="controller">
		<statevariables>
			<variable name="Controller.currentTemp" type="int">21</variable>
			<variable name="Controller.isHeating" type="boolean">false</variable>
			<variable name="Controller.isCooling" type="boolean">false</variable>
		</statevariables>
		<queue>
			<message arrival="10" deadline="infinity" sender="sensor">setCurrent(21)</message>
		</queue>
		<now>10</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="sensor">
		<statevariables>
		</statevariables>
		<queue>
			<message arrival="12" deadline="infinity" sender="sensor">callSensor()</message>
		</queue>
		<now>10</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="hc_unit">
		<statevariables>
			<variable name="HC_Unit.heaterOn" type="boolean">false</variable>
			<variable name="HC_Unit.coolerOn" type="boolean">false</variable>
			<variable name="HC_Unit.currentRegulation" type="int">0</variable>
		</statevariables>
		<queue>
			<message arrival="15" deadline="infinity" sender="hc_unit">regulateTemp()</message>
		</queue>
		<now>10</now>
		<pc></pc>
		<res></res>
	</rebec>
</state>
<transition source="224_0" destination="238_0" executionTime="10" shift="0"> <messageserver sender="room" owner="sensor" title="SETCURRENT"/></transition>
<state id="239_0" atomicpropositions="" >
	<rebec name="room">
		<statevariables>
			<variable name="Room.currentTemp" type="int">20</variable>
			<variable name="Room.currentRegulation" type="int">0</variable>
			<variable name="Room.outside_air" type="int">1</variable>
		</statevariables>
		<queue>
			<message arrival="10" deadline="infinity" sender="hc_unit">setRegulation(0)</message>
			<message arrival="20" deadline="infinity" sender="room">updateStatus()</message>
		</queue>
		<now>10</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="controller">
		<statevariables>
			<variable name="Controller.currentTemp" type="int">21</variable>
			<variable name="Controller.isHeating" type="boolean">false</variable>
			<variable name="Controller.isCooling" type="boolean">false</variable>
		</statevariables>
		<queue>
			<message arrival="10" deadline="infinity" sender="sensor">setCurrent(21)</message>
		</queue>
		<now>10</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="sensor">
		<statevariables>
		</statevariables>
		<queue>
			<message arrival="12" deadline="infinity" sender="sensor">callSensor()</message>
		</queue>
		<now>10</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="hc_unit">
		<statevariables>
			<variable name="HC_Unit.heaterOn" type="boolean">false</variable>
			<variable name="HC_Unit.coolerOn" type="boolean">false</variable>
			<variable name="HC_Unit.currentRegulation" type="int">0</variable>
		</statevariables>
		<queue>
			<message arrival="15" deadline="infinity" sender="hc_unit">regulateTemp()</message>
		</queue>
		<now>10</now>
		<pc></pc>
		<res></res>
	</rebec>
</state>
<transition source="228_0" destination="239_0" executionTime="10" shift="0"> <messageserver sender="room" owner="room" title="UPDATESTATUS"/></transition>
<transition source="228_0" destination="238_0" executionTime="10" shift="0"> <messageserver sender="room" owner="room" title="UPDATESTATUS"/></transition>
<state id="240_0" atomicpropositions="" >
	<rebec name="room">
		<statevariables>
			<variable name="Room.currentTemp" type="int">22</variable>
			<variable name="Room.currentRegulation" type="int">0</variable>
			<variable name="Room.outside_air" type="int">-1</variable>
		</statevariables>
		<queue>
			<message arrival="10" deadline="infinity" sender="hc_unit">setRegulation(0)</message>
			<message arrival="20" deadline="infinity" sender="room">updateStatus()</message>
		</queue>
		<now>10</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="controller">
		<statevariables>
			<variable name="Controller.currentTemp" type="int">21</variable>
			<variable name="Controller.isHeating" type="boolean">false</variable>
			<variable name="Controller.isCooling" type="boolean">false</variable>
		</statevariables>
		<queue>
			<message arrival="10" deadline="infinity" sender="sensor">setCurrent(21)</message>
		</queue>
		<now>10</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="sensor">
		<statevariables>
		</statevariables>
		<queue>
			<message arrival="12" deadline="infinity" sender="sensor">callSensor()</message>
		</queue>
		<now>10</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="hc_unit">
		<statevariables>
			<variable name="HC_Unit.heaterOn" type="boolean">false</variable>
			<variable name="HC_Unit.coolerOn" type="boolean">false</variable>
			<variable name="HC_Unit.currentRegulation" type="int">0</variable>
		</statevariables>
		<queue>
			<message arrival="15" deadline="infinity" sender="hc_unit">regulateTemp()</message>
		</queue>
		<now>10</now>
		<pc></pc>
		<res></res>
	</rebec>
</state>
<transition source="228_0" destination="240_0" executionTime="10" shift="0"> <messageserver sender="room" owner="room" title="UPDATESTATUS"/></transition>
<state id="241_0" atomicpropositions="" >
	<rebec name="room">
		<statevariables>
			<variable name="Room.currentTemp" type="int">21</variable>
			<variable name="Room.currentRegulation" type="int">0</variable>
			<variable name="Room.outside_air" type="int">1</variable>
		</statevariables>
		<queue>
			<message arrival="10" deadline="infinity" sender="room">updateStatus()</message>
		</queue>
		<now>10</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="controller">
		<statevariables>
			<variable name="Controller.currentTemp" type="int">21</variable>
			<variable name="Controller.isHeating" type="boolean">false</variable>
			<variable name="Controller.isCooling" type="boolean">false</variable>
		</statevariables>
		<queue>
			<message arrival="10" deadline="infinity" sender="sensor">setCurrent(21)</message>
		</queue>
		<now>10</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="sensor">
		<statevariables>
		</statevariables>
		<queue>
			<message arrival="12" deadline="infinity" sender="sensor">callSensor()</message>
		</queue>
		<now>10</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="hc_unit">
		<statevariables>
			<variable name="HC_Unit.heaterOn" type="boolean">false</variable>
			<variable name="HC_Unit.coolerOn" type="boolean">false</variable>
			<variable name="HC_Unit.currentRegulation" type="int">0</variable>
		</statevariables>
		<queue>
			<message arrival="15" deadline="infinity" sender="hc_unit">regulateTemp()</message>
		</queue>
		<now>10</now>
		<pc></pc>
		<res></res>
	</rebec>
</state>
<transition source="228_0" destination="241_0" executionTime="10" shift="0"> <messageserver sender="hc_unit" owner="room" title="SETREGULATION"/></transition>
<state id="242_0" atomicpropositions="" >
	<rebec name="room">
		<statevariables>
			<variable name="Room.currentTemp" type="int">21</variable>
			<variable name="Room.currentRegulation" type="int">0</variable>
			<variable name="Room.outside_air" type="int">1</variable>
		</statevariables>
		<queue>
			<message arrival="10" deadline="infinity" sender="room">updateStatus()</message>
			<message arrival="10" deadline="infinity" sender="hc_unit">setRegulation(0)</message>
		</queue>
		<now>10</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="controller">
		<statevariables>
			<variable name="Controller.currentTemp" type="int">21</variable>
			<variable name="Controller.isHeating" type="boolean">false</variable>
			<variable name="Controller.isCooling" type="boolean">false</variable>
		</statevariables>
		<queue>
			<message arrival="10" deadline="infinity" sender="controller">updateOutput()</message>
		</queue>
		<now>10</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="sensor">
		<statevariables>
		</statevariables>
		<queue>
			<message arrival="12" deadline="infinity" sender="sensor">callSensor()</message>
		</queue>
		<now>10</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="hc_unit">
		<statevariables>
			<variable name="HC_Unit.heaterOn" type="boolean">false</variable>
			<variable name="HC_Unit.coolerOn" type="boolean">false</variable>
			<variable name="HC_Unit.currentRegulation" type="int">0</variable>
		</statevariables>
		<queue>
			<message arrival="15" deadline="infinity" sender="hc_unit">regulateTemp()</message>
		</queue>
		<now>10</now>
		<pc></pc>
		<res></res>
	</rebec>
</state>
<transition source="228_0" destination="242_0" executionTime="10" shift="0"> <messageserver sender="sensor" owner="controller" title="SETCURRENT"/></transition>
<state id="243_0" atomicpropositions="" >
	<rebec name="room">
		<statevariables>
			<variable name="Room.currentTemp" type="int">23</variable>
			<variable name="Room.currentRegulation" type="int">0</variable>
			<variable name="Room.outside_air" type="int">0</variable>
		</statevariables>
		<queue>
			<message arrival="20" deadline="infinity" sender="room">updateStatus()</message>
		</queue>
		<now>10</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="controller">
		<statevariables>
			<variable name="Controller.currentTemp" type="int">23</variable>
			<variable name="Controller.isHeating" type="boolean">false</variable>
			<variable name="Controller.isCooling" type="boolean">false</variable>
		</statevariables>
		<queue>
		</queue>
		<now>10</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="sensor">
		<statevariables>
		</statevariables>
		<queue>
			<message arrival="10" deadline="infinity" sender="room">setCurrent(23)</message>
			<message arrival="12" deadline="infinity" sender="sensor">callSensor()</message>
		</queue>
		<now>10</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="hc_unit">
		<statevariables>
			<variable name="HC_Unit.heaterOn" type="boolean">false</variable>
			<variable name="HC_Unit.coolerOn" type="boolean">false</variable>
			<variable name="HC_Unit.currentRegulation" type="int">0</variable>
		</statevariables>
		<queue>
			<message arrival="15" deadline="infinity" sender="hc_unit">regulateTemp()</message>
		</queue>
		<now>10</now>
		<pc></pc>
		<res></res>
	</rebec>
</state>
<transition source="229_0" destination="243_0" executionTime="10" shift="0"> <messageserver sender="sensor" owner="room" title="GETTEMP"/></transition>
<state id="244_0" atomicpropositions="" >
	<rebec name="room">
		<statevariables>
			<variable name="Room.currentTemp" type="int">22</variable>
			<variable name="Room.currentRegulation" type="int">0</variable>
			<variable name="Room.outside_air" type="int">1</variable>
		</statevariables>
		<queue>
			<message arrival="20" deadline="infinity" sender="room">updateStatus()</message>
		</queue>
		<now>10</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="controller">
		<statevariables>
			<variable name="Controller.currentTemp" type="int">23</variable>
			<variable name="Controller.isHeating" type="boolean">false</variable>
			<variable name="Controller.isCooling" type="boolean">false</variable>
		</statevariables>
		<queue>
		</queue>
		<now>10</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="sensor">
		<statevariables>
		</statevariables>
		<queue>
			<message arrival="10" deadline="infinity" sender="room">setCurrent(22)</message>
			<message arrival="12" deadline="infinity" sender="sensor">callSensor()</message>
		</queue>
		<now>10</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="hc_unit">
		<statevariables>
			<variable name="HC_Unit.heaterOn" type="boolean">false</variable>
			<variable name="HC_Unit.coolerOn" type="boolean">false</variable>
			<variable name="HC_Unit.currentRegulation" type="int">0</variable>
		</statevariables>
		<queue>
			<message arrival="15" deadline="infinity" sender="hc_unit">regulateTemp()</message>
		</queue>
		<now>10</now>
		<pc></pc>
		<res></res>
	</rebec>
</state>
<transition source="231_0" destination="244_0" executionTime="10" shift="0"> <messageserver sender="sensor" owner="room" title="GETTEMP"/></transition>
<transition source="232_0" destination="244_0" executionTime="10" shift="0"> <messageserver sender="hc_unit" owner="room" title="SETREGULATION"/></transition>
<state id="245_0" atomicpropositions="" >
	<rebec name="room">
		<statevariables>
			<variable name="Room.currentTemp" type="int">22</variable>
			<variable name="Room.currentRegulation" type="int">0</variable>
			<variable name="Room.outside_air" type="int">1</variable>
		</statevariables>
		<queue>
			<message arrival="10" deadline="infinity" sender="hc_unit">setRegulation(0)</message>
			<message arrival="20" deadline="infinity" sender="room">updateStatus()</message>
		</queue>
		<now>10</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="controller">
		<statevariables>
			<variable name="Controller.currentTemp" type="int">23</variable>
			<variable name="Controller.isHeating" type="boolean">false</variable>
			<variable name="Controller.isCooling" type="boolean">false</variable>
		</statevariables>
		<queue>
			<message arrival="10" deadline="infinity" sender="sensor">setCurrent(22)</message>
		</queue>
		<now>10</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="sensor">
		<statevariables>
		</statevariables>
		<queue>
			<message arrival="12" deadline="infinity" sender="sensor">callSensor()</message>
		</queue>
		<now>10</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="hc_unit">
		<statevariables>
			<variable name="HC_Unit.heaterOn" type="boolean">false</variable>
			<variable name="HC_Unit.coolerOn" type="boolean">false</variable>
			<variable name="HC_Unit.currentRegulation" type="int">0</variable>
		</statevariables>
		<queue>
			<message arrival="15" deadline="infinity" sender="hc_unit">regulateTemp()</message>
		</queue>
		<now>10</now>
		<pc></pc>
		<res></res>
	</rebec>
</state>
<transition source="232_0" destination="245_0" executionTime="10" shift="0"> <messageserver sender="room" owner="sensor" title="SETCURRENT"/></transition>
<state id="246_0" atomicpropositions="" >
	<rebec name="room">
		<statevariables>
			<variable name="Room.currentTemp" type="int">22</variable>
			<variable name="Room.currentRegulation" type="int">0</variable>
			<variable name="Room.outside_air" type="int">1</variable>
		</statevariables>
		<queue>
			<message arrival="10" deadline="infinity" sender="hc_unit">setRegulation(0)</message>
			<message arrival="20" deadline="infinity" sender="room">updateStatus()</message>
		</queue>
		<now>10</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="controller">
		<statevariables>
			<variable name="Controller.currentTemp" type="int">23</variable>
			<variable name="Controller.isHeating" type="boolean">false</variable>
			<variable name="Controller.isCooling" type="boolean">false</variable>
		</statevariables>
		<queue>
			<message arrival="10" deadline="infinity" sender="sensor">setCurrent(23)</message>
		</queue>
		<now>10</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="sensor">
		<statevariables>
		</statevariables>
		<queue>
			<message arrival="12" deadline="infinity" sender="sensor">callSensor()</message>
		</queue>
		<now>10</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="hc_unit">
		<statevariables>
			<variable name="HC_Unit.heaterOn" type="boolean">false</variable>
			<variable name="HC_Unit.coolerOn" type="boolean">false</variable>
			<variable name="HC_Unit.currentRegulation" type="int">0</variable>
		</statevariables>
		<queue>
			<message arrival="15" deadline="infinity" sender="hc_unit">regulateTemp()</message>
		</queue>
		<now>10</now>
		<pc></pc>
		<res></res>
	</rebec>
</state>
<transition source="236_0" destination="246_0" executionTime="10" shift="0"> <messageserver sender="room" owner="room" title="UPDATESTATUS"/></transition>
<state id="247_0" atomicpropositions="" >
	<rebec name="room">
		<statevariables>
			<variable name="Room.currentTemp" type="int">23</variable>
			<variable name="Room.currentRegulation" type="int">0</variable>
			<variable name="Room.outside_air" type="int">0</variable>
		</statevariables>
		<queue>
			<message arrival="10" deadline="infinity" sender="hc_unit">setRegulation(0)</message>
			<message arrival="20" deadline="infinity" sender="room">updateStatus()</message>
		</queue>
		<now>10</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="controller">
		<statevariables>
			<variable name="Controller.currentTemp" type="int">23</variable>
			<variable name="Controller.isHeating" type="boolean">false</variable>
			<variable name="Controller.isCooling" type="boolean">false</variable>
		</statevariables>
		<queue>
			<message arrival="10" deadline="infinity" sender="sensor">setCurrent(23)</message>
		</queue>
		<now>10</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="sensor">
		<statevariables>
		</statevariables>
		<queue>
			<message arrival="12" deadline="infinity" sender="sensor">callSensor()</message>
		</queue>
		<now>10</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="hc_unit">
		<statevariables>
			<variable name="HC_Unit.heaterOn" type="boolean">false</variable>
			<variable name="HC_Unit.coolerOn" type="boolean">false</variable>
			<variable name="HC_Unit.currentRegulation" type="int">0</variable>
		</statevariables>
		<queue>
			<message arrival="15" deadline="infinity" sender="hc_unit">regulateTemp()</message>
		</queue>
		<now>10</now>
		<pc></pc>
		<res></res>
	</rebec>
</state>
<transition source="236_0" destination="247_0" executionTime="10" shift="0"> <messageserver sender="room" owner="room" title="UPDATESTATUS"/></transition>
<state id="248_0" atomicpropositions="" >
	<rebec name="room">
		<statevariables>
			<variable name="Room.currentTemp" type="int">24</variable>
			<variable name="Room.currentRegulation" type="int">0</variable>
			<variable name="Room.outside_air" type="int">-1</variable>
		</statevariables>
		<queue>
			<message arrival="10" deadline="infinity" sender="hc_unit">setRegulation(0)</message>
			<message arrival="20" deadline="infinity" sender="room">updateStatus()</message>
		</queue>
		<now>10</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="controller">
		<statevariables>
			<variable name="Controller.currentTemp" type="int">23</variable>
			<variable name="Controller.isHeating" type="boolean">false</variable>
			<variable name="Controller.isCooling" type="boolean">false</variable>
		</statevariables>
		<queue>
			<message arrival="10" deadline="infinity" sender="sensor">setCurrent(23)</message>
		</queue>
		<now>10</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="sensor">
		<statevariables>
		</statevariables>
		<queue>
			<message arrival="12" deadline="infinity" sender="sensor">callSensor()</message>
		</queue>
		<now>10</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="hc_unit">
		<statevariables>
			<variable name="HC_Unit.heaterOn" type="boolean">false</variable>
			<variable name="HC_Unit.coolerOn" type="boolean">false</variable>
			<variable name="HC_Unit.currentRegulation" type="int">0</variable>
		</statevariables>
		<queue>
			<message arrival="15" deadline="infinity" sender="hc_unit">regulateTemp()</message>
		</queue>
		<now>10</now>
		<pc></pc>
		<res></res>
	</rebec>
</state>
<transition source="236_0" destination="248_0" executionTime="10" shift="0"> <messageserver sender="room" owner="room" title="UPDATESTATUS"/></transition>
<state id="249_0" atomicpropositions="" >
	<rebec name="room">
		<statevariables>
			<variable name="Room.currentTemp" type="int">23</variable>
			<variable name="Room.currentRegulation" type="int">0</variable>
			<variable name="Room.outside_air" type="int">-1</variable>
		</statevariables>
		<queue>
			<message arrival="10" deadline="infinity" sender="room">updateStatus()</message>
		</queue>
		<now>10</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="controller">
		<statevariables>
			<variable name="Controller.currentTemp" type="int">23</variable>
			<variable name="Controller.isHeating" type="boolean">false</variable>
			<variable name="Controller.isCooling" type="boolean">false</variable>
		</statevariables>
		<queue>
			<message arrival="10" deadline="infinity" sender="sensor">setCurrent(23)</message>
		</queue>
		<now>10</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="sensor">
		<statevariables>
		</statevariables>
		<queue>
			<message arrival="12" deadline="infinity" sender="sensor">callSensor()</message>
		</queue>
		<now>10</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="hc_unit">
		<statevariables>
			<variable name="HC_Unit.heaterOn" type="boolean">false</variable>
			<variable name="HC_Unit.coolerOn" type="boolean">false</variable>
			<variable name="HC_Unit.currentRegulation" type="int">0</variable>
		</statevariables>
		<queue>
			<message arrival="15" deadline="infinity" sender="hc_unit">regulateTemp()</message>
		</queue>
		<now>10</now>
		<pc></pc>
		<res></res>
	</rebec>
</state>
<transition source="236_0" destination="249_0" executionTime="10" shift="0"> <messageserver sender="hc_unit" owner="room" title="SETREGULATION"/></transition>
<state id="250_0" atomicpropositions="" >
	<rebec name="room">
		<statevariables>
			<variable name="Room.currentTemp" type="int">23</variable>
			<variable name="Room.currentRegulation" type="int">0</variable>
			<variable name="Room.outside_air" type="int">-1</variable>
		</statevariables>
		<queue>
			<message arrival="10" deadline="infinity" sender="room">updateStatus()</message>
			<message arrival="10" deadline="infinity" sender="hc_unit">setRegulation(0)</message>
		</queue>
		<now>10</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="controller">
		<statevariables>
			<variable name="Controller.currentTemp" type="int">23</variable>
			<variable name="Controller.isHeating" type="boolean">false</variable>
			<variable name="Controller.isCooling" type="boolean">false</variable>
		</statevariables>
		<queue>
			<message arrival="10" deadline="infinity" sender="controller">updateOutput()</message>
		</queue>
		<now>10</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="sensor">
		<statevariables>
		</statevariables>
		<queue>
			<message arrival="12" deadline="infinity" sender="sensor">callSensor()</message>
		</queue>
		<now>10</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="hc_unit">
		<statevariables>
			<variable name="HC_Unit.heaterOn" type="boolean">false</variable>
			<variable name="HC_Unit.coolerOn" type="boolean">false</variable>
			<variable name="HC_Unit.currentRegulation" type="int">0</variable>
		</statevariables>
		<queue>
			<message arrival="15" deadline="infinity" sender="hc_unit">regulateTemp()</message>
		</queue>
		<now>10</now>
		<pc></pc>
		<res></res>
	</rebec>
</state>
<transition source="236_0" destination="250_0" executionTime="10" shift="0"> <messageserver sender="sensor" owner="controller" title="SETCURRENT"/></transition>
<state id="251_0" atomicpropositions="" >
	<rebec name="room">
		<statevariables>
			<variable name="Room.currentTemp" type="int">21</variable>
			<variable name="Room.currentRegulation" type="int">0</variable>
			<variable name="Room.outside_air" type="int">0</variable>
		</statevariables>
		<queue>
			<message arrival="20" deadline="infinity" sender="room">updateStatus()</message>
		</queue>
		<now>10</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="controller">
		<statevariables>
			<variable name="Controller.currentTemp" type="int">21</variable>
			<variable name="Controller.isHeating" type="boolean">false</variable>
			<variable name="Controller.isCooling" type="boolean">false</variable>
		</statevariables>
		<queue>
			<message arrival="10" deadline="infinity" sender="sensor">setCurrent(21)</message>
		</queue>
		<now>10</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="sensor">
		<statevariables>
		</statevariables>
		<queue>
			<message arrival="12" deadline="infinity" sender="sensor">callSensor()</message>
		</queue>
		<now>10</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="hc_unit">
		<statevariables>
			<variable name="HC_Unit.heaterOn" type="boolean">false</variable>
			<variable name="HC_Unit.coolerOn" type="boolean">false</variable>
			<variable name="HC_Unit.currentRegulation" type="int">0</variable>
		</statevariables>
		<queue>
			<message arrival="15" deadline="infinity" sender="hc_unit">regulateTemp()</message>
		</queue>
		<now>10</now>
		<pc></pc>
		<res></res>
	</rebec>
</state>
<transition source="238_0" destination="251_0" executionTime="10" shift="0"> <messageserver sender="hc_unit" owner="room" title="SETREGULATION"/></transition>
<state id="252_0" atomicpropositions="" >
	<rebec name="room">
		<statevariables>
			<variable name="Room.currentTemp" type="int">21</variable>
			<variable name="Room.currentRegulation" type="int">0</variable>
			<variable name="Room.outside_air" type="int">0</variable>
		</statevariables>
		<queue>
			<message arrival="10" deadline="infinity" sender="hc_unit">setRegulation(0)</message>
			<message arrival="20" deadline="infinity" sender="room">updateStatus()</message>
		</queue>
		<now>10</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="controller">
		<statevariables>
			<variable name="Controller.currentTemp" type="int">21</variable>
			<variable name="Controller.isHeating" type="boolean">false</variable>
			<variable name="Controller.isCooling" type="boolean">false</variable>
		</statevariables>
		<queue>
			<message arrival="10" deadline="infinity" sender="controller">updateOutput()</message>
		</queue>
		<now>10</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="sensor">
		<statevariables>
		</statevariables>
		<queue>
			<message arrival="12" deadline="infinity" sender="sensor">callSensor()</message>
		</queue>
		<now>10</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="hc_unit">
		<statevariables>
			<variable name="HC_Unit.heaterOn" type="boolean">false</variable>
			<variable name="HC_Unit.coolerOn" type="boolean">false</variable>
			<variable name="HC_Unit.currentRegulation" type="int">0</variable>
		</statevariables>
		<queue>
			<message arrival="15" deadline="infinity" sender="hc_unit">regulateTemp()</message>
		</queue>
		<now>10</now>
		<pc></pc>
		<res></res>
	</rebec>
</state>
<transition source="238_0" destination="252_0" executionTime="10" shift="0"> <messageserver sender="sensor" owner="controller" title="SETCURRENT"/></transition>
<state id="253_0" atomicpropositions="" >
	<rebec name="room">
		<statevariables>
			<variable name="Room.currentTemp" type="int">20</variable>
			<variable name="Room.currentRegulation" type="int">0</variable>
			<variable name="Room.outside_air" type="int">1</variable>
		</statevariables>
		<queue>
			<message arrival="10" deadline="infinity" sender="hc_unit">setRegulation(0)</message>
			<message arrival="20" deadline="infinity" sender="room">updateStatus()</message>
		</queue>
		<now>10</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="controller">
		<statevariables>
			<variable name="Controller.currentTemp" type="int">21</variable>
			<variable name="Controller.isHeating" type="boolean">false</variable>
			<variable name="Controller.isCooling" type="boolean">false</variable>
		</statevariables>
		<queue>
			<message arrival="10" deadline="infinity" sender="controller">updateOutput()</message>
		</queue>
		<now>10</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="sensor">
		<statevariables>
		</statevariables>
		<queue>
			<message arrival="12" deadline="infinity" sender="sensor">callSensor()</message>
		</queue>
		<now>10</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="hc_unit">
		<statevariables>
			<variable name="HC_Unit.heaterOn" type="boolean">false</variable>
			<variable name="HC_Unit.coolerOn" type="boolean">false</variable>
			<variable name="HC_Unit.currentRegulation" type="int">0</variable>
		</statevariables>
		<queue>
			<message arrival="15" deadline="infinity" sender="hc_unit">regulateTemp()</message>
		</queue>
		<now>10</now>
		<pc></pc>
		<res></res>
	</rebec>
</state>
<transition source="242_0" destination="253_0" executionTime="10" shift="0"> <messageserver sender="room" owner="room" title="UPDATESTATUS"/></transition>
<transition source="242_0" destination="252_0" executionTime="10" shift="0"> <messageserver sender="room" owner="room" title="UPDATESTATUS"/></transition>
<state id="254_0" atomicpropositions="" >
	<rebec name="room">
		<statevariables>
			<variable name="Room.currentTemp" type="int">22</variable>
			<variable name="Room.currentRegulation" type="int">0</variable>
			<variable name="Room.outside_air" type="int">-1</variable>
		</statevariables>
		<queue>
			<message arrival="10" deadline="infinity" sender="hc_unit">setRegulation(0)</message>
			<message arrival="20" deadline="infinity" sender="room">updateStatus()</message>
		</queue>
		<now>10</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="controller">
		<statevariables>
			<variable name="Controller.currentTemp" type="int">21</variable>
			<variable name="Controller.isHeating" type="boolean">false</variable>
			<variable name="Controller.isCooling" type="boolean">false</variable>
		</statevariables>
		<queue>
			<message arrival="10" deadline="infinity" sender="controller">updateOutput()</message>
		</queue>
		<now>10</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="sensor">
		<statevariables>
		</statevariables>
		<queue>
			<message arrival="12" deadline="infinity" sender="sensor">callSensor()</message>
		</queue>
		<now>10</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="hc_unit">
		<statevariables>
			<variable name="HC_Unit.heaterOn" type="boolean">false</variable>
			<variable name="HC_Unit.coolerOn" type="boolean">false</variable>
			<variable name="HC_Unit.currentRegulation" type="int">0</variable>
		</statevariables>
		<queue>
			<message arrival="15" deadline="infinity" sender="hc_unit">regulateTemp()</message>
		</queue>
		<now>10</now>
		<pc></pc>
		<res></res>
	</rebec>
</state>
<transition source="242_0" destination="254_0" executionTime="10" shift="0"> <messageserver sender="room" owner="room" title="UPDATESTATUS"/></transition>
<state id="255_0" atomicpropositions="" >
	<rebec name="room">
		<statevariables>
			<variable name="Room.currentTemp" type="int">21</variable>
			<variable name="Room.currentRegulation" type="int">0</variable>
			<variable name="Room.outside_air" type="int">1</variable>
		</statevariables>
		<queue>
			<message arrival="10" deadline="infinity" sender="room">updateStatus()</message>
		</queue>
		<now>10</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="controller">
		<statevariables>
			<variable name="Controller.currentTemp" type="int">21</variable>
			<variable name="Controller.isHeating" type="boolean">false</variable>
			<variable name="Controller.isCooling" type="boolean">false</variable>
		</statevariables>
		<queue>
			<message arrival="10" deadline="infinity" sender="controller">updateOutput()</message>
		</queue>
		<now>10</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="sensor">
		<statevariables>
		</statevariables>
		<queue>
			<message arrival="12" deadline="infinity" sender="sensor">callSensor()</message>
		</queue>
		<now>10</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="hc_unit">
		<statevariables>
			<variable name="HC_Unit.heaterOn" type="boolean">false</variable>
			<variable name="HC_Unit.coolerOn" type="boolean">false</variable>
			<variable name="HC_Unit.currentRegulation" type="int">0</variable>
		</statevariables>
		<queue>
			<message arrival="15" deadline="infinity" sender="hc_unit">regulateTemp()</message>
		</queue>
		<now>10</now>
		<pc></pc>
		<res></res>
	</rebec>
</state>
<transition source="242_0" destination="255_0" executionTime="10" shift="0"> <messageserver sender="hc_unit" owner="room" title="SETREGULATION"/></transition>
<state id="256_0" atomicpropositions="" >
	<rebec name="room">
		<statevariables>
			<variable name="Room.currentTemp" type="int">21</variable>
			<variable name="Room.currentRegulation" type="int">0</variable>
			<variable name="Room.outside_air" type="int">1</variable>
		</statevariables>
		<queue>
			<message arrival="10" deadline="infinity" sender="room">updateStatus()</message>
			<message arrival="10" deadline="infinity" sender="hc_unit">setRegulation(0)</message>
		</queue>
		<now>10</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="controller">
		<statevariables>
			<variable name="Controller.currentTemp" type="int">21</variable>
			<variable name="Controller.isHeating" type="boolean">false</variable>
			<variable name="Controller.isCooling" type="boolean">false</variable>
		</statevariables>
		<queue>
		</queue>
		<now>10</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="sensor">
		<statevariables>
		</statevariables>
		<queue>
			<message arrival="12" deadline="infinity" sender="sensor">callSensor()</message>
		</queue>
		<now>10</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="hc_unit">
		<statevariables>
			<variable name="HC_Unit.heaterOn" type="boolean">false</variable>
			<variable name="HC_Unit.coolerOn" type="boolean">false</variable>
			<variable name="HC_Unit.currentRegulation" type="int">0</variable>
		</statevariables>
		<queue>
			<message arrival="15" deadline="infinity" sender="hc_unit">regulateTemp()</message>
		</queue>
		<now>10</now>
		<pc></pc>
		<res></res>
	</rebec>
</state>
<transition source="242_0" destination="256_0" executionTime="10" shift="0"> <messageserver sender="controller" owner="controller" title="UPDATEOUTPUT"/></transition>
<state id="257_0" atomicpropositions="" >
	<rebec name="room">
		<statevariables>
			<variable name="Room.currentTemp" type="int">23</variable>
			<variable name="Room.currentRegulation" type="int">0</variable>
			<variable name="Room.outside_air" type="int">0</variable>
		</statevariables>
		<queue>
			<message arrival="20" deadline="infinity" sender="room">updateStatus()</message>
		</queue>
		<now>10</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="controller">
		<statevariables>
			<variable name="Controller.currentTemp" type="int">23</variable>
			<variable name="Controller.isHeating" type="boolean">false</variable>
			<variable name="Controller.isCooling" type="boolean">false</variable>
		</statevariables>
		<queue>
			<message arrival="10" deadline="infinity" sender="sensor">setCurrent(23)</message>
		</queue>
		<now>10</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="sensor">
		<statevariables>
		</statevariables>
		<queue>
			<message arrival="12" deadline="infinity" sender="sensor">callSensor()</message>
		</queue>
		<now>10</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="hc_unit">
		<statevariables>
			<variable name="HC_Unit.heaterOn" type="boolean">false</variable>
			<variable name="HC_Unit.coolerOn" type="boolean">false</variable>
			<variable name="HC_Unit.currentRegulation" type="int">0</variable>
		</statevariables>
		<queue>
			<message arrival="15" deadline="infinity" sender="hc_unit">regulateTemp()</message>
		</queue>
		<now>10</now>
		<pc></pc>
		<res></res>
	</rebec>
</state>
<transition source="243_0" destination="257_0" executionTime="10" shift="0"> <messageserver sender="room" owner="sensor" title="SETCURRENT"/></transition>
<state id="258_0" atomicpropositions="" >
	<rebec name="room">
		<statevariables>
			<variable name="Room.currentTemp" type="int">22</variable>
			<variable name="Room.currentRegulation" type="int">0</variable>
			<variable name="Room.outside_air" type="int">1</variable>
		</statevariables>
		<queue>
			<message arrival="20" deadline="infinity" sender="room">updateStatus()</message>
		</queue>
		<now>10</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="controller">
		<statevariables>
			<variable name="Controller.currentTemp" type="int">23</variable>
			<variable name="Controller.isHeating" type="boolean">false</variable>
			<variable name="Controller.isCooling" type="boolean">false</variable>
		</statevariables>
		<queue>
			<message arrival="10" deadline="infinity" sender="sensor">setCurrent(22)</message>
		</queue>
		<now>10</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="sensor">
		<statevariables>
		</statevariables>
		<queue>
			<message arrival="12" deadline="infinity" sender="sensor">callSensor()</message>
		</queue>
		<now>10</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="hc_unit">
		<statevariables>
			<variable name="HC_Unit.heaterOn" type="boolean">false</variable>
			<variable name="HC_Unit.coolerOn" type="boolean">false</variable>
			<variable name="HC_Unit.currentRegulation" type="int">0</variable>
		</statevariables>
		<queue>
			<message arrival="15" deadline="infinity" sender="hc_unit">regulateTemp()</message>
		</queue>
		<now>10</now>
		<pc></pc>
		<res></res>
	</rebec>
</state>
<transition source="244_0" destination="258_0" executionTime="10" shift="0"> <messageserver sender="room" owner="sensor" title="SETCURRENT"/></transition>
<transition source="245_0" destination="258_0" executionTime="10" shift="0"> <messageserver sender="hc_unit" owner="room" title="SETREGULATION"/></transition>
<state id="259_0" atomicpropositions="" >
	<rebec name="room">
		<statevariables>
			<variable name="Room.currentTemp" type="int">22</variable>
			<variable name="Room.currentRegulation" type="int">0</variable>
			<variable name="Room.outside_air" type="int">1</variable>
		</statevariables>
		<queue>
			<message arrival="10" deadline="infinity" sender="hc_unit">setRegulation(0)</message>
			<message arrival="20" deadline="infinity" sender="room">updateStatus()</message>
		</queue>
		<now>10</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="controller">
		<statevariables>
			<variable name="Controller.currentTemp" type="int">22</variable>
			<variable name="Controller.isHeating" type="boolean">false</variable>
			<variable name="Controller.isCooling" type="boolean">false</variable>
		</statevariables>
		<queue>
			<message arrival="10" deadline="infinity" sender="controller">updateOutput()</message>
		</queue>
		<now>10</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="sensor">
		<statevariables>
		</statevariables>
		<queue>
			<message arrival="12" deadline="infinity" sender="sensor">callSensor()</message>
		</queue>
		<now>10</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="hc_unit">
		<statevariables>
			<variable name="HC_Unit.heaterOn" type="boolean">false</variable>
			<variable name="HC_Unit.coolerOn" type="boolean">false</variable>
			<variable name="HC_Unit.currentRegulation" type="int">0</variable>
		</statevariables>
		<queue>
			<message arrival="15" deadline="infinity" sender="hc_unit">regulateTemp()</message>
		</queue>
		<now>10</now>
		<pc></pc>
		<res></res>
	</rebec>
</state>
<transition source="245_0" destination="259_0" executionTime="10" shift="0"> <messageserver sender="sensor" owner="controller" title="SETCURRENT"/></transition>
<state id="260_0" atomicpropositions="" >
	<rebec name="room">
		<statevariables>
			<variable name="Room.currentTemp" type="int">22</variable>
			<variable name="Room.currentRegulation" type="int">0</variable>
			<variable name="Room.outside_air" type="int">1</variable>
		</statevariables>
		<queue>
			<message arrival="10" deadline="infinity" sender="hc_unit">setRegulation(0)</message>
			<message arrival="20" deadline="infinity" sender="room">updateStatus()</message>
		</queue>
		<now>10</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="controller">
		<statevariables>
			<variable name="Controller.currentTemp" type="int">23</variable>
			<variable name="Controller.isHeating" type="boolean">false</variable>
			<variable name="Controller.isCooling" type="boolean">false</variable>
		</statevariables>
		<queue>
			<message arrival="10" deadline="infinity" sender="controller">updateOutput()</message>
		</queue>
		<now>10</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="sensor">
		<statevariables>
		</statevariables>
		<queue>
			<message arrival="12" deadline="infinity" sender="sensor">callSensor()</message>
		</queue>
		<now>10</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="hc_unit">
		<statevariables>
			<variable name="HC_Unit.heaterOn" type="boolean">false</variable>
			<variable name="HC_Unit.coolerOn" type="boolean">false</variable>
			<variable name="HC_Unit.currentRegulation" type="int">0</variable>
		</statevariables>
		<queue>
			<message arrival="15" deadline="infinity" sender="hc_unit">regulateTemp()</message>
		</queue>
		<now>10</now>
		<pc></pc>
		<res></res>
	</rebec>
</state>
<transition source="250_0" destination="260_0" executionTime="10" shift="0"> <messageserver sender="room" owner="room" title="UPDATESTATUS"/></transition>
<state id="261_0" atomicpropositions="" >
	<rebec name="room">
		<statevariables>
			<variable name="Room.currentTemp" type="int">23</variable>
			<variable name="Room.currentRegulation" type="int">0</variable>
			<variable name="Room.outside_air" type="int">0</variable>
		</statevariables>
		<queue>
			<message arrival="10" deadline="infinity" sender="hc_unit">setRegulation(0)</message>
			<message arrival="20" deadline="infinity" sender="room">updateStatus()</message>
		</queue>
		<now>10</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="controller">
		<statevariables>
			<variable name="Controller.currentTemp" type="int">23</variable>
			<variable name="Controller.isHeating" type="boolean">false</variable>
			<variable name="Controller.isCooling" type="boolean">false</variable>
		</statevariables>
		<queue>
			<message arrival="10" deadline="infinity" sender="controller">updateOutput()</message>
		</queue>
		<now>10</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="sensor">
		<statevariables>
		</statevariables>
		<queue>
			<message arrival="12" deadline="infinity" sender="sensor">callSensor()</message>
		</queue>
		<now>10</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="hc_unit">
		<statevariables>
			<variable name="HC_Unit.heaterOn" type="boolean">false</variable>
			<variable name="HC_Unit.coolerOn" type="boolean">false</variable>
			<variable name="HC_Unit.currentRegulation" type="int">0</variable>
		</statevariables>
		<queue>
			<message arrival="15" deadline="infinity" sender="hc_unit">regulateTemp()</message>
		</queue>
		<now>10</now>
		<pc></pc>
		<res></res>
	</rebec>
</state>
<transition source="250_0" destination="261_0" executionTime="10" shift="0"> <messageserver sender="room" owner="room" title="UPDATESTATUS"/></transition>
<state id="262_0" atomicpropositions="" >
	<rebec name="room">
		<statevariables>
			<variable name="Room.currentTemp" type="int">24</variable>
			<variable name="Room.currentRegulation" type="int">0</variable>
			<variable name="Room.outside_air" type="int">-1</variable>
		</statevariables>
		<queue>
			<message arrival="10" deadline="infinity" sender="hc_unit">setRegulation(0)</message>
			<message arrival="20" deadline="infinity" sender="room">updateStatus()</message>
		</queue>
		<now>10</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="controller">
		<statevariables>
			<variable name="Controller.currentTemp" type="int">23</variable>
			<variable name="Controller.isHeating" type="boolean">false</variable>
			<variable name="Controller.isCooling" type="boolean">false</variable>
		</statevariables>
		<queue>
			<message arrival="10" deadline="infinity" sender="controller">updateOutput()</message>
		</queue>
		<now>10</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="sensor">
		<statevariables>
		</statevariables>
		<queue>
			<message arrival="12" deadline="infinity" sender="sensor">callSensor()</message>
		</queue>
		<now>10</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="hc_unit">
		<statevariables>
			<variable name="HC_Unit.heaterOn" type="boolean">false</variable>
			<variable name="HC_Unit.coolerOn" type="boolean">false</variable>
			<variable name="HC_Unit.currentRegulation" type="int">0</variable>
		</statevariables>
		<queue>
			<message arrival="15" deadline="infinity" sender="hc_unit">regulateTemp()</message>
		</queue>
		<now>10</now>
		<pc></pc>
		<res></res>
	</rebec>
</state>
<transition source="250_0" destination="262_0" executionTime="10" shift="0"> <messageserver sender="room" owner="room" title="UPDATESTATUS"/></transition>
<state id="263_0" atomicpropositions="" >
	<rebec name="room">
		<statevariables>
			<variable name="Room.currentTemp" type="int">23</variable>
			<variable name="Room.currentRegulation" type="int">0</variable>
			<variable name="Room.outside_air" type="int">-1</variable>
		</statevariables>
		<queue>
			<message arrival="10" deadline="infinity" sender="room">updateStatus()</message>
		</queue>
		<now>10</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="controller">
		<statevariables>
			<variable name="Controller.currentTemp" type="int">23</variable>
			<variable name="Controller.isHeating" type="boolean">false</variable>
			<variable name="Controller.isCooling" type="boolean">false</variable>
		</statevariables>
		<queue>
			<message arrival="10" deadline="infinity" sender="controller">updateOutput()</message>
		</queue>
		<now>10</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="sensor">
		<statevariables>
		</statevariables>
		<queue>
			<message arrival="12" deadline="infinity" sender="sensor">callSensor()</message>
		</queue>
		<now>10</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="hc_unit">
		<statevariables>
			<variable name="HC_Unit.heaterOn" type="boolean">false</variable>
			<variable name="HC_Unit.coolerOn" type="boolean">false</variable>
			<variable name="HC_Unit.currentRegulation" type="int">0</variable>
		</statevariables>
		<queue>
			<message arrival="15" deadline="infinity" sender="hc_unit">regulateTemp()</message>
		</queue>
		<now>10</now>
		<pc></pc>
		<res></res>
	</rebec>
</state>
<transition source="250_0" destination="263_0" executionTime="10" shift="0"> <messageserver sender="hc_unit" owner="room" title="SETREGULATION"/></transition>
<state id="264_0" atomicpropositions="" >
	<rebec name="room">
		<statevariables>
			<variable name="Room.currentTemp" type="int">23</variable>
			<variable name="Room.currentRegulation" type="int">0</variable>
			<variable name="Room.outside_air" type="int">-1</variable>
		</statevariables>
		<queue>
			<message arrival="10" deadline="infinity" sender="room">updateStatus()</message>
			<message arrival="10" deadline="infinity" sender="hc_unit">setRegulation(0)</message>
		</queue>
		<now>10</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="controller">
		<statevariables>
			<variable name="Controller.currentTemp" type="int">23</variable>
			<variable name="Controller.isHeating" type="boolean">false</variable>
			<variable name="Controller.isCooling" type="boolean">false</variable>
		</statevariables>
		<queue>
		</queue>
		<now>10</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="sensor">
		<statevariables>
		</statevariables>
		<queue>
			<message arrival="12" deadline="infinity" sender="sensor">callSensor()</message>
		</queue>
		<now>10</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="hc_unit">
		<statevariables>
			<variable name="HC_Unit.heaterOn" type="boolean">false</variable>
			<variable name="HC_Unit.coolerOn" type="boolean">false</variable>
			<variable name="HC_Unit.currentRegulation" type="int">0</variable>
		</statevariables>
		<queue>
			<message arrival="15" deadline="infinity" sender="hc_unit">regulateTemp()</message>
		</queue>
		<now>10</now>
		<pc></pc>
		<res></res>
	</rebec>
</state>
<transition source="250_0" destination="264_0" executionTime="10" shift="0"> <messageserver sender="controller" owner="controller" title="UPDATEOUTPUT"/></transition>
<state id="265_0" atomicpropositions="" >
	<rebec name="room">
		<statevariables>
			<variable name="Room.currentTemp" type="int">21</variable>
			<variable name="Room.currentRegulation" type="int">0</variable>
			<variable name="Room.outside_air" type="int">0</variable>
		</statevariables>
		<queue>
			<message arrival="20" deadline="infinity" sender="room">updateStatus()</message>
		</queue>
		<now>10</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="controller">
		<statevariables>
			<variable name="Controller.currentTemp" type="int">21</variable>
			<variable name="Controller.isHeating" type="boolean">false</variable>
			<variable name="Controller.isCooling" type="boolean">false</variable>
		</statevariables>
		<queue>
			<message arrival="10" deadline="infinity" sender="controller">updateOutput()</message>
		</queue>
		<now>10</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="sensor">
		<statevariables>
		</statevariables>
		<queue>
			<message arrival="12" deadline="infinity" sender="sensor">callSensor()</message>
		</queue>
		<now>10</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="hc_unit">
		<statevariables>
			<variable name="HC_Unit.heaterOn" type="boolean">false</variable>
			<variable name="HC_Unit.coolerOn" type="boolean">false</variable>
			<variable name="HC_Unit.currentRegulation" type="int">0</variable>
		</statevariables>
		<queue>
			<message arrival="15" deadline="infinity" sender="hc_unit">regulateTemp()</message>
		</queue>
		<now>10</now>
		<pc></pc>
		<res></res>
	</rebec>
</state>
<transition source="252_0" destination="265_0" executionTime="10" shift="0"> <messageserver sender="hc_unit" owner="room" title="SETREGULATION"/></transition>
<state id="266_0" atomicpropositions="" >
	<rebec name="room">
		<statevariables>
			<variable name="Room.currentTemp" type="int">21</variable>
			<variable name="Room.currentRegulation" type="int">0</variable>
			<variable name="Room.outside_air" type="int">0</variable>
		</statevariables>
		<queue>
			<message arrival="10" deadline="infinity" sender="hc_unit">setRegulation(0)</message>
			<message arrival="20" deadline="infinity" sender="room">updateStatus()</message>
		</queue>
		<now>10</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="controller">
		<statevariables>
			<variable name="Controller.currentTemp" type="int">21</variable>
			<variable name="Controller.isHeating" type="boolean">false</variable>
			<variable name="Controller.isCooling" type="boolean">false</variable>
		</statevariables>
		<queue>
		</queue>
		<now>10</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="sensor">
		<statevariables>
		</statevariables>
		<queue>
			<message arrival="12" deadline="infinity" sender="sensor">callSensor()</message>
		</queue>
		<now>10</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="hc_unit">
		<statevariables>
			<variable name="HC_Unit.heaterOn" type="boolean">false</variable>
			<variable name="HC_Unit.coolerOn" type="boolean">false</variable>
			<variable name="HC_Unit.currentRegulation" type="int">0</variable>
		</statevariables>
		<queue>
			<message arrival="15" deadline="infinity" sender="hc_unit">regulateTemp()</message>
		</queue>
		<now>10</now>
		<pc></pc>
		<res></res>
	</rebec>
</state>
<transition source="252_0" destination="266_0" executionTime="10" shift="0"> <messageserver sender="controller" owner="controller" title="UPDATEOUTPUT"/></transition>
<state id="267_0" atomicpropositions="" >
	<rebec name="room">
		<statevariables>
			<variable name="Room.currentTemp" type="int">20</variable>
			<variable name="Room.currentRegulation" type="int">0</variable>
			<variable name="Room.outside_air" type="int">1</variable>
		</statevariables>
		<queue>
			<message arrival="10" deadline="infinity" sender="hc_unit">setRegulation(0)</message>
			<message arrival="20" deadline="infinity" sender="room">updateStatus()</message>
		</queue>
		<now>10</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="controller">
		<statevariables>
			<variable name="Controller.currentTemp" type="int">21</variable>
			<variable name="Controller.isHeating" type="boolean">false</variable>
			<variable name="Controller.isCooling" type="boolean">false</variable>
		</statevariables>
		<queue>
		</queue>
		<now>10</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="sensor">
		<statevariables>
		</statevariables>
		<queue>
			<message arrival="12" deadline="infinity" sender="sensor">callSensor()</message>
		</queue>
		<now>10</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="hc_unit">
		<statevariables>
			<variable name="HC_Unit.heaterOn" type="boolean">false</variable>
			<variable name="HC_Unit.coolerOn" type="boolean">false</variable>
			<variable name="HC_Unit.currentRegulation" type="int">0</variable>
		</statevariables>
		<queue>
			<message arrival="15" deadline="infinity" sender="hc_unit">regulateTemp()</message>
		</queue>
		<now>10</now>
		<pc></pc>
		<res></res>
	</rebec>
</state>
<transition source="256_0" destination="267_0" executionTime="10" shift="0"> <messageserver sender="room" owner="room" title="UPDATESTATUS"/></transition>
<transition source="256_0" destination="266_0" executionTime="10" shift="0"> <messageserver sender="room" owner="room" title="UPDATESTATUS"/></transition>
<state id="268_0" atomicpropositions="" >
	<rebec name="room">
		<statevariables>
			<variable name="Room.currentTemp" type="int">22</variable>
			<variable name="Room.currentRegulation" type="int">0</variable>
			<variable name="Room.outside_air" type="int">-1</variable>
		</statevariables>
		<queue>
			<message arrival="10" deadline="infinity" sender="hc_unit">setRegulation(0)</message>
			<message arrival="20" deadline="infinity" sender="room">updateStatus()</message>
		</queue>
		<now>10</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="controller">
		<statevariables>
			<variable name="Controller.currentTemp" type="int">21</variable>
			<variable name="Controller.isHeating" type="boolean">false</variable>
			<variable name="Controller.isCooling" type="boolean">false</variable>
		</statevariables>
		<queue>
		</queue>
		<now>10</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="sensor">
		<statevariables>
		</statevariables>
		<queue>
			<message arrival="12" deadline="infinity" sender="sensor">callSensor()</message>
		</queue>
		<now>10</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="hc_unit">
		<statevariables>
			<variable name="HC_Unit.heaterOn" type="boolean">false</variable>
			<variable name="HC_Unit.coolerOn" type="boolean">false</variable>
			<variable name="HC_Unit.currentRegulation" type="int">0</variable>
		</statevariables>
		<queue>
			<message arrival="15" deadline="infinity" sender="hc_unit">regulateTemp()</message>
		</queue>
		<now>10</now>
		<pc></pc>
		<res></res>
	</rebec>
</state>
<transition source="256_0" destination="268_0" executionTime="10" shift="0"> <messageserver sender="room" owner="room" title="UPDATESTATUS"/></transition>
<state id="269_0" atomicpropositions="" >
	<rebec name="room">
		<statevariables>
			<variable name="Room.currentTemp" type="int">21</variable>
			<variable name="Room.currentRegulation" type="int">0</variable>
			<variable name="Room.outside_air" type="int">1</variable>
		</statevariables>
		<queue>
			<message arrival="10" deadline="infinity" sender="room">updateStatus()</message>
		</queue>
		<now>10</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="controller">
		<statevariables>
			<variable name="Controller.currentTemp" type="int">21</variable>
			<variable name="Controller.isHeating" type="boolean">false</variable>
			<variable name="Controller.isCooling" type="boolean">false</variable>
		</statevariables>
		<queue>
		</queue>
		<now>10</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="sensor">
		<statevariables>
		</statevariables>
		<queue>
			<message arrival="12" deadline="infinity" sender="sensor">callSensor()</message>
		</queue>
		<now>10</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="hc_unit">
		<statevariables>
			<variable name="HC_Unit.heaterOn" type="boolean">false</variable>
			<variable name="HC_Unit.coolerOn" type="boolean">false</variable>
			<variable name="HC_Unit.currentRegulation" type="int">0</variable>
		</statevariables>
		<queue>
			<message arrival="15" deadline="infinity" sender="hc_unit">regulateTemp()</message>
		</queue>
		<now>10</now>
		<pc></pc>
		<res></res>
	</rebec>
</state>
<transition source="256_0" destination="269_0" executionTime="10" shift="0"> <messageserver sender="hc_unit" owner="room" title="SETREGULATION"/></transition>
<state id="270_0" atomicpropositions="" >
	<rebec name="room">
		<statevariables>
			<variable name="Room.currentTemp" type="int">23</variable>
			<variable name="Room.currentRegulation" type="int">0</variable>
			<variable name="Room.outside_air" type="int">0</variable>
		</statevariables>
		<queue>
			<message arrival="20" deadline="infinity" sender="room">updateStatus()</message>
		</queue>
		<now>10</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="controller">
		<statevariables>
			<variable name="Controller.currentTemp" type="int">23</variable>
			<variable name="Controller.isHeating" type="boolean">false</variable>
			<variable name="Controller.isCooling" type="boolean">false</variable>
		</statevariables>
		<queue>
			<message arrival="10" deadline="infinity" sender="controller">updateOutput()</message>
		</queue>
		<now>10</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="sensor">
		<statevariables>
		</statevariables>
		<queue>
			<message arrival="12" deadline="infinity" sender="sensor">callSensor()</message>
		</queue>
		<now>10</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="hc_unit">
		<statevariables>
			<variable name="HC_Unit.heaterOn" type="boolean">false</variable>
			<variable name="HC_Unit.coolerOn" type="boolean">false</variable>
			<variable name="HC_Unit.currentRegulation" type="int">0</variable>
		</statevariables>
		<queue>
			<message arrival="15" deadline="infinity" sender="hc_unit">regulateTemp()</message>
		</queue>
		<now>10</now>
		<pc></pc>
		<res></res>
	</rebec>
</state>
<transition source="257_0" destination="270_0" executionTime="10" shift="0"> <messageserver sender="sensor" owner="controller" title="SETCURRENT"/></transition>
<state id="271_0" atomicpropositions="" >
	<rebec name="room">
		<statevariables>
			<variable name="Room.currentTemp" type="int">22</variable>
			<variable name="Room.currentRegulation" type="int">0</variable>
			<variable name="Room.outside_air" type="int">1</variable>
		</statevariables>
		<queue>
			<message arrival="20" deadline="infinity" sender="room">updateStatus()</message>
		</queue>
		<now>10</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="controller">
		<statevariables>
			<variable name="Controller.currentTemp" type="int">22</variable>
			<variable name="Controller.isHeating" type="boolean">false</variable>
			<variable name="Controller.isCooling" type="boolean">false</variable>
		</statevariables>
		<queue>
			<message arrival="10" deadline="infinity" sender="controller">updateOutput()</message>
		</queue>
		<now>10</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="sensor">
		<statevariables>
		</statevariables>
		<queue>
			<message arrival="12" deadline="infinity" sender="sensor">callSensor()</message>
		</queue>
		<now>10</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="hc_unit">
		<statevariables>
			<variable name="HC_Unit.heaterOn" type="boolean">false</variable>
			<variable name="HC_Unit.coolerOn" type="boolean">false</variable>
			<variable name="HC_Unit.currentRegulation" type="int">0</variable>
		</statevariables>
		<queue>
			<message arrival="15" deadline="infinity" sender="hc_unit">regulateTemp()</message>
		</queue>
		<now>10</now>
		<pc></pc>
		<res></res>
	</rebec>
</state>
<transition source="258_0" destination="271_0" executionTime="10" shift="0"> <messageserver sender="sensor" owner="controller" title="SETCURRENT"/></transition>
<transition source="259_0" destination="271_0" executionTime="10" shift="0"> <messageserver sender="hc_unit" owner="room" title="SETREGULATION"/></transition>
<state id="272_0" atomicpropositions="" >
	<rebec name="room">
		<statevariables>
			<variable name="Room.currentTemp" type="int">22</variable>
			<variable name="Room.currentRegulation" type="int">0</variable>
			<variable name="Room.outside_air" type="int">1</variable>
		</statevariables>
		<queue>
			<message arrival="10" deadline="infinity" sender="hc_unit">setRegulation(0)</message>
			<message arrival="20" deadline="infinity" sender="room">updateStatus()</message>
		</queue>
		<now>10</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="controller">
		<statevariables>
			<variable name="Controller.currentTemp" type="int">22</variable>
			<variable name="Controller.isHeating" type="boolean">false</variable>
			<variable name="Controller.isCooling" type="boolean">false</variable>
		</statevariables>
		<queue>
		</queue>
		<now>10</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="sensor">
		<statevariables>
		</statevariables>
		<queue>
			<message arrival="12" deadline="infinity" sender="sensor">callSensor()</message>
		</queue>
		<now>10</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="hc_unit">
		<statevariables>
			<variable name="HC_Unit.heaterOn" type="boolean">false</variable>
			<variable name="HC_Unit.coolerOn" type="boolean">false</variable>
			<variable name="HC_Unit.currentRegulation" type="int">0</variable>
		</statevariables>
		<queue>
			<message arrival="15" deadline="infinity" sender="hc_unit">regulateTemp()</message>
		</queue>
		<now>10</now>
		<pc></pc>
		<res></res>
	</rebec>
</state>
<transition source="259_0" destination="272_0" executionTime="10" shift="0"> <messageserver sender="controller" owner="controller" title="UPDATEOUTPUT"/></transition>
<state id="273_0" atomicpropositions="" >
	<rebec name="room">
		<statevariables>
			<variable name="Room.currentTemp" type="int">22</variable>
			<variable name="Room.currentRegulation" type="int">0</variable>
			<variable name="Room.outside_air" type="int">1</variable>
		</statevariables>
		<queue>
			<message arrival="10" deadline="infinity" sender="hc_unit">setRegulation(0)</message>
			<message arrival="20" deadline="infinity" sender="room">updateStatus()</message>
		</queue>
		<now>10</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="controller">
		<statevariables>
			<variable name="Controller.currentTemp" type="int">23</variable>
			<variable name="Controller.isHeating" type="boolean">false</variable>
			<variable name="Controller.isCooling" type="boolean">false</variable>
		</statevariables>
		<queue>
		</queue>
		<now>10</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="sensor">
		<statevariables>
		</statevariables>
		<queue>
			<message arrival="12" deadline="infinity" sender="sensor">callSensor()</message>
		</queue>
		<now>10</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="hc_unit">
		<statevariables>
			<variable name="HC_Unit.heaterOn" type="boolean">false</variable>
			<variable name="HC_Unit.coolerOn" type="boolean">false</variable>
			<variable name="HC_Unit.currentRegulation" type="int">0</variable>
		</statevariables>
		<queue>
			<message arrival="15" deadline="infinity" sender="hc_unit">regulateTemp()</message>
		</queue>
		<now>10</now>
		<pc></pc>
		<res></res>
	</rebec>
</state>
<transition source="264_0" destination="273_0" executionTime="10" shift="0"> <messageserver sender="room" owner="room" title="UPDATESTATUS"/></transition>
<state id="274_0" atomicpropositions="" >
	<rebec name="room">
		<statevariables>
			<variable name="Room.currentTemp" type="int">23</variable>
			<variable name="Room.currentRegulation" type="int">0</variable>
			<variable name="Room.outside_air" type="int">0</variable>
		</statevariables>
		<queue>
			<message arrival="10" deadline="infinity" sender="hc_unit">setRegulation(0)</message>
			<message arrival="20" deadline="infinity" sender="room">updateStatus()</message>
		</queue>
		<now>10</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="controller">
		<statevariables>
			<variable name="Controller.currentTemp" type="int">23</variable>
			<variable name="Controller.isHeating" type="boolean">false</variable>
			<variable name="Controller.isCooling" type="boolean">false</variable>
		</statevariables>
		<queue>
		</queue>
		<now>10</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="sensor">
		<statevariables>
		</statevariables>
		<queue>
			<message arrival="12" deadline="infinity" sender="sensor">callSensor()</message>
		</queue>
		<now>10</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="hc_unit">
		<statevariables>
			<variable name="HC_Unit.heaterOn" type="boolean">false</variable>
			<variable name="HC_Unit.coolerOn" type="boolean">false</variable>
			<variable name="HC_Unit.currentRegulation" type="int">0</variable>
		</statevariables>
		<queue>
			<message arrival="15" deadline="infinity" sender="hc_unit">regulateTemp()</message>
		</queue>
		<now>10</now>
		<pc></pc>
		<res></res>
	</rebec>
</state>
<transition source="264_0" destination="274_0" executionTime="10" shift="0"> <messageserver sender="room" owner="room" title="UPDATESTATUS"/></transition>
<state id="275_0" atomicpropositions="" >
	<rebec name="room">
		<statevariables>
			<variable name="Room.currentTemp" type="int">24</variable>
			<variable name="Room.currentRegulation" type="int">0</variable>
			<variable name="Room.outside_air" type="int">-1</variable>
		</statevariables>
		<queue>
			<message arrival="10" deadline="infinity" sender="hc_unit">setRegulation(0)</message>
			<message arrival="20" deadline="infinity" sender="room">updateStatus()</message>
		</queue>
		<now>10</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="controller">
		<statevariables>
			<variable name="Controller.currentTemp" type="int">23</variable>
			<variable name="Controller.isHeating" type="boolean">false</variable>
			<variable name="Controller.isCooling" type="boolean">false</variable>
		</statevariables>
		<queue>
		</queue>
		<now>10</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="sensor">
		<statevariables>
		</statevariables>
		<queue>
			<message arrival="12" deadline="infinity" sender="sensor">callSensor()</message>
		</queue>
		<now>10</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="hc_unit">
		<statevariables>
			<variable name="HC_Unit.heaterOn" type="boolean">false</variable>
			<variable name="HC_Unit.coolerOn" type="boolean">false</variable>
			<variable name="HC_Unit.currentRegulation" type="int">0</variable>
		</statevariables>
		<queue>
			<message arrival="15" deadline="infinity" sender="hc_unit">regulateTemp()</message>
		</queue>
		<now>10</now>
		<pc></pc>
		<res></res>
	</rebec>
</state>
<transition source="264_0" destination="275_0" executionTime="10" shift="0"> <messageserver sender="room" owner="room" title="UPDATESTATUS"/></transition>
<state id="276_0" atomicpropositions="" >
	<rebec name="room">
		<statevariables>
			<variable name="Room.currentTemp" type="int">23</variable>
			<variable name="Room.currentRegulation" type="int">0</variable>
			<variable name="Room.outside_air" type="int">-1</variable>
		</statevariables>
		<queue>
			<message arrival="10" deadline="infinity" sender="room">updateStatus()</message>
		</queue>
		<now>10</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="controller">
		<statevariables>
			<variable name="Controller.currentTemp" type="int">23</variable>
			<variable name="Controller.isHeating" type="boolean">false</variable>
			<variable name="Controller.isCooling" type="boolean">false</variable>
		</statevariables>
		<queue>
		</queue>
		<now>10</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="sensor">
		<statevariables>
		</statevariables>
		<queue>
			<message arrival="12" deadline="infinity" sender="sensor">callSensor()</message>
		</queue>
		<now>10</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="hc_unit">
		<statevariables>
			<variable name="HC_Unit.heaterOn" type="boolean">false</variable>
			<variable name="HC_Unit.coolerOn" type="boolean">false</variable>
			<variable name="HC_Unit.currentRegulation" type="int">0</variable>
		</statevariables>
		<queue>
			<message arrival="15" deadline="infinity" sender="hc_unit">regulateTemp()</message>
		</queue>
		<now>10</now>
		<pc></pc>
		<res></res>
	</rebec>
</state>
<transition source="264_0" destination="276_0" executionTime="10" shift="0"> <messageserver sender="hc_unit" owner="room" title="SETREGULATION"/></transition>
<state id="277_0" atomicpropositions="" >
	<rebec name="room">
		<statevariables>
			<variable name="Room.currentTemp" type="int">21</variable>
			<variable name="Room.currentRegulation" type="int">0</variable>
			<variable name="Room.outside_air" type="int">0</variable>
		</statevariables>
		<queue>
			<message arrival="20" deadline="infinity" sender="room">updateStatus()</message>
		</queue>
		<now>10</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="controller">
		<statevariables>
			<variable name="Controller.currentTemp" type="int">21</variable>
			<variable name="Controller.isHeating" type="boolean">false</variable>
			<variable name="Controller.isCooling" type="boolean">false</variable>
		</statevariables>
		<queue>
		</queue>
		<now>10</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="sensor">
		<statevariables>
		</statevariables>
		<queue>
			<message arrival="12" deadline="infinity" sender="sensor">callSensor()</message>
		</queue>
		<now>10</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="hc_unit">
		<statevariables>
			<variable name="HC_Unit.heaterOn" type="boolean">false</variable>
			<variable name="HC_Unit.coolerOn" type="boolean">false</variable>
			<variable name="HC_Unit.currentRegulation" type="int">0</variable>
		</statevariables>
		<queue>
			<message arrival="15" deadline="infinity" sender="hc_unit">regulateTemp()</message>
		</queue>
		<now>10</now>
		<pc></pc>
		<res></res>
	</rebec>
</state>
<state id="278_0" atomicpropositions="" >
	<rebec name="room">
		<statevariables>
			<variable name="Room.currentTemp" type="int">21</variable>
			<variable name="Room.currentRegulation" type="int">0</variable>
			<variable name="Room.outside_air" type="int">0</variable>
		</statevariables>
		<queue>
			<message arrival="20" deadline="infinity" sender="room">updateStatus()</message>
		</queue>
		<now>12</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="controller">
		<statevariables>
			<variable name="Controller.currentTemp" type="int">21</variable>
			<variable name="Controller.isHeating" type="boolean">false</variable>
			<variable name="Controller.isCooling" type="boolean">false</variable>
		</statevariables>
		<queue>
		</queue>
		<now>12</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="sensor">
		<statevariables>
		</statevariables>
		<queue>
			<message arrival="12" deadline="infinity" sender="sensor">callSensor()</message>
		</queue>
		<now>12</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="hc_unit">
		<statevariables>
			<variable name="HC_Unit.heaterOn" type="boolean">false</variable>
			<variable name="HC_Unit.coolerOn" type="boolean">false</variable>
			<variable name="HC_Unit.currentRegulation" type="int">0</variable>
		</statevariables>
		<queue>
			<message arrival="15" deadline="infinity" sender="hc_unit">regulateTemp()</message>
		</queue>
		<now>12</now>
		<pc></pc>
		<res></res>
	</rebec>
</state>
<transition source="277_0" destination="278_0" executionTime="10" shift="0"> <time value="2"/></transition>
<transition source="266_0" destination="277_0" executionTime="10" shift="0"> <messageserver sender="hc_unit" owner="room" title="SETREGULATION"/></transition>
<state id="279_0" atomicpropositions="" >
	<rebec name="room">
		<statevariables>
			<variable name="Room.currentTemp" type="int">20</variable>
			<variable name="Room.currentRegulation" type="int">0</variable>
			<variable name="Room.outside_air" type="int">1</variable>
		</statevariables>
		<queue>
			<message arrival="20" deadline="infinity" sender="room">updateStatus()</message>
		</queue>
		<now>10</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="controller">
		<statevariables>
			<variable name="Controller.currentTemp" type="int">21</variable>
			<variable name="Controller.isHeating" type="boolean">false</variable>
			<variable name="Controller.isCooling" type="boolean">false</variable>
		</statevariables>
		<queue>
		</queue>
		<now>10</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="sensor">
		<statevariables>
		</statevariables>
		<queue>
			<message arrival="12" deadline="infinity" sender="sensor">callSensor()</message>
		</queue>
		<now>10</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="hc_unit">
		<statevariables>
			<variable name="HC_Unit.heaterOn" type="boolean">false</variable>
			<variable name="HC_Unit.coolerOn" type="boolean">false</variable>
			<variable name="HC_Unit.currentRegulation" type="int">0</variable>
		</statevariables>
		<queue>
			<message arrival="15" deadline="infinity" sender="hc_unit">regulateTemp()</message>
		</queue>
		<now>10</now>
		<pc></pc>
		<res></res>
	</rebec>
</state>
<state id="280_0" atomicpropositions="" >
	<rebec name="room">
		<statevariables>
			<variable name="Room.currentTemp" type="int">20</variable>
			<variable name="Room.currentRegulation" type="int">0</variable>
			<variable name="Room.outside_air" type="int">1</variable>
		</statevariables>
		<queue>
			<message arrival="20" deadline="infinity" sender="room">updateStatus()</message>
		</queue>
		<now>12</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="controller">
		<statevariables>
			<variable name="Controller.currentTemp" type="int">21</variable>
			<variable name="Controller.isHeating" type="boolean">false</variable>
			<variable name="Controller.isCooling" type="boolean">false</variable>
		</statevariables>
		<queue>
		</queue>
		<now>12</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="sensor">
		<statevariables>
		</statevariables>
		<queue>
			<message arrival="12" deadline="infinity" sender="sensor">callSensor()</message>
		</queue>
		<now>12</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="hc_unit">
		<statevariables>
			<variable name="HC_Unit.heaterOn" type="boolean">false</variable>
			<variable name="HC_Unit.coolerOn" type="boolean">false</variable>
			<variable name="HC_Unit.currentRegulation" type="int">0</variable>
		</statevariables>
		<queue>
			<message arrival="15" deadline="infinity" sender="hc_unit">regulateTemp()</message>
		</queue>
		<now>12</now>
		<pc></pc>
		<res></res>
	</rebec>
</state>
<transition source="279_0" destination="280_0" executionTime="10" shift="0"> <time value="2"/></transition>
<transition source="269_0" destination="279_0" executionTime="10" shift="0"> <messageserver sender="room" owner="room" title="UPDATESTATUS"/></transition>
<transition source="269_0" destination="277_0" executionTime="10" shift="0"> <messageserver sender="room" owner="room" title="UPDATESTATUS"/></transition>
<state id="281_0" atomicpropositions="" >
	<rebec name="room">
		<statevariables>
			<variable name="Room.currentTemp" type="int">22</variable>
			<variable name="Room.currentRegulation" type="int">0</variable>
			<variable name="Room.outside_air" type="int">-1</variable>
		</statevariables>
		<queue>
			<message arrival="20" deadline="infinity" sender="room">updateStatus()</message>
		</queue>
		<now>10</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="controller">
		<statevariables>
			<variable name="Controller.currentTemp" type="int">21</variable>
			<variable name="Controller.isHeating" type="boolean">false</variable>
			<variable name="Controller.isCooling" type="boolean">false</variable>
		</statevariables>
		<queue>
		</queue>
		<now>10</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="sensor">
		<statevariables>
		</statevariables>
		<queue>
			<message arrival="12" deadline="infinity" sender="sensor">callSensor()</message>
		</queue>
		<now>10</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="hc_unit">
		<statevariables>
			<variable name="HC_Unit.heaterOn" type="boolean">false</variable>
			<variable name="HC_Unit.coolerOn" type="boolean">false</variable>
			<variable name="HC_Unit.currentRegulation" type="int">0</variable>
		</statevariables>
		<queue>
			<message arrival="15" deadline="infinity" sender="hc_unit">regulateTemp()</message>
		</queue>
		<now>10</now>
		<pc></pc>
		<res></res>
	</rebec>
</state>
<state id="282_0" atomicpropositions="" >
	<rebec name="room">
		<statevariables>
			<variable name="Room.currentTemp" type="int">22</variable>
			<variable name="Room.currentRegulation" type="int">0</variable>
			<variable name="Room.outside_air" type="int">-1</variable>
		</statevariables>
		<queue>
			<message arrival="20" deadline="infinity" sender="room">updateStatus()</message>
		</queue>
		<now>12</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="controller">
		<statevariables>
			<variable name="Controller.currentTemp" type="int">21</variable>
			<variable name="Controller.isHeating" type="boolean">false</variable>
			<variable name="Controller.isCooling" type="boolean">false</variable>
		</statevariables>
		<queue>
		</queue>
		<now>12</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="sensor">
		<statevariables>
		</statevariables>
		<queue>
			<message arrival="12" deadline="infinity" sender="sensor">callSensor()</message>
		</queue>
		<now>12</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="hc_unit">
		<statevariables>
			<variable name="HC_Unit.heaterOn" type="boolean">false</variable>
			<variable name="HC_Unit.coolerOn" type="boolean">false</variable>
			<variable name="HC_Unit.currentRegulation" type="int">0</variable>
		</statevariables>
		<queue>
			<message arrival="15" deadline="infinity" sender="hc_unit">regulateTemp()</message>
		</queue>
		<now>12</now>
		<pc></pc>
		<res></res>
	</rebec>
</state>
<transition source="281_0" destination="282_0" executionTime="10" shift="0"> <time value="2"/></transition>
<transition source="269_0" destination="281_0" executionTime="10" shift="0"> <messageserver sender="room" owner="room" title="UPDATESTATUS"/></transition>
<state id="283_0" atomicpropositions="" >
	<rebec name="room">
		<statevariables>
			<variable name="Room.currentTemp" type="int">23</variable>
			<variable name="Room.currentRegulation" type="int">0</variable>
			<variable name="Room.outside_air" type="int">0</variable>
		</statevariables>
		<queue>
			<message arrival="20" deadline="infinity" sender="room">updateStatus()</message>
		</queue>
		<now>10</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="controller">
		<statevariables>
			<variable name="Controller.currentTemp" type="int">23</variable>
			<variable name="Controller.isHeating" type="boolean">false</variable>
			<variable name="Controller.isCooling" type="boolean">false</variable>
		</statevariables>
		<queue>
		</queue>
		<now>10</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="sensor">
		<statevariables>
		</statevariables>
		<queue>
			<message arrival="12" deadline="infinity" sender="sensor">callSensor()</message>
		</queue>
		<now>10</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="hc_unit">
		<statevariables>
			<variable name="HC_Unit.heaterOn" type="boolean">false</variable>
			<variable name="HC_Unit.coolerOn" type="boolean">false</variable>
			<variable name="HC_Unit.currentRegulation" type="int">0</variable>
		</statevariables>
		<queue>
			<message arrival="15" deadline="infinity" sender="hc_unit">regulateTemp()</message>
		</queue>
		<now>10</now>
		<pc></pc>
		<res></res>
	</rebec>
</state>
<state id="284_0" atomicpropositions="" >
	<rebec name="room">
		<statevariables>
			<variable name="Room.currentTemp" type="int">23</variable>
			<variable name="Room.currentRegulation" type="int">0</variable>
			<variable name="Room.outside_air" type="int">0</variable>
		</statevariables>
		<queue>
			<message arrival="20" deadline="infinity" sender="room">updateStatus()</message>
		</queue>
		<now>12</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="controller">
		<statevariables>
			<variable name="Controller.currentTemp" type="int">23</variable>
			<variable name="Controller.isHeating" type="boolean">false</variable>
			<variable name="Controller.isCooling" type="boolean">false</variable>
		</statevariables>
		<queue>
		</queue>
		<now>12</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="sensor">
		<statevariables>
		</statevariables>
		<queue>
			<message arrival="12" deadline="infinity" sender="sensor">callSensor()</message>
		</queue>
		<now>12</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="hc_unit">
		<statevariables>
			<variable name="HC_Unit.heaterOn" type="boolean">false</variable>
			<variable name="HC_Unit.coolerOn" type="boolean">false</variable>
			<variable name="HC_Unit.currentRegulation" type="int">0</variable>
		</statevariables>
		<queue>
			<message arrival="15" deadline="infinity" sender="hc_unit">regulateTemp()</message>
		</queue>
		<now>12</now>
		<pc></pc>
		<res></res>
	</rebec>
</state>
<transition source="283_0" destination="284_0" executionTime="10" shift="0"> <time value="2"/></transition>
<transition source="270_0" destination="283_0" executionTime="10" shift="0"> <messageserver sender="controller" owner="controller" title="UPDATEOUTPUT"/></transition>
<state id="285_0" atomicpropositions="" >
	<rebec name="room">
		<statevariables>
			<variable name="Room.currentTemp" type="int">22</variable>
			<variable name="Room.currentRegulation" type="int">0</variable>
			<variable name="Room.outside_air" type="int">1</variable>
		</statevariables>
		<queue>
			<message arrival="20" deadline="infinity" sender="room">updateStatus()</message>
		</queue>
		<now>10</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="controller">
		<statevariables>
			<variable name="Controller.currentTemp" type="int">22</variable>
			<variable name="Controller.isHeating" type="boolean">false</variable>
			<variable name="Controller.isCooling" type="boolean">false</variable>
		</statevariables>
		<queue>
		</queue>
		<now>10</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="sensor">
		<statevariables>
		</statevariables>
		<queue>
			<message arrival="12" deadline="infinity" sender="sensor">callSensor()</message>
		</queue>
		<now>10</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="hc_unit">
		<statevariables>
			<variable name="HC_Unit.heaterOn" type="boolean">false</variable>
			<variable name="HC_Unit.coolerOn" type="boolean">false</variable>
			<variable name="HC_Unit.currentRegulation" type="int">0</variable>
		</statevariables>
		<queue>
			<message arrival="15" deadline="infinity" sender="hc_unit">regulateTemp()</message>
		</queue>
		<now>10</now>
		<pc></pc>
		<res></res>
	</rebec>
</state>
<state id="286_0" atomicpropositions="" >
	<rebec name="room">
		<statevariables>
			<variable name="Room.currentTemp" type="int">22</variable>
			<variable name="Room.currentRegulation" type="int">0</variable>
			<variable name="Room.outside_air" type="int">1</variable>
		</statevariables>
		<queue>
			<message arrival="20" deadline="infinity" sender="room">updateStatus()</message>
		</queue>
		<now>12</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="controller">
		<statevariables>
			<variable name="Controller.currentTemp" type="int">22</variable>
			<variable name="Controller.isHeating" type="boolean">false</variable>
			<variable name="Controller.isCooling" type="boolean">false</variable>
		</statevariables>
		<queue>
		</queue>
		<now>12</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="sensor">
		<statevariables>
		</statevariables>
		<queue>
			<message arrival="12" deadline="infinity" sender="sensor">callSensor()</message>
		</queue>
		<now>12</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="hc_unit">
		<statevariables>
			<variable name="HC_Unit.heaterOn" type="boolean">false</variable>
			<variable name="HC_Unit.coolerOn" type="boolean">false</variable>
			<variable name="HC_Unit.currentRegulation" type="int">0</variable>
		</statevariables>
		<queue>
			<message arrival="15" deadline="infinity" sender="hc_unit">regulateTemp()</message>
		</queue>
		<now>12</now>
		<pc></pc>
		<res></res>
	</rebec>
</state>
<transition source="285_0" destination="286_0" executionTime="10" shift="0"> <time value="2"/></transition>
<transition source="271_0" destination="285_0" executionTime="10" shift="0"> <messageserver sender="controller" owner="controller" title="UPDATEOUTPUT"/></transition>
<transition source="272_0" destination="285_0" executionTime="10" shift="0"> <messageserver sender="hc_unit" owner="room" title="SETREGULATION"/></transition>
<state id="287_0" atomicpropositions="" >
	<rebec name="room">
		<statevariables>
			<variable name="Room.currentTemp" type="int">22</variable>
			<variable name="Room.currentRegulation" type="int">0</variable>
			<variable name="Room.outside_air" type="int">1</variable>
		</statevariables>
		<queue>
			<message arrival="20" deadline="infinity" sender="room">updateStatus()</message>
		</queue>
		<now>10</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="controller">
		<statevariables>
			<variable name="Controller.currentTemp" type="int">23</variable>
			<variable name="Controller.isHeating" type="boolean">false</variable>
			<variable name="Controller.isCooling" type="boolean">false</variable>
		</statevariables>
		<queue>
		</queue>
		<now>10</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="sensor">
		<statevariables>
		</statevariables>
		<queue>
			<message arrival="12" deadline="infinity" sender="sensor">callSensor()</message>
		</queue>
		<now>10</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="hc_unit">
		<statevariables>
			<variable name="HC_Unit.heaterOn" type="boolean">false</variable>
			<variable name="HC_Unit.coolerOn" type="boolean">false</variable>
			<variable name="HC_Unit.currentRegulation" type="int">0</variable>
		</statevariables>
		<queue>
			<message arrival="15" deadline="infinity" sender="hc_unit">regulateTemp()</message>
		</queue>
		<now>10</now>
		<pc></pc>
		<res></res>
	</rebec>
</state>
<state id="288_0" atomicpropositions="" >
	<rebec name="room">
		<statevariables>
			<variable name="Room.currentTemp" type="int">22</variable>
			<variable name="Room.currentRegulation" type="int">0</variable>
			<variable name="Room.outside_air" type="int">1</variable>
		</statevariables>
		<queue>
			<message arrival="20" deadline="infinity" sender="room">updateStatus()</message>
		</queue>
		<now>12</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="controller">
		<statevariables>
			<variable name="Controller.currentTemp" type="int">23</variable>
			<variable name="Controller.isHeating" type="boolean">false</variable>
			<variable name="Controller.isCooling" type="boolean">false</variable>
		</statevariables>
		<queue>
		</queue>
		<now>12</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="sensor">
		<statevariables>
		</statevariables>
		<queue>
			<message arrival="12" deadline="infinity" sender="sensor">callSensor()</message>
		</queue>
		<now>12</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="hc_unit">
		<statevariables>
			<variable name="HC_Unit.heaterOn" type="boolean">false</variable>
			<variable name="HC_Unit.coolerOn" type="boolean">false</variable>
			<variable name="HC_Unit.currentRegulation" type="int">0</variable>
		</statevariables>
		<queue>
			<message arrival="15" deadline="infinity" sender="hc_unit">regulateTemp()</message>
		</queue>
		<now>12</now>
		<pc></pc>
		<res></res>
	</rebec>
</state>
<transition source="287_0" destination="288_0" executionTime="10" shift="0"> <time value="2"/></transition>
<transition source="276_0" destination="287_0" executionTime="10" shift="0"> <messageserver sender="room" owner="room" title="UPDATESTATUS"/></transition>
<transition source="276_0" destination="283_0" executionTime="10" shift="0"> <messageserver sender="room" owner="room" title="UPDATESTATUS"/></transition>
<state id="289_0" atomicpropositions="" >
	<rebec name="room">
		<statevariables>
			<variable name="Room.currentTemp" type="int">24</variable>
			<variable name="Room.currentRegulation" type="int">0</variable>
			<variable name="Room.outside_air" type="int">-1</variable>
		</statevariables>
		<queue>
			<message arrival="20" deadline="infinity" sender="room">updateStatus()</message>
		</queue>
		<now>10</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="controller">
		<statevariables>
			<variable name="Controller.currentTemp" type="int">23</variable>
			<variable name="Controller.isHeating" type="boolean">false</variable>
			<variable name="Controller.isCooling" type="boolean">false</variable>
		</statevariables>
		<queue>
		</queue>
		<now>10</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="sensor">
		<statevariables>
		</statevariables>
		<queue>
			<message arrival="12" deadline="infinity" sender="sensor">callSensor()</message>
		</queue>
		<now>10</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="hc_unit">
		<statevariables>
			<variable name="HC_Unit.heaterOn" type="boolean">false</variable>
			<variable name="HC_Unit.coolerOn" type="boolean">false</variable>
			<variable name="HC_Unit.currentRegulation" type="int">0</variable>
		</statevariables>
		<queue>
			<message arrival="15" deadline="infinity" sender="hc_unit">regulateTemp()</message>
		</queue>
		<now>10</now>
		<pc></pc>
		<res></res>
	</rebec>
</state>
<state id="290_0" atomicpropositions="" >
	<rebec name="room">
		<statevariables>
			<variable name="Room.currentTemp" type="int">24</variable>
			<variable name="Room.currentRegulation" type="int">0</variable>
			<variable name="Room.outside_air" type="int">-1</variable>
		</statevariables>
		<queue>
			<message arrival="20" deadline="infinity" sender="room">updateStatus()</message>
		</queue>
		<now>12</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="controller">
		<statevariables>
			<variable name="Controller.currentTemp" type="int">23</variable>
			<variable name="Controller.isHeating" type="boolean">false</variable>
			<variable name="Controller.isCooling" type="boolean">false</variable>
		</statevariables>
		<queue>
		</queue>
		<now>12</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="sensor">
		<statevariables>
		</statevariables>
		<queue>
			<message arrival="12" deadline="infinity" sender="sensor">callSensor()</message>
		</queue>
		<now>12</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="hc_unit">
		<statevariables>
			<variable name="HC_Unit.heaterOn" type="boolean">false</variable>
			<variable name="HC_Unit.coolerOn" type="boolean">false</variable>
			<variable name="HC_Unit.currentRegulation" type="int">0</variable>
		</statevariables>
		<queue>
			<message arrival="15" deadline="infinity" sender="hc_unit">regulateTemp()</message>
		</queue>
		<now>12</now>
		<pc></pc>
		<res></res>
	</rebec>
</state>
<transition source="289_0" destination="290_0" executionTime="10" shift="0"> <time value="2"/></transition>
<transition source="276_0" destination="289_0" executionTime="10" shift="0"> <messageserver sender="room" owner="room" title="UPDATESTATUS"/></transition>
<transition source="230_0" destination="243_0" executionTime="10" shift="0"> <messageserver sender="hc_unit" owner="room" title="SETREGULATION"/></transition>
<transition source="230_0" destination="247_0" executionTime="10" shift="0"> <messageserver sender="room" owner="sensor" title="SETCURRENT"/></transition>
<state id="291_0" atomicpropositions="" >
	<rebec name="room">
		<statevariables>
			<variable name="Room.currentTemp" type="int">23</variable>
			<variable name="Room.currentRegulation" type="int">0</variable>
			<variable name="Room.outside_air" type="int">0</variable>
		</statevariables>
		<queue>
			<message arrival="20" deadline="infinity" sender="room">updateStatus()</message>
		</queue>
		<now>10</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="controller">
		<statevariables>
			<variable name="Controller.currentTemp" type="int">23</variable>
			<variable name="Controller.isHeating" type="boolean">false</variable>
			<variable name="Controller.isCooling" type="boolean">false</variable>
		</statevariables>
		<queue>
		</queue>
		<now>10</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="sensor">
		<statevariables>
		</statevariables>
		<queue>
			<message arrival="10" deadline="infinity" sender="sensor">callSensor()</message>
		</queue>
		<now>10</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="hc_unit">
		<statevariables>
			<variable name="HC_Unit.heaterOn" type="boolean">false</variable>
			<variable name="HC_Unit.coolerOn" type="boolean">false</variable>
			<variable name="HC_Unit.currentRegulation" type="int">0</variable>
		</statevariables>
		<queue>
			<message arrival="15" deadline="infinity" sender="hc_unit">regulateTemp()</message>
		</queue>
		<now>10</now>
		<pc></pc>
		<res></res>
	</rebec>
</state>
<transition source="205_0" destination="291_0" executionTime="10" shift="0"> <messageserver sender="hc_unit" owner="room" title="SETREGULATION"/></transition>
<transition source="205_0" destination="217_0" executionTime="10" shift="0"> <messageserver sender="sensor" owner="sensor" title="CALLSENSOR"/></transition>
<state id="292_0" atomicpropositions="" >
	<rebec name="room">
		<statevariables>
			<variable name="Room.currentTemp" type="int">20</variable>
			<variable name="Room.currentRegulation" type="int">0</variable>
			<variable name="Room.outside_air" type="int">1</variable>
		</statevariables>
		<queue>
			<message arrival="20" deadline="infinity" sender="room">updateStatus()</message>
		</queue>
		<now>10</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="controller">
		<statevariables>
			<variable name="Controller.currentTemp" type="int">21</variable>
			<variable name="Controller.isHeating" type="boolean">false</variable>
			<variable name="Controller.isCooling" type="boolean">false</variable>
		</statevariables>
		<queue>
		</queue>
		<now>10</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="sensor">
		<statevariables>
		</statevariables>
		<queue>
			<message arrival="10" deadline="infinity" sender="room">setCurrent(21)</message>
			<message arrival="12" deadline="infinity" sender="sensor">callSensor()</message>
		</queue>
		<now>10</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="hc_unit">
		<statevariables>
			<variable name="HC_Unit.heaterOn" type="boolean">false</variable>
			<variable name="HC_Unit.coolerOn" type="boolean">false</variable>
			<variable name="HC_Unit.currentRegulation" type="int">0</variable>
		</statevariables>
		<queue>
			<message arrival="15" deadline="infinity" sender="hc_unit">regulateTemp()</message>
		</queue>
		<now>10</now>
		<pc></pc>
		<res></res>
	</rebec>
</state>
<transition source="227_0" destination="292_0" executionTime="10" shift="0"> <messageserver sender="room" owner="room" title="UPDATESTATUS"/></transition>
<transition source="227_0" destination="237_0" executionTime="10" shift="0"> <messageserver sender="room" owner="room" title="UPDATESTATUS"/></transition>
<state id="293_0" atomicpropositions="" >
	<rebec name="room">
		<statevariables>
			<variable name="Room.currentTemp" type="int">22</variable>
			<variable name="Room.currentRegulation" type="int">0</variable>
			<variable name="Room.outside_air" type="int">-1</variable>
		</statevariables>
		<queue>
			<message arrival="20" deadline="infinity" sender="room">updateStatus()</message>
		</queue>
		<now>10</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="controller">
		<statevariables>
			<variable name="Controller.currentTemp" type="int">21</variable>
			<variable name="Controller.isHeating" type="boolean">false</variable>
			<variable name="Controller.isCooling" type="boolean">false</variable>
		</statevariables>
		<queue>
		</queue>
		<now>10</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="sensor">
		<statevariables>
		</statevariables>
		<queue>
			<message arrival="10" deadline="infinity" sender="room">setCurrent(21)</message>
			<message arrival="12" deadline="infinity" sender="sensor">callSensor()</message>
		</queue>
		<now>10</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="hc_unit">
		<statevariables>
			<variable name="HC_Unit.heaterOn" type="boolean">false</variable>
			<variable name="HC_Unit.coolerOn" type="boolean">false</variable>
			<variable name="HC_Unit.currentRegulation" type="int">0</variable>
		</statevariables>
		<queue>
			<message arrival="15" deadline="infinity" sender="hc_unit">regulateTemp()</message>
		</queue>
		<now>10</now>
		<pc></pc>
		<res></res>
	</rebec>
</state>
<transition source="227_0" destination="293_0" executionTime="10" shift="0"> <messageserver sender="room" owner="room" title="UPDATESTATUS"/></transition>
<transition source="227_0" destination="241_0" executionTime="10" shift="0"> <messageserver sender="room" owner="sensor" title="SETCURRENT"/></transition>
<transition source="226_0" destination="293_0" executionTime="10" shift="0"> <messageserver sender="hc_unit" owner="room" title="SETREGULATION"/></transition>
<transition source="226_0" destination="240_0" executionTime="10" shift="0"> <messageserver sender="room" owner="sensor" title="SETCURRENT"/></transition>
<transition source="275_0" destination="289_0" executionTime="10" shift="0"> <messageserver sender="hc_unit" owner="room" title="SETREGULATION"/></transition>
<transition source="291_0" destination="229_0" executionTime="10" shift="0"> <messageserver sender="sensor" owner="sensor" title="CALLSENSOR"/></transition>
<state id="294_0" atomicpropositions="" >
	<rebec name="room">
		<statevariables>
			<variable name="Room.currentTemp" type="int">20</variable>
			<variable name="Room.currentRegulation" type="int">0</variable>
			<variable name="Room.outside_air" type="int">1</variable>
		</statevariables>
		<queue>
			<message arrival="20" deadline="infinity" sender="room">updateStatus()</message>
		</queue>
		<now>10</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="controller">
		<statevariables>
			<variable name="Controller.currentTemp" type="int">21</variable>
			<variable name="Controller.isHeating" type="boolean">false</variable>
			<variable name="Controller.isCooling" type="boolean">false</variable>
		</statevariables>
		<queue>
			<message arrival="10" deadline="infinity" sender="sensor">setCurrent(21)</message>
		</queue>
		<now>10</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="sensor">
		<statevariables>
		</statevariables>
		<queue>
			<message arrival="12" deadline="infinity" sender="sensor">callSensor()</message>
		</queue>
		<now>10</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="hc_unit">
		<statevariables>
			<variable name="HC_Unit.heaterOn" type="boolean">false</variable>
			<variable name="HC_Unit.coolerOn" type="boolean">false</variable>
			<variable name="HC_Unit.currentRegulation" type="int">0</variable>
		</statevariables>
		<queue>
			<message arrival="15" deadline="infinity" sender="hc_unit">regulateTemp()</message>
		</queue>
		<now>10</now>
		<pc></pc>
		<res></res>
	</rebec>
</state>
<transition source="292_0" destination="294_0" executionTime="10" shift="0"> <messageserver sender="room" owner="sensor" title="SETCURRENT"/></transition>
<state id="295_0" atomicpropositions="" >
	<rebec name="room">
		<statevariables>
			<variable name="Room.currentTemp" type="int">22</variable>
			<variable name="Room.currentRegulation" type="int">0</variable>
			<variable name="Room.outside_air" type="int">-1</variable>
		</statevariables>
		<queue>
			<message arrival="20" deadline="infinity" sender="room">updateStatus()</message>
		</queue>
		<now>10</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="controller">
		<statevariables>
			<variable name="Controller.currentTemp" type="int">21</variable>
			<variable name="Controller.isHeating" type="boolean">false</variable>
			<variable name="Controller.isCooling" type="boolean">false</variable>
		</statevariables>
		<queue>
			<message arrival="10" deadline="infinity" sender="sensor">setCurrent(21)</message>
		</queue>
		<now>10</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="sensor">
		<statevariables>
		</statevariables>
		<queue>
			<message arrival="12" deadline="infinity" sender="sensor">callSensor()</message>
		</queue>
		<now>10</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="hc_unit">
		<statevariables>
			<variable name="HC_Unit.heaterOn" type="boolean">false</variable>
			<variable name="HC_Unit.coolerOn" type="boolean">false</variable>
			<variable name="HC_Unit.currentRegulation" type="int">0</variable>
		</statevariables>
		<queue>
			<message arrival="15" deadline="infinity" sender="hc_unit">regulateTemp()</message>
		</queue>
		<now>10</now>
		<pc></pc>
		<res></res>
	</rebec>
</state>
<transition source="293_0" destination="295_0" executionTime="10" shift="0"> <messageserver sender="room" owner="sensor" title="SETCURRENT"/></transition>
<state id="296_0" atomicpropositions="" >
	<rebec name="room">
		<statevariables>
			<variable name="Room.currentTemp" type="int">22</variable>
			<variable name="Room.currentRegulation" type="int">0</variable>
			<variable name="Room.outside_air" type="int">1</variable>
		</statevariables>
		<queue>
			<message arrival="10" deadline="infinity" sender="sensor">getTemp()</message>
			<message arrival="20" deadline="infinity" sender="room">updateStatus()</message>
		</queue>
		<now>10</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="controller">
		<statevariables>
			<variable name="Controller.currentTemp" type="int">23</variable>
			<variable name="Controller.isHeating" type="boolean">false</variable>
			<variable name="Controller.isCooling" type="boolean">false</variable>
		</statevariables>
		<queue>
		</queue>
		<now>10</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="sensor">
		<statevariables>
		</statevariables>
		<queue>
			<message arrival="12" deadline="infinity" sender="sensor">callSensor()</message>
		</queue>
		<now>10</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="hc_unit">
		<statevariables>
			<variable name="HC_Unit.heaterOn" type="boolean">false</variable>
			<variable name="HC_Unit.coolerOn" type="boolean">false</variable>
			<variable name="HC_Unit.currentRegulation" type="int">0</variable>
		</statevariables>
		<queue>
			<message arrival="10" deadline="infinity" sender="hc_unit">regulateTemp()</message>
		</queue>
		<now>10</now>
		<pc></pc>
		<res></res>
	</rebec>
</state>
<transition source="193_0" destination="296_0" executionTime="10" shift="0"> <messageserver sender="sensor" owner="sensor" title="CALLSENSOR"/></transition>
<transition source="193_0" destination="206_0" executionTime="10" shift="0"> <messageserver sender="hc_unit" owner="hc_unit" title="REGULATETEMP"/></transition>
<state id="297_0" atomicpropositions="" >
	<rebec name="room">
		<statevariables>
			<variable name="Room.currentTemp" type="int">20</variable>
			<variable name="Room.currentRegulation" type="int">0</variable>
			<variable name="Room.outside_air" type="int">1</variable>
		</statevariables>
		<queue>
			<message arrival="20" deadline="infinity" sender="room">updateStatus()</message>
		</queue>
		<now>10</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="controller">
		<statevariables>
			<variable name="Controller.currentTemp" type="int">21</variable>
			<variable name="Controller.isHeating" type="boolean">false</variable>
			<variable name="Controller.isCooling" type="boolean">false</variable>
		</statevariables>
		<queue>
		</queue>
		<now>10</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="sensor">
		<statevariables>
		</statevariables>
		<queue>
			<message arrival="10" deadline="infinity" sender="sensor">callSensor()</message>
		</queue>
		<now>10</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="hc_unit">
		<statevariables>
			<variable name="HC_Unit.heaterOn" type="boolean">false</variable>
			<variable name="HC_Unit.coolerOn" type="boolean">false</variable>
			<variable name="HC_Unit.currentRegulation" type="int">0</variable>
		</statevariables>
		<queue>
			<message arrival="15" deadline="infinity" sender="hc_unit">regulateTemp()</message>
		</queue>
		<now>10</now>
		<pc></pc>
		<res></res>
	</rebec>
</state>
<transition source="202_0" destination="297_0" executionTime="10" shift="0"> <messageserver sender="room" owner="room" title="UPDATESTATUS"/></transition>
<transition source="202_0" destination="210_0" executionTime="10" shift="0"> <messageserver sender="room" owner="room" title="UPDATESTATUS"/></transition>
<state id="298_0" atomicpropositions="" >
	<rebec name="room">
		<statevariables>
			<variable name="Room.currentTemp" type="int">22</variable>
			<variable name="Room.currentRegulation" type="int">0</variable>
			<variable name="Room.outside_air" type="int">-1</variable>
		</statevariables>
		<queue>
			<message arrival="20" deadline="infinity" sender="room">updateStatus()</message>
		</queue>
		<now>10</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="controller">
		<statevariables>
			<variable name="Controller.currentTemp" type="int">21</variable>
			<variable name="Controller.isHeating" type="boolean">false</variable>
			<variable name="Controller.isCooling" type="boolean">false</variable>
		</statevariables>
		<queue>
		</queue>
		<now>10</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="sensor">
		<statevariables>
		</statevariables>
		<queue>
			<message arrival="10" deadline="infinity" sender="sensor">callSensor()</message>
		</queue>
		<now>10</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="hc_unit">
		<statevariables>
			<variable name="HC_Unit.heaterOn" type="boolean">false</variable>
			<variable name="HC_Unit.coolerOn" type="boolean">false</variable>
			<variable name="HC_Unit.currentRegulation" type="int">0</variable>
		</statevariables>
		<queue>
			<message arrival="15" deadline="infinity" sender="hc_unit">regulateTemp()</message>
		</queue>
		<now>10</now>
		<pc></pc>
		<res></res>
	</rebec>
</state>
<transition source="202_0" destination="298_0" executionTime="10" shift="0"> <messageserver sender="room" owner="room" title="UPDATESTATUS"/></transition>
<transition source="202_0" destination="214_0" executionTime="10" shift="0"> <messageserver sender="sensor" owner="sensor" title="CALLSENSOR"/></transition>
<transition source="225_0" destination="292_0" executionTime="10" shift="0"> <messageserver sender="hc_unit" owner="room" title="SETREGULATION"/></transition>
<transition source="225_0" destination="239_0" executionTime="10" shift="0"> <messageserver sender="room" owner="sensor" title="SETCURRENT"/></transition>
<transition source="273_0" destination="287_0" executionTime="10" shift="0"> <messageserver sender="hc_unit" owner="room" title="SETREGULATION"/></transition>
<state id="299_0" atomicpropositions="" >
	<rebec name="room">
		<statevariables>
			<variable name="Room.currentTemp" type="int">22</variable>
			<variable name="Room.currentRegulation" type="int">0</variable>
			<variable name="Room.outside_air" type="int">-1</variable>
		</statevariables>
		<queue>
			<message arrival="10" deadline="infinity" sender="sensor">getTemp()</message>
			<message arrival="20" deadline="infinity" sender="room">updateStatus()</message>
		</queue>
		<now>10</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="controller">
		<statevariables>
			<variable name="Controller.currentTemp" type="int">21</variable>
			<variable name="Controller.isHeating" type="boolean">false</variable>
			<variable name="Controller.isCooling" type="boolean">false</variable>
		</statevariables>
		<queue>
		</queue>
		<now>10</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="sensor">
		<statevariables>
		</statevariables>
		<queue>
			<message arrival="12" deadline="infinity" sender="sensor">callSensor()</message>
		</queue>
		<now>10</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="hc_unit">
		<statevariables>
			<variable name="HC_Unit.heaterOn" type="boolean">false</variable>
			<variable name="HC_Unit.coolerOn" type="boolean">false</variable>
			<variable name="HC_Unit.currentRegulation" type="int">0</variable>
		</statevariables>
		<queue>
			<message arrival="15" deadline="infinity" sender="hc_unit">regulateTemp()</message>
		</queue>
		<now>10</now>
		<pc></pc>
		<res></res>
	</rebec>
</state>
<transition source="298_0" destination="299_0" executionTime="10" shift="0"> <messageserver sender="sensor" owner="sensor" title="CALLSENSOR"/></transition>
<transition source="274_0" destination="283_0" executionTime="10" shift="0"> <messageserver sender="hc_unit" owner="room" title="SETREGULATION"/></transition>
<state id="300_0" atomicpropositions="" >
	<rebec name="room">
		<statevariables>
			<variable name="Room.currentTemp" type="int">20</variable>
			<variable name="Room.currentRegulation" type="int">0</variable>
			<variable name="Room.outside_air" type="int">1</variable>
		</statevariables>
		<queue>
			<message arrival="20" deadline="infinity" sender="room">updateStatus()</message>
		</queue>
		<now>10</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="controller">
		<statevariables>
			<variable name="Controller.currentTemp" type="int">21</variable>
			<variable name="Controller.isHeating" type="boolean">false</variable>
			<variable name="Controller.isCooling" type="boolean">false</variable>
		</statevariables>
		<queue>
			<message arrival="10" deadline="infinity" sender="controller">updateOutput()</message>
		</queue>
		<now>10</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="sensor">
		<statevariables>
		</statevariables>
		<queue>
			<message arrival="12" deadline="infinity" sender="sensor">callSensor()</message>
		</queue>
		<now>10</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="hc_unit">
		<statevariables>
			<variable name="HC_Unit.heaterOn" type="boolean">false</variable>
			<variable name="HC_Unit.coolerOn" type="boolean">false</variable>
			<variable name="HC_Unit.currentRegulation" type="int">0</variable>
		</statevariables>
		<queue>
			<message arrival="15" deadline="infinity" sender="hc_unit">regulateTemp()</message>
		</queue>
		<now>10</now>
		<pc></pc>
		<res></res>
	</rebec>
</state>
<transition source="294_0" destination="300_0" executionTime="10" shift="0"> <messageserver sender="sensor" owner="controller" title="SETCURRENT"/></transition>
<state id="301_0" atomicpropositions="" >
	<rebec name="room">
		<statevariables>
			<variable name="Room.currentTemp" type="int">22</variable>
			<variable name="Room.currentRegulation" type="int">0</variable>
			<variable name="Room.outside_air" type="int">-1</variable>
		</statevariables>
		<queue>
			<message arrival="20" deadline="infinity" sender="room">updateStatus()</message>
		</queue>
		<now>10</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="controller">
		<statevariables>
			<variable name="Controller.currentTemp" type="int">21</variable>
			<variable name="Controller.isHeating" type="boolean">false</variable>
			<variable name="Controller.isCooling" type="boolean">false</variable>
		</statevariables>
		<queue>
			<message arrival="10" deadline="infinity" sender="controller">updateOutput()</message>
		</queue>
		<now>10</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="sensor">
		<statevariables>
		</statevariables>
		<queue>
			<message arrival="12" deadline="infinity" sender="sensor">callSensor()</message>
		</queue>
		<now>10</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="hc_unit">
		<statevariables>
			<variable name="HC_Unit.heaterOn" type="boolean">false</variable>
			<variable name="HC_Unit.coolerOn" type="boolean">false</variable>
			<variable name="HC_Unit.currentRegulation" type="int">0</variable>
		</statevariables>
		<queue>
			<message arrival="15" deadline="infinity" sender="hc_unit">regulateTemp()</message>
		</queue>
		<now>10</now>
		<pc></pc>
		<res></res>
	</rebec>
</state>
<transition source="295_0" destination="301_0" executionTime="10" shift="0"> <messageserver sender="sensor" owner="controller" title="SETCURRENT"/></transition>
<state id="302_0" atomicpropositions="" >
	<rebec name="room">
		<statevariables>
			<variable name="Room.currentTemp" type="int">22</variable>
			<variable name="Room.currentRegulation" type="int">0</variable>
			<variable name="Room.outside_air" type="int">1</variable>
		</statevariables>
		<queue>
			<message arrival="20" deadline="infinity" sender="room">updateStatus()</message>
		</queue>
		<now>10</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="controller">
		<statevariables>
			<variable name="Controller.currentTemp" type="int">23</variable>
			<variable name="Controller.isHeating" type="boolean">false</variable>
			<variable name="Controller.isCooling" type="boolean">false</variable>
		</statevariables>
		<queue>
		</queue>
		<now>10</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="sensor">
		<statevariables>
		</statevariables>
		<queue>
			<message arrival="10" deadline="infinity" sender="room">setCurrent(22)</message>
			<message arrival="12" deadline="infinity" sender="sensor">callSensor()</message>
		</queue>
		<now>10</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="hc_unit">
		<statevariables>
			<variable name="HC_Unit.heaterOn" type="boolean">false</variable>
			<variable name="HC_Unit.coolerOn" type="boolean">false</variable>
			<variable name="HC_Unit.currentRegulation" type="int">0</variable>
		</statevariables>
		<queue>
			<message arrival="10" deadline="infinity" sender="hc_unit">regulateTemp()</message>
		</queue>
		<now>10</now>
		<pc></pc>
		<res></res>
	</rebec>
</state>
<transition source="296_0" destination="302_0" executionTime="10" shift="0"> <messageserver sender="sensor" owner="room" title="GETTEMP"/></transition>
<transition source="296_0" destination="219_0" executionTime="10" shift="0"> <messageserver sender="hc_unit" owner="hc_unit" title="REGULATETEMP"/></transition>
<state id="303_0" atomicpropositions="" >
	<rebec name="room">
		<statevariables>
			<variable name="Room.currentTemp" type="int">20</variable>
			<variable name="Room.currentRegulation" type="int">0</variable>
			<variable name="Room.outside_air" type="int">1</variable>
		</statevariables>
		<queue>
			<message arrival="10" deadline="infinity" sender="sensor">getTemp()</message>
			<message arrival="20" deadline="infinity" sender="room">updateStatus()</message>
		</queue>
		<now>10</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="controller">
		<statevariables>
			<variable name="Controller.currentTemp" type="int">21</variable>
			<variable name="Controller.isHeating" type="boolean">false</variable>
			<variable name="Controller.isCooling" type="boolean">false</variable>
		</statevariables>
		<queue>
		</queue>
		<now>10</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="sensor">
		<statevariables>
		</statevariables>
		<queue>
			<message arrival="12" deadline="infinity" sender="sensor">callSensor()</message>
		</queue>
		<now>10</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="hc_unit">
		<statevariables>
			<variable name="HC_Unit.heaterOn" type="boolean">false</variable>
			<variable name="HC_Unit.coolerOn" type="boolean">false</variable>
			<variable name="HC_Unit.currentRegulation" type="int">0</variable>
		</statevariables>
		<queue>
			<message arrival="15" deadline="infinity" sender="hc_unit">regulateTemp()</message>
		</queue>
		<now>10</now>
		<pc></pc>
		<res></res>
	</rebec>
</state>
<transition source="297_0" destination="303_0" executionTime="10" shift="0"> <messageserver sender="sensor" owner="sensor" title="CALLSENSOR"/></transition>
<state id="304_0" atomicpropositions="" >
	<rebec name="room">
		<statevariables>
			<variable name="Room.currentTemp" type="int">22</variable>
			<variable name="Room.currentRegulation" type="int">0</variable>
			<variable name="Room.outside_air" type="int">-1</variable>
		</statevariables>
		<queue>
			<message arrival="20" deadline="infinity" sender="room">updateStatus()</message>
		</queue>
		<now>10</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="controller">
		<statevariables>
			<variable name="Controller.currentTemp" type="int">21</variable>
			<variable name="Controller.isHeating" type="boolean">false</variable>
			<variable name="Controller.isCooling" type="boolean">false</variable>
		</statevariables>
		<queue>
		</queue>
		<now>10</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="sensor">
		<statevariables>
		</statevariables>
		<queue>
			<message arrival="10" deadline="infinity" sender="room">setCurrent(22)</message>
			<message arrival="12" deadline="infinity" sender="sensor">callSensor()</message>
		</queue>
		<now>10</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="hc_unit">
		<statevariables>
			<variable name="HC_Unit.heaterOn" type="boolean">false</variable>
			<variable name="HC_Unit.coolerOn" type="boolean">false</variable>
			<variable name="HC_Unit.currentRegulation" type="int">0</variable>
		</statevariables>
		<queue>
			<message arrival="15" deadline="infinity" sender="hc_unit">regulateTemp()</message>
		</queue>
		<now>10</now>
		<pc></pc>
		<res></res>
	</rebec>
</state>
<transition source="299_0" destination="304_0" executionTime="10" shift="0"> <messageserver sender="sensor" owner="room" title="GETTEMP"/></transition>
<transition source="268_0" destination="281_0" executionTime="10" shift="0"> <messageserver sender="hc_unit" owner="room" title="SETREGULATION"/></transition>
<transition source="300_0" destination="279_0" executionTime="10" shift="0"> <messageserver sender="controller" owner="controller" title="UPDATEOUTPUT"/></transition>
<transition source="301_0" destination="281_0" executionTime="10" shift="0"> <messageserver sender="controller" owner="controller" title="UPDATEOUTPUT"/></transition>
<state id="305_0" atomicpropositions="" >
	<rebec name="room">
		<statevariables>
			<variable name="Room.currentTemp" type="int">22</variable>
			<variable name="Room.currentRegulation" type="int">0</variable>
			<variable name="Room.outside_air" type="int">1</variable>
		</statevariables>
		<queue>
			<message arrival="20" deadline="infinity" sender="room">updateStatus()</message>
		</queue>
		<now>10</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="controller">
		<statevariables>
			<variable name="Controller.currentTemp" type="int">23</variable>
			<variable name="Controller.isHeating" type="boolean">false</variable>
			<variable name="Controller.isCooling" type="boolean">false</variable>
		</statevariables>
		<queue>
			<message arrival="10" deadline="infinity" sender="sensor">setCurrent(22)</message>
		</queue>
		<now>10</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="sensor">
		<statevariables>
		</statevariables>
		<queue>
			<message arrival="12" deadline="infinity" sender="sensor">callSensor()</message>
		</queue>
		<now>10</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="hc_unit">
		<statevariables>
			<variable name="HC_Unit.heaterOn" type="boolean">false</variable>
			<variable name="HC_Unit.coolerOn" type="boolean">false</variable>
			<variable name="HC_Unit.currentRegulation" type="int">0</variable>
		</statevariables>
		<queue>
			<message arrival="10" deadline="infinity" sender="hc_unit">regulateTemp()</message>
		</queue>
		<now>10</now>
		<pc></pc>
		<res></res>
	</rebec>
</state>
<transition source="302_0" destination="305_0" executionTime="10" shift="0"> <messageserver sender="room" owner="sensor" title="SETCURRENT"/></transition>
<transition source="302_0" destination="232_0" executionTime="10" shift="0"> <messageserver sender="hc_unit" owner="hc_unit" title="REGULATETEMP"/></transition>
<state id="306_0" atomicpropositions="" >
	<rebec name="room">
		<statevariables>
			<variable name="Room.currentTemp" type="int">20</variable>
			<variable name="Room.currentRegulation" type="int">0</variable>
			<variable name="Room.outside_air" type="int">1</variable>
		</statevariables>
		<queue>
			<message arrival="20" deadline="infinity" sender="room">updateStatus()</message>
		</queue>
		<now>10</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="controller">
		<statevariables>
			<variable name="Controller.currentTemp" type="int">21</variable>
			<variable name="Controller.isHeating" type="boolean">false</variable>
			<variable name="Controller.isCooling" type="boolean">false</variable>
		</statevariables>
		<queue>
		</queue>
		<now>10</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="sensor">
		<statevariables>
		</statevariables>
		<queue>
			<message arrival="10" deadline="infinity" sender="room">setCurrent(20)</message>
			<message arrival="12" deadline="infinity" sender="sensor">callSensor()</message>
		</queue>
		<now>10</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="hc_unit">
		<statevariables>
			<variable name="HC_Unit.heaterOn" type="boolean">false</variable>
			<variable name="HC_Unit.coolerOn" type="boolean">false</variable>
			<variable name="HC_Unit.currentRegulation" type="int">0</variable>
		</statevariables>
		<queue>
			<message arrival="15" deadline="infinity" sender="hc_unit">regulateTemp()</message>
		</queue>
		<now>10</now>
		<pc></pc>
		<res></res>
	</rebec>
</state>
<transition source="303_0" destination="306_0" executionTime="10" shift="0"> <messageserver sender="sensor" owner="room" title="GETTEMP"/></transition>
<state id="307_0" atomicpropositions="" >
	<rebec name="room">
		<statevariables>
			<variable name="Room.currentTemp" type="int">22</variable>
			<variable name="Room.currentRegulation" type="int">0</variable>
			<variable name="Room.outside_air" type="int">-1</variable>
		</statevariables>
		<queue>
			<message arrival="20" deadline="infinity" sender="room">updateStatus()</message>
		</queue>
		<now>10</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="controller">
		<statevariables>
			<variable name="Controller.currentTemp" type="int">21</variable>
			<variable name="Controller.isHeating" type="boolean">false</variable>
			<variable name="Controller.isCooling" type="boolean">false</variable>
		</statevariables>
		<queue>
			<message arrival="10" deadline="infinity" sender="sensor">setCurrent(22)</message>
		</queue>
		<now>10</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="sensor">
		<statevariables>
		</statevariables>
		<queue>
			<message arrival="12" deadline="infinity" sender="sensor">callSensor()</message>
		</queue>
		<now>10</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="hc_unit">
		<statevariables>
			<variable name="HC_Unit.heaterOn" type="boolean">false</variable>
			<variable name="HC_Unit.coolerOn" type="boolean">false</variable>
			<variable name="HC_Unit.currentRegulation" type="int">0</variable>
		</statevariables>
		<queue>
			<message arrival="15" deadline="infinity" sender="hc_unit">regulateTemp()</message>
		</queue>
		<now>10</now>
		<pc></pc>
		<res></res>
	</rebec>
</state>
<transition source="304_0" destination="307_0" executionTime="10" shift="0"> <messageserver sender="room" owner="sensor" title="SETCURRENT"/></transition>
<transition source="267_0" destination="279_0" executionTime="10" shift="0"> <messageserver sender="hc_unit" owner="room" title="SETREGULATION"/></transition>
<transition source="265_0" destination="277_0" executionTime="10" shift="0"> <messageserver sender="controller" owner="controller" title="UPDATEOUTPUT"/></transition>
<state id="308_0" atomicpropositions="" >
	<rebec name="room">
		<statevariables>
			<variable name="Room.currentTemp" type="int">22</variable>
			<variable name="Room.currentRegulation" type="int">0</variable>
			<variable name="Room.outside_air" type="int">1</variable>
		</statevariables>
		<queue>
			<message arrival="20" deadline="infinity" sender="room">updateStatus()</message>
		</queue>
		<now>10</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="controller">
		<statevariables>
			<variable name="Controller.currentTemp" type="int">23</variable>
			<variable name="Controller.isHeating" type="boolean">false</variable>
			<variable name="Controller.isCooling" type="boolean">false</variable>
		</statevariables>
		<queue>
			<message arrival="10" deadline="infinity" sender="controller">updateOutput()</message>
		</queue>
		<now>10</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="sensor">
		<statevariables>
		</statevariables>
		<queue>
			<message arrival="12" deadline="infinity" sender="sensor">callSensor()</message>
		</queue>
		<now>10</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="hc_unit">
		<statevariables>
			<variable name="HC_Unit.heaterOn" type="boolean">false</variable>
			<variable name="HC_Unit.coolerOn" type="boolean">false</variable>
			<variable name="HC_Unit.currentRegulation" type="int">0</variable>
		</statevariables>
		<queue>
			<message arrival="15" deadline="infinity" sender="hc_unit">regulateTemp()</message>
		</queue>
		<now>10</now>
		<pc></pc>
		<res></res>
	</rebec>
</state>
<transition source="263_0" destination="308_0" executionTime="10" shift="0"> <messageserver sender="room" owner="room" title="UPDATESTATUS"/></transition>
<transition source="263_0" destination="270_0" executionTime="10" shift="0"> <messageserver sender="room" owner="room" title="UPDATESTATUS"/></transition>
<state id="309_0" atomicpropositions="" >
	<rebec name="room">
		<statevariables>
			<variable name="Room.currentTemp" type="int">24</variable>
			<variable name="Room.currentRegulation" type="int">0</variable>
			<variable name="Room.outside_air" type="int">-1</variable>
		</statevariables>
		<queue>
			<message arrival="20" deadline="infinity" sender="room">updateStatus()</message>
		</queue>
		<now>10</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="controller">
		<statevariables>
			<variable name="Controller.currentTemp" type="int">23</variable>
			<variable name="Controller.isHeating" type="boolean">false</variable>
			<variable name="Controller.isCooling" type="boolean">false</variable>
		</statevariables>
		<queue>
			<message arrival="10" deadline="infinity" sender="controller">updateOutput()</message>
		</queue>
		<now>10</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="sensor">
		<statevariables>
		</statevariables>
		<queue>
			<message arrival="12" deadline="infinity" sender="sensor">callSensor()</message>
		</queue>
		<now>10</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="hc_unit">
		<statevariables>
			<variable name="HC_Unit.heaterOn" type="boolean">false</variable>
			<variable name="HC_Unit.coolerOn" type="boolean">false</variable>
			<variable name="HC_Unit.currentRegulation" type="int">0</variable>
		</statevariables>
		<queue>
			<message arrival="15" deadline="infinity" sender="hc_unit">regulateTemp()</message>
		</queue>
		<now>10</now>
		<pc></pc>
		<res></res>
	</rebec>
</state>
<transition source="263_0" destination="309_0" executionTime="10" shift="0"> <messageserver sender="room" owner="room" title="UPDATESTATUS"/></transition>
<transition source="263_0" destination="276_0" executionTime="10" shift="0"> <messageserver sender="controller" owner="controller" title="UPDATEOUTPUT"/></transition>
<state id="310_0" atomicpropositions="" >
	<rebec name="room">
		<statevariables>
			<variable name="Room.currentTemp" type="int">22</variable>
			<variable name="Room.currentRegulation" type="int">0</variable>
			<variable name="Room.outside_air" type="int">1</variable>
		</statevariables>
		<queue>
			<message arrival="20" deadline="infinity" sender="room">updateStatus()</message>
		</queue>
		<now>10</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="controller">
		<statevariables>
			<variable name="Controller.currentTemp" type="int">22</variable>
			<variable name="Controller.isHeating" type="boolean">false</variable>
			<variable name="Controller.isCooling" type="boolean">false</variable>
		</statevariables>
		<queue>
			<message arrival="10" deadline="infinity" sender="controller">updateOutput()</message>
		</queue>
		<now>10</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="sensor">
		<statevariables>
		</statevariables>
		<queue>
			<message arrival="12" deadline="infinity" sender="sensor">callSensor()</message>
		</queue>
		<now>10</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="hc_unit">
		<statevariables>
			<variable name="HC_Unit.heaterOn" type="boolean">false</variable>
			<variable name="HC_Unit.coolerOn" type="boolean">false</variable>
			<variable name="HC_Unit.currentRegulation" type="int">0</variable>
		</statevariables>
		<queue>
			<message arrival="10" deadline="infinity" sender="hc_unit">regulateTemp()</message>
		</queue>
		<now>10</now>
		<pc></pc>
		<res></res>
	</rebec>
</state>
<transition source="305_0" destination="310_0" executionTime="10" shift="0"> <messageserver sender="sensor" owner="controller" title="SETCURRENT"/></transition>
<transition source="305_0" destination="245_0" executionTime="10" shift="0"> <messageserver sender="hc_unit" owner="hc_unit" title="REGULATETEMP"/></transition>
<state id="311_0" atomicpropositions="" >
	<rebec name="room">
		<statevariables>
			<variable name="Room.currentTemp" type="int">20</variable>
			<variable name="Room.currentRegulation" type="int">0</variable>
			<variable name="Room.outside_air" type="int">1</variable>
		</statevariables>
		<queue>
			<message arrival="20" deadline="infinity" sender="room">updateStatus()</message>
		</queue>
		<now>10</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="controller">
		<statevariables>
			<variable name="Controller.currentTemp" type="int">21</variable>
			<variable name="Controller.isHeating" type="boolean">false</variable>
			<variable name="Controller.isCooling" type="boolean">false</variable>
		</statevariables>
		<queue>
			<message arrival="10" deadline="infinity" sender="sensor">setCurrent(20)</message>
		</queue>
		<now>10</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="sensor">
		<statevariables>
		</statevariables>
		<queue>
			<message arrival="12" deadline="infinity" sender="sensor">callSensor()</message>
		</queue>
		<now>10</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="hc_unit">
		<statevariables>
			<variable name="HC_Unit.heaterOn" type="boolean">false</variable>
			<variable name="HC_Unit.coolerOn" type="boolean">false</variable>
			<variable name="HC_Unit.currentRegulation" type="int">0</variable>
		</statevariables>
		<queue>
			<message arrival="15" deadline="infinity" sender="hc_unit">regulateTemp()</message>
		</queue>
		<now>10</now>
		<pc></pc>
		<res></res>
	</rebec>
</state>
<transition source="306_0" destination="311_0" executionTime="10" shift="0"> <messageserver sender="room" owner="sensor" title="SETCURRENT"/></transition>
<state id="312_0" atomicpropositions="" >
	<rebec name="room">
		<statevariables>
			<variable name="Room.currentTemp" type="int">22</variable>
			<variable name="Room.currentRegulation" type="int">0</variable>
			<variable name="Room.outside_air" type="int">-1</variable>
		</statevariables>
		<queue>
			<message arrival="20" deadline="infinity" sender="room">updateStatus()</message>
		</queue>
		<now>10</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="controller">
		<statevariables>
			<variable name="Controller.currentTemp" type="int">22</variable>
			<variable name="Controller.isHeating" type="boolean">false</variable>
			<variable name="Controller.isCooling" type="boolean">false</variable>
		</statevariables>
		<queue>
			<message arrival="10" deadline="infinity" sender="controller">updateOutput()</message>
		</queue>
		<now>10</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="sensor">
		<statevariables>
		</statevariables>
		<queue>
			<message arrival="12" deadline="infinity" sender="sensor">callSensor()</message>
		</queue>
		<now>10</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="hc_unit">
		<statevariables>
			<variable name="HC_Unit.heaterOn" type="boolean">false</variable>
			<variable name="HC_Unit.coolerOn" type="boolean">false</variable>
			<variable name="HC_Unit.currentRegulation" type="int">0</variable>
		</statevariables>
		<queue>
			<message arrival="15" deadline="infinity" sender="hc_unit">regulateTemp()</message>
		</queue>
		<now>10</now>
		<pc></pc>
		<res></res>
	</rebec>
</state>
<transition source="307_0" destination="312_0" executionTime="10" shift="0"> <messageserver sender="sensor" owner="controller" title="SETCURRENT"/></transition>
<transition source="262_0" destination="309_0" executionTime="10" shift="0"> <messageserver sender="hc_unit" owner="room" title="SETREGULATION"/></transition>
<transition source="262_0" destination="275_0" executionTime="10" shift="0"> <messageserver sender="controller" owner="controller" title="UPDATEOUTPUT"/></transition>
<transition source="261_0" destination="270_0" executionTime="10" shift="0"> <messageserver sender="hc_unit" owner="room" title="SETREGULATION"/></transition>
<transition source="261_0" destination="274_0" executionTime="10" shift="0"> <messageserver sender="controller" owner="controller" title="UPDATEOUTPUT"/></transition>
<transition source="309_0" destination="289_0" executionTime="10" shift="0"> <messageserver sender="controller" owner="controller" title="UPDATEOUTPUT"/></transition>
<state id="313_0" atomicpropositions="" >
	<rebec name="room">
		<statevariables>
			<variable name="Room.currentTemp" type="int">22</variable>
			<variable name="Room.currentRegulation" type="int">0</variable>
			<variable name="Room.outside_air" type="int">1</variable>
		</statevariables>
		<queue>
			<message arrival="20" deadline="infinity" sender="room">updateStatus()</message>
		</queue>
		<now>10</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="controller">
		<statevariables>
			<variable name="Controller.currentTemp" type="int">22</variable>
			<variable name="Controller.isHeating" type="boolean">false</variable>
			<variable name="Controller.isCooling" type="boolean">false</variable>
		</statevariables>
		<queue>
		</queue>
		<now>10</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="sensor">
		<statevariables>
		</statevariables>
		<queue>
			<message arrival="12" deadline="infinity" sender="sensor">callSensor()</message>
		</queue>
		<now>10</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="hc_unit">
		<statevariables>
			<variable name="HC_Unit.heaterOn" type="boolean">false</variable>
			<variable name="HC_Unit.coolerOn" type="boolean">false</variable>
			<variable name="HC_Unit.currentRegulation" type="int">0</variable>
		</statevariables>
		<queue>
			<message arrival="10" deadline="infinity" sender="hc_unit">regulateTemp()</message>
		</queue>
		<now>10</now>
		<pc></pc>
		<res></res>
	</rebec>
</state>
<transition source="310_0" destination="313_0" executionTime="10" shift="0"> <messageserver sender="controller" owner="controller" title="UPDATEOUTPUT"/></transition>
<transition source="310_0" destination="259_0" executionTime="10" shift="0"> <messageserver sender="hc_unit" owner="hc_unit" title="REGULATETEMP"/></transition>
<state id="314_0" atomicpropositions="" >
	<rebec name="room">
		<statevariables>
			<variable name="Room.currentTemp" type="int">20</variable>
			<variable name="Room.currentRegulation" type="int">0</variable>
			<variable name="Room.outside_air" type="int">1</variable>
		</statevariables>
		<queue>
			<message arrival="20" deadline="infinity" sender="room">updateStatus()</message>
		</queue>
		<now>10</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="controller">
		<statevariables>
			<variable name="Controller.currentTemp" type="int">20</variable>
			<variable name="Controller.isHeating" type="boolean">false</variable>
			<variable name="Controller.isCooling" type="boolean">false</variable>
		</statevariables>
		<queue>
			<message arrival="10" deadline="infinity" sender="controller">updateOutput()</message>
		</queue>
		<now>10</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="sensor">
		<statevariables>
		</statevariables>
		<queue>
			<message arrival="12" deadline="infinity" sender="sensor">callSensor()</message>
		</queue>
		<now>10</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="hc_unit">
		<statevariables>
			<variable name="HC_Unit.heaterOn" type="boolean">false</variable>
			<variable name="HC_Unit.coolerOn" type="boolean">false</variable>
			<variable name="HC_Unit.currentRegulation" type="int">0</variable>
		</statevariables>
		<queue>
			<message arrival="15" deadline="infinity" sender="hc_unit">regulateTemp()</message>
		</queue>
		<now>10</now>
		<pc></pc>
		<res></res>
	</rebec>
</state>
<transition source="311_0" destination="314_0" executionTime="10" shift="0"> <messageserver sender="sensor" owner="controller" title="SETCURRENT"/></transition>
<state id="315_0" atomicpropositions="" >
	<rebec name="room">
		<statevariables>
			<variable name="Room.currentTemp" type="int">22</variable>
			<variable name="Room.currentRegulation" type="int">0</variable>
			<variable name="Room.outside_air" type="int">-1</variable>
		</statevariables>
		<queue>
			<message arrival="20" deadline="infinity" sender="room">updateStatus()</message>
		</queue>
		<now>10</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="controller">
		<statevariables>
			<variable name="Controller.currentTemp" type="int">22</variable>
			<variable name="Controller.isHeating" type="boolean">false</variable>
			<variable name="Controller.isCooling" type="boolean">false</variable>
		</statevariables>
		<queue>
		</queue>
		<now>10</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="sensor">
		<statevariables>
		</statevariables>
		<queue>
			<message arrival="12" deadline="infinity" sender="sensor">callSensor()</message>
		</queue>
		<now>10</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="hc_unit">
		<statevariables>
			<variable name="HC_Unit.heaterOn" type="boolean">false</variable>
			<variable name="HC_Unit.coolerOn" type="boolean">false</variable>
			<variable name="HC_Unit.currentRegulation" type="int">0</variable>
		</statevariables>
		<queue>
			<message arrival="15" deadline="infinity" sender="hc_unit">regulateTemp()</message>
		</queue>
		<now>10</now>
		<pc></pc>
		<res></res>
	</rebec>
</state>
<state id="316_0" atomicpropositions="" >
	<rebec name="room">
		<statevariables>
			<variable name="Room.currentTemp" type="int">22</variable>
			<variable name="Room.currentRegulation" type="int">0</variable>
			<variable name="Room.outside_air" type="int">-1</variable>
		</statevariables>
		<queue>
			<message arrival="20" deadline="infinity" sender="room">updateStatus()</message>
		</queue>
		<now>12</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="controller">
		<statevariables>
			<variable name="Controller.currentTemp" type="int">22</variable>
			<variable name="Controller.isHeating" type="boolean">false</variable>
			<variable name="Controller.isCooling" type="boolean">false</variable>
		</statevariables>
		<queue>
		</queue>
		<now>12</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="sensor">
		<statevariables>
		</statevariables>
		<queue>
			<message arrival="12" deadline="infinity" sender="sensor">callSensor()</message>
		</queue>
		<now>12</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="hc_unit">
		<statevariables>
			<variable name="HC_Unit.heaterOn" type="boolean">false</variable>
			<variable name="HC_Unit.coolerOn" type="boolean">false</variable>
			<variable name="HC_Unit.currentRegulation" type="int">0</variable>
		</statevariables>
		<queue>
			<message arrival="15" deadline="infinity" sender="hc_unit">regulateTemp()</message>
		</queue>
		<now>12</now>
		<pc></pc>
		<res></res>
	</rebec>
</state>
<transition source="315_0" destination="316_0" executionTime="10" shift="0"> <time value="2"/></transition>
<transition source="312_0" destination="315_0" executionTime="10" shift="0"> <messageserver sender="controller" owner="controller" title="UPDATEOUTPUT"/></transition>
<transition source="308_0" destination="287_0" executionTime="10" shift="0"> <messageserver sender="controller" owner="controller" title="UPDATEOUTPUT"/></transition>
<transition source="260_0" destination="308_0" executionTime="10" shift="0"> <messageserver sender="hc_unit" owner="room" title="SETREGULATION"/></transition>
<transition source="260_0" destination="273_0" executionTime="10" shift="0"> <messageserver sender="controller" owner="controller" title="UPDATEOUTPUT"/></transition>
<transition source="255_0" destination="300_0" executionTime="10" shift="0"> <messageserver sender="room" owner="room" title="UPDATESTATUS"/></transition>
<transition source="255_0" destination="265_0" executionTime="10" shift="0"> <messageserver sender="room" owner="room" title="UPDATESTATUS"/></transition>
<transition source="255_0" destination="301_0" executionTime="10" shift="0"> <messageserver sender="room" owner="room" title="UPDATESTATUS"/></transition>
<transition source="255_0" destination="269_0" executionTime="10" shift="0"> <messageserver sender="controller" owner="controller" title="UPDATEOUTPUT"/></transition>
<transition source="313_0" destination="272_0" executionTime="10" shift="0"> <messageserver sender="hc_unit" owner="hc_unit" title="REGULATETEMP"/></transition>
<state id="317_0" atomicpropositions="" >
	<rebec name="room">
		<statevariables>
			<variable name="Room.currentTemp" type="int">20</variable>
			<variable name="Room.currentRegulation" type="int">0</variable>
			<variable name="Room.outside_air" type="int">1</variable>
		</statevariables>
		<queue>
			<message arrival="20" deadline="infinity" sender="room">updateStatus()</message>
		</queue>
		<now>10</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="controller">
		<statevariables>
			<variable name="Controller.currentTemp" type="int">20</variable>
			<variable name="Controller.isHeating" type="boolean">true</variable>
			<variable name="Controller.isCooling" type="boolean">false</variable>
		</statevariables>
		<queue>
		</queue>
		<now>10</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="sensor">
		<statevariables>
		</statevariables>
		<queue>
			<message arrival="12" deadline="infinity" sender="sensor">callSensor()</message>
		</queue>
		<now>10</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="hc_unit">
		<statevariables>
			<variable name="HC_Unit.heaterOn" type="boolean">false</variable>
			<variable name="HC_Unit.coolerOn" type="boolean">false</variable>
			<variable name="HC_Unit.currentRegulation" type="int">0</variable>
		</statevariables>
		<queue>
			<message arrival="10" deadline="infinity" sender="controller">setHeating()</message>
			<message arrival="15" deadline="infinity" sender="hc_unit">regulateTemp()</message>
		</queue>
		<now>10</now>
		<pc></pc>
		<res></res>
	</rebec>
</state>
<transition source="314_0" destination="317_0" executionTime="10" shift="0"> <messageserver sender="controller" owner="controller" title="UPDATEOUTPUT"/></transition>
<transition source="223_0" destination="237_0" executionTime="10" shift="0"> <messageserver sender="sensor" owner="room" title="GETTEMP"/></transition>
<transition source="254_0" destination="301_0" executionTime="10" shift="0"> <messageserver sender="hc_unit" owner="room" title="SETREGULATION"/></transition>
<transition source="254_0" destination="268_0" executionTime="10" shift="0"> <messageserver sender="controller" owner="controller" title="UPDATEOUTPUT"/></transition>
<transition source="253_0" destination="300_0" executionTime="10" shift="0"> <messageserver sender="hc_unit" owner="room" title="SETREGULATION"/></transition>
<transition source="253_0" destination="267_0" executionTime="10" shift="0"> <messageserver sender="controller" owner="controller" title="UPDATEOUTPUT"/></transition>
<transition source="251_0" destination="265_0" executionTime="10" shift="0"> <messageserver sender="sensor" owner="controller" title="SETCURRENT"/></transition>
<state id="318_0" atomicpropositions="" >
	<rebec name="room">
		<statevariables>
			<variable name="Room.currentTemp" type="int">22</variable>
			<variable name="Room.currentRegulation" type="int">0</variable>
			<variable name="Room.outside_air" type="int">1</variable>
		</statevariables>
		<queue>
			<message arrival="20" deadline="infinity" sender="room">updateStatus()</message>
		</queue>
		<now>10</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="controller">
		<statevariables>
			<variable name="Controller.currentTemp" type="int">23</variable>
			<variable name="Controller.isHeating" type="boolean">false</variable>
			<variable name="Controller.isCooling" type="boolean">false</variable>
		</statevariables>
		<queue>
			<message arrival="10" deadline="infinity" sender="sensor">setCurrent(23)</message>
		</queue>
		<now>10</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="sensor">
		<statevariables>
		</statevariables>
		<queue>
			<message arrival="12" deadline="infinity" sender="sensor">callSensor()</message>
		</queue>
		<now>10</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="hc_unit">
		<statevariables>
			<variable name="HC_Unit.heaterOn" type="boolean">false</variable>
			<variable name="HC_Unit.coolerOn" type="boolean">false</variable>
			<variable name="HC_Unit.currentRegulation" type="int">0</variable>
		</statevariables>
		<queue>
			<message arrival="15" deadline="infinity" sender="hc_unit">regulateTemp()</message>
		</queue>
		<now>10</now>
		<pc></pc>
		<res></res>
	</rebec>
</state>
<transition source="249_0" destination="318_0" executionTime="10" shift="0"> <messageserver sender="room" owner="room" title="UPDATESTATUS"/></transition>
<transition source="249_0" destination="257_0" executionTime="10" shift="0"> <messageserver sender="room" owner="room" title="UPDATESTATUS"/></transition>
<state id="319_0" atomicpropositions="" >
	<rebec name="room">
		<statevariables>
			<variable name="Room.currentTemp" type="int">24</variable>
			<variable name="Room.currentRegulation" type="int">0</variable>
			<variable name="Room.outside_air" type="int">-1</variable>
		</statevariables>
		<queue>
			<message arrival="20" deadline="infinity" sender="room">updateStatus()</message>
		</queue>
		<now>10</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="controller">
		<statevariables>
			<variable name="Controller.currentTemp" type="int">23</variable>
			<variable name="Controller.isHeating" type="boolean">false</variable>
			<variable name="Controller.isCooling" type="boolean">false</variable>
		</statevariables>
		<queue>
			<message arrival="10" deadline="infinity" sender="sensor">setCurrent(23)</message>
		</queue>
		<now>10</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="sensor">
		<statevariables>
		</statevariables>
		<queue>
			<message arrival="12" deadline="infinity" sender="sensor">callSensor()</message>
		</queue>
		<now>10</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="hc_unit">
		<statevariables>
			<variable name="HC_Unit.heaterOn" type="boolean">false</variable>
			<variable name="HC_Unit.coolerOn" type="boolean">false</variable>
			<variable name="HC_Unit.currentRegulation" type="int">0</variable>
		</statevariables>
		<queue>
			<message arrival="15" deadline="infinity" sender="hc_unit">regulateTemp()</message>
		</queue>
		<now>10</now>
		<pc></pc>
		<res></res>
	</rebec>
</state>
<transition source="249_0" destination="319_0" executionTime="10" shift="0"> <messageserver sender="room" owner="room" title="UPDATESTATUS"/></transition>
<transition source="249_0" destination="263_0" executionTime="10" shift="0"> <messageserver sender="sensor" owner="controller" title="SETCURRENT"/></transition>
<state id="320_0" atomicpropositions="isHeating," >
	<rebec name="room">
		<statevariables>
			<variable name="Room.currentTemp" type="int">20</variable>
			<variable name="Room.currentRegulation" type="int">0</variable>
			<variable name="Room.outside_air" type="int">1</variable>
		</statevariables>
		<queue>
			<message arrival="20" deadline="infinity" sender="room">updateStatus()</message>
		</queue>
		<now>10</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="controller">
		<statevariables>
			<variable name="Controller.currentTemp" type="int">20</variable>
			<variable name="Controller.isHeating" type="boolean">true</variable>
			<variable name="Controller.isCooling" type="boolean">false</variable>
		</statevariables>
		<queue>
		</queue>
		<now>10</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="sensor">
		<statevariables>
		</statevariables>
		<queue>
			<message arrival="12" deadline="infinity" sender="sensor">callSensor()</message>
		</queue>
		<now>10</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="hc_unit">
		<statevariables>
			<variable name="HC_Unit.heaterOn" type="boolean">true</variable>
			<variable name="HC_Unit.coolerOn" type="boolean">false</variable>
			<variable name="HC_Unit.currentRegulation" type="int">1</variable>
		</statevariables>
		<queue>
			<message arrival="15" deadline="infinity" sender="hc_unit">regulateTemp()</message>
		</queue>
		<now>10</now>
		<pc></pc>
		<res></res>
	</rebec>
</state>
<state id="321_0" atomicpropositions="isHeating," >
	<rebec name="room">
		<statevariables>
			<variable name="Room.currentTemp" type="int">20</variable>
			<variable name="Room.currentRegulation" type="int">0</variable>
			<variable name="Room.outside_air" type="int">1</variable>
		</statevariables>
		<queue>
			<message arrival="20" deadline="infinity" sender="room">updateStatus()</message>
		</queue>
		<now>12</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="controller">
		<statevariables>
			<variable name="Controller.currentTemp" type="int">20</variable>
			<variable name="Controller.isHeating" type="boolean">true</variable>
			<variable name="Controller.isCooling" type="boolean">false</variable>
		</statevariables>
		<queue>
		</queue>
		<now>12</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="sensor">
		<statevariables>
		</statevariables>
		<queue>
			<message arrival="12" deadline="infinity" sender="sensor">callSensor()</message>
		</queue>
		<now>12</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="hc_unit">
		<statevariables>
			<variable name="HC_Unit.heaterOn" type="boolean">true</variable>
			<variable name="HC_Unit.coolerOn" type="boolean">false</variable>
			<variable name="HC_Unit.currentRegulation" type="int">1</variable>
		</statevariables>
		<queue>
			<message arrival="15" deadline="infinity" sender="hc_unit">regulateTemp()</message>
		</queue>
		<now>12</now>
		<pc></pc>
		<res></res>
	</rebec>
</state>
<transition source="320_0" destination="321_0" executionTime="10" shift="0"> <time value="2"/></transition>
<transition source="317_0" destination="320_0" executionTime="10" shift="0"> <messageserver sender="controller" owner="hc_unit" title="SETHEATING"/></transition>
<transition source="248_0" destination="319_0" executionTime="10" shift="0"> <messageserver sender="hc_unit" owner="room" title="SETREGULATION"/></transition>
<transition source="248_0" destination="262_0" executionTime="10" shift="0"> <messageserver sender="sensor" owner="controller" title="SETCURRENT"/></transition>
<transition source="247_0" destination="257_0" executionTime="10" shift="0"> <messageserver sender="hc_unit" owner="room" title="SETREGULATION"/></transition>
<transition source="247_0" destination="261_0" executionTime="10" shift="0"> <messageserver sender="sensor" owner="controller" title="SETCURRENT"/></transition>
<transition source="246_0" destination="318_0" executionTime="10" shift="0"> <messageserver sender="hc_unit" owner="room" title="SETREGULATION"/></transition>
<transition source="246_0" destination="260_0" executionTime="10" shift="0"> <messageserver sender="sensor" owner="controller" title="SETCURRENT"/></transition>
<transition source="241_0" destination="294_0" executionTime="10" shift="0"> <messageserver sender="room" owner="room" title="UPDATESTATUS"/></transition>
<transition source="241_0" destination="251_0" executionTime="10" shift="0"> <messageserver sender="room" owner="room" title="UPDATESTATUS"/></transition>
<transition source="241_0" destination="295_0" executionTime="10" shift="0"> <messageserver sender="room" owner="room" title="UPDATESTATUS"/></transition>
<transition source="241_0" destination="255_0" executionTime="10" shift="0"> <messageserver sender="sensor" owner="controller" title="SETCURRENT"/></transition>
<transition source="319_0" destination="309_0" executionTime="10" shift="0"> <messageserver sender="sensor" owner="controller" title="SETCURRENT"/></transition>
<transition source="318_0" destination="308_0" executionTime="10" shift="0"> <messageserver sender="sensor" owner="controller" title="SETCURRENT"/></transition>
<transition source="240_0" destination="295_0" executionTime="10" shift="0"> <messageserver sender="hc_unit" owner="room" title="SETREGULATION"/></transition>
<transition source="240_0" destination="254_0" executionTime="10" shift="0"> <messageserver sender="sensor" owner="controller" title="SETCURRENT"/></transition>
<transition source="239_0" destination="294_0" executionTime="10" shift="0"> <messageserver sender="hc_unit" owner="room" title="SETREGULATION"/></transition>
<transition source="239_0" destination="253_0" executionTime="10" shift="0"> <messageserver sender="sensor" owner="controller" title="SETCURRENT"/></transition>
<transition source="237_0" destination="251_0" executionTime="10" shift="0"> <messageserver sender="room" owner="sensor" title="SETCURRENT"/></transition>
<state id="322_0" atomicpropositions="" >
	<rebec name="room">
		<statevariables>
			<variable name="Room.currentTemp" type="int">22</variable>
			<variable name="Room.currentRegulation" type="int">0</variable>
			<variable name="Room.outside_air" type="int">1</variable>
		</statevariables>
		<queue>
			<message arrival="20" deadline="infinity" sender="room">updateStatus()</message>
		</queue>
		<now>10</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="controller">
		<statevariables>
			<variable name="Controller.currentTemp" type="int">23</variable>
			<variable name="Controller.isHeating" type="boolean">false</variable>
			<variable name="Controller.isCooling" type="boolean">false</variable>
		</statevariables>
		<queue>
		</queue>
		<now>10</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="sensor">
		<statevariables>
		</statevariables>
		<queue>
			<message arrival="10" deadline="infinity" sender="room">setCurrent(23)</message>
			<message arrival="12" deadline="infinity" sender="sensor">callSensor()</message>
		</queue>
		<now>10</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="hc_unit">
		<statevariables>
			<variable name="HC_Unit.heaterOn" type="boolean">false</variable>
			<variable name="HC_Unit.coolerOn" type="boolean">false</variable>
			<variable name="HC_Unit.currentRegulation" type="int">0</variable>
		</statevariables>
		<queue>
			<message arrival="15" deadline="infinity" sender="hc_unit">regulateTemp()</message>
		</queue>
		<now>10</now>
		<pc></pc>
		<res></res>
	</rebec>
</state>
<transition source="235_0" destination="322_0" executionTime="10" shift="0"> <messageserver sender="room" owner="room" title="UPDATESTATUS"/></transition>
<transition source="235_0" destination="243_0" executionTime="10" shift="0"> <messageserver sender="room" owner="room" title="UPDATESTATUS"/></transition>
<state id="323_0" atomicpropositions="" >
	<rebec name="room">
		<statevariables>
			<variable name="Room.currentTemp" type="int">24</variable>
			<variable name="Room.currentRegulation" type="int">0</variable>
			<variable name="Room.outside_air" type="int">-1</variable>
		</statevariables>
		<queue>
			<message arrival="20" deadline="infinity" sender="room">updateStatus()</message>
		</queue>
		<now>10</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="controller">
		<statevariables>
			<variable name="Controller.currentTemp" type="int">23</variable>
			<variable name="Controller.isHeating" type="boolean">false</variable>
			<variable name="Controller.isCooling" type="boolean">false</variable>
		</statevariables>
		<queue>
		</queue>
		<now>10</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="sensor">
		<statevariables>
		</statevariables>
		<queue>
			<message arrival="10" deadline="infinity" sender="room">setCurrent(23)</message>
			<message arrival="12" deadline="infinity" sender="sensor">callSensor()</message>
		</queue>
		<now>10</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="hc_unit">
		<statevariables>
			<variable name="HC_Unit.heaterOn" type="boolean">false</variable>
			<variable name="HC_Unit.coolerOn" type="boolean">false</variable>
			<variable name="HC_Unit.currentRegulation" type="int">0</variable>
		</statevariables>
		<queue>
			<message arrival="15" deadline="infinity" sender="hc_unit">regulateTemp()</message>
		</queue>
		<now>10</now>
		<pc></pc>
		<res></res>
	</rebec>
</state>
<transition source="235_0" destination="323_0" executionTime="10" shift="0"> <messageserver sender="room" owner="room" title="UPDATESTATUS"/></transition>
<transition source="235_0" destination="249_0" executionTime="10" shift="0"> <messageserver sender="room" owner="sensor" title="SETCURRENT"/></transition>
<transition source="234_0" destination="323_0" executionTime="10" shift="0"> <messageserver sender="hc_unit" owner="room" title="SETREGULATION"/></transition>
<transition source="234_0" destination="248_0" executionTime="10" shift="0"> <messageserver sender="room" owner="sensor" title="SETCURRENT"/></transition>
<transition source="233_0" destination="322_0" executionTime="10" shift="0"> <messageserver sender="hc_unit" owner="room" title="SETREGULATION"/></transition>
<transition source="233_0" destination="246_0" executionTime="10" shift="0"> <messageserver sender="room" owner="sensor" title="SETCURRENT"/></transition>
<transition source="322_0" destination="318_0" executionTime="10" shift="0"> <messageserver sender="room" owner="sensor" title="SETCURRENT"/></transition>
<transition source="323_0" destination="319_0" executionTime="10" shift="0"> <messageserver sender="room" owner="sensor" title="SETCURRENT"/></transition>
<transition source="201_0" destination="298_0" executionTime="10" shift="0"> <messageserver sender="hc_unit" owner="room" title="SETREGULATION"/></transition>
<transition source="201_0" destination="213_0" executionTime="10" shift="0"> <messageserver sender="sensor" owner="sensor" title="CALLSENSOR"/></transition>
<transition source="221_0" destination="231_0" executionTime="10" shift="0"> <messageserver sender="room" owner="room" title="UPDATESTATUS"/></transition>
<transition source="221_0" destination="229_0" executionTime="10" shift="0"> <messageserver sender="room" owner="room" title="UPDATESTATUS"/></transition>
<state id="324_0" atomicpropositions="" >
	<rebec name="room">
		<statevariables>
			<variable name="Room.currentTemp" type="int">24</variable>
			<variable name="Room.currentRegulation" type="int">0</variable>
			<variable name="Room.outside_air" type="int">-1</variable>
		</statevariables>
		<queue>
			<message arrival="10" deadline="infinity" sender="sensor">getTemp()</message>
			<message arrival="20" deadline="infinity" sender="room">updateStatus()</message>
		</queue>
		<now>10</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="controller">
		<statevariables>
			<variable name="Controller.currentTemp" type="int">23</variable>
			<variable name="Controller.isHeating" type="boolean">false</variable>
			<variable name="Controller.isCooling" type="boolean">false</variable>
		</statevariables>
		<queue>
		</queue>
		<now>10</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="sensor">
		<statevariables>
		</statevariables>
		<queue>
			<message arrival="12" deadline="infinity" sender="sensor">callSensor()</message>
		</queue>
		<now>10</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="hc_unit">
		<statevariables>
			<variable name="HC_Unit.heaterOn" type="boolean">false</variable>
			<variable name="HC_Unit.coolerOn" type="boolean">false</variable>
			<variable name="HC_Unit.currentRegulation" type="int">0</variable>
		</statevariables>
		<queue>
			<message arrival="15" deadline="infinity" sender="hc_unit">regulateTemp()</message>
		</queue>
		<now>10</now>
		<pc></pc>
		<res></res>
	</rebec>
</state>
<transition source="221_0" destination="324_0" executionTime="10" shift="0"> <messageserver sender="room" owner="room" title="UPDATESTATUS"/></transition>
<transition source="221_0" destination="235_0" executionTime="10" shift="0"> <messageserver sender="sensor" owner="room" title="GETTEMP"/></transition>
<transition source="220_0" destination="324_0" executionTime="10" shift="0"> <messageserver sender="hc_unit" owner="room" title="SETREGULATION"/></transition>
<state id="325_0" atomicpropositions="" >
	<rebec name="room">
		<statevariables>
			<variable name="Room.currentTemp" type="int">24</variable>
			<variable name="Room.currentRegulation" type="int">0</variable>
			<variable name="Room.outside_air" type="int">-1</variable>
		</statevariables>
		<queue>
			<message arrival="10" deadline="infinity" sender="hc_unit">setRegulation(0)</message>
			<message arrival="20" deadline="infinity" sender="room">updateStatus()</message>
		</queue>
		<now>10</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="controller">
		<statevariables>
			<variable name="Controller.currentTemp" type="int">23</variable>
			<variable name="Controller.isHeating" type="boolean">false</variable>
			<variable name="Controller.isCooling" type="boolean">false</variable>
		</statevariables>
		<queue>
		</queue>
		<now>10</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="sensor">
		<statevariables>
		</statevariables>
		<queue>
			<message arrival="10" deadline="infinity" sender="room">setCurrent(24)</message>
			<message arrival="12" deadline="infinity" sender="sensor">callSensor()</message>
		</queue>
		<now>10</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="hc_unit">
		<statevariables>
			<variable name="HC_Unit.heaterOn" type="boolean">false</variable>
			<variable name="HC_Unit.coolerOn" type="boolean">false</variable>
			<variable name="HC_Unit.currentRegulation" type="int">0</variable>
		</statevariables>
		<queue>
			<message arrival="15" deadline="infinity" sender="hc_unit">regulateTemp()</message>
		</queue>
		<now>10</now>
		<pc></pc>
		<res></res>
	</rebec>
</state>
<transition source="220_0" destination="325_0" executionTime="10" shift="0"> <messageserver sender="sensor" owner="room" title="GETTEMP"/></transition>
<state id="326_0" atomicpropositions="" >
	<rebec name="room">
		<statevariables>
			<variable name="Room.currentTemp" type="int">24</variable>
			<variable name="Room.currentRegulation" type="int">0</variable>
			<variable name="Room.outside_air" type="int">-1</variable>
		</statevariables>
		<queue>
			<message arrival="20" deadline="infinity" sender="room">updateStatus()</message>
		</queue>
		<now>10</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="controller">
		<statevariables>
			<variable name="Controller.currentTemp" type="int">23</variable>
			<variable name="Controller.isHeating" type="boolean">false</variable>
			<variable name="Controller.isCooling" type="boolean">false</variable>
		</statevariables>
		<queue>
		</queue>
		<now>10</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="sensor">
		<statevariables>
		</statevariables>
		<queue>
			<message arrival="10" deadline="infinity" sender="room">setCurrent(24)</message>
			<message arrival="12" deadline="infinity" sender="sensor">callSensor()</message>
		</queue>
		<now>10</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="hc_unit">
		<statevariables>
			<variable name="HC_Unit.heaterOn" type="boolean">false</variable>
			<variable name="HC_Unit.coolerOn" type="boolean">false</variable>
			<variable name="HC_Unit.currentRegulation" type="int">0</variable>
		</statevariables>
		<queue>
			<message arrival="15" deadline="infinity" sender="hc_unit">regulateTemp()</message>
		</queue>
		<now>10</now>
		<pc></pc>
		<res></res>
	</rebec>
</state>
<transition source="324_0" destination="326_0" executionTime="10" shift="0"> <messageserver sender="sensor" owner="room" title="GETTEMP"/></transition>
<transition source="325_0" destination="326_0" executionTime="10" shift="0"> <messageserver sender="hc_unit" owner="room" title="SETREGULATION"/></transition>
<state id="327_0" atomicpropositions="" >
	<rebec name="room">
		<statevariables>
			<variable name="Room.currentTemp" type="int">24</variable>
			<variable name="Room.currentRegulation" type="int">0</variable>
			<variable name="Room.outside_air" type="int">-1</variable>
		</statevariables>
		<queue>
			<message arrival="10" deadline="infinity" sender="hc_unit">setRegulation(0)</message>
			<message arrival="20" deadline="infinity" sender="room">updateStatus()</message>
		</queue>
		<now>10</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="controller">
		<statevariables>
			<variable name="Controller.currentTemp" type="int">23</variable>
			<variable name="Controller.isHeating" type="boolean">false</variable>
			<variable name="Controller.isCooling" type="boolean">false</variable>
		</statevariables>
		<queue>
			<message arrival="10" deadline="infinity" sender="sensor">setCurrent(24)</message>
		</queue>
		<now>10</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="sensor">
		<statevariables>
		</statevariables>
		<queue>
			<message arrival="12" deadline="infinity" sender="sensor">callSensor()</message>
		</queue>
		<now>10</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="hc_unit">
		<statevariables>
			<variable name="HC_Unit.heaterOn" type="boolean">false</variable>
			<variable name="HC_Unit.coolerOn" type="boolean">false</variable>
			<variable name="HC_Unit.currentRegulation" type="int">0</variable>
		</statevariables>
		<queue>
			<message arrival="15" deadline="infinity" sender="hc_unit">regulateTemp()</message>
		</queue>
		<now>10</now>
		<pc></pc>
		<res></res>
	</rebec>
</state>
<transition source="325_0" destination="327_0" executionTime="10" shift="0"> <messageserver sender="room" owner="sensor" title="SETCURRENT"/></transition>
<state id="328_0" atomicpropositions="" >
	<rebec name="room">
		<statevariables>
			<variable name="Room.currentTemp" type="int">24</variable>
			<variable name="Room.currentRegulation" type="int">0</variable>
			<variable name="Room.outside_air" type="int">-1</variable>
		</statevariables>
		<queue>
			<message arrival="20" deadline="infinity" sender="room">updateStatus()</message>
		</queue>
		<now>10</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="controller">
		<statevariables>
			<variable name="Controller.currentTemp" type="int">23</variable>
			<variable name="Controller.isHeating" type="boolean">false</variable>
			<variable name="Controller.isCooling" type="boolean">false</variable>
		</statevariables>
		<queue>
			<message arrival="10" deadline="infinity" sender="sensor">setCurrent(24)</message>
		</queue>
		<now>10</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="sensor">
		<statevariables>
		</statevariables>
		<queue>
			<message arrival="12" deadline="infinity" sender="sensor">callSensor()</message>
		</queue>
		<now>10</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="hc_unit">
		<statevariables>
			<variable name="HC_Unit.heaterOn" type="boolean">false</variable>
			<variable name="HC_Unit.coolerOn" type="boolean">false</variable>
			<variable name="HC_Unit.currentRegulation" type="int">0</variable>
		</statevariables>
		<queue>
			<message arrival="15" deadline="infinity" sender="hc_unit">regulateTemp()</message>
		</queue>
		<now>10</now>
		<pc></pc>
		<res></res>
	</rebec>
</state>
<transition source="326_0" destination="328_0" executionTime="10" shift="0"> <messageserver sender="room" owner="sensor" title="SETCURRENT"/></transition>
<transition source="327_0" destination="328_0" executionTime="10" shift="0"> <messageserver sender="hc_unit" owner="room" title="SETREGULATION"/></transition>
<state id="329_0" atomicpropositions="" >
	<rebec name="room">
		<statevariables>
			<variable name="Room.currentTemp" type="int">24</variable>
			<variable name="Room.currentRegulation" type="int">0</variable>
			<variable name="Room.outside_air" type="int">-1</variable>
		</statevariables>
		<queue>
			<message arrival="10" deadline="infinity" sender="hc_unit">setRegulation(0)</message>
			<message arrival="20" deadline="infinity" sender="room">updateStatus()</message>
		</queue>
		<now>10</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="controller">
		<statevariables>
			<variable name="Controller.currentTemp" type="int">24</variable>
			<variable name="Controller.isHeating" type="boolean">false</variable>
			<variable name="Controller.isCooling" type="boolean">false</variable>
		</statevariables>
		<queue>
			<message arrival="10" deadline="infinity" sender="controller">updateOutput()</message>
		</queue>
		<now>10</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="sensor">
		<statevariables>
		</statevariables>
		<queue>
			<message arrival="12" deadline="infinity" sender="sensor">callSensor()</message>
		</queue>
		<now>10</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="hc_unit">
		<statevariables>
			<variable name="HC_Unit.heaterOn" type="boolean">false</variable>
			<variable name="HC_Unit.coolerOn" type="boolean">false</variable>
			<variable name="HC_Unit.currentRegulation" type="int">0</variable>
		</statevariables>
		<queue>
			<message arrival="15" deadline="infinity" sender="hc_unit">regulateTemp()</message>
		</queue>
		<now>10</now>
		<pc></pc>
		<res></res>
	</rebec>
</state>
<transition source="327_0" destination="329_0" executionTime="10" shift="0"> <messageserver sender="sensor" owner="controller" title="SETCURRENT"/></transition>
<state id="330_0" atomicpropositions="" >
	<rebec name="room">
		<statevariables>
			<variable name="Room.currentTemp" type="int">24</variable>
			<variable name="Room.currentRegulation" type="int">0</variable>
			<variable name="Room.outside_air" type="int">-1</variable>
		</statevariables>
		<queue>
			<message arrival="20" deadline="infinity" sender="room">updateStatus()</message>
		</queue>
		<now>10</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="controller">
		<statevariables>
			<variable name="Controller.currentTemp" type="int">24</variable>
			<variable name="Controller.isHeating" type="boolean">false</variable>
			<variable name="Controller.isCooling" type="boolean">false</variable>
		</statevariables>
		<queue>
			<message arrival="10" deadline="infinity" sender="controller">updateOutput()</message>
		</queue>
		<now>10</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="sensor">
		<statevariables>
		</statevariables>
		<queue>
			<message arrival="12" deadline="infinity" sender="sensor">callSensor()</message>
		</queue>
		<now>10</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="hc_unit">
		<statevariables>
			<variable name="HC_Unit.heaterOn" type="boolean">false</variable>
			<variable name="HC_Unit.coolerOn" type="boolean">false</variable>
			<variable name="HC_Unit.currentRegulation" type="int">0</variable>
		</statevariables>
		<queue>
			<message arrival="15" deadline="infinity" sender="hc_unit">regulateTemp()</message>
		</queue>
		<now>10</now>
		<pc></pc>
		<res></res>
	</rebec>
</state>
<transition source="328_0" destination="330_0" executionTime="10" shift="0"> <messageserver sender="sensor" owner="controller" title="SETCURRENT"/></transition>
<transition source="329_0" destination="330_0" executionTime="10" shift="0"> <messageserver sender="hc_unit" owner="room" title="SETREGULATION"/></transition>
<state id="331_0" atomicpropositions="" >
	<rebec name="room">
		<statevariables>
			<variable name="Room.currentTemp" type="int">24</variable>
			<variable name="Room.currentRegulation" type="int">0</variable>
			<variable name="Room.outside_air" type="int">-1</variable>
		</statevariables>
		<queue>
			<message arrival="10" deadline="infinity" sender="hc_unit">setRegulation(0)</message>
			<message arrival="20" deadline="infinity" sender="room">updateStatus()</message>
		</queue>
		<now>10</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="controller">
		<statevariables>
			<variable name="Controller.currentTemp" type="int">24</variable>
			<variable name="Controller.isHeating" type="boolean">false</variable>
			<variable name="Controller.isCooling" type="boolean">true</variable>
		</statevariables>
		<queue>
		</queue>
		<now>10</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="sensor">
		<statevariables>
		</statevariables>
		<queue>
			<message arrival="12" deadline="infinity" sender="sensor">callSensor()</message>
		</queue>
		<now>10</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="hc_unit">
		<statevariables>
			<variable name="HC_Unit.heaterOn" type="boolean">false</variable>
			<variable name="HC_Unit.coolerOn" type="boolean">false</variable>
			<variable name="HC_Unit.currentRegulation" type="int">0</variable>
		</statevariables>
		<queue>
			<message arrival="10" deadline="infinity" sender="controller">setCooling()</message>
			<message arrival="15" deadline="infinity" sender="hc_unit">regulateTemp()</message>
		</queue>
		<now>10</now>
		<pc></pc>
		<res></res>
	</rebec>
</state>
<transition source="329_0" destination="331_0" executionTime="10" shift="0"> <messageserver sender="controller" owner="controller" title="UPDATEOUTPUT"/></transition>
<state id="332_0" atomicpropositions="" >
	<rebec name="room">
		<statevariables>
			<variable name="Room.currentTemp" type="int">24</variable>
			<variable name="Room.currentRegulation" type="int">0</variable>
			<variable name="Room.outside_air" type="int">-1</variable>
		</statevariables>
		<queue>
			<message arrival="20" deadline="infinity" sender="room">updateStatus()</message>
		</queue>
		<now>10</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="controller">
		<statevariables>
			<variable name="Controller.currentTemp" type="int">24</variable>
			<variable name="Controller.isHeating" type="boolean">false</variable>
			<variable name="Controller.isCooling" type="boolean">true</variable>
		</statevariables>
		<queue>
		</queue>
		<now>10</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="sensor">
		<statevariables>
		</statevariables>
		<queue>
			<message arrival="12" deadline="infinity" sender="sensor">callSensor()</message>
		</queue>
		<now>10</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="hc_unit">
		<statevariables>
			<variable name="HC_Unit.heaterOn" type="boolean">false</variable>
			<variable name="HC_Unit.coolerOn" type="boolean">false</variable>
			<variable name="HC_Unit.currentRegulation" type="int">0</variable>
		</statevariables>
		<queue>
			<message arrival="10" deadline="infinity" sender="controller">setCooling()</message>
			<message arrival="15" deadline="infinity" sender="hc_unit">regulateTemp()</message>
		</queue>
		<now>10</now>
		<pc></pc>
		<res></res>
	</rebec>
</state>
<transition source="330_0" destination="332_0" executionTime="10" shift="0"> <messageserver sender="controller" owner="controller" title="UPDATEOUTPUT"/></transition>
<transition source="331_0" destination="332_0" executionTime="10" shift="0"> <messageserver sender="hc_unit" owner="room" title="SETREGULATION"/></transition>
<state id="333_0" atomicpropositions="isCooling," >
	<rebec name="room">
		<statevariables>
			<variable name="Room.currentTemp" type="int">24</variable>
			<variable name="Room.currentRegulation" type="int">0</variable>
			<variable name="Room.outside_air" type="int">-1</variable>
		</statevariables>
		<queue>
			<message arrival="10" deadline="infinity" sender="hc_unit">setRegulation(0)</message>
			<message arrival="20" deadline="infinity" sender="room">updateStatus()</message>
		</queue>
		<now>10</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="controller">
		<statevariables>
			<variable name="Controller.currentTemp" type="int">24</variable>
			<variable name="Controller.isHeating" type="boolean">false</variable>
			<variable name="Controller.isCooling" type="boolean">true</variable>
		</statevariables>
		<queue>
		</queue>
		<now>10</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="sensor">
		<statevariables>
		</statevariables>
		<queue>
			<message arrival="12" deadline="infinity" sender="sensor">callSensor()</message>
		</queue>
		<now>10</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="hc_unit">
		<statevariables>
			<variable name="HC_Unit.heaterOn" type="boolean">false</variable>
			<variable name="HC_Unit.coolerOn" type="boolean">true</variable>
			<variable name="HC_Unit.currentRegulation" type="int">-1</variable>
		</statevariables>
		<queue>
			<message arrival="15" deadline="infinity" sender="hc_unit">regulateTemp()</message>
		</queue>
		<now>10</now>
		<pc></pc>
		<res></res>
	</rebec>
</state>
<transition source="331_0" destination="333_0" executionTime="10" shift="0"> <messageserver sender="controller" owner="hc_unit" title="SETCOOLING"/></transition>
<state id="334_0" atomicpropositions="isCooling," >
	<rebec name="room">
		<statevariables>
			<variable name="Room.currentTemp" type="int">24</variable>
			<variable name="Room.currentRegulation" type="int">0</variable>
			<variable name="Room.outside_air" type="int">-1</variable>
		</statevariables>
		<queue>
			<message arrival="20" deadline="infinity" sender="room">updateStatus()</message>
		</queue>
		<now>10</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="controller">
		<statevariables>
			<variable name="Controller.currentTemp" type="int">24</variable>
			<variable name="Controller.isHeating" type="boolean">false</variable>
			<variable name="Controller.isCooling" type="boolean">true</variable>
		</statevariables>
		<queue>
		</queue>
		<now>10</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="sensor">
		<statevariables>
		</statevariables>
		<queue>
			<message arrival="12" deadline="infinity" sender="sensor">callSensor()</message>
		</queue>
		<now>10</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="hc_unit">
		<statevariables>
			<variable name="HC_Unit.heaterOn" type="boolean">false</variable>
			<variable name="HC_Unit.coolerOn" type="boolean">true</variable>
			<variable name="HC_Unit.currentRegulation" type="int">-1</variable>
		</statevariables>
		<queue>
			<message arrival="15" deadline="infinity" sender="hc_unit">regulateTemp()</message>
		</queue>
		<now>10</now>
		<pc></pc>
		<res></res>
	</rebec>
</state>
<state id="335_0" atomicpropositions="isCooling," >
	<rebec name="room">
		<statevariables>
			<variable name="Room.currentTemp" type="int">24</variable>
			<variable name="Room.currentRegulation" type="int">0</variable>
			<variable name="Room.outside_air" type="int">-1</variable>
		</statevariables>
		<queue>
			<message arrival="20" deadline="infinity" sender="room">updateStatus()</message>
		</queue>
		<now>12</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="controller">
		<statevariables>
			<variable name="Controller.currentTemp" type="int">24</variable>
			<variable name="Controller.isHeating" type="boolean">false</variable>
			<variable name="Controller.isCooling" type="boolean">true</variable>
		</statevariables>
		<queue>
		</queue>
		<now>12</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="sensor">
		<statevariables>
		</statevariables>
		<queue>
			<message arrival="12" deadline="infinity" sender="sensor">callSensor()</message>
		</queue>
		<now>12</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="hc_unit">
		<statevariables>
			<variable name="HC_Unit.heaterOn" type="boolean">false</variable>
			<variable name="HC_Unit.coolerOn" type="boolean">true</variable>
			<variable name="HC_Unit.currentRegulation" type="int">-1</variable>
		</statevariables>
		<queue>
			<message arrival="15" deadline="infinity" sender="hc_unit">regulateTemp()</message>
		</queue>
		<now>12</now>
		<pc></pc>
		<res></res>
	</rebec>
</state>
<transition source="334_0" destination="335_0" executionTime="10" shift="0"> <time value="2"/></transition>
<transition source="332_0" destination="334_0" executionTime="10" shift="0"> <messageserver sender="controller" owner="hc_unit" title="SETCOOLING"/></transition>
<transition source="333_0" destination="334_0" executionTime="10" shift="0"> <messageserver sender="hc_unit" owner="room" title="SETREGULATION"/></transition>
<state id="336_0" atomicpropositions="" >
	<rebec name="room">
		<statevariables>
			<variable name="Room.currentTemp" type="int">20</variable>
			<variable name="Room.currentRegulation" type="int">0</variable>
			<variable name="Room.outside_air" type="int">1</variable>
		</statevariables>
		<queue>
			<message arrival="10" deadline="infinity" sender="sensor">getTemp()</message>
			<message arrival="20" deadline="infinity" sender="room">updateStatus()</message>
		</queue>
		<now>10</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="controller">
		<statevariables>
			<variable name="Controller.currentTemp" type="int">21</variable>
			<variable name="Controller.isHeating" type="boolean">false</variable>
			<variable name="Controller.isCooling" type="boolean">false</variable>
		</statevariables>
		<queue>
		</queue>
		<now>10</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="sensor">
		<statevariables>
		</statevariables>
		<queue>
			<message arrival="12" deadline="infinity" sender="sensor">callSensor()</message>
		</queue>
		<now>10</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="hc_unit">
		<statevariables>
			<variable name="HC_Unit.heaterOn" type="boolean">false</variable>
			<variable name="HC_Unit.coolerOn" type="boolean">false</variable>
			<variable name="HC_Unit.currentRegulation" type="int">0</variable>
		</statevariables>
		<queue>
			<message arrival="10" deadline="infinity" sender="hc_unit">regulateTemp()</message>
		</queue>
		<now>10</now>
		<pc></pc>
		<res></res>
	</rebec>
</state>
<transition source="188_0" destination="336_0" executionTime="10" shift="0"> <messageserver sender="sensor" owner="sensor" title="CALLSENSOR"/></transition>
<transition source="188_0" destination="200_0" executionTime="10" shift="0"> <messageserver sender="hc_unit" owner="hc_unit" title="REGULATETEMP"/></transition>
<transition source="191_0" destination="336_0" executionTime="10" shift="0"> <messageserver sender="room" owner="room" title="UPDATESTATUS"/></transition>
<transition source="191_0" destination="198_0" executionTime="10" shift="0"> <messageserver sender="room" owner="room" title="UPDATESTATUS"/></transition>
<state id="337_0" atomicpropositions="" >
	<rebec name="room">
		<statevariables>
			<variable name="Room.currentTemp" type="int">22</variable>
			<variable name="Room.currentRegulation" type="int">0</variable>
			<variable name="Room.outside_air" type="int">-1</variable>
		</statevariables>
		<queue>
			<message arrival="10" deadline="infinity" sender="sensor">getTemp()</message>
			<message arrival="20" deadline="infinity" sender="room">updateStatus()</message>
		</queue>
		<now>10</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="controller">
		<statevariables>
			<variable name="Controller.currentTemp" type="int">21</variable>
			<variable name="Controller.isHeating" type="boolean">false</variable>
			<variable name="Controller.isCooling" type="boolean">false</variable>
		</statevariables>
		<queue>
		</queue>
		<now>10</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="sensor">
		<statevariables>
		</statevariables>
		<queue>
			<message arrival="12" deadline="infinity" sender="sensor">callSensor()</message>
		</queue>
		<now>10</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="hc_unit">
		<statevariables>
			<variable name="HC_Unit.heaterOn" type="boolean">false</variable>
			<variable name="HC_Unit.coolerOn" type="boolean">false</variable>
			<variable name="HC_Unit.currentRegulation" type="int">0</variable>
		</statevariables>
		<queue>
			<message arrival="10" deadline="infinity" sender="hc_unit">regulateTemp()</message>
		</queue>
		<now>10</now>
		<pc></pc>
		<res></res>
	</rebec>
</state>
<transition source="191_0" destination="337_0" executionTime="10" shift="0"> <messageserver sender="room" owner="room" title="UPDATESTATUS"/></transition>
<state id="338_0" atomicpropositions="" >
	<rebec name="room">
		<statevariables>
			<variable name="Room.currentTemp" type="int">21</variable>
			<variable name="Room.currentRegulation" type="int">0</variable>
			<variable name="Room.outside_air" type="int">1</variable>
		</statevariables>
		<queue>
			<message arrival="10" deadline="infinity" sender="room">updateStatus()</message>
		</queue>
		<now>10</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="controller">
		<statevariables>
			<variable name="Controller.currentTemp" type="int">21</variable>
			<variable name="Controller.isHeating" type="boolean">false</variable>
			<variable name="Controller.isCooling" type="boolean">false</variable>
		</statevariables>
		<queue>
		</queue>
		<now>10</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="sensor">
		<statevariables>
		</statevariables>
		<queue>
			<message arrival="10" deadline="infinity" sender="room">setCurrent(21)</message>
			<message arrival="12" deadline="infinity" sender="sensor">callSensor()</message>
		</queue>
		<now>10</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="hc_unit">
		<statevariables>
			<variable name="HC_Unit.heaterOn" type="boolean">false</variable>
			<variable name="HC_Unit.coolerOn" type="boolean">false</variable>
			<variable name="HC_Unit.currentRegulation" type="int">0</variable>
		</statevariables>
		<queue>
			<message arrival="10" deadline="infinity" sender="hc_unit">regulateTemp()</message>
		</queue>
		<now>10</now>
		<pc></pc>
		<res></res>
	</rebec>
</state>
<transition source="191_0" destination="338_0" executionTime="10" shift="0"> <messageserver sender="sensor" owner="room" title="GETTEMP"/></transition>
<transition source="191_0" destination="203_0" executionTime="10" shift="0"> <messageserver sender="hc_unit" owner="hc_unit" title="REGULATETEMP"/></transition>
<state id="339_0" atomicpropositions="" >
	<rebec name="room">
		<statevariables>
			<variable name="Room.currentTemp" type="int">20</variable>
			<variable name="Room.currentRegulation" type="int">0</variable>
			<variable name="Room.outside_air" type="int">1</variable>
		</statevariables>
		<queue>
			<message arrival="20" deadline="infinity" sender="room">updateStatus()</message>
		</queue>
		<now>10</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="controller">
		<statevariables>
			<variable name="Controller.currentTemp" type="int">21</variable>
			<variable name="Controller.isHeating" type="boolean">false</variable>
			<variable name="Controller.isCooling" type="boolean">false</variable>
		</statevariables>
		<queue>
		</queue>
		<now>10</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="sensor">
		<statevariables>
		</statevariables>
		<queue>
			<message arrival="10" deadline="infinity" sender="room">setCurrent(20)</message>
			<message arrival="12" deadline="infinity" sender="sensor">callSensor()</message>
		</queue>
		<now>10</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="hc_unit">
		<statevariables>
			<variable name="HC_Unit.heaterOn" type="boolean">false</variable>
			<variable name="HC_Unit.coolerOn" type="boolean">false</variable>
			<variable name="HC_Unit.currentRegulation" type="int">0</variable>
		</statevariables>
		<queue>
			<message arrival="10" deadline="infinity" sender="hc_unit">regulateTemp()</message>
		</queue>
		<now>10</now>
		<pc></pc>
		<res></res>
	</rebec>
</state>
<transition source="336_0" destination="339_0" executionTime="10" shift="0"> <messageserver sender="sensor" owner="room" title="GETTEMP"/></transition>
<transition source="336_0" destination="212_0" executionTime="10" shift="0"> <messageserver sender="hc_unit" owner="hc_unit" title="REGULATETEMP"/></transition>
<state id="340_0" atomicpropositions="" >
	<rebec name="room">
		<statevariables>
			<variable name="Room.currentTemp" type="int">22</variable>
			<variable name="Room.currentRegulation" type="int">0</variable>
			<variable name="Room.outside_air" type="int">-1</variable>
		</statevariables>
		<queue>
			<message arrival="20" deadline="infinity" sender="room">updateStatus()</message>
		</queue>
		<now>10</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="controller">
		<statevariables>
			<variable name="Controller.currentTemp" type="int">21</variable>
			<variable name="Controller.isHeating" type="boolean">false</variable>
			<variable name="Controller.isCooling" type="boolean">false</variable>
		</statevariables>
		<queue>
		</queue>
		<now>10</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="sensor">
		<statevariables>
		</statevariables>
		<queue>
			<message arrival="10" deadline="infinity" sender="room">setCurrent(22)</message>
			<message arrival="12" deadline="infinity" sender="sensor">callSensor()</message>
		</queue>
		<now>10</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="hc_unit">
		<statevariables>
			<variable name="HC_Unit.heaterOn" type="boolean">false</variable>
			<variable name="HC_Unit.coolerOn" type="boolean">false</variable>
			<variable name="HC_Unit.currentRegulation" type="int">0</variable>
		</statevariables>
		<queue>
			<message arrival="10" deadline="infinity" sender="hc_unit">regulateTemp()</message>
		</queue>
		<now>10</now>
		<pc></pc>
		<res></res>
	</rebec>
</state>
<transition source="337_0" destination="340_0" executionTime="10" shift="0"> <messageserver sender="sensor" owner="room" title="GETTEMP"/></transition>
<transition source="337_0" destination="213_0" executionTime="10" shift="0"> <messageserver sender="hc_unit" owner="hc_unit" title="REGULATETEMP"/></transition>
<state id="341_0" atomicpropositions="" >
	<rebec name="room">
		<statevariables>
			<variable name="Room.currentTemp" type="int">20</variable>
			<variable name="Room.currentRegulation" type="int">0</variable>
			<variable name="Room.outside_air" type="int">1</variable>
		</statevariables>
		<queue>
			<message arrival="20" deadline="infinity" sender="room">updateStatus()</message>
		</queue>
		<now>10</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="controller">
		<statevariables>
			<variable name="Controller.currentTemp" type="int">21</variable>
			<variable name="Controller.isHeating" type="boolean">false</variable>
			<variable name="Controller.isCooling" type="boolean">false</variable>
		</statevariables>
		<queue>
		</queue>
		<now>10</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="sensor">
		<statevariables>
		</statevariables>
		<queue>
			<message arrival="10" deadline="infinity" sender="room">setCurrent(21)</message>
			<message arrival="12" deadline="infinity" sender="sensor">callSensor()</message>
		</queue>
		<now>10</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="hc_unit">
		<statevariables>
			<variable name="HC_Unit.heaterOn" type="boolean">false</variable>
			<variable name="HC_Unit.coolerOn" type="boolean">false</variable>
			<variable name="HC_Unit.currentRegulation" type="int">0</variable>
		</statevariables>
		<queue>
			<message arrival="10" deadline="infinity" sender="hc_unit">regulateTemp()</message>
		</queue>
		<now>10</now>
		<pc></pc>
		<res></res>
	</rebec>
</state>
<transition source="338_0" destination="341_0" executionTime="10" shift="0"> <messageserver sender="room" owner="room" title="UPDATESTATUS"/></transition>
<state id="342_0" atomicpropositions="" >
	<rebec name="room">
		<statevariables>
			<variable name="Room.currentTemp" type="int">21</variable>
			<variable name="Room.currentRegulation" type="int">0</variable>
			<variable name="Room.outside_air" type="int">0</variable>
		</statevariables>
		<queue>
			<message arrival="20" deadline="infinity" sender="room">updateStatus()</message>
		</queue>
		<now>10</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="controller">
		<statevariables>
			<variable name="Controller.currentTemp" type="int">21</variable>
			<variable name="Controller.isHeating" type="boolean">false</variable>
			<variable name="Controller.isCooling" type="boolean">false</variable>
		</statevariables>
		<queue>
		</queue>
		<now>10</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="sensor">
		<statevariables>
		</statevariables>
		<queue>
			<message arrival="10" deadline="infinity" sender="room">setCurrent(21)</message>
			<message arrival="12" deadline="infinity" sender="sensor">callSensor()</message>
		</queue>
		<now>10</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="hc_unit">
		<statevariables>
			<variable name="HC_Unit.heaterOn" type="boolean">false</variable>
			<variable name="HC_Unit.coolerOn" type="boolean">false</variable>
			<variable name="HC_Unit.currentRegulation" type="int">0</variable>
		</statevariables>
		<queue>
			<message arrival="10" deadline="infinity" sender="hc_unit">regulateTemp()</message>
		</queue>
		<now>10</now>
		<pc></pc>
		<res></res>
	</rebec>
</state>
<transition source="338_0" destination="342_0" executionTime="10" shift="0"> <messageserver sender="room" owner="room" title="UPDATESTATUS"/></transition>
<state id="343_0" atomicpropositions="" >
	<rebec name="room">
		<statevariables>
			<variable name="Room.currentTemp" type="int">22</variable>
			<variable name="Room.currentRegulation" type="int">0</variable>
			<variable name="Room.outside_air" type="int">-1</variable>
		</statevariables>
		<queue>
			<message arrival="20" deadline="infinity" sender="room">updateStatus()</message>
		</queue>
		<now>10</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="controller">
		<statevariables>
			<variable name="Controller.currentTemp" type="int">21</variable>
			<variable name="Controller.isHeating" type="boolean">false</variable>
			<variable name="Controller.isCooling" type="boolean">false</variable>
		</statevariables>
		<queue>
		</queue>
		<now>10</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="sensor">
		<statevariables>
		</statevariables>
		<queue>
			<message arrival="10" deadline="infinity" sender="room">setCurrent(21)</message>
			<message arrival="12" deadline="infinity" sender="sensor">callSensor()</message>
		</queue>
		<now>10</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="hc_unit">
		<statevariables>
			<variable name="HC_Unit.heaterOn" type="boolean">false</variable>
			<variable name="HC_Unit.coolerOn" type="boolean">false</variable>
			<variable name="HC_Unit.currentRegulation" type="int">0</variable>
		</statevariables>
		<queue>
			<message arrival="10" deadline="infinity" sender="hc_unit">regulateTemp()</message>
		</queue>
		<now>10</now>
		<pc></pc>
		<res></res>
	</rebec>
</state>
<transition source="338_0" destination="343_0" executionTime="10" shift="0"> <messageserver sender="room" owner="room" title="UPDATESTATUS"/></transition>
<state id="344_0" atomicpropositions="" >
	<rebec name="room">
		<statevariables>
			<variable name="Room.currentTemp" type="int">21</variable>
			<variable name="Room.currentRegulation" type="int">0</variable>
			<variable name="Room.outside_air" type="int">1</variable>
		</statevariables>
		<queue>
			<message arrival="10" deadline="infinity" sender="room">updateStatus()</message>
		</queue>
		<now>10</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="controller">
		<statevariables>
			<variable name="Controller.currentTemp" type="int">21</variable>
			<variable name="Controller.isHeating" type="boolean">false</variable>
			<variable name="Controller.isCooling" type="boolean">false</variable>
		</statevariables>
		<queue>
			<message arrival="10" deadline="infinity" sender="sensor">setCurrent(21)</message>
		</queue>
		<now>10</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="sensor">
		<statevariables>
		</statevariables>
		<queue>
			<message arrival="12" deadline="infinity" sender="sensor">callSensor()</message>
		</queue>
		<now>10</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="hc_unit">
		<statevariables>
			<variable name="HC_Unit.heaterOn" type="boolean">false</variable>
			<variable name="HC_Unit.coolerOn" type="boolean">false</variable>
			<variable name="HC_Unit.currentRegulation" type="int">0</variable>
		</statevariables>
		<queue>
			<message arrival="10" deadline="infinity" sender="hc_unit">regulateTemp()</message>
		</queue>
		<now>10</now>
		<pc></pc>
		<res></res>
	</rebec>
</state>
<transition source="338_0" destination="344_0" executionTime="10" shift="0"> <messageserver sender="room" owner="sensor" title="SETCURRENT"/></transition>
<transition source="338_0" destination="215_0" executionTime="10" shift="0"> <messageserver sender="hc_unit" owner="hc_unit" title="REGULATETEMP"/></transition>
<state id="345_0" atomicpropositions="" >
	<rebec name="room">
		<statevariables>
			<variable name="Room.currentTemp" type="int">20</variable>
			<variable name="Room.currentRegulation" type="int">0</variable>
			<variable name="Room.outside_air" type="int">1</variable>
		</statevariables>
		<queue>
			<message arrival="20" deadline="infinity" sender="room">updateStatus()</message>
		</queue>
		<now>10</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="controller">
		<statevariables>
			<variable name="Controller.currentTemp" type="int">21</variable>
			<variable name="Controller.isHeating" type="boolean">false</variable>
			<variable name="Controller.isCooling" type="boolean">false</variable>
		</statevariables>
		<queue>
			<message arrival="10" deadline="infinity" sender="sensor">setCurrent(20)</message>
		</queue>
		<now>10</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="sensor">
		<statevariables>
		</statevariables>
		<queue>
			<message arrival="12" deadline="infinity" sender="sensor">callSensor()</message>
		</queue>
		<now>10</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="hc_unit">
		<statevariables>
			<variable name="HC_Unit.heaterOn" type="boolean">false</variable>
			<variable name="HC_Unit.coolerOn" type="boolean">false</variable>
			<variable name="HC_Unit.currentRegulation" type="int">0</variable>
		</statevariables>
		<queue>
			<message arrival="10" deadline="infinity" sender="hc_unit">regulateTemp()</message>
		</queue>
		<now>10</now>
		<pc></pc>
		<res></res>
	</rebec>
</state>
<transition source="339_0" destination="345_0" executionTime="10" shift="0"> <messageserver sender="room" owner="sensor" title="SETCURRENT"/></transition>
<state id="346_0" atomicpropositions="" >
	<rebec name="room">
		<statevariables>
			<variable name="Room.currentTemp" type="int">20</variable>
			<variable name="Room.currentRegulation" type="int">0</variable>
			<variable name="Room.outside_air" type="int">1</variable>
		</statevariables>
		<queue>
			<message arrival="10" deadline="infinity" sender="hc_unit">setRegulation(0)</message>
			<message arrival="20" deadline="infinity" sender="room">updateStatus()</message>
		</queue>
		<now>10</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="controller">
		<statevariables>
			<variable name="Controller.currentTemp" type="int">21</variable>
			<variable name="Controller.isHeating" type="boolean">false</variable>
			<variable name="Controller.isCooling" type="boolean">false</variable>
		</statevariables>
		<queue>
		</queue>
		<now>10</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="sensor">
		<statevariables>
		</statevariables>
		<queue>
			<message arrival="10" deadline="infinity" sender="room">setCurrent(20)</message>
			<message arrival="12" deadline="infinity" sender="sensor">callSensor()</message>
		</queue>
		<now>10</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="hc_unit">
		<statevariables>
			<variable name="HC_Unit.heaterOn" type="boolean">false</variable>
			<variable name="HC_Unit.coolerOn" type="boolean">false</variable>
			<variable name="HC_Unit.currentRegulation" type="int">0</variable>
		</statevariables>
		<queue>
			<message arrival="15" deadline="infinity" sender="hc_unit">regulateTemp()</message>
		</queue>
		<now>10</now>
		<pc></pc>
		<res></res>
	</rebec>
</state>
<transition source="339_0" destination="346_0" executionTime="10" shift="0"> <messageserver sender="hc_unit" owner="hc_unit" title="REGULATETEMP"/></transition>
<state id="347_0" atomicpropositions="" >
	<rebec name="room">
		<statevariables>
			<variable name="Room.currentTemp" type="int">22</variable>
			<variable name="Room.currentRegulation" type="int">0</variable>
			<variable name="Room.outside_air" type="int">-1</variable>
		</statevariables>
		<queue>
			<message arrival="20" deadline="infinity" sender="room">updateStatus()</message>
		</queue>
		<now>10</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="controller">
		<statevariables>
			<variable name="Controller.currentTemp" type="int">21</variable>
			<variable name="Controller.isHeating" type="boolean">false</variable>
			<variable name="Controller.isCooling" type="boolean">false</variable>
		</statevariables>
		<queue>
			<message arrival="10" deadline="infinity" sender="sensor">setCurrent(22)</message>
		</queue>
		<now>10</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="sensor">
		<statevariables>
		</statevariables>
		<queue>
			<message arrival="12" deadline="infinity" sender="sensor">callSensor()</message>
		</queue>
		<now>10</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="hc_unit">
		<statevariables>
			<variable name="HC_Unit.heaterOn" type="boolean">false</variable>
			<variable name="HC_Unit.coolerOn" type="boolean">false</variable>
			<variable name="HC_Unit.currentRegulation" type="int">0</variable>
		</statevariables>
		<queue>
			<message arrival="10" deadline="infinity" sender="hc_unit">regulateTemp()</message>
		</queue>
		<now>10</now>
		<pc></pc>
		<res></res>
	</rebec>
</state>
<transition source="340_0" destination="347_0" executionTime="10" shift="0"> <messageserver sender="room" owner="sensor" title="SETCURRENT"/></transition>
<state id="348_0" atomicpropositions="" >
	<rebec name="room">
		<statevariables>
			<variable name="Room.currentTemp" type="int">22</variable>
			<variable name="Room.currentRegulation" type="int">0</variable>
			<variable name="Room.outside_air" type="int">-1</variable>
		</statevariables>
		<queue>
			<message arrival="10" deadline="infinity" sender="hc_unit">setRegulation(0)</message>
			<message arrival="20" deadline="infinity" sender="room">updateStatus()</message>
		</queue>
		<now>10</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="controller">
		<statevariables>
			<variable name="Controller.currentTemp" type="int">21</variable>
			<variable name="Controller.isHeating" type="boolean">false</variable>
			<variable name="Controller.isCooling" type="boolean">false</variable>
		</statevariables>
		<queue>
		</queue>
		<now>10</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="sensor">
		<statevariables>
		</statevariables>
		<queue>
			<message arrival="10" deadline="infinity" sender="room">setCurrent(22)</message>
			<message arrival="12" deadline="infinity" sender="sensor">callSensor()</message>
		</queue>
		<now>10</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="hc_unit">
		<statevariables>
			<variable name="HC_Unit.heaterOn" type="boolean">false</variable>
			<variable name="HC_Unit.coolerOn" type="boolean">false</variable>
			<variable name="HC_Unit.currentRegulation" type="int">0</variable>
		</statevariables>
		<queue>
			<message arrival="15" deadline="infinity" sender="hc_unit">regulateTemp()</message>
		</queue>
		<now>10</now>
		<pc></pc>
		<res></res>
	</rebec>
</state>
<transition source="340_0" destination="348_0" executionTime="10" shift="0"> <messageserver sender="hc_unit" owner="hc_unit" title="REGULATETEMP"/></transition>
<state id="349_0" atomicpropositions="" >
	<rebec name="room">
		<statevariables>
			<variable name="Room.currentTemp" type="int">22</variable>
			<variable name="Room.currentRegulation" type="int">0</variable>
			<variable name="Room.outside_air" type="int">-1</variable>
		</statevariables>
		<queue>
			<message arrival="20" deadline="infinity" sender="room">updateStatus()</message>
		</queue>
		<now>10</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="controller">
		<statevariables>
			<variable name="Controller.currentTemp" type="int">21</variable>
			<variable name="Controller.isHeating" type="boolean">false</variable>
			<variable name="Controller.isCooling" type="boolean">false</variable>
		</statevariables>
		<queue>
			<message arrival="10" deadline="infinity" sender="sensor">setCurrent(21)</message>
		</queue>
		<now>10</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="sensor">
		<statevariables>
		</statevariables>
		<queue>
			<message arrival="12" deadline="infinity" sender="sensor">callSensor()</message>
		</queue>
		<now>10</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="hc_unit">
		<statevariables>
			<variable name="HC_Unit.heaterOn" type="boolean">false</variable>
			<variable name="HC_Unit.coolerOn" type="boolean">false</variable>
			<variable name="HC_Unit.currentRegulation" type="int">0</variable>
		</statevariables>
		<queue>
			<message arrival="10" deadline="infinity" sender="hc_unit">regulateTemp()</message>
		</queue>
		<now>10</now>
		<pc></pc>
		<res></res>
	</rebec>
</state>
<transition source="343_0" destination="349_0" executionTime="10" shift="0"> <messageserver sender="room" owner="sensor" title="SETCURRENT"/></transition>
<transition source="343_0" destination="226_0" executionTime="10" shift="0"> <messageserver sender="hc_unit" owner="hc_unit" title="REGULATETEMP"/></transition>
<state id="350_0" atomicpropositions="" >
	<rebec name="room">
		<statevariables>
			<variable name="Room.currentTemp" type="int">20</variable>
			<variable name="Room.currentRegulation" type="int">0</variable>
			<variable name="Room.outside_air" type="int">1</variable>
		</statevariables>
		<queue>
			<message arrival="20" deadline="infinity" sender="room">updateStatus()</message>
		</queue>
		<now>10</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="controller">
		<statevariables>
			<variable name="Controller.currentTemp" type="int">21</variable>
			<variable name="Controller.isHeating" type="boolean">false</variable>
			<variable name="Controller.isCooling" type="boolean">false</variable>
		</statevariables>
		<queue>
			<message arrival="10" deadline="infinity" sender="sensor">setCurrent(21)</message>
		</queue>
		<now>10</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="sensor">
		<statevariables>
		</statevariables>
		<queue>
			<message arrival="12" deadline="infinity" sender="sensor">callSensor()</message>
		</queue>
		<now>10</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="hc_unit">
		<statevariables>
			<variable name="HC_Unit.heaterOn" type="boolean">false</variable>
			<variable name="HC_Unit.coolerOn" type="boolean">false</variable>
			<variable name="HC_Unit.currentRegulation" type="int">0</variable>
		</statevariables>
		<queue>
			<message arrival="10" deadline="infinity" sender="hc_unit">regulateTemp()</message>
		</queue>
		<now>10</now>
		<pc></pc>
		<res></res>
	</rebec>
</state>
<transition source="344_0" destination="350_0" executionTime="10" shift="0"> <messageserver sender="room" owner="room" title="UPDATESTATUS"/></transition>
<state id="351_0" atomicpropositions="" >
	<rebec name="room">
		<statevariables>
			<variable name="Room.currentTemp" type="int">21</variable>
			<variable name="Room.currentRegulation" type="int">0</variable>
			<variable name="Room.outside_air" type="int">0</variable>
		</statevariables>
		<queue>
			<message arrival="20" deadline="infinity" sender="room">updateStatus()</message>
		</queue>
		<now>10</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="controller">
		<statevariables>
			<variable name="Controller.currentTemp" type="int">21</variable>
			<variable name="Controller.isHeating" type="boolean">false</variable>
			<variable name="Controller.isCooling" type="boolean">false</variable>
		</statevariables>
		<queue>
			<message arrival="10" deadline="infinity" sender="sensor">setCurrent(21)</message>
		</queue>
		<now>10</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="sensor">
		<statevariables>
		</statevariables>
		<queue>
			<message arrival="12" deadline="infinity" sender="sensor">callSensor()</message>
		</queue>
		<now>10</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="hc_unit">
		<statevariables>
			<variable name="HC_Unit.heaterOn" type="boolean">false</variable>
			<variable name="HC_Unit.coolerOn" type="boolean">false</variable>
			<variable name="HC_Unit.currentRegulation" type="int">0</variable>
		</statevariables>
		<queue>
			<message arrival="10" deadline="infinity" sender="hc_unit">regulateTemp()</message>
		</queue>
		<now>10</now>
		<pc></pc>
		<res></res>
	</rebec>
</state>
<transition source="344_0" destination="351_0" executionTime="10" shift="0"> <messageserver sender="room" owner="room" title="UPDATESTATUS"/></transition>
<transition source="344_0" destination="349_0" executionTime="10" shift="0"> <messageserver sender="room" owner="room" title="UPDATESTATUS"/></transition>
<state id="352_0" atomicpropositions="" >
	<rebec name="room">
		<statevariables>
			<variable name="Room.currentTemp" type="int">21</variable>
			<variable name="Room.currentRegulation" type="int">0</variable>
			<variable name="Room.outside_air" type="int">1</variable>
		</statevariables>
		<queue>
			<message arrival="10" deadline="infinity" sender="room">updateStatus()</message>
		</queue>
		<now>10</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="controller">
		<statevariables>
			<variable name="Controller.currentTemp" type="int">21</variable>
			<variable name="Controller.isHeating" type="boolean">false</variable>
			<variable name="Controller.isCooling" type="boolean">false</variable>
		</statevariables>
		<queue>
			<message arrival="10" deadline="infinity" sender="controller">updateOutput()</message>
		</queue>
		<now>10</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="sensor">
		<statevariables>
		</statevariables>
		<queue>
			<message arrival="12" deadline="infinity" sender="sensor">callSensor()</message>
		</queue>
		<now>10</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="hc_unit">
		<statevariables>
			<variable name="HC_Unit.heaterOn" type="boolean">false</variable>
			<variable name="HC_Unit.coolerOn" type="boolean">false</variable>
			<variable name="HC_Unit.currentRegulation" type="int">0</variable>
		</statevariables>
		<queue>
			<message arrival="10" deadline="infinity" sender="hc_unit">regulateTemp()</message>
		</queue>
		<now>10</now>
		<pc></pc>
		<res></res>
	</rebec>
</state>
<transition source="344_0" destination="352_0" executionTime="10" shift="0"> <messageserver sender="sensor" owner="controller" title="SETCURRENT"/></transition>
<transition source="344_0" destination="228_0" executionTime="10" shift="0"> <messageserver sender="hc_unit" owner="hc_unit" title="REGULATETEMP"/></transition>
<transition source="346_0" destination="306_0" executionTime="10" shift="0"> <messageserver sender="hc_unit" owner="room" title="SETREGULATION"/></transition>
<state id="353_0" atomicpropositions="" >
	<rebec name="room">
		<statevariables>
			<variable name="Room.currentTemp" type="int">20</variable>
			<variable name="Room.currentRegulation" type="int">0</variable>
			<variable name="Room.outside_air" type="int">1</variable>
		</statevariables>
		<queue>
			<message arrival="10" deadline="infinity" sender="hc_unit">setRegulation(0)</message>
			<message arrival="20" deadline="infinity" sender="room">updateStatus()</message>
		</queue>
		<now>10</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="controller">
		<statevariables>
			<variable name="Controller.currentTemp" type="int">21</variable>
			<variable name="Controller.isHeating" type="boolean">false</variable>
			<variable name="Controller.isCooling" type="boolean">false</variable>
		</statevariables>
		<queue>
			<message arrival="10" deadline="infinity" sender="sensor">setCurrent(20)</message>
		</queue>
		<now>10</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="sensor">
		<statevariables>
		</statevariables>
		<queue>
			<message arrival="12" deadline="infinity" sender="sensor">callSensor()</message>
		</queue>
		<now>10</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="hc_unit">
		<statevariables>
			<variable name="HC_Unit.heaterOn" type="boolean">false</variable>
			<variable name="HC_Unit.coolerOn" type="boolean">false</variable>
			<variable name="HC_Unit.currentRegulation" type="int">0</variable>
		</statevariables>
		<queue>
			<message arrival="15" deadline="infinity" sender="hc_unit">regulateTemp()</message>
		</queue>
		<now>10</now>
		<pc></pc>
		<res></res>
	</rebec>
</state>
<transition source="346_0" destination="353_0" executionTime="10" shift="0"> <messageserver sender="room" owner="sensor" title="SETCURRENT"/></transition>
<state id="354_0" atomicpropositions="" >
	<rebec name="room">
		<statevariables>
			<variable name="Room.currentTemp" type="int">22</variable>
			<variable name="Room.currentRegulation" type="int">0</variable>
			<variable name="Room.outside_air" type="int">-1</variable>
		</statevariables>
		<queue>
			<message arrival="20" deadline="infinity" sender="room">updateStatus()</message>
		</queue>
		<now>10</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="controller">
		<statevariables>
			<variable name="Controller.currentTemp" type="int">22</variable>
			<variable name="Controller.isHeating" type="boolean">false</variable>
			<variable name="Controller.isCooling" type="boolean">false</variable>
		</statevariables>
		<queue>
			<message arrival="10" deadline="infinity" sender="controller">updateOutput()</message>
		</queue>
		<now>10</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="sensor">
		<statevariables>
		</statevariables>
		<queue>
			<message arrival="12" deadline="infinity" sender="sensor">callSensor()</message>
		</queue>
		<now>10</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="hc_unit">
		<statevariables>
			<variable name="HC_Unit.heaterOn" type="boolean">false</variable>
			<variable name="HC_Unit.coolerOn" type="boolean">false</variable>
			<variable name="HC_Unit.currentRegulation" type="int">0</variable>
		</statevariables>
		<queue>
			<message arrival="10" deadline="infinity" sender="hc_unit">regulateTemp()</message>
		</queue>
		<now>10</now>
		<pc></pc>
		<res></res>
	</rebec>
</state>
<transition source="347_0" destination="354_0" executionTime="10" shift="0"> <messageserver sender="sensor" owner="controller" title="SETCURRENT"/></transition>
<state id="355_0" atomicpropositions="" >
	<rebec name="room">
		<statevariables>
			<variable name="Room.currentTemp" type="int">22</variable>
			<variable name="Room.currentRegulation" type="int">0</variable>
			<variable name="Room.outside_air" type="int">-1</variable>
		</statevariables>
		<queue>
			<message arrival="10" deadline="infinity" sender="hc_unit">setRegulation(0)</message>
			<message arrival="20" deadline="infinity" sender="room">updateStatus()</message>
		</queue>
		<now>10</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="controller">
		<statevariables>
			<variable name="Controller.currentTemp" type="int">21</variable>
			<variable name="Controller.isHeating" type="boolean">false</variable>
			<variable name="Controller.isCooling" type="boolean">false</variable>
		</statevariables>
		<queue>
			<message arrival="10" deadline="infinity" sender="sensor">setCurrent(22)</message>
		</queue>
		<now>10</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="sensor">
		<statevariables>
		</statevariables>
		<queue>
			<message arrival="12" deadline="infinity" sender="sensor">callSensor()</message>
		</queue>
		<now>10</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="hc_unit">
		<statevariables>
			<variable name="HC_Unit.heaterOn" type="boolean">false</variable>
			<variable name="HC_Unit.coolerOn" type="boolean">false</variable>
			<variable name="HC_Unit.currentRegulation" type="int">0</variable>
		</statevariables>
		<queue>
			<message arrival="15" deadline="infinity" sender="hc_unit">regulateTemp()</message>
		</queue>
		<now>10</now>
		<pc></pc>
		<res></res>
	</rebec>
</state>
<transition source="347_0" destination="355_0" executionTime="10" shift="0"> <messageserver sender="hc_unit" owner="hc_unit" title="REGULATETEMP"/></transition>
<transition source="348_0" destination="304_0" executionTime="10" shift="0"> <messageserver sender="hc_unit" owner="room" title="SETREGULATION"/></transition>
<transition source="348_0" destination="355_0" executionTime="10" shift="0"> <messageserver sender="room" owner="sensor" title="SETCURRENT"/></transition>
<state id="356_0" atomicpropositions="" >
	<rebec name="room">
		<statevariables>
			<variable name="Room.currentTemp" type="int">22</variable>
			<variable name="Room.currentRegulation" type="int">0</variable>
			<variable name="Room.outside_air" type="int">-1</variable>
		</statevariables>
		<queue>
			<message arrival="20" deadline="infinity" sender="room">updateStatus()</message>
		</queue>
		<now>10</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="controller">
		<statevariables>
			<variable name="Controller.currentTemp" type="int">21</variable>
			<variable name="Controller.isHeating" type="boolean">false</variable>
			<variable name="Controller.isCooling" type="boolean">false</variable>
		</statevariables>
		<queue>
			<message arrival="10" deadline="infinity" sender="controller">updateOutput()</message>
		</queue>
		<now>10</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="sensor">
		<statevariables>
		</statevariables>
		<queue>
			<message arrival="12" deadline="infinity" sender="sensor">callSensor()</message>
		</queue>
		<now>10</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="hc_unit">
		<statevariables>
			<variable name="HC_Unit.heaterOn" type="boolean">false</variable>
			<variable name="HC_Unit.coolerOn" type="boolean">false</variable>
			<variable name="HC_Unit.currentRegulation" type="int">0</variable>
		</statevariables>
		<queue>
			<message arrival="10" deadline="infinity" sender="hc_unit">regulateTemp()</message>
		</queue>
		<now>10</now>
		<pc></pc>
		<res></res>
	</rebec>
</state>
<transition source="349_0" destination="356_0" executionTime="10" shift="0"> <messageserver sender="sensor" owner="controller" title="SETCURRENT"/></transition>
<transition source="349_0" destination="240_0" executionTime="10" shift="0"> <messageserver sender="hc_unit" owner="hc_unit" title="REGULATETEMP"/></transition>
<state id="357_0" atomicpropositions="" >
	<rebec name="room">
		<statevariables>
			<variable name="Room.currentTemp" type="int">20</variable>
			<variable name="Room.currentRegulation" type="int">0</variable>
			<variable name="Room.outside_air" type="int">1</variable>
		</statevariables>
		<queue>
			<message arrival="20" deadline="infinity" sender="room">updateStatus()</message>
		</queue>
		<now>10</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="controller">
		<statevariables>
			<variable name="Controller.currentTemp" type="int">21</variable>
			<variable name="Controller.isHeating" type="boolean">false</variable>
			<variable name="Controller.isCooling" type="boolean">false</variable>
		</statevariables>
		<queue>
			<message arrival="10" deadline="infinity" sender="controller">updateOutput()</message>
		</queue>
		<now>10</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="sensor">
		<statevariables>
		</statevariables>
		<queue>
			<message arrival="12" deadline="infinity" sender="sensor">callSensor()</message>
		</queue>
		<now>10</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="hc_unit">
		<statevariables>
			<variable name="HC_Unit.heaterOn" type="boolean">false</variable>
			<variable name="HC_Unit.coolerOn" type="boolean">false</variable>
			<variable name="HC_Unit.currentRegulation" type="int">0</variable>
		</statevariables>
		<queue>
			<message arrival="10" deadline="infinity" sender="hc_unit">regulateTemp()</message>
		</queue>
		<now>10</now>
		<pc></pc>
		<res></res>
	</rebec>
</state>
<transition source="350_0" destination="357_0" executionTime="10" shift="0"> <messageserver sender="sensor" owner="controller" title="SETCURRENT"/></transition>
<transition source="350_0" destination="239_0" executionTime="10" shift="0"> <messageserver sender="hc_unit" owner="hc_unit" title="REGULATETEMP"/></transition>
<transition source="352_0" destination="357_0" executionTime="10" shift="0"> <messageserver sender="room" owner="room" title="UPDATESTATUS"/></transition>
<state id="358_0" atomicpropositions="" >
	<rebec name="room">
		<statevariables>
			<variable name="Room.currentTemp" type="int">21</variable>
			<variable name="Room.currentRegulation" type="int">0</variable>
			<variable name="Room.outside_air" type="int">0</variable>
		</statevariables>
		<queue>
			<message arrival="20" deadline="infinity" sender="room">updateStatus()</message>
		</queue>
		<now>10</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="controller">
		<statevariables>
			<variable name="Controller.currentTemp" type="int">21</variable>
			<variable name="Controller.isHeating" type="boolean">false</variable>
			<variable name="Controller.isCooling" type="boolean">false</variable>
		</statevariables>
		<queue>
			<message arrival="10" deadline="infinity" sender="controller">updateOutput()</message>
		</queue>
		<now>10</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="sensor">
		<statevariables>
		</statevariables>
		<queue>
			<message arrival="12" deadline="infinity" sender="sensor">callSensor()</message>
		</queue>
		<now>10</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="hc_unit">
		<statevariables>
			<variable name="HC_Unit.heaterOn" type="boolean">false</variable>
			<variable name="HC_Unit.coolerOn" type="boolean">false</variable>
			<variable name="HC_Unit.currentRegulation" type="int">0</variable>
		</statevariables>
		<queue>
			<message arrival="10" deadline="infinity" sender="hc_unit">regulateTemp()</message>
		</queue>
		<now>10</now>
		<pc></pc>
		<res></res>
	</rebec>
</state>
<transition source="352_0" destination="358_0" executionTime="10" shift="0"> <messageserver sender="room" owner="room" title="UPDATESTATUS"/></transition>
<transition source="352_0" destination="356_0" executionTime="10" shift="0"> <messageserver sender="room" owner="room" title="UPDATESTATUS"/></transition>
<state id="359_0" atomicpropositions="" >
	<rebec name="room">
		<statevariables>
			<variable name="Room.currentTemp" type="int">21</variable>
			<variable name="Room.currentRegulation" type="int">0</variable>
			<variable name="Room.outside_air" type="int">1</variable>
		</statevariables>
		<queue>
			<message arrival="10" deadline="infinity" sender="room">updateStatus()</message>
		</queue>
		<now>10</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="controller">
		<statevariables>
			<variable name="Controller.currentTemp" type="int">21</variable>
			<variable name="Controller.isHeating" type="boolean">false</variable>
			<variable name="Controller.isCooling" type="boolean">false</variable>
		</statevariables>
		<queue>
		</queue>
		<now>10</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="sensor">
		<statevariables>
		</statevariables>
		<queue>
			<message arrival="12" deadline="infinity" sender="sensor">callSensor()</message>
		</queue>
		<now>10</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="hc_unit">
		<statevariables>
			<variable name="HC_Unit.heaterOn" type="boolean">false</variable>
			<variable name="HC_Unit.coolerOn" type="boolean">false</variable>
			<variable name="HC_Unit.currentRegulation" type="int">0</variable>
		</statevariables>
		<queue>
			<message arrival="10" deadline="infinity" sender="hc_unit">regulateTemp()</message>
		</queue>
		<now>10</now>
		<pc></pc>
		<res></res>
	</rebec>
</state>
<transition source="352_0" destination="359_0" executionTime="10" shift="0"> <messageserver sender="controller" owner="controller" title="UPDATEOUTPUT"/></transition>
<transition source="352_0" destination="242_0" executionTime="10" shift="0"> <messageserver sender="hc_unit" owner="hc_unit" title="REGULATETEMP"/></transition>
<transition source="353_0" destination="311_0" executionTime="10" shift="0"> <messageserver sender="hc_unit" owner="room" title="SETREGULATION"/></transition>
<state id="360_0" atomicpropositions="" >
	<rebec name="room">
		<statevariables>
			<variable name="Room.currentTemp" type="int">20</variable>
			<variable name="Room.currentRegulation" type="int">0</variable>
			<variable name="Room.outside_air" type="int">1</variable>
		</statevariables>
		<queue>
			<message arrival="10" deadline="infinity" sender="hc_unit">setRegulation(0)</message>
			<message arrival="20" deadline="infinity" sender="room">updateStatus()</message>
		</queue>
		<now>10</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="controller">
		<statevariables>
			<variable name="Controller.currentTemp" type="int">20</variable>
			<variable name="Controller.isHeating" type="boolean">false</variable>
			<variable name="Controller.isCooling" type="boolean">false</variable>
		</statevariables>
		<queue>
			<message arrival="10" deadline="infinity" sender="controller">updateOutput()</message>
		</queue>
		<now>10</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="sensor">
		<statevariables>
		</statevariables>
		<queue>
			<message arrival="12" deadline="infinity" sender="sensor">callSensor()</message>
		</queue>
		<now>10</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="hc_unit">
		<statevariables>
			<variable name="HC_Unit.heaterOn" type="boolean">false</variable>
			<variable name="HC_Unit.coolerOn" type="boolean">false</variable>
			<variable name="HC_Unit.currentRegulation" type="int">0</variable>
		</statevariables>
		<queue>
			<message arrival="15" deadline="infinity" sender="hc_unit">regulateTemp()</message>
		</queue>
		<now>10</now>
		<pc></pc>
		<res></res>
	</rebec>
</state>
<transition source="353_0" destination="360_0" executionTime="10" shift="0"> <messageserver sender="sensor" owner="controller" title="SETCURRENT"/></transition>
<transition source="355_0" destination="307_0" executionTime="10" shift="0"> <messageserver sender="hc_unit" owner="room" title="SETREGULATION"/></transition>
<state id="361_0" atomicpropositions="" >
	<rebec name="room">
		<statevariables>
			<variable name="Room.currentTemp" type="int">22</variable>
			<variable name="Room.currentRegulation" type="int">0</variable>
			<variable name="Room.outside_air" type="int">-1</variable>
		</statevariables>
		<queue>
			<message arrival="10" deadline="infinity" sender="hc_unit">setRegulation(0)</message>
			<message arrival="20" deadline="infinity" sender="room">updateStatus()</message>
		</queue>
		<now>10</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="controller">
		<statevariables>
			<variable name="Controller.currentTemp" type="int">22</variable>
			<variable name="Controller.isHeating" type="boolean">false</variable>
			<variable name="Controller.isCooling" type="boolean">false</variable>
		</statevariables>
		<queue>
			<message arrival="10" deadline="infinity" sender="controller">updateOutput()</message>
		</queue>
		<now>10</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="sensor">
		<statevariables>
		</statevariables>
		<queue>
			<message arrival="12" deadline="infinity" sender="sensor">callSensor()</message>
		</queue>
		<now>10</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="hc_unit">
		<statevariables>
			<variable name="HC_Unit.heaterOn" type="boolean">false</variable>
			<variable name="HC_Unit.coolerOn" type="boolean">false</variable>
			<variable name="HC_Unit.currentRegulation" type="int">0</variable>
		</statevariables>
		<queue>
			<message arrival="15" deadline="infinity" sender="hc_unit">regulateTemp()</message>
		</queue>
		<now>10</now>
		<pc></pc>
		<res></res>
	</rebec>
</state>
<transition source="355_0" destination="361_0" executionTime="10" shift="0"> <messageserver sender="sensor" owner="controller" title="SETCURRENT"/></transition>
<state id="362_0" atomicpropositions="" >
	<rebec name="room">
		<statevariables>
			<variable name="Room.currentTemp" type="int">22</variable>
			<variable name="Room.currentRegulation" type="int">0</variable>
			<variable name="Room.outside_air" type="int">-1</variable>
		</statevariables>
		<queue>
			<message arrival="20" deadline="infinity" sender="room">updateStatus()</message>
		</queue>
		<now>10</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="controller">
		<statevariables>
			<variable name="Controller.currentTemp" type="int">22</variable>
			<variable name="Controller.isHeating" type="boolean">false</variable>
			<variable name="Controller.isCooling" type="boolean">false</variable>
		</statevariables>
		<queue>
		</queue>
		<now>10</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="sensor">
		<statevariables>
		</statevariables>
		<queue>
			<message arrival="12" deadline="infinity" sender="sensor">callSensor()</message>
		</queue>
		<now>10</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="hc_unit">
		<statevariables>
			<variable name="HC_Unit.heaterOn" type="boolean">false</variable>
			<variable name="HC_Unit.coolerOn" type="boolean">false</variable>
			<variable name="HC_Unit.currentRegulation" type="int">0</variable>
		</statevariables>
		<queue>
			<message arrival="10" deadline="infinity" sender="hc_unit">regulateTemp()</message>
		</queue>
		<now>10</now>
		<pc></pc>
		<res></res>
	</rebec>
</state>
<transition source="354_0" destination="362_0" executionTime="10" shift="0"> <messageserver sender="controller" owner="controller" title="UPDATEOUTPUT"/></transition>
<transition source="354_0" destination="361_0" executionTime="10" shift="0"> <messageserver sender="hc_unit" owner="hc_unit" title="REGULATETEMP"/></transition>
<state id="363_0" atomicpropositions="" >
	<rebec name="room">
		<statevariables>
			<variable name="Room.currentTemp" type="int">22</variable>
			<variable name="Room.currentRegulation" type="int">0</variable>
			<variable name="Room.outside_air" type="int">-1</variable>
		</statevariables>
		<queue>
			<message arrival="20" deadline="infinity" sender="room">updateStatus()</message>
		</queue>
		<now>10</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="controller">
		<statevariables>
			<variable name="Controller.currentTemp" type="int">21</variable>
			<variable name="Controller.isHeating" type="boolean">false</variable>
			<variable name="Controller.isCooling" type="boolean">false</variable>
		</statevariables>
		<queue>
		</queue>
		<now>10</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="sensor">
		<statevariables>
		</statevariables>
		<queue>
			<message arrival="12" deadline="infinity" sender="sensor">callSensor()</message>
		</queue>
		<now>10</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="hc_unit">
		<statevariables>
			<variable name="HC_Unit.heaterOn" type="boolean">false</variable>
			<variable name="HC_Unit.coolerOn" type="boolean">false</variable>
			<variable name="HC_Unit.currentRegulation" type="int">0</variable>
		</statevariables>
		<queue>
			<message arrival="10" deadline="infinity" sender="hc_unit">regulateTemp()</message>
		</queue>
		<now>10</now>
		<pc></pc>
		<res></res>
	</rebec>
</state>
<transition source="356_0" destination="363_0" executionTime="10" shift="0"> <messageserver sender="controller" owner="controller" title="UPDATEOUTPUT"/></transition>
<transition source="356_0" destination="254_0" executionTime="10" shift="0"> <messageserver sender="hc_unit" owner="hc_unit" title="REGULATETEMP"/></transition>
<state id="364_0" atomicpropositions="" >
	<rebec name="room">
		<statevariables>
			<variable name="Room.currentTemp" type="int">20</variable>
			<variable name="Room.currentRegulation" type="int">0</variable>
			<variable name="Room.outside_air" type="int">1</variable>
		</statevariables>
		<queue>
			<message arrival="20" deadline="infinity" sender="room">updateStatus()</message>
		</queue>
		<now>10</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="controller">
		<statevariables>
			<variable name="Controller.currentTemp" type="int">21</variable>
			<variable name="Controller.isHeating" type="boolean">false</variable>
			<variable name="Controller.isCooling" type="boolean">false</variable>
		</statevariables>
		<queue>
		</queue>
		<now>10</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="sensor">
		<statevariables>
		</statevariables>
		<queue>
			<message arrival="12" deadline="infinity" sender="sensor">callSensor()</message>
		</queue>
		<now>10</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="hc_unit">
		<statevariables>
			<variable name="HC_Unit.heaterOn" type="boolean">false</variable>
			<variable name="HC_Unit.coolerOn" type="boolean">false</variable>
			<variable name="HC_Unit.currentRegulation" type="int">0</variable>
		</statevariables>
		<queue>
			<message arrival="10" deadline="infinity" sender="hc_unit">regulateTemp()</message>
		</queue>
		<now>10</now>
		<pc></pc>
		<res></res>
	</rebec>
</state>
<transition source="357_0" destination="364_0" executionTime="10" shift="0"> <messageserver sender="controller" owner="controller" title="UPDATEOUTPUT"/></transition>
<transition source="357_0" destination="253_0" executionTime="10" shift="0"> <messageserver sender="hc_unit" owner="hc_unit" title="REGULATETEMP"/></transition>
<transition source="359_0" destination="364_0" executionTime="10" shift="0"> <messageserver sender="room" owner="room" title="UPDATESTATUS"/></transition>
<state id="365_0" atomicpropositions="" >
	<rebec name="room">
		<statevariables>
			<variable name="Room.currentTemp" type="int">21</variable>
			<variable name="Room.currentRegulation" type="int">0</variable>
			<variable name="Room.outside_air" type="int">0</variable>
		</statevariables>
		<queue>
			<message arrival="20" deadline="infinity" sender="room">updateStatus()</message>
		</queue>
		<now>10</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="controller">
		<statevariables>
			<variable name="Controller.currentTemp" type="int">21</variable>
			<variable name="Controller.isHeating" type="boolean">false</variable>
			<variable name="Controller.isCooling" type="boolean">false</variable>
		</statevariables>
		<queue>
		</queue>
		<now>10</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="sensor">
		<statevariables>
		</statevariables>
		<queue>
			<message arrival="12" deadline="infinity" sender="sensor">callSensor()</message>
		</queue>
		<now>10</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="hc_unit">
		<statevariables>
			<variable name="HC_Unit.heaterOn" type="boolean">false</variable>
			<variable name="HC_Unit.coolerOn" type="boolean">false</variable>
			<variable name="HC_Unit.currentRegulation" type="int">0</variable>
		</statevariables>
		<queue>
			<message arrival="10" deadline="infinity" sender="hc_unit">regulateTemp()</message>
		</queue>
		<now>10</now>
		<pc></pc>
		<res></res>
	</rebec>
</state>
<transition source="359_0" destination="365_0" executionTime="10" shift="0"> <messageserver sender="room" owner="room" title="UPDATESTATUS"/></transition>
<transition source="359_0" destination="363_0" executionTime="10" shift="0"> <messageserver sender="room" owner="room" title="UPDATESTATUS"/></transition>
<transition source="359_0" destination="256_0" executionTime="10" shift="0"> <messageserver sender="hc_unit" owner="hc_unit" title="REGULATETEMP"/></transition>
<transition source="360_0" destination="314_0" executionTime="10" shift="0"> <messageserver sender="hc_unit" owner="room" title="SETREGULATION"/></transition>
<state id="366_0" atomicpropositions="" >
	<rebec name="room">
		<statevariables>
			<variable name="Room.currentTemp" type="int">20</variable>
			<variable name="Room.currentRegulation" type="int">0</variable>
			<variable name="Room.outside_air" type="int">1</variable>
		</statevariables>
		<queue>
			<message arrival="10" deadline="infinity" sender="hc_unit">setRegulation(0)</message>
			<message arrival="20" deadline="infinity" sender="room">updateStatus()</message>
		</queue>
		<now>10</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="controller">
		<statevariables>
			<variable name="Controller.currentTemp" type="int">20</variable>
			<variable name="Controller.isHeating" type="boolean">true</variable>
			<variable name="Controller.isCooling" type="boolean">false</variable>
		</statevariables>
		<queue>
		</queue>
		<now>10</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="sensor">
		<statevariables>
		</statevariables>
		<queue>
			<message arrival="12" deadline="infinity" sender="sensor">callSensor()</message>
		</queue>
		<now>10</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="hc_unit">
		<statevariables>
			<variable name="HC_Unit.heaterOn" type="boolean">false</variable>
			<variable name="HC_Unit.coolerOn" type="boolean">false</variable>
			<variable name="HC_Unit.currentRegulation" type="int">0</variable>
		</statevariables>
		<queue>
			<message arrival="10" deadline="infinity" sender="controller">setHeating()</message>
			<message arrival="15" deadline="infinity" sender="hc_unit">regulateTemp()</message>
		</queue>
		<now>10</now>
		<pc></pc>
		<res></res>
	</rebec>
</state>
<transition source="360_0" destination="366_0" executionTime="10" shift="0"> <messageserver sender="controller" owner="controller" title="UPDATEOUTPUT"/></transition>
<transition source="361_0" destination="312_0" executionTime="10" shift="0"> <messageserver sender="hc_unit" owner="room" title="SETREGULATION"/></transition>
<state id="367_0" atomicpropositions="" >
	<rebec name="room">
		<statevariables>
			<variable name="Room.currentTemp" type="int">22</variable>
			<variable name="Room.currentRegulation" type="int">0</variable>
			<variable name="Room.outside_air" type="int">-1</variable>
		</statevariables>
		<queue>
			<message arrival="10" deadline="infinity" sender="hc_unit">setRegulation(0)</message>
			<message arrival="20" deadline="infinity" sender="room">updateStatus()</message>
		</queue>
		<now>10</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="controller">
		<statevariables>
			<variable name="Controller.currentTemp" type="int">22</variable>
			<variable name="Controller.isHeating" type="boolean">false</variable>
			<variable name="Controller.isCooling" type="boolean">false</variable>
		</statevariables>
		<queue>
		</queue>
		<now>10</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="sensor">
		<statevariables>
		</statevariables>
		<queue>
			<message arrival="12" deadline="infinity" sender="sensor">callSensor()</message>
		</queue>
		<now>10</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="hc_unit">
		<statevariables>
			<variable name="HC_Unit.heaterOn" type="boolean">false</variable>
			<variable name="HC_Unit.coolerOn" type="boolean">false</variable>
			<variable name="HC_Unit.currentRegulation" type="int">0</variable>
		</statevariables>
		<queue>
			<message arrival="15" deadline="infinity" sender="hc_unit">regulateTemp()</message>
		</queue>
		<now>10</now>
		<pc></pc>
		<res></res>
	</rebec>
</state>
<transition source="361_0" destination="367_0" executionTime="10" shift="0"> <messageserver sender="controller" owner="controller" title="UPDATEOUTPUT"/></transition>
<transition source="362_0" destination="367_0" executionTime="10" shift="0"> <messageserver sender="hc_unit" owner="hc_unit" title="REGULATETEMP"/></transition>
<transition source="363_0" destination="268_0" executionTime="10" shift="0"> <messageserver sender="hc_unit" owner="hc_unit" title="REGULATETEMP"/></transition>
<transition source="364_0" destination="267_0" executionTime="10" shift="0"> <messageserver sender="hc_unit" owner="hc_unit" title="REGULATETEMP"/></transition>
<transition source="365_0" destination="266_0" executionTime="10" shift="0"> <messageserver sender="hc_unit" owner="hc_unit" title="REGULATETEMP"/></transition>
<transition source="366_0" destination="317_0" executionTime="10" shift="0"> <messageserver sender="hc_unit" owner="room" title="SETREGULATION"/></transition>
<state id="368_0" atomicpropositions="isHeating," >
	<rebec name="room">
		<statevariables>
			<variable name="Room.currentTemp" type="int">20</variable>
			<variable name="Room.currentRegulation" type="int">0</variable>
			<variable name="Room.outside_air" type="int">1</variable>
		</statevariables>
		<queue>
			<message arrival="10" deadline="infinity" sender="hc_unit">setRegulation(0)</message>
			<message arrival="20" deadline="infinity" sender="room">updateStatus()</message>
		</queue>
		<now>10</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="controller">
		<statevariables>
			<variable name="Controller.currentTemp" type="int">20</variable>
			<variable name="Controller.isHeating" type="boolean">true</variable>
			<variable name="Controller.isCooling" type="boolean">false</variable>
		</statevariables>
		<queue>
		</queue>
		<now>10</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="sensor">
		<statevariables>
		</statevariables>
		<queue>
			<message arrival="12" deadline="infinity" sender="sensor">callSensor()</message>
		</queue>
		<now>10</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="hc_unit">
		<statevariables>
			<variable name="HC_Unit.heaterOn" type="boolean">true</variable>
			<variable name="HC_Unit.coolerOn" type="boolean">false</variable>
			<variable name="HC_Unit.currentRegulation" type="int">1</variable>
		</statevariables>
		<queue>
			<message arrival="15" deadline="infinity" sender="hc_unit">regulateTemp()</message>
		</queue>
		<now>10</now>
		<pc></pc>
		<res></res>
	</rebec>
</state>
<transition source="366_0" destination="368_0" executionTime="10" shift="0"> <messageserver sender="controller" owner="hc_unit" title="SETHEATING"/></transition>
<transition source="367_0" destination="315_0" executionTime="10" shift="0"> <messageserver sender="hc_unit" owner="room" title="SETREGULATION"/></transition>
<transition source="358_0" destination="365_0" executionTime="10" shift="0"> <messageserver sender="controller" owner="controller" title="UPDATEOUTPUT"/></transition>
<transition source="358_0" destination="252_0" executionTime="10" shift="0"> <messageserver sender="hc_unit" owner="hc_unit" title="REGULATETEMP"/></transition>
<transition source="351_0" destination="358_0" executionTime="10" shift="0"> <messageserver sender="sensor" owner="controller" title="SETCURRENT"/></transition>
<transition source="351_0" destination="238_0" executionTime="10" shift="0"> <messageserver sender="hc_unit" owner="hc_unit" title="REGULATETEMP"/></transition>
<transition source="368_0" destination="320_0" executionTime="10" shift="0"> <messageserver sender="hc_unit" owner="room" title="SETREGULATION"/></transition>
<state id="369_0" atomicpropositions="" >
	<rebec name="room">
		<statevariables>
			<variable name="Room.currentTemp" type="int">20</variable>
			<variable name="Room.currentRegulation" type="int">0</variable>
			<variable name="Room.outside_air" type="int">1</variable>
		</statevariables>
		<queue>
			<message arrival="20" deadline="infinity" sender="room">updateStatus()</message>
		</queue>
		<now>10</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="controller">
		<statevariables>
			<variable name="Controller.currentTemp" type="int">20</variable>
			<variable name="Controller.isHeating" type="boolean">false</variable>
			<variable name="Controller.isCooling" type="boolean">false</variable>
		</statevariables>
		<queue>
			<message arrival="10" deadline="infinity" sender="controller">updateOutput()</message>
		</queue>
		<now>10</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="sensor">
		<statevariables>
		</statevariables>
		<queue>
			<message arrival="12" deadline="infinity" sender="sensor">callSensor()</message>
		</queue>
		<now>10</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="hc_unit">
		<statevariables>
			<variable name="HC_Unit.heaterOn" type="boolean">false</variable>
			<variable name="HC_Unit.coolerOn" type="boolean">false</variable>
			<variable name="HC_Unit.currentRegulation" type="int">0</variable>
		</statevariables>
		<queue>
			<message arrival="10" deadline="infinity" sender="hc_unit">regulateTemp()</message>
		</queue>
		<now>10</now>
		<pc></pc>
		<res></res>
	</rebec>
</state>
<transition source="345_0" destination="369_0" executionTime="10" shift="0"> <messageserver sender="sensor" owner="controller" title="SETCURRENT"/></transition>
<transition source="345_0" destination="353_0" executionTime="10" shift="0"> <messageserver sender="hc_unit" owner="hc_unit" title="REGULATETEMP"/></transition>
<transition source="341_0" destination="350_0" executionTime="10" shift="0"> <messageserver sender="room" owner="sensor" title="SETCURRENT"/></transition>
<transition source="341_0" destination="225_0" executionTime="10" shift="0"> <messageserver sender="hc_unit" owner="hc_unit" title="REGULATETEMP"/></transition>
<transition source="342_0" destination="351_0" executionTime="10" shift="0"> <messageserver sender="room" owner="sensor" title="SETCURRENT"/></transition>
<transition source="342_0" destination="224_0" executionTime="10" shift="0"> <messageserver sender="hc_unit" owner="hc_unit" title="REGULATETEMP"/></transition>
<state id="370_0" atomicpropositions="" >
	<rebec name="room">
		<statevariables>
			<variable name="Room.currentTemp" type="int">20</variable>
			<variable name="Room.currentRegulation" type="int">0</variable>
			<variable name="Room.outside_air" type="int">1</variable>
		</statevariables>
		<queue>
			<message arrival="20" deadline="infinity" sender="room">updateStatus()</message>
		</queue>
		<now>10</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="controller">
		<statevariables>
			<variable name="Controller.currentTemp" type="int">20</variable>
			<variable name="Controller.isHeating" type="boolean">true</variable>
			<variable name="Controller.isCooling" type="boolean">false</variable>
		</statevariables>
		<queue>
		</queue>
		<now>10</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="sensor">
		<statevariables>
		</statevariables>
		<queue>
			<message arrival="12" deadline="infinity" sender="sensor">callSensor()</message>
		</queue>
		<now>10</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="hc_unit">
		<statevariables>
			<variable name="HC_Unit.heaterOn" type="boolean">false</variable>
			<variable name="HC_Unit.coolerOn" type="boolean">false</variable>
			<variable name="HC_Unit.currentRegulation" type="int">0</variable>
		</statevariables>
		<queue>
			<message arrival="10" deadline="infinity" sender="controller">setHeating()</message>
			<message arrival="10" deadline="infinity" sender="hc_unit">regulateTemp()</message>
		</queue>
		<now>10</now>
		<pc></pc>
		<res></res>
	</rebec>
</state>
<transition source="369_0" destination="370_0" executionTime="10" shift="0"> <messageserver sender="controller" owner="controller" title="UPDATEOUTPUT"/></transition>
<transition source="369_0" destination="360_0" executionTime="10" shift="0"> <messageserver sender="hc_unit" owner="hc_unit" title="REGULATETEMP"/></transition>
<transition source="200_0" destination="297_0" executionTime="10" shift="0"> <messageserver sender="hc_unit" owner="room" title="SETREGULATION"/></transition>
<transition source="200_0" destination="212_0" executionTime="10" shift="0"> <messageserver sender="sensor" owner="sensor" title="CALLSENSOR"/></transition>
<state id="371_0" atomicpropositions="isHeating," >
	<rebec name="room">
		<statevariables>
			<variable name="Room.currentTemp" type="int">20</variable>
			<variable name="Room.currentRegulation" type="int">0</variable>
			<variable name="Room.outside_air" type="int">1</variable>
		</statevariables>
		<queue>
			<message arrival="20" deadline="infinity" sender="room">updateStatus()</message>
		</queue>
		<now>10</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="controller">
		<statevariables>
			<variable name="Controller.currentTemp" type="int">20</variable>
			<variable name="Controller.isHeating" type="boolean">true</variable>
			<variable name="Controller.isCooling" type="boolean">false</variable>
		</statevariables>
		<queue>
		</queue>
		<now>10</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="sensor">
		<statevariables>
		</statevariables>
		<queue>
			<message arrival="12" deadline="infinity" sender="sensor">callSensor()</message>
		</queue>
		<now>10</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="hc_unit">
		<statevariables>
			<variable name="HC_Unit.heaterOn" type="boolean">true</variable>
			<variable name="HC_Unit.coolerOn" type="boolean">false</variable>
			<variable name="HC_Unit.currentRegulation" type="int">1</variable>
		</statevariables>
		<queue>
			<message arrival="10" deadline="infinity" sender="hc_unit">regulateTemp()</message>
		</queue>
		<now>10</now>
		<pc></pc>
		<res></res>
	</rebec>
</state>
<transition source="370_0" destination="371_0" executionTime="10" shift="0"> <messageserver sender="controller" owner="hc_unit" title="SETHEATING"/></transition>
<transition source="370_0" destination="366_0" executionTime="10" shift="0"> <messageserver sender="hc_unit" owner="hc_unit" title="REGULATETEMP"/></transition>
<transition source="218_0" destination="231_0" executionTime="10" shift="0"> <messageserver sender="sensor" owner="sensor" title="CALLSENSOR"/></transition>
<state id="372_0" atomicpropositions="" >
	<rebec name="room">
		<statevariables>
			<variable name="Room.currentTemp" type="int">23</variable>
			<variable name="Room.currentRegulation" type="int">0</variable>
			<variable name="Room.outside_air" type="int">0</variable>
		</statevariables>
		<queue>
			<message arrival="20" deadline="infinity" sender="room">updateStatus()</message>
		</queue>
		<now>10</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="controller">
		<statevariables>
			<variable name="Controller.currentTemp" type="int">23</variable>
			<variable name="Controller.isHeating" type="boolean">false</variable>
			<variable name="Controller.isCooling" type="boolean">false</variable>
		</statevariables>
		<queue>
			<message arrival="10" deadline="infinity" sender="sensor">setCurrent(23)</message>
		</queue>
		<now>10</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="sensor">
		<statevariables>
		</statevariables>
		<queue>
			<message arrival="12" deadline="infinity" sender="sensor">callSensor()</message>
		</queue>
		<now>10</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="hc_unit">
		<statevariables>
			<variable name="HC_Unit.heaterOn" type="boolean">false</variable>
			<variable name="HC_Unit.coolerOn" type="boolean">false</variable>
			<variable name="HC_Unit.currentRegulation" type="int">0</variable>
		</statevariables>
		<queue>
			<message arrival="10" deadline="infinity" sender="hc_unit">regulateTemp()</message>
		</queue>
		<now>10</now>
		<pc></pc>
		<res></res>
	</rebec>
</state>
<transition source="216_0" destination="372_0" executionTime="10" shift="0"> <messageserver sender="room" owner="sensor" title="SETCURRENT"/></transition>
<transition source="216_0" destination="230_0" executionTime="10" shift="0"> <messageserver sender="hc_unit" owner="hc_unit" title="REGULATETEMP"/></transition>
<transition source="198_0" destination="342_0" executionTime="10" shift="0"> <messageserver sender="sensor" owner="room" title="GETTEMP"/></transition>
<transition source="198_0" destination="211_0" executionTime="10" shift="0"> <messageserver sender="hc_unit" owner="hc_unit" title="REGULATETEMP"/></transition>
<state id="373_0" atomicpropositions="isHeating," >
	<rebec name="room">
		<statevariables>
			<variable name="Room.currentTemp" type="int">20</variable>
			<variable name="Room.currentRegulation" type="int">0</variable>
			<variable name="Room.outside_air" type="int">1</variable>
		</statevariables>
		<queue>
			<message arrival="10" deadline="infinity" sender="hc_unit">setRegulation(1)</message>
			<message arrival="20" deadline="infinity" sender="room">updateStatus()</message>
		</queue>
		<now>10</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="controller">
		<statevariables>
			<variable name="Controller.currentTemp" type="int">20</variable>
			<variable name="Controller.isHeating" type="boolean">true</variable>
			<variable name="Controller.isCooling" type="boolean">false</variable>
		</statevariables>
		<queue>
		</queue>
		<now>10</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="sensor">
		<statevariables>
		</statevariables>
		<queue>
			<message arrival="12" deadline="infinity" sender="sensor">callSensor()</message>
		</queue>
		<now>10</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="hc_unit">
		<statevariables>
			<variable name="HC_Unit.heaterOn" type="boolean">true</variable>
			<variable name="HC_Unit.coolerOn" type="boolean">false</variable>
			<variable name="HC_Unit.currentRegulation" type="int">1</variable>
		</statevariables>
		<queue>
			<message arrival="15" deadline="infinity" sender="hc_unit">regulateTemp()</message>
		</queue>
		<now>10</now>
		<pc></pc>
		<res></res>
	</rebec>
</state>
<transition source="371_0" destination="373_0" executionTime="10" shift="0"> <messageserver sender="hc_unit" owner="hc_unit" title="REGULATETEMP"/></transition>
<transition source="214_0" destination="303_0" executionTime="10" shift="0"> <messageserver sender="room" owner="room" title="UPDATESTATUS"/></transition>
<transition source="214_0" destination="223_0" executionTime="10" shift="0"> <messageserver sender="room" owner="room" title="UPDATESTATUS"/></transition>
<transition source="214_0" destination="299_0" executionTime="10" shift="0"> <messageserver sender="room" owner="room" title="UPDATESTATUS"/></transition>
<transition source="214_0" destination="227_0" executionTime="10" shift="0"> <messageserver sender="sensor" owner="room" title="GETTEMP"/></transition>
<state id="374_0" atomicpropositions="" >
	<rebec name="room">
		<statevariables>
			<variable name="Room.currentTemp" type="int">23</variable>
			<variable name="Room.currentRegulation" type="int">0</variable>
			<variable name="Room.outside_air" type="int">0</variable>
		</statevariables>
		<queue>
			<message arrival="20" deadline="infinity" sender="room">updateStatus()</message>
		</queue>
		<now>10</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="controller">
		<statevariables>
			<variable name="Controller.currentTemp" type="int">23</variable>
			<variable name="Controller.isHeating" type="boolean">false</variable>
			<variable name="Controller.isCooling" type="boolean">false</variable>
		</statevariables>
		<queue>
			<message arrival="10" deadline="infinity" sender="controller">updateOutput()</message>
		</queue>
		<now>10</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="sensor">
		<statevariables>
		</statevariables>
		<queue>
			<message arrival="12" deadline="infinity" sender="sensor">callSensor()</message>
		</queue>
		<now>10</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="hc_unit">
		<statevariables>
			<variable name="HC_Unit.heaterOn" type="boolean">false</variable>
			<variable name="HC_Unit.coolerOn" type="boolean">false</variable>
			<variable name="HC_Unit.currentRegulation" type="int">0</variable>
		</statevariables>
		<queue>
			<message arrival="10" deadline="infinity" sender="hc_unit">regulateTemp()</message>
		</queue>
		<now>10</now>
		<pc></pc>
		<res></res>
	</rebec>
</state>
<transition source="372_0" destination="374_0" executionTime="10" shift="0"> <messageserver sender="sensor" owner="controller" title="SETCURRENT"/></transition>
<transition source="372_0" destination="247_0" executionTime="10" shift="0"> <messageserver sender="hc_unit" owner="hc_unit" title="REGULATETEMP"/></transition>
<transition source="213_0" destination="299_0" executionTime="10" shift="0"> <messageserver sender="hc_unit" owner="room" title="SETREGULATION"/></transition>
<transition source="213_0" destination="348_0" executionTime="10" shift="0"> <messageserver sender="sensor" owner="room" title="GETTEMP"/></transition>
<state id="375_0" atomicpropositions="isHeating," >
	<rebec name="room">
		<statevariables>
			<variable name="Room.currentTemp" type="int">20</variable>
			<variable name="Room.currentRegulation" type="int">1</variable>
			<variable name="Room.outside_air" type="int">1</variable>
		</statevariables>
		<queue>
			<message arrival="20" deadline="infinity" sender="room">updateStatus()</message>
		</queue>
		<now>10</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="controller">
		<statevariables>
			<variable name="Controller.currentTemp" type="int">20</variable>
			<variable name="Controller.isHeating" type="boolean">true</variable>
			<variable name="Controller.isCooling" type="boolean">false</variable>
		</statevariables>
		<queue>
		</queue>
		<now>10</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="sensor">
		<statevariables>
		</statevariables>
		<queue>
			<message arrival="12" deadline="infinity" sender="sensor">callSensor()</message>
		</queue>
		<now>10</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="hc_unit">
		<statevariables>
			<variable name="HC_Unit.heaterOn" type="boolean">true</variable>
			<variable name="HC_Unit.coolerOn" type="boolean">false</variable>
			<variable name="HC_Unit.currentRegulation" type="int">1</variable>
		</statevariables>
		<queue>
			<message arrival="15" deadline="infinity" sender="hc_unit">regulateTemp()</message>
		</queue>
		<now>10</now>
		<pc></pc>
		<res></res>
	</rebec>
</state>
<state id="376_0" atomicpropositions="isHeating," >
	<rebec name="room">
		<statevariables>
			<variable name="Room.currentTemp" type="int">20</variable>
			<variable name="Room.currentRegulation" type="int">1</variable>
			<variable name="Room.outside_air" type="int">1</variable>
		</statevariables>
		<queue>
			<message arrival="20" deadline="infinity" sender="room">updateStatus()</message>
		</queue>
		<now>12</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="controller">
		<statevariables>
			<variable name="Controller.currentTemp" type="int">20</variable>
			<variable name="Controller.isHeating" type="boolean">true</variable>
			<variable name="Controller.isCooling" type="boolean">false</variable>
		</statevariables>
		<queue>
		</queue>
		<now>12</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="sensor">
		<statevariables>
		</statevariables>
		<queue>
			<message arrival="12" deadline="infinity" sender="sensor">callSensor()</message>
		</queue>
		<now>12</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="hc_unit">
		<statevariables>
			<variable name="HC_Unit.heaterOn" type="boolean">true</variable>
			<variable name="HC_Unit.coolerOn" type="boolean">false</variable>
			<variable name="HC_Unit.currentRegulation" type="int">1</variable>
		</statevariables>
		<queue>
			<message arrival="15" deadline="infinity" sender="hc_unit">regulateTemp()</message>
		</queue>
		<now>12</now>
		<pc></pc>
		<res></res>
	</rebec>
</state>
<transition source="375_0" destination="376_0" executionTime="10" shift="0"> <time value="2"/></transition>
<transition source="373_0" destination="375_0" executionTime="10" shift="0"> <messageserver sender="hc_unit" owner="room" title="SETREGULATION"/></transition>
<state id="377_0" atomicpropositions="" >
	<rebec name="room">
		<statevariables>
			<variable name="Room.currentTemp" type="int">23</variable>
			<variable name="Room.currentRegulation" type="int">0</variable>
			<variable name="Room.outside_air" type="int">0</variable>
		</statevariables>
		<queue>
			<message arrival="20" deadline="infinity" sender="room">updateStatus()</message>
		</queue>
		<now>10</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="controller">
		<statevariables>
			<variable name="Controller.currentTemp" type="int">23</variable>
			<variable name="Controller.isHeating" type="boolean">false</variable>
			<variable name="Controller.isCooling" type="boolean">false</variable>
		</statevariables>
		<queue>
		</queue>
		<now>10</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="sensor">
		<statevariables>
		</statevariables>
		<queue>
			<message arrival="12" deadline="infinity" sender="sensor">callSensor()</message>
		</queue>
		<now>10</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="hc_unit">
		<statevariables>
			<variable name="HC_Unit.heaterOn" type="boolean">false</variable>
			<variable name="HC_Unit.coolerOn" type="boolean">false</variable>
			<variable name="HC_Unit.currentRegulation" type="int">0</variable>
		</statevariables>
		<queue>
			<message arrival="10" deadline="infinity" sender="hc_unit">regulateTemp()</message>
		</queue>
		<now>10</now>
		<pc></pc>
		<res></res>
	</rebec>
</state>
<transition source="374_0" destination="377_0" executionTime="10" shift="0"> <messageserver sender="controller" owner="controller" title="UPDATEOUTPUT"/></transition>
<transition source="374_0" destination="261_0" executionTime="10" shift="0"> <messageserver sender="hc_unit" owner="hc_unit" title="REGULATETEMP"/></transition>
<transition source="190_0" destination="337_0" executionTime="10" shift="0"> <messageserver sender="sensor" owner="sensor" title="CALLSENSOR"/></transition>
<transition source="190_0" destination="201_0" executionTime="10" shift="0"> <messageserver sender="hc_unit" owner="hc_unit" title="REGULATETEMP"/></transition>
<transition source="196_0" destination="296_0" executionTime="10" shift="0"> <messageserver sender="room" owner="room" title="UPDATESTATUS"/></transition>
<transition source="196_0" destination="204_0" executionTime="10" shift="0"> <messageserver sender="room" owner="room" title="UPDATESTATUS"/></transition>
<state id="378_0" atomicpropositions="" >
	<rebec name="room">
		<statevariables>
			<variable name="Room.currentTemp" type="int">24</variable>
			<variable name="Room.currentRegulation" type="int">0</variable>
			<variable name="Room.outside_air" type="int">-1</variable>
		</statevariables>
		<queue>
			<message arrival="10" deadline="infinity" sender="sensor">getTemp()</message>
			<message arrival="20" deadline="infinity" sender="room">updateStatus()</message>
		</queue>
		<now>10</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="controller">
		<statevariables>
			<variable name="Controller.currentTemp" type="int">23</variable>
			<variable name="Controller.isHeating" type="boolean">false</variable>
			<variable name="Controller.isCooling" type="boolean">false</variable>
		</statevariables>
		<queue>
		</queue>
		<now>10</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="sensor">
		<statevariables>
		</statevariables>
		<queue>
			<message arrival="12" deadline="infinity" sender="sensor">callSensor()</message>
		</queue>
		<now>10</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="hc_unit">
		<statevariables>
			<variable name="HC_Unit.heaterOn" type="boolean">false</variable>
			<variable name="HC_Unit.coolerOn" type="boolean">false</variable>
			<variable name="HC_Unit.currentRegulation" type="int">0</variable>
		</statevariables>
		<queue>
			<message arrival="10" deadline="infinity" sender="hc_unit">regulateTemp()</message>
		</queue>
		<now>10</now>
		<pc></pc>
		<res></res>
	</rebec>
</state>
<transition source="196_0" destination="378_0" executionTime="10" shift="0"> <messageserver sender="room" owner="room" title="UPDATESTATUS"/></transition>
<state id="379_0" atomicpropositions="" >
	<rebec name="room">
		<statevariables>
			<variable name="Room.currentTemp" type="int">23</variable>
			<variable name="Room.currentRegulation" type="int">0</variable>
			<variable name="Room.outside_air" type="int">-1</variable>
		</statevariables>
		<queue>
			<message arrival="10" deadline="infinity" sender="room">updateStatus()</message>
		</queue>
		<now>10</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="controller">
		<statevariables>
			<variable name="Controller.currentTemp" type="int">23</variable>
			<variable name="Controller.isHeating" type="boolean">false</variable>
			<variable name="Controller.isCooling" type="boolean">false</variable>
		</statevariables>
		<queue>
		</queue>
		<now>10</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="sensor">
		<statevariables>
		</statevariables>
		<queue>
			<message arrival="10" deadline="infinity" sender="room">setCurrent(23)</message>
			<message arrival="12" deadline="infinity" sender="sensor">callSensor()</message>
		</queue>
		<now>10</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="hc_unit">
		<statevariables>
			<variable name="HC_Unit.heaterOn" type="boolean">false</variable>
			<variable name="HC_Unit.coolerOn" type="boolean">false</variable>
			<variable name="HC_Unit.currentRegulation" type="int">0</variable>
		</statevariables>
		<queue>
			<message arrival="10" deadline="infinity" sender="hc_unit">regulateTemp()</message>
		</queue>
		<now>10</now>
		<pc></pc>
		<res></res>
	</rebec>
</state>
<transition source="196_0" destination="379_0" executionTime="10" shift="0"> <messageserver sender="sensor" owner="room" title="GETTEMP"/></transition>
<transition source="196_0" destination="209_0" executionTime="10" shift="0"> <messageserver sender="hc_unit" owner="hc_unit" title="REGULATETEMP"/></transition>
<transition source="210_0" destination="223_0" executionTime="10" shift="0"> <messageserver sender="sensor" owner="sensor" title="CALLSENSOR"/></transition>
<transition source="212_0" destination="303_0" executionTime="10" shift="0"> <messageserver sender="hc_unit" owner="room" title="SETREGULATION"/></transition>
<transition source="212_0" destination="346_0" executionTime="10" shift="0"> <messageserver sender="sensor" owner="room" title="GETTEMP"/></transition>
<transition source="377_0" destination="274_0" executionTime="10" shift="0"> <messageserver sender="hc_unit" owner="hc_unit" title="REGULATETEMP"/></transition>
<state id="380_0" atomicpropositions="" >
	<rebec name="room">
		<statevariables>
			<variable name="Room.currentTemp" type="int">24</variable>
			<variable name="Room.currentRegulation" type="int">0</variable>
			<variable name="Room.outside_air" type="int">-1</variable>
		</statevariables>
		<queue>
			<message arrival="20" deadline="infinity" sender="room">updateStatus()</message>
		</queue>
		<now>10</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="controller">
		<statevariables>
			<variable name="Controller.currentTemp" type="int">23</variable>
			<variable name="Controller.isHeating" type="boolean">false</variable>
			<variable name="Controller.isCooling" type="boolean">false</variable>
		</statevariables>
		<queue>
		</queue>
		<now>10</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="sensor">
		<statevariables>
		</statevariables>
		<queue>
			<message arrival="10" deadline="infinity" sender="room">setCurrent(24)</message>
			<message arrival="12" deadline="infinity" sender="sensor">callSensor()</message>
		</queue>
		<now>10</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="hc_unit">
		<statevariables>
			<variable name="HC_Unit.heaterOn" type="boolean">false</variable>
			<variable name="HC_Unit.coolerOn" type="boolean">false</variable>
			<variable name="HC_Unit.currentRegulation" type="int">0</variable>
		</statevariables>
		<queue>
			<message arrival="10" deadline="infinity" sender="hc_unit">regulateTemp()</message>
		</queue>
		<now>10</now>
		<pc></pc>
		<res></res>
	</rebec>
</state>
<transition source="378_0" destination="380_0" executionTime="10" shift="0"> <messageserver sender="sensor" owner="room" title="GETTEMP"/></transition>
<transition source="378_0" destination="220_0" executionTime="10" shift="0"> <messageserver sender="hc_unit" owner="hc_unit" title="REGULATETEMP"/></transition>
<state id="381_0" atomicpropositions="" >
	<rebec name="room">
		<statevariables>
			<variable name="Room.currentTemp" type="int">22</variable>
			<variable name="Room.currentRegulation" type="int">0</variable>
			<variable name="Room.outside_air" type="int">1</variable>
		</statevariables>
		<queue>
			<message arrival="20" deadline="infinity" sender="room">updateStatus()</message>
		</queue>
		<now>10</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="controller">
		<statevariables>
			<variable name="Controller.currentTemp" type="int">23</variable>
			<variable name="Controller.isHeating" type="boolean">false</variable>
			<variable name="Controller.isCooling" type="boolean">false</variable>
		</statevariables>
		<queue>
		</queue>
		<now>10</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="sensor">
		<statevariables>
		</statevariables>
		<queue>
			<message arrival="10" deadline="infinity" sender="room">setCurrent(23)</message>
			<message arrival="12" deadline="infinity" sender="sensor">callSensor()</message>
		</queue>
		<now>10</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="hc_unit">
		<statevariables>
			<variable name="HC_Unit.heaterOn" type="boolean">false</variable>
			<variable name="HC_Unit.coolerOn" type="boolean">false</variable>
			<variable name="HC_Unit.currentRegulation" type="int">0</variable>
		</statevariables>
		<queue>
			<message arrival="10" deadline="infinity" sender="hc_unit">regulateTemp()</message>
		</queue>
		<now>10</now>
		<pc></pc>
		<res></res>
	</rebec>
</state>
<transition source="379_0" destination="381_0" executionTime="10" shift="0"> <messageserver sender="room" owner="room" title="UPDATESTATUS"/></transition>
<transition source="379_0" destination="216_0" executionTime="10" shift="0"> <messageserver sender="room" owner="room" title="UPDATESTATUS"/></transition>
<state id="382_0" atomicpropositions="" >
	<rebec name="room">
		<statevariables>
			<variable name="Room.currentTemp" type="int">24</variable>
			<variable name="Room.currentRegulation" type="int">0</variable>
			<variable name="Room.outside_air" type="int">-1</variable>
		</statevariables>
		<queue>
			<message arrival="20" deadline="infinity" sender="room">updateStatus()</message>
		</queue>
		<now>10</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="controller">
		<statevariables>
			<variable name="Controller.currentTemp" type="int">23</variable>
			<variable name="Controller.isHeating" type="boolean">false</variable>
			<variable name="Controller.isCooling" type="boolean">false</variable>
		</statevariables>
		<queue>
		</queue>
		<now>10</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="sensor">
		<statevariables>
		</statevariables>
		<queue>
			<message arrival="10" deadline="infinity" sender="room">setCurrent(23)</message>
			<message arrival="12" deadline="infinity" sender="sensor">callSensor()</message>
		</queue>
		<now>10</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="hc_unit">
		<statevariables>
			<variable name="HC_Unit.heaterOn" type="boolean">false</variable>
			<variable name="HC_Unit.coolerOn" type="boolean">false</variable>
			<variable name="HC_Unit.currentRegulation" type="int">0</variable>
		</statevariables>
		<queue>
			<message arrival="10" deadline="infinity" sender="hc_unit">regulateTemp()</message>
		</queue>
		<now>10</now>
		<pc></pc>
		<res></res>
	</rebec>
</state>
<transition source="379_0" destination="382_0" executionTime="10" shift="0"> <messageserver sender="room" owner="room" title="UPDATESTATUS"/></transition>
<state id="383_0" atomicpropositions="" >
	<rebec name="room">
		<statevariables>
			<variable name="Room.currentTemp" type="int">23</variable>
			<variable name="Room.currentRegulation" type="int">0</variable>
			<variable name="Room.outside_air" type="int">-1</variable>
		</statevariables>
		<queue>
			<message arrival="10" deadline="infinity" sender="room">updateStatus()</message>
		</queue>
		<now>10</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="controller">
		<statevariables>
			<variable name="Controller.currentTemp" type="int">23</variable>
			<variable name="Controller.isHeating" type="boolean">false</variable>
			<variable name="Controller.isCooling" type="boolean">false</variable>
		</statevariables>
		<queue>
			<message arrival="10" deadline="infinity" sender="sensor">setCurrent(23)</message>
		</queue>
		<now>10</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="sensor">
		<statevariables>
		</statevariables>
		<queue>
			<message arrival="12" deadline="infinity" sender="sensor">callSensor()</message>
		</queue>
		<now>10</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="hc_unit">
		<statevariables>
			<variable name="HC_Unit.heaterOn" type="boolean">false</variable>
			<variable name="HC_Unit.coolerOn" type="boolean">false</variable>
			<variable name="HC_Unit.currentRegulation" type="int">0</variable>
		</statevariables>
		<queue>
			<message arrival="10" deadline="infinity" sender="hc_unit">regulateTemp()</message>
		</queue>
		<now>10</now>
		<pc></pc>
		<res></res>
	</rebec>
</state>
<transition source="379_0" destination="383_0" executionTime="10" shift="0"> <messageserver sender="room" owner="sensor" title="SETCURRENT"/></transition>
<transition source="379_0" destination="222_0" executionTime="10" shift="0"> <messageserver sender="hc_unit" owner="hc_unit" title="REGULATETEMP"/></transition>
<transition source="195_0" destination="378_0" executionTime="10" shift="0"> <messageserver sender="sensor" owner="sensor" title="CALLSENSOR"/></transition>
<transition source="195_0" destination="207_0" executionTime="10" shift="0"> <messageserver sender="hc_unit" owner="hc_unit" title="REGULATETEMP"/></transition>
<state id="384_0" atomicpropositions="" >
	<rebec name="room">
		<statevariables>
			<variable name="Room.currentTemp" type="int">24</variable>
			<variable name="Room.currentRegulation" type="int">0</variable>
			<variable name="Room.outside_air" type="int">-1</variable>
		</statevariables>
		<queue>
			<message arrival="20" deadline="infinity" sender="room">updateStatus()</message>
		</queue>
		<now>10</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="controller">
		<statevariables>
			<variable name="Controller.currentTemp" type="int">23</variable>
			<variable name="Controller.isHeating" type="boolean">false</variable>
			<variable name="Controller.isCooling" type="boolean">false</variable>
		</statevariables>
		<queue>
		</queue>
		<now>10</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="sensor">
		<statevariables>
		</statevariables>
		<queue>
			<message arrival="10" deadline="infinity" sender="sensor">callSensor()</message>
		</queue>
		<now>10</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="hc_unit">
		<statevariables>
			<variable name="HC_Unit.heaterOn" type="boolean">false</variable>
			<variable name="HC_Unit.coolerOn" type="boolean">false</variable>
			<variable name="HC_Unit.currentRegulation" type="int">0</variable>
		</statevariables>
		<queue>
			<message arrival="15" deadline="infinity" sender="hc_unit">regulateTemp()</message>
		</queue>
		<now>10</now>
		<pc></pc>
		<res></res>
	</rebec>
</state>
<transition source="207_0" destination="384_0" executionTime="10" shift="0"> <messageserver sender="hc_unit" owner="room" title="SETREGULATION"/></transition>
<transition source="207_0" destination="220_0" executionTime="10" shift="0"> <messageserver sender="sensor" owner="sensor" title="CALLSENSOR"/></transition>
<transition source="208_0" destination="218_0" executionTime="10" shift="0"> <messageserver sender="room" owner="room" title="UPDATESTATUS"/></transition>
<transition source="208_0" destination="291_0" executionTime="10" shift="0"> <messageserver sender="room" owner="room" title="UPDATESTATUS"/></transition>
<transition source="208_0" destination="384_0" executionTime="10" shift="0"> <messageserver sender="room" owner="room" title="UPDATESTATUS"/></transition>
<transition source="208_0" destination="221_0" executionTime="10" shift="0"> <messageserver sender="sensor" owner="sensor" title="CALLSENSOR"/></transition>
<state id="385_0" atomicpropositions="" >
	<rebec name="room">
		<statevariables>
			<variable name="Room.currentTemp" type="int">22</variable>
			<variable name="Room.currentRegulation" type="int">0</variable>
			<variable name="Room.outside_air" type="int">1</variable>
		</statevariables>
		<queue>
			<message arrival="20" deadline="infinity" sender="room">updateStatus()</message>
		</queue>
		<now>10</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="controller">
		<statevariables>
			<variable name="Controller.currentTemp" type="int">23</variable>
			<variable name="Controller.isHeating" type="boolean">false</variable>
			<variable name="Controller.isCooling" type="boolean">false</variable>
		</statevariables>
		<queue>
			<message arrival="10" deadline="infinity" sender="sensor">setCurrent(23)</message>
		</queue>
		<now>10</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="sensor">
		<statevariables>
		</statevariables>
		<queue>
			<message arrival="12" deadline="infinity" sender="sensor">callSensor()</message>
		</queue>
		<now>10</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="hc_unit">
		<statevariables>
			<variable name="HC_Unit.heaterOn" type="boolean">false</variable>
			<variable name="HC_Unit.coolerOn" type="boolean">false</variable>
			<variable name="HC_Unit.currentRegulation" type="int">0</variable>
		</statevariables>
		<queue>
			<message arrival="10" deadline="infinity" sender="hc_unit">regulateTemp()</message>
		</queue>
		<now>10</now>
		<pc></pc>
		<res></res>
	</rebec>
</state>
<transition source="383_0" destination="385_0" executionTime="10" shift="0"> <messageserver sender="room" owner="room" title="UPDATESTATUS"/></transition>
<transition source="383_0" destination="372_0" executionTime="10" shift="0"> <messageserver sender="room" owner="room" title="UPDATESTATUS"/></transition>
<state id="386_0" atomicpropositions="" >
	<rebec name="room">
		<statevariables>
			<variable name="Room.currentTemp" type="int">24</variable>
			<variable name="Room.currentRegulation" type="int">0</variable>
			<variable name="Room.outside_air" type="int">-1</variable>
		</statevariables>
		<queue>
			<message arrival="20" deadline="infinity" sender="room">updateStatus()</message>
		</queue>
		<now>10</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="controller">
		<statevariables>
			<variable name="Controller.currentTemp" type="int">23</variable>
			<variable name="Controller.isHeating" type="boolean">false</variable>
			<variable name="Controller.isCooling" type="boolean">false</variable>
		</statevariables>
		<queue>
			<message arrival="10" deadline="infinity" sender="sensor">setCurrent(23)</message>
		</queue>
		<now>10</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="sensor">
		<statevariables>
		</statevariables>
		<queue>
			<message arrival="12" deadline="infinity" sender="sensor">callSensor()</message>
		</queue>
		<now>10</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="hc_unit">
		<statevariables>
			<variable name="HC_Unit.heaterOn" type="boolean">false</variable>
			<variable name="HC_Unit.coolerOn" type="boolean">false</variable>
			<variable name="HC_Unit.currentRegulation" type="int">0</variable>
		</statevariables>
		<queue>
			<message arrival="10" deadline="infinity" sender="hc_unit">regulateTemp()</message>
		</queue>
		<now>10</now>
		<pc></pc>
		<res></res>
	</rebec>
</state>
<transition source="383_0" destination="386_0" executionTime="10" shift="0"> <messageserver sender="room" owner="room" title="UPDATESTATUS"/></transition>
<state id="387_0" atomicpropositions="" >
	<rebec name="room">
		<statevariables>
			<variable name="Room.currentTemp" type="int">23</variable>
			<variable name="Room.currentRegulation" type="int">0</variable>
			<variable name="Room.outside_air" type="int">-1</variable>
		</statevariables>
		<queue>
			<message arrival="10" deadline="infinity" sender="room">updateStatus()</message>
		</queue>
		<now>10</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="controller">
		<statevariables>
			<variable name="Controller.currentTemp" type="int">23</variable>
			<variable name="Controller.isHeating" type="boolean">false</variable>
			<variable name="Controller.isCooling" type="boolean">false</variable>
		</statevariables>
		<queue>
			<message arrival="10" deadline="infinity" sender="controller">updateOutput()</message>
		</queue>
		<now>10</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="sensor">
		<statevariables>
		</statevariables>
		<queue>
			<message arrival="12" deadline="infinity" sender="sensor">callSensor()</message>
		</queue>
		<now>10</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="hc_unit">
		<statevariables>
			<variable name="HC_Unit.heaterOn" type="boolean">false</variable>
			<variable name="HC_Unit.coolerOn" type="boolean">false</variable>
			<variable name="HC_Unit.currentRegulation" type="int">0</variable>
		</statevariables>
		<queue>
			<message arrival="10" deadline="infinity" sender="hc_unit">regulateTemp()</message>
		</queue>
		<now>10</now>
		<pc></pc>
		<res></res>
	</rebec>
</state>
<transition source="383_0" destination="387_0" executionTime="10" shift="0"> <messageserver sender="sensor" owner="controller" title="SETCURRENT"/></transition>
<transition source="383_0" destination="236_0" executionTime="10" shift="0"> <messageserver sender="hc_unit" owner="hc_unit" title="REGULATETEMP"/></transition>
<state id="388_0" atomicpropositions="" >
	<rebec name="room">
		<statevariables>
			<variable name="Room.currentTemp" type="int">24</variable>
			<variable name="Room.currentRegulation" type="int">0</variable>
			<variable name="Room.outside_air" type="int">-1</variable>
		</statevariables>
		<queue>
			<message arrival="20" deadline="infinity" sender="room">updateStatus()</message>
		</queue>
		<now>10</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="controller">
		<statevariables>
			<variable name="Controller.currentTemp" type="int">23</variable>
			<variable name="Controller.isHeating" type="boolean">false</variable>
			<variable name="Controller.isCooling" type="boolean">false</variable>
		</statevariables>
		<queue>
			<message arrival="10" deadline="infinity" sender="sensor">setCurrent(24)</message>
		</queue>
		<now>10</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="sensor">
		<statevariables>
		</statevariables>
		<queue>
			<message arrival="12" deadline="infinity" sender="sensor">callSensor()</message>
		</queue>
		<now>10</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="hc_unit">
		<statevariables>
			<variable name="HC_Unit.heaterOn" type="boolean">false</variable>
			<variable name="HC_Unit.coolerOn" type="boolean">false</variable>
			<variable name="HC_Unit.currentRegulation" type="int">0</variable>
		</statevariables>
		<queue>
			<message arrival="10" deadline="infinity" sender="hc_unit">regulateTemp()</message>
		</queue>
		<now>10</now>
		<pc></pc>
		<res></res>
	</rebec>
</state>
<transition source="380_0" destination="388_0" executionTime="10" shift="0"> <messageserver sender="room" owner="sensor" title="SETCURRENT"/></transition>
<transition source="380_0" destination="325_0" executionTime="10" shift="0"> <messageserver sender="hc_unit" owner="hc_unit" title="REGULATETEMP"/></transition>
<transition source="381_0" destination="385_0" executionTime="10" shift="0"> <messageserver sender="room" owner="sensor" title="SETCURRENT"/></transition>
<transition source="381_0" destination="233_0" executionTime="10" shift="0"> <messageserver sender="hc_unit" owner="hc_unit" title="REGULATETEMP"/></transition>
<transition source="382_0" destination="386_0" executionTime="10" shift="0"> <messageserver sender="room" owner="sensor" title="SETCURRENT"/></transition>
<transition source="382_0" destination="234_0" executionTime="10" shift="0"> <messageserver sender="hc_unit" owner="hc_unit" title="REGULATETEMP"/></transition>
<state id="389_0" atomicpropositions="" >
	<rebec name="room">
		<statevariables>
			<variable name="Room.currentTemp" type="int">22</variable>
			<variable name="Room.currentRegulation" type="int">0</variable>
			<variable name="Room.outside_air" type="int">1</variable>
		</statevariables>
		<queue>
			<message arrival="20" deadline="infinity" sender="room">updateStatus()</message>
		</queue>
		<now>10</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="controller">
		<statevariables>
			<variable name="Controller.currentTemp" type="int">23</variable>
			<variable name="Controller.isHeating" type="boolean">false</variable>
			<variable name="Controller.isCooling" type="boolean">false</variable>
		</statevariables>
		<queue>
			<message arrival="10" deadline="infinity" sender="controller">updateOutput()</message>
		</queue>
		<now>10</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="sensor">
		<statevariables>
		</statevariables>
		<queue>
			<message arrival="12" deadline="infinity" sender="sensor">callSensor()</message>
		</queue>
		<now>10</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="hc_unit">
		<statevariables>
			<variable name="HC_Unit.heaterOn" type="boolean">false</variable>
			<variable name="HC_Unit.coolerOn" type="boolean">false</variable>
			<variable name="HC_Unit.currentRegulation" type="int">0</variable>
		</statevariables>
		<queue>
			<message arrival="10" deadline="infinity" sender="hc_unit">regulateTemp()</message>
		</queue>
		<now>10</now>
		<pc></pc>
		<res></res>
	</rebec>
</state>
<transition source="387_0" destination="389_0" executionTime="10" shift="0"> <messageserver sender="room" owner="room" title="UPDATESTATUS"/></transition>
<transition source="387_0" destination="374_0" executionTime="10" shift="0"> <messageserver sender="room" owner="room" title="UPDATESTATUS"/></transition>
<state id="390_0" atomicpropositions="" >
	<rebec name="room">
		<statevariables>
			<variable name="Room.currentTemp" type="int">24</variable>
			<variable name="Room.currentRegulation" type="int">0</variable>
			<variable name="Room.outside_air" type="int">-1</variable>
		</statevariables>
		<queue>
			<message arrival="20" deadline="infinity" sender="room">updateStatus()</message>
		</queue>
		<now>10</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="controller">
		<statevariables>
			<variable name="Controller.currentTemp" type="int">23</variable>
			<variable name="Controller.isHeating" type="boolean">false</variable>
			<variable name="Controller.isCooling" type="boolean">false</variable>
		</statevariables>
		<queue>
			<message arrival="10" deadline="infinity" sender="controller">updateOutput()</message>
		</queue>
		<now>10</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="sensor">
		<statevariables>
		</statevariables>
		<queue>
			<message arrival="12" deadline="infinity" sender="sensor">callSensor()</message>
		</queue>
		<now>10</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="hc_unit">
		<statevariables>
			<variable name="HC_Unit.heaterOn" type="boolean">false</variable>
			<variable name="HC_Unit.coolerOn" type="boolean">false</variable>
			<variable name="HC_Unit.currentRegulation" type="int">0</variable>
		</statevariables>
		<queue>
			<message arrival="10" deadline="infinity" sender="hc_unit">regulateTemp()</message>
		</queue>
		<now>10</now>
		<pc></pc>
		<res></res>
	</rebec>
</state>
<transition source="387_0" destination="390_0" executionTime="10" shift="0"> <messageserver sender="room" owner="room" title="UPDATESTATUS"/></transition>
<state id="391_0" atomicpropositions="" >
	<rebec name="room">
		<statevariables>
			<variable name="Room.currentTemp" type="int">23</variable>
			<variable name="Room.currentRegulation" type="int">0</variable>
			<variable name="Room.outside_air" type="int">-1</variable>
		</statevariables>
		<queue>
			<message arrival="10" deadline="infinity" sender="room">updateStatus()</message>
		</queue>
		<now>10</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="controller">
		<statevariables>
			<variable name="Controller.currentTemp" type="int">23</variable>
			<variable name="Controller.isHeating" type="boolean">false</variable>
			<variable name="Controller.isCooling" type="boolean">false</variable>
		</statevariables>
		<queue>
		</queue>
		<now>10</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="sensor">
		<statevariables>
		</statevariables>
		<queue>
			<message arrival="12" deadline="infinity" sender="sensor">callSensor()</message>
		</queue>
		<now>10</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="hc_unit">
		<statevariables>
			<variable name="HC_Unit.heaterOn" type="boolean">false</variable>
			<variable name="HC_Unit.coolerOn" type="boolean">false</variable>
			<variable name="HC_Unit.currentRegulation" type="int">0</variable>
		</statevariables>
		<queue>
			<message arrival="10" deadline="infinity" sender="hc_unit">regulateTemp()</message>
		</queue>
		<now>10</now>
		<pc></pc>
		<res></res>
	</rebec>
</state>
<transition source="387_0" destination="391_0" executionTime="10" shift="0"> <messageserver sender="controller" owner="controller" title="UPDATEOUTPUT"/></transition>
<transition source="387_0" destination="250_0" executionTime="10" shift="0"> <messageserver sender="hc_unit" owner="hc_unit" title="REGULATETEMP"/></transition>
<state id="392_0" atomicpropositions="" >
	<rebec name="room">
		<statevariables>
			<variable name="Room.currentTemp" type="int">24</variable>
			<variable name="Room.currentRegulation" type="int">0</variable>
			<variable name="Room.outside_air" type="int">-1</variable>
		</statevariables>
		<queue>
			<message arrival="20" deadline="infinity" sender="room">updateStatus()</message>
		</queue>
		<now>10</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="controller">
		<statevariables>
			<variable name="Controller.currentTemp" type="int">24</variable>
			<variable name="Controller.isHeating" type="boolean">false</variable>
			<variable name="Controller.isCooling" type="boolean">false</variable>
		</statevariables>
		<queue>
			<message arrival="10" deadline="infinity" sender="controller">updateOutput()</message>
		</queue>
		<now>10</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="sensor">
		<statevariables>
		</statevariables>
		<queue>
			<message arrival="12" deadline="infinity" sender="sensor">callSensor()</message>
		</queue>
		<now>10</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="hc_unit">
		<statevariables>
			<variable name="HC_Unit.heaterOn" type="boolean">false</variable>
			<variable name="HC_Unit.coolerOn" type="boolean">false</variable>
			<variable name="HC_Unit.currentRegulation" type="int">0</variable>
		</statevariables>
		<queue>
			<message arrival="10" deadline="infinity" sender="hc_unit">regulateTemp()</message>
		</queue>
		<now>10</now>
		<pc></pc>
		<res></res>
	</rebec>
</state>
<transition source="388_0" destination="392_0" executionTime="10" shift="0"> <messageserver sender="sensor" owner="controller" title="SETCURRENT"/></transition>
<transition source="388_0" destination="327_0" executionTime="10" shift="0"> <messageserver sender="hc_unit" owner="hc_unit" title="REGULATETEMP"/></transition>
<transition source="384_0" destination="324_0" executionTime="10" shift="0"> <messageserver sender="sensor" owner="sensor" title="CALLSENSOR"/></transition>
<transition source="385_0" destination="389_0" executionTime="10" shift="0"> <messageserver sender="sensor" owner="controller" title="SETCURRENT"/></transition>
<transition source="385_0" destination="246_0" executionTime="10" shift="0"> <messageserver sender="hc_unit" owner="hc_unit" title="REGULATETEMP"/></transition>
<state id="393_0" atomicpropositions="" >
	<rebec name="room">
		<statevariables>
			<variable name="Room.currentTemp" type="int">22</variable>
			<variable name="Room.currentRegulation" type="int">0</variable>
			<variable name="Room.outside_air" type="int">1</variable>
		</statevariables>
		<queue>
			<message arrival="20" deadline="infinity" sender="room">updateStatus()</message>
		</queue>
		<now>10</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="controller">
		<statevariables>
			<variable name="Controller.currentTemp" type="int">23</variable>
			<variable name="Controller.isHeating" type="boolean">false</variable>
			<variable name="Controller.isCooling" type="boolean">false</variable>
		</statevariables>
		<queue>
		</queue>
		<now>10</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="sensor">
		<statevariables>
		</statevariables>
		<queue>
			<message arrival="12" deadline="infinity" sender="sensor">callSensor()</message>
		</queue>
		<now>10</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="hc_unit">
		<statevariables>
			<variable name="HC_Unit.heaterOn" type="boolean">false</variable>
			<variable name="HC_Unit.coolerOn" type="boolean">false</variable>
			<variable name="HC_Unit.currentRegulation" type="int">0</variable>
		</statevariables>
		<queue>
			<message arrival="10" deadline="infinity" sender="hc_unit">regulateTemp()</message>
		</queue>
		<now>10</now>
		<pc></pc>
		<res></res>
	</rebec>
</state>
<transition source="391_0" destination="393_0" executionTime="10" shift="0"> <messageserver sender="room" owner="room" title="UPDATESTATUS"/></transition>
<transition source="391_0" destination="377_0" executionTime="10" shift="0"> <messageserver sender="room" owner="room" title="UPDATESTATUS"/></transition>
<state id="394_0" atomicpropositions="" >
	<rebec name="room">
		<statevariables>
			<variable name="Room.currentTemp" type="int">24</variable>
			<variable name="Room.currentRegulation" type="int">0</variable>
			<variable name="Room.outside_air" type="int">-1</variable>
		</statevariables>
		<queue>
			<message arrival="20" deadline="infinity" sender="room">updateStatus()</message>
		</queue>
		<now>10</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="controller">
		<statevariables>
			<variable name="Controller.currentTemp" type="int">23</variable>
			<variable name="Controller.isHeating" type="boolean">false</variable>
			<variable name="Controller.isCooling" type="boolean">false</variable>
		</statevariables>
		<queue>
		</queue>
		<now>10</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="sensor">
		<statevariables>
		</statevariables>
		<queue>
			<message arrival="12" deadline="infinity" sender="sensor">callSensor()</message>
		</queue>
		<now>10</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="hc_unit">
		<statevariables>
			<variable name="HC_Unit.heaterOn" type="boolean">false</variable>
			<variable name="HC_Unit.coolerOn" type="boolean">false</variable>
			<variable name="HC_Unit.currentRegulation" type="int">0</variable>
		</statevariables>
		<queue>
			<message arrival="10" deadline="infinity" sender="hc_unit">regulateTemp()</message>
		</queue>
		<now>10</now>
		<pc></pc>
		<res></res>
	</rebec>
</state>
<transition source="391_0" destination="394_0" executionTime="10" shift="0"> <messageserver sender="room" owner="room" title="UPDATESTATUS"/></transition>
<transition source="391_0" destination="264_0" executionTime="10" shift="0"> <messageserver sender="hc_unit" owner="hc_unit" title="REGULATETEMP"/></transition>
<state id="395_0" atomicpropositions="" >
	<rebec name="room">
		<statevariables>
			<variable name="Room.currentTemp" type="int">24</variable>
			<variable name="Room.currentRegulation" type="int">0</variable>
			<variable name="Room.outside_air" type="int">-1</variable>
		</statevariables>
		<queue>
			<message arrival="20" deadline="infinity" sender="room">updateStatus()</message>
		</queue>
		<now>10</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="controller">
		<statevariables>
			<variable name="Controller.currentTemp" type="int">24</variable>
			<variable name="Controller.isHeating" type="boolean">false</variable>
			<variable name="Controller.isCooling" type="boolean">true</variable>
		</statevariables>
		<queue>
		</queue>
		<now>10</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="sensor">
		<statevariables>
		</statevariables>
		<queue>
			<message arrival="12" deadline="infinity" sender="sensor">callSensor()</message>
		</queue>
		<now>10</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="hc_unit">
		<statevariables>
			<variable name="HC_Unit.heaterOn" type="boolean">false</variable>
			<variable name="HC_Unit.coolerOn" type="boolean">false</variable>
			<variable name="HC_Unit.currentRegulation" type="int">0</variable>
		</statevariables>
		<queue>
			<message arrival="10" deadline="infinity" sender="controller">setCooling()</message>
			<message arrival="10" deadline="infinity" sender="hc_unit">regulateTemp()</message>
		</queue>
		<now>10</now>
		<pc></pc>
		<res></res>
	</rebec>
</state>
<transition source="392_0" destination="395_0" executionTime="10" shift="0"> <messageserver sender="controller" owner="controller" title="UPDATEOUTPUT"/></transition>
<transition source="392_0" destination="329_0" executionTime="10" shift="0"> <messageserver sender="hc_unit" owner="hc_unit" title="REGULATETEMP"/></transition>
<transition source="386_0" destination="390_0" executionTime="10" shift="0"> <messageserver sender="sensor" owner="controller" title="SETCURRENT"/></transition>
<transition source="386_0" destination="248_0" executionTime="10" shift="0"> <messageserver sender="hc_unit" owner="hc_unit" title="REGULATETEMP"/></transition>
<transition source="389_0" destination="393_0" executionTime="10" shift="0"> <messageserver sender="controller" owner="controller" title="UPDATEOUTPUT"/></transition>
<transition source="389_0" destination="260_0" executionTime="10" shift="0"> <messageserver sender="hc_unit" owner="hc_unit" title="REGULATETEMP"/></transition>
<transition source="390_0" destination="394_0" executionTime="10" shift="0"> <messageserver sender="controller" owner="controller" title="UPDATEOUTPUT"/></transition>
<transition source="390_0" destination="262_0" executionTime="10" shift="0"> <messageserver sender="hc_unit" owner="hc_unit" title="REGULATETEMP"/></transition>
<transition source="393_0" destination="273_0" executionTime="10" shift="0"> <messageserver sender="hc_unit" owner="hc_unit" title="REGULATETEMP"/></transition>
<transition source="394_0" destination="275_0" executionTime="10" shift="0"> <messageserver sender="hc_unit" owner="hc_unit" title="REGULATETEMP"/></transition>
<state id="396_0" atomicpropositions="isCooling," >
	<rebec name="room">
		<statevariables>
			<variable name="Room.currentTemp" type="int">24</variable>
			<variable name="Room.currentRegulation" type="int">0</variable>
			<variable name="Room.outside_air" type="int">-1</variable>
		</statevariables>
		<queue>
			<message arrival="20" deadline="infinity" sender="room">updateStatus()</message>
		</queue>
		<now>10</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="controller">
		<statevariables>
			<variable name="Controller.currentTemp" type="int">24</variable>
			<variable name="Controller.isHeating" type="boolean">false</variable>
			<variable name="Controller.isCooling" type="boolean">true</variable>
		</statevariables>
		<queue>
		</queue>
		<now>10</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="sensor">
		<statevariables>
		</statevariables>
		<queue>
			<message arrival="12" deadline="infinity" sender="sensor">callSensor()</message>
		</queue>
		<now>10</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="hc_unit">
		<statevariables>
			<variable name="HC_Unit.heaterOn" type="boolean">false</variable>
			<variable name="HC_Unit.coolerOn" type="boolean">true</variable>
			<variable name="HC_Unit.currentRegulation" type="int">-1</variable>
		</statevariables>
		<queue>
			<message arrival="10" deadline="infinity" sender="hc_unit">regulateTemp()</message>
		</queue>
		<now>10</now>
		<pc></pc>
		<res></res>
	</rebec>
</state>
<transition source="395_0" destination="396_0" executionTime="10" shift="0"> <messageserver sender="controller" owner="hc_unit" title="SETCOOLING"/></transition>
<transition source="395_0" destination="331_0" executionTime="10" shift="0"> <messageserver sender="hc_unit" owner="hc_unit" title="REGULATETEMP"/></transition>
<state id="397_0" atomicpropositions="isCooling," >
	<rebec name="room">
		<statevariables>
			<variable name="Room.currentTemp" type="int">24</variable>
			<variable name="Room.currentRegulation" type="int">0</variable>
			<variable name="Room.outside_air" type="int">-1</variable>
		</statevariables>
		<queue>
			<message arrival="10" deadline="infinity" sender="hc_unit">setRegulation(-1)</message>
			<message arrival="20" deadline="infinity" sender="room">updateStatus()</message>
		</queue>
		<now>10</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="controller">
		<statevariables>
			<variable name="Controller.currentTemp" type="int">24</variable>
			<variable name="Controller.isHeating" type="boolean">false</variable>
			<variable name="Controller.isCooling" type="boolean">true</variable>
		</statevariables>
		<queue>
		</queue>
		<now>10</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="sensor">
		<statevariables>
		</statevariables>
		<queue>
			<message arrival="12" deadline="infinity" sender="sensor">callSensor()</message>
		</queue>
		<now>10</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="hc_unit">
		<statevariables>
			<variable name="HC_Unit.heaterOn" type="boolean">false</variable>
			<variable name="HC_Unit.coolerOn" type="boolean">true</variable>
			<variable name="HC_Unit.currentRegulation" type="int">-1</variable>
		</statevariables>
		<queue>
			<message arrival="15" deadline="infinity" sender="hc_unit">regulateTemp()</message>
		</queue>
		<now>10</now>
		<pc></pc>
		<res></res>
	</rebec>
</state>
<transition source="396_0" destination="397_0" executionTime="10" shift="0"> <messageserver sender="hc_unit" owner="hc_unit" title="REGULATETEMP"/></transition>
<state id="398_0" atomicpropositions="isCooling," >
	<rebec name="room">
		<statevariables>
			<variable name="Room.currentTemp" type="int">24</variable>
			<variable name="Room.currentRegulation" type="int">-1</variable>
			<variable name="Room.outside_air" type="int">-1</variable>
		</statevariables>
		<queue>
			<message arrival="20" deadline="infinity" sender="room">updateStatus()</message>
		</queue>
		<now>10</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="controller">
		<statevariables>
			<variable name="Controller.currentTemp" type="int">24</variable>
			<variable name="Controller.isHeating" type="boolean">false</variable>
			<variable name="Controller.isCooling" type="boolean">true</variable>
		</statevariables>
		<queue>
		</queue>
		<now>10</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="sensor">
		<statevariables>
		</statevariables>
		<queue>
			<message arrival="12" deadline="infinity" sender="sensor">callSensor()</message>
		</queue>
		<now>10</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="hc_unit">
		<statevariables>
			<variable name="HC_Unit.heaterOn" type="boolean">false</variable>
			<variable name="HC_Unit.coolerOn" type="boolean">true</variable>
			<variable name="HC_Unit.currentRegulation" type="int">-1</variable>
		</statevariables>
		<queue>
			<message arrival="15" deadline="infinity" sender="hc_unit">regulateTemp()</message>
		</queue>
		<now>10</now>
		<pc></pc>
		<res></res>
	</rebec>
</state>
<state id="399_0" atomicpropositions="isCooling," >
	<rebec name="room">
		<statevariables>
			<variable name="Room.currentTemp" type="int">24</variable>
			<variable name="Room.currentRegulation" type="int">-1</variable>
			<variable name="Room.outside_air" type="int">-1</variable>
		</statevariables>
		<queue>
			<message arrival="20" deadline="infinity" sender="room">updateStatus()</message>
		</queue>
		<now>12</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="controller">
		<statevariables>
			<variable name="Controller.currentTemp" type="int">24</variable>
			<variable name="Controller.isHeating" type="boolean">false</variable>
			<variable name="Controller.isCooling" type="boolean">true</variable>
		</statevariables>
		<queue>
		</queue>
		<now>12</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="sensor">
		<statevariables>
		</statevariables>
		<queue>
			<message arrival="12" deadline="infinity" sender="sensor">callSensor()</message>
		</queue>
		<now>12</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="hc_unit">
		<statevariables>
			<variable name="HC_Unit.heaterOn" type="boolean">false</variable>
			<variable name="HC_Unit.coolerOn" type="boolean">true</variable>
			<variable name="HC_Unit.currentRegulation" type="int">-1</variable>
		</statevariables>
		<queue>
			<message arrival="15" deadline="infinity" sender="hc_unit">regulateTemp()</message>
		</queue>
		<now>12</now>
		<pc></pc>
		<res></res>
	</rebec>
</state>
<transition source="398_0" destination="399_0" executionTime="10" shift="0"> <time value="2"/></transition>
<transition source="397_0" destination="398_0" executionTime="10" shift="0"> <messageserver sender="hc_unit" owner="room" title="SETREGULATION"/></transition>
<state id="400_0" atomicpropositions="" >
	<rebec name="room">
		<statevariables>
			<variable name="Room.currentTemp" type="int">21</variable>
			<variable name="Room.currentRegulation" type="int">0</variable>
			<variable name="Room.outside_air" type="int">0</variable>
		</statevariables>
		<queue>
			<message arrival="12" deadline="infinity" sender="sensor">getTemp()</message>
			<message arrival="20" deadline="infinity" sender="room">updateStatus()</message>
		</queue>
		<now>12</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="controller">
		<statevariables>
			<variable name="Controller.currentTemp" type="int">21</variable>
			<variable name="Controller.isHeating" type="boolean">false</variable>
			<variable name="Controller.isCooling" type="boolean">false</variable>
		</statevariables>
		<queue>
		</queue>
		<now>12</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="sensor">
		<statevariables>
		</statevariables>
		<queue>
			<message arrival="14" deadline="infinity" sender="sensor">callSensor()</message>
		</queue>
		<now>12</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="hc_unit">
		<statevariables>
			<variable name="HC_Unit.heaterOn" type="boolean">false</variable>
			<variable name="HC_Unit.coolerOn" type="boolean">false</variable>
			<variable name="HC_Unit.currentRegulation" type="int">0</variable>
		</statevariables>
		<queue>
			<message arrival="15" deadline="infinity" sender="hc_unit">regulateTemp()</message>
		</queue>
		<now>12</now>
		<pc></pc>
		<res></res>
	</rebec>
</state>
<transition source="278_0" destination="400_0" executionTime="12" shift="0"> <messageserver sender="sensor" owner="sensor" title="CALLSENSOR"/></transition>
<state id="401_0" atomicpropositions="" >
	<rebec name="room">
		<statevariables>
			<variable name="Room.currentTemp" type="int">22</variable>
			<variable name="Room.currentRegulation" type="int">0</variable>
			<variable name="Room.outside_air" type="int">-1</variable>
		</statevariables>
		<queue>
			<message arrival="12" deadline="infinity" sender="sensor">getTemp()</message>
			<message arrival="20" deadline="infinity" sender="room">updateStatus()</message>
		</queue>
		<now>12</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="controller">
		<statevariables>
			<variable name="Controller.currentTemp" type="int">21</variable>
			<variable name="Controller.isHeating" type="boolean">false</variable>
			<variable name="Controller.isCooling" type="boolean">false</variable>
		</statevariables>
		<queue>
		</queue>
		<now>12</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="sensor">
		<statevariables>
		</statevariables>
		<queue>
			<message arrival="14" deadline="infinity" sender="sensor">callSensor()</message>
		</queue>
		<now>12</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="hc_unit">
		<statevariables>
			<variable name="HC_Unit.heaterOn" type="boolean">false</variable>
			<variable name="HC_Unit.coolerOn" type="boolean">false</variable>
			<variable name="HC_Unit.currentRegulation" type="int">0</variable>
		</statevariables>
		<queue>
			<message arrival="15" deadline="infinity" sender="hc_unit">regulateTemp()</message>
		</queue>
		<now>12</now>
		<pc></pc>
		<res></res>
	</rebec>
</state>
<transition source="282_0" destination="401_0" executionTime="12" shift="0"> <messageserver sender="sensor" owner="sensor" title="CALLSENSOR"/></transition>
<state id="402_0" atomicpropositions="" >
	<rebec name="room">
		<statevariables>
			<variable name="Room.currentTemp" type="int">22</variable>
			<variable name="Room.currentRegulation" type="int">0</variable>
			<variable name="Room.outside_air" type="int">-1</variable>
		</statevariables>
		<queue>
			<message arrival="12" deadline="infinity" sender="sensor">getTemp()</message>
			<message arrival="20" deadline="infinity" sender="room">updateStatus()</message>
		</queue>
		<now>12</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="controller">
		<statevariables>
			<variable name="Controller.currentTemp" type="int">22</variable>
			<variable name="Controller.isHeating" type="boolean">false</variable>
			<variable name="Controller.isCooling" type="boolean">false</variable>
		</statevariables>
		<queue>
		</queue>
		<now>12</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="sensor">
		<statevariables>
		</statevariables>
		<queue>
			<message arrival="14" deadline="infinity" sender="sensor">callSensor()</message>
		</queue>
		<now>12</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="hc_unit">
		<statevariables>
			<variable name="HC_Unit.heaterOn" type="boolean">false</variable>
			<variable name="HC_Unit.coolerOn" type="boolean">false</variable>
			<variable name="HC_Unit.currentRegulation" type="int">0</variable>
		</statevariables>
		<queue>
			<message arrival="15" deadline="infinity" sender="hc_unit">regulateTemp()</message>
		</queue>
		<now>12</now>
		<pc></pc>
		<res></res>
	</rebec>
</state>
<transition source="316_0" destination="402_0" executionTime="12" shift="0"> <messageserver sender="sensor" owner="sensor" title="CALLSENSOR"/></transition>
<state id="403_0" atomicpropositions="isCooling," >
	<rebec name="room">
		<statevariables>
			<variable name="Room.currentTemp" type="int">24</variable>
			<variable name="Room.currentRegulation" type="int">-1</variable>
			<variable name="Room.outside_air" type="int">-1</variable>
		</statevariables>
		<queue>
			<message arrival="12" deadline="infinity" sender="sensor">getTemp()</message>
			<message arrival="20" deadline="infinity" sender="room">updateStatus()</message>
		</queue>
		<now>12</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="controller">
		<statevariables>
			<variable name="Controller.currentTemp" type="int">24</variable>
			<variable name="Controller.isHeating" type="boolean">false</variable>
			<variable name="Controller.isCooling" type="boolean">true</variable>
		</statevariables>
		<queue>
		</queue>
		<now>12</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="sensor">
		<statevariables>
		</statevariables>
		<queue>
			<message arrival="14" deadline="infinity" sender="sensor">callSensor()</message>
		</queue>
		<now>12</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="hc_unit">
		<statevariables>
			<variable name="HC_Unit.heaterOn" type="boolean">false</variable>
			<variable name="HC_Unit.coolerOn" type="boolean">true</variable>
			<variable name="HC_Unit.currentRegulation" type="int">-1</variable>
		</statevariables>
		<queue>
			<message arrival="15" deadline="infinity" sender="hc_unit">regulateTemp()</message>
		</queue>
		<now>12</now>
		<pc></pc>
		<res></res>
	</rebec>
</state>
<transition source="399_0" destination="403_0" executionTime="12" shift="0"> <messageserver sender="sensor" owner="sensor" title="CALLSENSOR"/></transition>
<state id="404_0" atomicpropositions="" >
	<rebec name="room">
		<statevariables>
			<variable name="Room.currentTemp" type="int">21</variable>
			<variable name="Room.currentRegulation" type="int">0</variable>
			<variable name="Room.outside_air" type="int">0</variable>
		</statevariables>
		<queue>
			<message arrival="20" deadline="infinity" sender="room">updateStatus()</message>
		</queue>
		<now>12</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="controller">
		<statevariables>
			<variable name="Controller.currentTemp" type="int">21</variable>
			<variable name="Controller.isHeating" type="boolean">false</variable>
			<variable name="Controller.isCooling" type="boolean">false</variable>
		</statevariables>
		<queue>
		</queue>
		<now>12</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="sensor">
		<statevariables>
		</statevariables>
		<queue>
			<message arrival="12" deadline="infinity" sender="room">setCurrent(21)</message>
			<message arrival="14" deadline="infinity" sender="sensor">callSensor()</message>
		</queue>
		<now>12</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="hc_unit">
		<statevariables>
			<variable name="HC_Unit.heaterOn" type="boolean">false</variable>
			<variable name="HC_Unit.coolerOn" type="boolean">false</variable>
			<variable name="HC_Unit.currentRegulation" type="int">0</variable>
		</statevariables>
		<queue>
			<message arrival="15" deadline="infinity" sender="hc_unit">regulateTemp()</message>
		</queue>
		<now>12</now>
		<pc></pc>
		<res></res>
	</rebec>
</state>
<transition source="400_0" destination="404_0" executionTime="12" shift="0"> <messageserver sender="sensor" owner="room" title="GETTEMP"/></transition>
<state id="405_0" atomicpropositions="" >
	<rebec name="room">
		<statevariables>
			<variable name="Room.currentTemp" type="int">22</variable>
			<variable name="Room.currentRegulation" type="int">0</variable>
			<variable name="Room.outside_air" type="int">-1</variable>
		</statevariables>
		<queue>
			<message arrival="20" deadline="infinity" sender="room">updateStatus()</message>
		</queue>
		<now>12</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="controller">
		<statevariables>
			<variable name="Controller.currentTemp" type="int">21</variable>
			<variable name="Controller.isHeating" type="boolean">false</variable>
			<variable name="Controller.isCooling" type="boolean">false</variable>
		</statevariables>
		<queue>
		</queue>
		<now>12</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="sensor">
		<statevariables>
		</statevariables>
		<queue>
			<message arrival="12" deadline="infinity" sender="room">setCurrent(22)</message>
			<message arrival="14" deadline="infinity" sender="sensor">callSensor()</message>
		</queue>
		<now>12</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="hc_unit">
		<statevariables>
			<variable name="HC_Unit.heaterOn" type="boolean">false</variable>
			<variable name="HC_Unit.coolerOn" type="boolean">false</variable>
			<variable name="HC_Unit.currentRegulation" type="int">0</variable>
		</statevariables>
		<queue>
			<message arrival="15" deadline="infinity" sender="hc_unit">regulateTemp()</message>
		</queue>
		<now>12</now>
		<pc></pc>
		<res></res>
	</rebec>
</state>
<transition source="401_0" destination="405_0" executionTime="12" shift="0"> <messageserver sender="sensor" owner="room" title="GETTEMP"/></transition>
<state id="406_0" atomicpropositions="" >
	<rebec name="room">
		<statevariables>
			<variable name="Room.currentTemp" type="int">22</variable>
			<variable name="Room.currentRegulation" type="int">0</variable>
			<variable name="Room.outside_air" type="int">-1</variable>
		</statevariables>
		<queue>
			<message arrival="20" deadline="infinity" sender="room">updateStatus()</message>
		</queue>
		<now>12</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="controller">
		<statevariables>
			<variable name="Controller.currentTemp" type="int">22</variable>
			<variable name="Controller.isHeating" type="boolean">false</variable>
			<variable name="Controller.isCooling" type="boolean">false</variable>
		</statevariables>
		<queue>
		</queue>
		<now>12</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="sensor">
		<statevariables>
		</statevariables>
		<queue>
			<message arrival="12" deadline="infinity" sender="room">setCurrent(22)</message>
			<message arrival="14" deadline="infinity" sender="sensor">callSensor()</message>
		</queue>
		<now>12</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="hc_unit">
		<statevariables>
			<variable name="HC_Unit.heaterOn" type="boolean">false</variable>
			<variable name="HC_Unit.coolerOn" type="boolean">false</variable>
			<variable name="HC_Unit.currentRegulation" type="int">0</variable>
		</statevariables>
		<queue>
			<message arrival="15" deadline="infinity" sender="hc_unit">regulateTemp()</message>
		</queue>
		<now>12</now>
		<pc></pc>
		<res></res>
	</rebec>
</state>
<transition source="402_0" destination="406_0" executionTime="12" shift="0"> <messageserver sender="sensor" owner="room" title="GETTEMP"/></transition>
<state id="407_0" atomicpropositions="isCooling," >
	<rebec name="room">
		<statevariables>
			<variable name="Room.currentTemp" type="int">24</variable>
			<variable name="Room.currentRegulation" type="int">-1</variable>
			<variable name="Room.outside_air" type="int">-1</variable>
		</statevariables>
		<queue>
			<message arrival="20" deadline="infinity" sender="room">updateStatus()</message>
		</queue>
		<now>12</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="controller">
		<statevariables>
			<variable name="Controller.currentTemp" type="int">24</variable>
			<variable name="Controller.isHeating" type="boolean">false</variable>
			<variable name="Controller.isCooling" type="boolean">true</variable>
		</statevariables>
		<queue>
		</queue>
		<now>12</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="sensor">
		<statevariables>
		</statevariables>
		<queue>
			<message arrival="12" deadline="infinity" sender="room">setCurrent(24)</message>
			<message arrival="14" deadline="infinity" sender="sensor">callSensor()</message>
		</queue>
		<now>12</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="hc_unit">
		<statevariables>
			<variable name="HC_Unit.heaterOn" type="boolean">false</variable>
			<variable name="HC_Unit.coolerOn" type="boolean">true</variable>
			<variable name="HC_Unit.currentRegulation" type="int">-1</variable>
		</statevariables>
		<queue>
			<message arrival="15" deadline="infinity" sender="hc_unit">regulateTemp()</message>
		</queue>
		<now>12</now>
		<pc></pc>
		<res></res>
	</rebec>
</state>
<transition source="403_0" destination="407_0" executionTime="12" shift="0"> <messageserver sender="sensor" owner="room" title="GETTEMP"/></transition>
<state id="408_0" atomicpropositions="" >
	<rebec name="room">
		<statevariables>
			<variable name="Room.currentTemp" type="int">21</variable>
			<variable name="Room.currentRegulation" type="int">0</variable>
			<variable name="Room.outside_air" type="int">0</variable>
		</statevariables>
		<queue>
			<message arrival="20" deadline="infinity" sender="room">updateStatus()</message>
		</queue>
		<now>12</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="controller">
		<statevariables>
			<variable name="Controller.currentTemp" type="int">21</variable>
			<variable name="Controller.isHeating" type="boolean">false</variable>
			<variable name="Controller.isCooling" type="boolean">false</variable>
		</statevariables>
		<queue>
			<message arrival="12" deadline="infinity" sender="sensor">setCurrent(21)</message>
		</queue>
		<now>12</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="sensor">
		<statevariables>
		</statevariables>
		<queue>
			<message arrival="14" deadline="infinity" sender="sensor">callSensor()</message>
		</queue>
		<now>12</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="hc_unit">
		<statevariables>
			<variable name="HC_Unit.heaterOn" type="boolean">false</variable>
			<variable name="HC_Unit.coolerOn" type="boolean">false</variable>
			<variable name="HC_Unit.currentRegulation" type="int">0</variable>
		</statevariables>
		<queue>
			<message arrival="15" deadline="infinity" sender="hc_unit">regulateTemp()</message>
		</queue>
		<now>12</now>
		<pc></pc>
		<res></res>
	</rebec>
</state>
<transition source="404_0" destination="408_0" executionTime="12" shift="0"> <messageserver sender="room" owner="sensor" title="SETCURRENT"/></transition>
<state id="409_0" atomicpropositions="" >
	<rebec name="room">
		<statevariables>
			<variable name="Room.currentTemp" type="int">22</variable>
			<variable name="Room.currentRegulation" type="int">0</variable>
			<variable name="Room.outside_air" type="int">-1</variable>
		</statevariables>
		<queue>
			<message arrival="20" deadline="infinity" sender="room">updateStatus()</message>
		</queue>
		<now>12</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="controller">
		<statevariables>
			<variable name="Controller.currentTemp" type="int">21</variable>
			<variable name="Controller.isHeating" type="boolean">false</variable>
			<variable name="Controller.isCooling" type="boolean">false</variable>
		</statevariables>
		<queue>
			<message arrival="12" deadline="infinity" sender="sensor">setCurrent(22)</message>
		</queue>
		<now>12</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="sensor">
		<statevariables>
		</statevariables>
		<queue>
			<message arrival="14" deadline="infinity" sender="sensor">callSensor()</message>
		</queue>
		<now>12</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="hc_unit">
		<statevariables>
			<variable name="HC_Unit.heaterOn" type="boolean">false</variable>
			<variable name="HC_Unit.coolerOn" type="boolean">false</variable>
			<variable name="HC_Unit.currentRegulation" type="int">0</variable>
		</statevariables>
		<queue>
			<message arrival="15" deadline="infinity" sender="hc_unit">regulateTemp()</message>
		</queue>
		<now>12</now>
		<pc></pc>
		<res></res>
	</rebec>
</state>
<transition source="405_0" destination="409_0" executionTime="12" shift="0"> <messageserver sender="room" owner="sensor" title="SETCURRENT"/></transition>
<state id="410_0" atomicpropositions="" >
	<rebec name="room">
		<statevariables>
			<variable name="Room.currentTemp" type="int">22</variable>
			<variable name="Room.currentRegulation" type="int">0</variable>
			<variable name="Room.outside_air" type="int">-1</variable>
		</statevariables>
		<queue>
			<message arrival="20" deadline="infinity" sender="room">updateStatus()</message>
		</queue>
		<now>12</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="controller">
		<statevariables>
			<variable name="Controller.currentTemp" type="int">22</variable>
			<variable name="Controller.isHeating" type="boolean">false</variable>
			<variable name="Controller.isCooling" type="boolean">false</variable>
		</statevariables>
		<queue>
			<message arrival="12" deadline="infinity" sender="sensor">setCurrent(22)</message>
		</queue>
		<now>12</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="sensor">
		<statevariables>
		</statevariables>
		<queue>
			<message arrival="14" deadline="infinity" sender="sensor">callSensor()</message>
		</queue>
		<now>12</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="hc_unit">
		<statevariables>
			<variable name="HC_Unit.heaterOn" type="boolean">false</variable>
			<variable name="HC_Unit.coolerOn" type="boolean">false</variable>
			<variable name="HC_Unit.currentRegulation" type="int">0</variable>
		</statevariables>
		<queue>
			<message arrival="15" deadline="infinity" sender="hc_unit">regulateTemp()</message>
		</queue>
		<now>12</now>
		<pc></pc>
		<res></res>
	</rebec>
</state>
<transition source="406_0" destination="410_0" executionTime="12" shift="0"> <messageserver sender="room" owner="sensor" title="SETCURRENT"/></transition>
<state id="411_0" atomicpropositions="isCooling," >
	<rebec name="room">
		<statevariables>
			<variable name="Room.currentTemp" type="int">24</variable>
			<variable name="Room.currentRegulation" type="int">-1</variable>
			<variable name="Room.outside_air" type="int">-1</variable>
		</statevariables>
		<queue>
			<message arrival="20" deadline="infinity" sender="room">updateStatus()</message>
		</queue>
		<now>12</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="controller">
		<statevariables>
			<variable name="Controller.currentTemp" type="int">24</variable>
			<variable name="Controller.isHeating" type="boolean">false</variable>
			<variable name="Controller.isCooling" type="boolean">true</variable>
		</statevariables>
		<queue>
			<message arrival="12" deadline="infinity" sender="sensor">setCurrent(24)</message>
		</queue>
		<now>12</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="sensor">
		<statevariables>
		</statevariables>
		<queue>
			<message arrival="14" deadline="infinity" sender="sensor">callSensor()</message>
		</queue>
		<now>12</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="hc_unit">
		<statevariables>
			<variable name="HC_Unit.heaterOn" type="boolean">false</variable>
			<variable name="HC_Unit.coolerOn" type="boolean">true</variable>
			<variable name="HC_Unit.currentRegulation" type="int">-1</variable>
		</statevariables>
		<queue>
			<message arrival="15" deadline="infinity" sender="hc_unit">regulateTemp()</message>
		</queue>
		<now>12</now>
		<pc></pc>
		<res></res>
	</rebec>
</state>
<transition source="407_0" destination="411_0" executionTime="12" shift="0"> <messageserver sender="room" owner="sensor" title="SETCURRENT"/></transition>
<state id="412_0" atomicpropositions="" >
	<rebec name="room">
		<statevariables>
			<variable name="Room.currentTemp" type="int">21</variable>
			<variable name="Room.currentRegulation" type="int">0</variable>
			<variable name="Room.outside_air" type="int">0</variable>
		</statevariables>
		<queue>
			<message arrival="20" deadline="infinity" sender="room">updateStatus()</message>
		</queue>
		<now>12</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="controller">
		<statevariables>
			<variable name="Controller.currentTemp" type="int">21</variable>
			<variable name="Controller.isHeating" type="boolean">false</variable>
			<variable name="Controller.isCooling" type="boolean">false</variable>
		</statevariables>
		<queue>
			<message arrival="12" deadline="infinity" sender="controller">updateOutput()</message>
		</queue>
		<now>12</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="sensor">
		<statevariables>
		</statevariables>
		<queue>
			<message arrival="14" deadline="infinity" sender="sensor">callSensor()</message>
		</queue>
		<now>12</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="hc_unit">
		<statevariables>
			<variable name="HC_Unit.heaterOn" type="boolean">false</variable>
			<variable name="HC_Unit.coolerOn" type="boolean">false</variable>
			<variable name="HC_Unit.currentRegulation" type="int">0</variable>
		</statevariables>
		<queue>
			<message arrival="15" deadline="infinity" sender="hc_unit">regulateTemp()</message>
		</queue>
		<now>12</now>
		<pc></pc>
		<res></res>
	</rebec>
</state>
<transition source="408_0" destination="412_0" executionTime="12" shift="0"> <messageserver sender="sensor" owner="controller" title="SETCURRENT"/></transition>
<state id="413_0" atomicpropositions="" >
	<rebec name="room">
		<statevariables>
			<variable name="Room.currentTemp" type="int">22</variable>
			<variable name="Room.currentRegulation" type="int">0</variable>
			<variable name="Room.outside_air" type="int">-1</variable>
		</statevariables>
		<queue>
			<message arrival="20" deadline="infinity" sender="room">updateStatus()</message>
		</queue>
		<now>12</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="controller">
		<statevariables>
			<variable name="Controller.currentTemp" type="int">22</variable>
			<variable name="Controller.isHeating" type="boolean">false</variable>
			<variable name="Controller.isCooling" type="boolean">false</variable>
		</statevariables>
		<queue>
			<message arrival="12" deadline="infinity" sender="controller">updateOutput()</message>
		</queue>
		<now>12</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="sensor">
		<statevariables>
		</statevariables>
		<queue>
			<message arrival="14" deadline="infinity" sender="sensor">callSensor()</message>
		</queue>
		<now>12</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="hc_unit">
		<statevariables>
			<variable name="HC_Unit.heaterOn" type="boolean">false</variable>
			<variable name="HC_Unit.coolerOn" type="boolean">false</variable>
			<variable name="HC_Unit.currentRegulation" type="int">0</variable>
		</statevariables>
		<queue>
			<message arrival="15" deadline="infinity" sender="hc_unit">regulateTemp()</message>
		</queue>
		<now>12</now>
		<pc></pc>
		<res></res>
	</rebec>
</state>
<transition source="409_0" destination="413_0" executionTime="12" shift="0"> <messageserver sender="sensor" owner="controller" title="SETCURRENT"/></transition>
<transition source="410_0" destination="413_0" executionTime="12" shift="0"> <messageserver sender="sensor" owner="controller" title="SETCURRENT"/></transition>
<state id="414_0" atomicpropositions="isCooling," >
	<rebec name="room">
		<statevariables>
			<variable name="Room.currentTemp" type="int">24</variable>
			<variable name="Room.currentRegulation" type="int">-1</variable>
			<variable name="Room.outside_air" type="int">-1</variable>
		</statevariables>
		<queue>
			<message arrival="20" deadline="infinity" sender="room">updateStatus()</message>
		</queue>
		<now>12</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="controller">
		<statevariables>
			<variable name="Controller.currentTemp" type="int">24</variable>
			<variable name="Controller.isHeating" type="boolean">false</variable>
			<variable name="Controller.isCooling" type="boolean">true</variable>
		</statevariables>
		<queue>
			<message arrival="12" deadline="infinity" sender="controller">updateOutput()</message>
		</queue>
		<now>12</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="sensor">
		<statevariables>
		</statevariables>
		<queue>
			<message arrival="14" deadline="infinity" sender="sensor">callSensor()</message>
		</queue>
		<now>12</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="hc_unit">
		<statevariables>
			<variable name="HC_Unit.heaterOn" type="boolean">false</variable>
			<variable name="HC_Unit.coolerOn" type="boolean">true</variable>
			<variable name="HC_Unit.currentRegulation" type="int">-1</variable>
		</statevariables>
		<queue>
			<message arrival="15" deadline="infinity" sender="hc_unit">regulateTemp()</message>
		</queue>
		<now>12</now>
		<pc></pc>
		<res></res>
	</rebec>
</state>
<transition source="411_0" destination="414_0" executionTime="12" shift="0"> <messageserver sender="sensor" owner="controller" title="SETCURRENT"/></transition>
<state id="415_0" atomicpropositions="" >
	<rebec name="room">
		<statevariables>
			<variable name="Room.currentTemp" type="int">21</variable>
			<variable name="Room.currentRegulation" type="int">0</variable>
			<variable name="Room.outside_air" type="int">0</variable>
		</statevariables>
		<queue>
			<message arrival="20" deadline="infinity" sender="room">updateStatus()</message>
		</queue>
		<now>12</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="controller">
		<statevariables>
			<variable name="Controller.currentTemp" type="int">21</variable>
			<variable name="Controller.isHeating" type="boolean">false</variable>
			<variable name="Controller.isCooling" type="boolean">false</variable>
		</statevariables>
		<queue>
		</queue>
		<now>12</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="sensor">
		<statevariables>
		</statevariables>
		<queue>
			<message arrival="14" deadline="infinity" sender="sensor">callSensor()</message>
		</queue>
		<now>12</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="hc_unit">
		<statevariables>
			<variable name="HC_Unit.heaterOn" type="boolean">false</variable>
			<variable name="HC_Unit.coolerOn" type="boolean">false</variable>
			<variable name="HC_Unit.currentRegulation" type="int">0</variable>
		</statevariables>
		<queue>
			<message arrival="15" deadline="infinity" sender="hc_unit">regulateTemp()</message>
		</queue>
		<now>12</now>
		<pc></pc>
		<res></res>
	</rebec>
</state>
<state id="416_0" atomicpropositions="" >
	<rebec name="room">
		<statevariables>
			<variable name="Room.currentTemp" type="int">21</variable>
			<variable name="Room.currentRegulation" type="int">0</variable>
			<variable name="Room.outside_air" type="int">0</variable>
		</statevariables>
		<queue>
			<message arrival="20" deadline="infinity" sender="room">updateStatus()</message>
		</queue>
		<now>14</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="controller">
		<statevariables>
			<variable name="Controller.currentTemp" type="int">21</variable>
			<variable name="Controller.isHeating" type="boolean">false</variable>
			<variable name="Controller.isCooling" type="boolean">false</variable>
		</statevariables>
		<queue>
		</queue>
		<now>14</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="sensor">
		<statevariables>
		</statevariables>
		<queue>
			<message arrival="14" deadline="infinity" sender="sensor">callSensor()</message>
		</queue>
		<now>14</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="hc_unit">
		<statevariables>
			<variable name="HC_Unit.heaterOn" type="boolean">false</variable>
			<variable name="HC_Unit.coolerOn" type="boolean">false</variable>
			<variable name="HC_Unit.currentRegulation" type="int">0</variable>
		</statevariables>
		<queue>
			<message arrival="15" deadline="infinity" sender="hc_unit">regulateTemp()</message>
		</queue>
		<now>14</now>
		<pc></pc>
		<res></res>
	</rebec>
</state>
<transition source="415_0" destination="416_0" executionTime="12" shift="0"> <time value="2"/></transition>
<transition source="412_0" destination="415_0" executionTime="12" shift="0"> <messageserver sender="controller" owner="controller" title="UPDATEOUTPUT"/></transition>
<state id="417_0" atomicpropositions="" >
	<rebec name="room">
		<statevariables>
			<variable name="Room.currentTemp" type="int">22</variable>
			<variable name="Room.currentRegulation" type="int">0</variable>
			<variable name="Room.outside_air" type="int">-1</variable>
		</statevariables>
		<queue>
			<message arrival="20" deadline="infinity" sender="room">updateStatus()</message>
		</queue>
		<now>12</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="controller">
		<statevariables>
			<variable name="Controller.currentTemp" type="int">22</variable>
			<variable name="Controller.isHeating" type="boolean">false</variable>
			<variable name="Controller.isCooling" type="boolean">false</variable>
		</statevariables>
		<queue>
		</queue>
		<now>12</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="sensor">
		<statevariables>
		</statevariables>
		<queue>
			<message arrival="14" deadline="infinity" sender="sensor">callSensor()</message>
		</queue>
		<now>12</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="hc_unit">
		<statevariables>
			<variable name="HC_Unit.heaterOn" type="boolean">false</variable>
			<variable name="HC_Unit.coolerOn" type="boolean">false</variable>
			<variable name="HC_Unit.currentRegulation" type="int">0</variable>
		</statevariables>
		<queue>
			<message arrival="15" deadline="infinity" sender="hc_unit">regulateTemp()</message>
		</queue>
		<now>12</now>
		<pc></pc>
		<res></res>
	</rebec>
</state>
<state id="418_0" atomicpropositions="" >
	<rebec name="room">
		<statevariables>
			<variable name="Room.currentTemp" type="int">22</variable>
			<variable name="Room.currentRegulation" type="int">0</variable>
			<variable name="Room.outside_air" type="int">-1</variable>
		</statevariables>
		<queue>
			<message arrival="20" deadline="infinity" sender="room">updateStatus()</message>
		</queue>
		<now>14</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="controller">
		<statevariables>
			<variable name="Controller.currentTemp" type="int">22</variable>
			<variable name="Controller.isHeating" type="boolean">false</variable>
			<variable name="Controller.isCooling" type="boolean">false</variable>
		</statevariables>
		<queue>
		</queue>
		<now>14</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="sensor">
		<statevariables>
		</statevariables>
		<queue>
			<message arrival="14" deadline="infinity" sender="sensor">callSensor()</message>
		</queue>
		<now>14</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="hc_unit">
		<statevariables>
			<variable name="HC_Unit.heaterOn" type="boolean">false</variable>
			<variable name="HC_Unit.coolerOn" type="boolean">false</variable>
			<variable name="HC_Unit.currentRegulation" type="int">0</variable>
		</statevariables>
		<queue>
			<message arrival="15" deadline="infinity" sender="hc_unit">regulateTemp()</message>
		</queue>
		<now>14</now>
		<pc></pc>
		<res></res>
	</rebec>
</state>
<transition source="417_0" destination="418_0" executionTime="12" shift="0"> <time value="2"/></transition>
<transition source="413_0" destination="417_0" executionTime="12" shift="0"> <messageserver sender="controller" owner="controller" title="UPDATEOUTPUT"/></transition>
<state id="419_0" atomicpropositions="" >
	<rebec name="room">
		<statevariables>
			<variable name="Room.currentTemp" type="int">23</variable>
			<variable name="Room.currentRegulation" type="int">0</variable>
			<variable name="Room.outside_air" type="int">0</variable>
		</statevariables>
		<queue>
			<message arrival="12" deadline="infinity" sender="sensor">getTemp()</message>
			<message arrival="20" deadline="infinity" sender="room">updateStatus()</message>
		</queue>
		<now>12</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="controller">
		<statevariables>
			<variable name="Controller.currentTemp" type="int">23</variable>
			<variable name="Controller.isHeating" type="boolean">false</variable>
			<variable name="Controller.isCooling" type="boolean">false</variable>
		</statevariables>
		<queue>
		</queue>
		<now>12</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="sensor">
		<statevariables>
		</statevariables>
		<queue>
			<message arrival="14" deadline="infinity" sender="sensor">callSensor()</message>
		</queue>
		<now>12</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="hc_unit">
		<statevariables>
			<variable name="HC_Unit.heaterOn" type="boolean">false</variable>
			<variable name="HC_Unit.coolerOn" type="boolean">false</variable>
			<variable name="HC_Unit.currentRegulation" type="int">0</variable>
		</statevariables>
		<queue>
			<message arrival="15" deadline="infinity" sender="hc_unit">regulateTemp()</message>
		</queue>
		<now>12</now>
		<pc></pc>
		<res></res>
	</rebec>
</state>
<transition source="284_0" destination="419_0" executionTime="12" shift="0"> <messageserver sender="sensor" owner="sensor" title="CALLSENSOR"/></transition>
<state id="420_0" atomicpropositions="isCooling," >
	<rebec name="room">
		<statevariables>
			<variable name="Room.currentTemp" type="int">24</variable>
			<variable name="Room.currentRegulation" type="int">-1</variable>
			<variable name="Room.outside_air" type="int">-1</variable>
		</statevariables>
		<queue>
			<message arrival="20" deadline="infinity" sender="room">updateStatus()</message>
		</queue>
		<now>12</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="controller">
		<statevariables>
			<variable name="Controller.currentTemp" type="int">24</variable>
			<variable name="Controller.isHeating" type="boolean">false</variable>
			<variable name="Controller.isCooling" type="boolean">true</variable>
		</statevariables>
		<queue>
		</queue>
		<now>12</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="sensor">
		<statevariables>
		</statevariables>
		<queue>
			<message arrival="14" deadline="infinity" sender="sensor">callSensor()</message>
		</queue>
		<now>12</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="hc_unit">
		<statevariables>
			<variable name="HC_Unit.heaterOn" type="boolean">false</variable>
			<variable name="HC_Unit.coolerOn" type="boolean">true</variable>
			<variable name="HC_Unit.currentRegulation" type="int">-1</variable>
		</statevariables>
		<queue>
			<message arrival="15" deadline="infinity" sender="hc_unit">regulateTemp()</message>
		</queue>
		<now>12</now>
		<pc></pc>
		<res></res>
	</rebec>
</state>
<state id="421_0" atomicpropositions="isCooling," >
	<rebec name="room">
		<statevariables>
			<variable name="Room.currentTemp" type="int">24</variable>
			<variable name="Room.currentRegulation" type="int">-1</variable>
			<variable name="Room.outside_air" type="int">-1</variable>
		</statevariables>
		<queue>
			<message arrival="20" deadline="infinity" sender="room">updateStatus()</message>
		</queue>
		<now>14</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="controller">
		<statevariables>
			<variable name="Controller.currentTemp" type="int">24</variable>
			<variable name="Controller.isHeating" type="boolean">false</variable>
			<variable name="Controller.isCooling" type="boolean">true</variable>
		</statevariables>
		<queue>
		</queue>
		<now>14</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="sensor">
		<statevariables>
		</statevariables>
		<queue>
			<message arrival="14" deadline="infinity" sender="sensor">callSensor()</message>
		</queue>
		<now>14</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="hc_unit">
		<statevariables>
			<variable name="HC_Unit.heaterOn" type="boolean">false</variable>
			<variable name="HC_Unit.coolerOn" type="boolean">true</variable>
			<variable name="HC_Unit.currentRegulation" type="int">-1</variable>
		</statevariables>
		<queue>
			<message arrival="15" deadline="infinity" sender="hc_unit">regulateTemp()</message>
		</queue>
		<now>14</now>
		<pc></pc>
		<res></res>
	</rebec>
</state>
<transition source="420_0" destination="421_0" executionTime="12" shift="0"> <time value="2"/></transition>
<transition source="414_0" destination="420_0" executionTime="12" shift="0"> <messageserver sender="controller" owner="controller" title="UPDATEOUTPUT"/></transition>
<state id="422_0" atomicpropositions="isHeating," >
	<rebec name="room">
		<statevariables>
			<variable name="Room.currentTemp" type="int">20</variable>
			<variable name="Room.currentRegulation" type="int">0</variable>
			<variable name="Room.outside_air" type="int">1</variable>
		</statevariables>
		<queue>
			<message arrival="12" deadline="infinity" sender="sensor">getTemp()</message>
			<message arrival="20" deadline="infinity" sender="room">updateStatus()</message>
		</queue>
		<now>12</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="controller">
		<statevariables>
			<variable name="Controller.currentTemp" type="int">20</variable>
			<variable name="Controller.isHeating" type="boolean">true</variable>
			<variable name="Controller.isCooling" type="boolean">false</variable>
		</statevariables>
		<queue>
		</queue>
		<now>12</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="sensor">
		<statevariables>
		</statevariables>
		<queue>
			<message arrival="14" deadline="infinity" sender="sensor">callSensor()</message>
		</queue>
		<now>12</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="hc_unit">
		<statevariables>
			<variable name="HC_Unit.heaterOn" type="boolean">true</variable>
			<variable name="HC_Unit.coolerOn" type="boolean">false</variable>
			<variable name="HC_Unit.currentRegulation" type="int">1</variable>
		</statevariables>
		<queue>
			<message arrival="15" deadline="infinity" sender="hc_unit">regulateTemp()</message>
		</queue>
		<now>12</now>
		<pc></pc>
		<res></res>
	</rebec>
</state>
<transition source="321_0" destination="422_0" executionTime="12" shift="0"> <messageserver sender="sensor" owner="sensor" title="CALLSENSOR"/></transition>
<state id="423_0" atomicpropositions="" >
	<rebec name="room">
		<statevariables>
			<variable name="Room.currentTemp" type="int">23</variable>
			<variable name="Room.currentRegulation" type="int">0</variable>
			<variable name="Room.outside_air" type="int">0</variable>
		</statevariables>
		<queue>
			<message arrival="20" deadline="infinity" sender="room">updateStatus()</message>
		</queue>
		<now>12</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="controller">
		<statevariables>
			<variable name="Controller.currentTemp" type="int">23</variable>
			<variable name="Controller.isHeating" type="boolean">false</variable>
			<variable name="Controller.isCooling" type="boolean">false</variable>
		</statevariables>
		<queue>
		</queue>
		<now>12</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="sensor">
		<statevariables>
		</statevariables>
		<queue>
			<message arrival="12" deadline="infinity" sender="room">setCurrent(23)</message>
			<message arrival="14" deadline="infinity" sender="sensor">callSensor()</message>
		</queue>
		<now>12</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="hc_unit">
		<statevariables>
			<variable name="HC_Unit.heaterOn" type="boolean">false</variable>
			<variable name="HC_Unit.coolerOn" type="boolean">false</variable>
			<variable name="HC_Unit.currentRegulation" type="int">0</variable>
		</statevariables>
		<queue>
			<message arrival="15" deadline="infinity" sender="hc_unit">regulateTemp()</message>
		</queue>
		<now>12</now>
		<pc></pc>
		<res></res>
	</rebec>
</state>
<transition source="419_0" destination="423_0" executionTime="12" shift="0"> <messageserver sender="sensor" owner="room" title="GETTEMP"/></transition>
<state id="424_0" atomicpropositions="isCooling," >
	<rebec name="room">
		<statevariables>
			<variable name="Room.currentTemp" type="int">24</variable>
			<variable name="Room.currentRegulation" type="int">0</variable>
			<variable name="Room.outside_air" type="int">-1</variable>
		</statevariables>
		<queue>
			<message arrival="12" deadline="infinity" sender="sensor">getTemp()</message>
			<message arrival="20" deadline="infinity" sender="room">updateStatus()</message>
		</queue>
		<now>12</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="controller">
		<statevariables>
			<variable name="Controller.currentTemp" type="int">24</variable>
			<variable name="Controller.isHeating" type="boolean">false</variable>
			<variable name="Controller.isCooling" type="boolean">true</variable>
		</statevariables>
		<queue>
		</queue>
		<now>12</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="sensor">
		<statevariables>
		</statevariables>
		<queue>
			<message arrival="14" deadline="infinity" sender="sensor">callSensor()</message>
		</queue>
		<now>12</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="hc_unit">
		<statevariables>
			<variable name="HC_Unit.heaterOn" type="boolean">false</variable>
			<variable name="HC_Unit.coolerOn" type="boolean">true</variable>
			<variable name="HC_Unit.currentRegulation" type="int">-1</variable>
		</statevariables>
		<queue>
			<message arrival="15" deadline="infinity" sender="hc_unit">regulateTemp()</message>
		</queue>
		<now>12</now>
		<pc></pc>
		<res></res>
	</rebec>
</state>
<transition source="335_0" destination="424_0" executionTime="12" shift="0"> <messageserver sender="sensor" owner="sensor" title="CALLSENSOR"/></transition>
<state id="425_0" atomicpropositions="" >
	<rebec name="room">
		<statevariables>
			<variable name="Room.currentTemp" type="int">22</variable>
			<variable name="Room.currentRegulation" type="int">0</variable>
			<variable name="Room.outside_air" type="int">1</variable>
		</statevariables>
		<queue>
			<message arrival="12" deadline="infinity" sender="sensor">getTemp()</message>
			<message arrival="20" deadline="infinity" sender="room">updateStatus()</message>
		</queue>
		<now>12</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="controller">
		<statevariables>
			<variable name="Controller.currentTemp" type="int">22</variable>
			<variable name="Controller.isHeating" type="boolean">false</variable>
			<variable name="Controller.isCooling" type="boolean">false</variable>
		</statevariables>
		<queue>
		</queue>
		<now>12</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="sensor">
		<statevariables>
		</statevariables>
		<queue>
			<message arrival="14" deadline="infinity" sender="sensor">callSensor()</message>
		</queue>
		<now>12</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="hc_unit">
		<statevariables>
			<variable name="HC_Unit.heaterOn" type="boolean">false</variable>
			<variable name="HC_Unit.coolerOn" type="boolean">false</variable>
			<variable name="HC_Unit.currentRegulation" type="int">0</variable>
		</statevariables>
		<queue>
			<message arrival="15" deadline="infinity" sender="hc_unit">regulateTemp()</message>
		</queue>
		<now>12</now>
		<pc></pc>
		<res></res>
	</rebec>
</state>
<transition source="286_0" destination="425_0" executionTime="12" shift="0"> <messageserver sender="sensor" owner="sensor" title="CALLSENSOR"/></transition>
<state id="426_0" atomicpropositions="" >
	<rebec name="room">
		<statevariables>
			<variable name="Room.currentTemp" type="int">22</variable>
			<variable name="Room.currentRegulation" type="int">0</variable>
			<variable name="Room.outside_air" type="int">1</variable>
		</statevariables>
		<queue>
			<message arrival="12" deadline="infinity" sender="sensor">getTemp()</message>
			<message arrival="20" deadline="infinity" sender="room">updateStatus()</message>
		</queue>
		<now>12</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="controller">
		<statevariables>
			<variable name="Controller.currentTemp" type="int">23</variable>
			<variable name="Controller.isHeating" type="boolean">false</variable>
			<variable name="Controller.isCooling" type="boolean">false</variable>
		</statevariables>
		<queue>
		</queue>
		<now>12</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="sensor">
		<statevariables>
		</statevariables>
		<queue>
			<message arrival="14" deadline="infinity" sender="sensor">callSensor()</message>
		</queue>
		<now>12</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="hc_unit">
		<statevariables>
			<variable name="HC_Unit.heaterOn" type="boolean">false</variable>
			<variable name="HC_Unit.coolerOn" type="boolean">false</variable>
			<variable name="HC_Unit.currentRegulation" type="int">0</variable>
		</statevariables>
		<queue>
			<message arrival="15" deadline="infinity" sender="hc_unit">regulateTemp()</message>
		</queue>
		<now>12</now>
		<pc></pc>
		<res></res>
	</rebec>
</state>
<transition source="288_0" destination="426_0" executionTime="12" shift="0"> <messageserver sender="sensor" owner="sensor" title="CALLSENSOR"/></transition>
<state id="427_0" atomicpropositions="isHeating," >
	<rebec name="room">
		<statevariables>
			<variable name="Room.currentTemp" type="int">20</variable>
			<variable name="Room.currentRegulation" type="int">0</variable>
			<variable name="Room.outside_air" type="int">1</variable>
		</statevariables>
		<queue>
			<message arrival="20" deadline="infinity" sender="room">updateStatus()</message>
		</queue>
		<now>12</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="controller">
		<statevariables>
			<variable name="Controller.currentTemp" type="int">20</variable>
			<variable name="Controller.isHeating" type="boolean">true</variable>
			<variable name="Controller.isCooling" type="boolean">false</variable>
		</statevariables>
		<queue>
		</queue>
		<now>12</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="sensor">
		<statevariables>
		</statevariables>
		<queue>
			<message arrival="12" deadline="infinity" sender="room">setCurrent(20)</message>
			<message arrival="14" deadline="infinity" sender="sensor">callSensor()</message>
		</queue>
		<now>12</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="hc_unit">
		<statevariables>
			<variable name="HC_Unit.heaterOn" type="boolean">true</variable>
			<variable name="HC_Unit.coolerOn" type="boolean">false</variable>
			<variable name="HC_Unit.currentRegulation" type="int">1</variable>
		</statevariables>
		<queue>
			<message arrival="15" deadline="infinity" sender="hc_unit">regulateTemp()</message>
		</queue>
		<now>12</now>
		<pc></pc>
		<res></res>
	</rebec>
</state>
<transition source="422_0" destination="427_0" executionTime="12" shift="0"> <messageserver sender="sensor" owner="room" title="GETTEMP"/></transition>
<state id="428_0" atomicpropositions="" >
	<rebec name="room">
		<statevariables>
			<variable name="Room.currentTemp" type="int">23</variable>
			<variable name="Room.currentRegulation" type="int">0</variable>
			<variable name="Room.outside_air" type="int">0</variable>
		</statevariables>
		<queue>
			<message arrival="20" deadline="infinity" sender="room">updateStatus()</message>
		</queue>
		<now>12</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="controller">
		<statevariables>
			<variable name="Controller.currentTemp" type="int">23</variable>
			<variable name="Controller.isHeating" type="boolean">false</variable>
			<variable name="Controller.isCooling" type="boolean">false</variable>
		</statevariables>
		<queue>
			<message arrival="12" deadline="infinity" sender="sensor">setCurrent(23)</message>
		</queue>
		<now>12</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="sensor">
		<statevariables>
		</statevariables>
		<queue>
			<message arrival="14" deadline="infinity" sender="sensor">callSensor()</message>
		</queue>
		<now>12</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="hc_unit">
		<statevariables>
			<variable name="HC_Unit.heaterOn" type="boolean">false</variable>
			<variable name="HC_Unit.coolerOn" type="boolean">false</variable>
			<variable name="HC_Unit.currentRegulation" type="int">0</variable>
		</statevariables>
		<queue>
			<message arrival="15" deadline="infinity" sender="hc_unit">regulateTemp()</message>
		</queue>
		<now>12</now>
		<pc></pc>
		<res></res>
	</rebec>
</state>
<transition source="423_0" destination="428_0" executionTime="12" shift="0"> <messageserver sender="room" owner="sensor" title="SETCURRENT"/></transition>
<state id="429_0" atomicpropositions="isCooling," >
	<rebec name="room">
		<statevariables>
			<variable name="Room.currentTemp" type="int">24</variable>
			<variable name="Room.currentRegulation" type="int">0</variable>
			<variable name="Room.outside_air" type="int">-1</variable>
		</statevariables>
		<queue>
			<message arrival="20" deadline="infinity" sender="room">updateStatus()</message>
		</queue>
		<now>12</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="controller">
		<statevariables>
			<variable name="Controller.currentTemp" type="int">24</variable>
			<variable name="Controller.isHeating" type="boolean">false</variable>
			<variable name="Controller.isCooling" type="boolean">true</variable>
		</statevariables>
		<queue>
		</queue>
		<now>12</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="sensor">
		<statevariables>
		</statevariables>
		<queue>
			<message arrival="12" deadline="infinity" sender="room">setCurrent(24)</message>
			<message arrival="14" deadline="infinity" sender="sensor">callSensor()</message>
		</queue>
		<now>12</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="hc_unit">
		<statevariables>
			<variable name="HC_Unit.heaterOn" type="boolean">false</variable>
			<variable name="HC_Unit.coolerOn" type="boolean">true</variable>
			<variable name="HC_Unit.currentRegulation" type="int">-1</variable>
		</statevariables>
		<queue>
			<message arrival="15" deadline="infinity" sender="hc_unit">regulateTemp()</message>
		</queue>
		<now>12</now>
		<pc></pc>
		<res></res>
	</rebec>
</state>
<transition source="424_0" destination="429_0" executionTime="12" shift="0"> <messageserver sender="sensor" owner="room" title="GETTEMP"/></transition>
<state id="430_0" atomicpropositions="" >
	<rebec name="room">
		<statevariables>
			<variable name="Room.currentTemp" type="int">22</variable>
			<variable name="Room.currentRegulation" type="int">0</variable>
			<variable name="Room.outside_air" type="int">1</variable>
		</statevariables>
		<queue>
			<message arrival="20" deadline="infinity" sender="room">updateStatus()</message>
		</queue>
		<now>12</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="controller">
		<statevariables>
			<variable name="Controller.currentTemp" type="int">22</variable>
			<variable name="Controller.isHeating" type="boolean">false</variable>
			<variable name="Controller.isCooling" type="boolean">false</variable>
		</statevariables>
		<queue>
		</queue>
		<now>12</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="sensor">
		<statevariables>
		</statevariables>
		<queue>
			<message arrival="12" deadline="infinity" sender="room">setCurrent(22)</message>
			<message arrival="14" deadline="infinity" sender="sensor">callSensor()</message>
		</queue>
		<now>12</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="hc_unit">
		<statevariables>
			<variable name="HC_Unit.heaterOn" type="boolean">false</variable>
			<variable name="HC_Unit.coolerOn" type="boolean">false</variable>
			<variable name="HC_Unit.currentRegulation" type="int">0</variable>
		</statevariables>
		<queue>
			<message arrival="15" deadline="infinity" sender="hc_unit">regulateTemp()</message>
		</queue>
		<now>12</now>
		<pc></pc>
		<res></res>
	</rebec>
</state>
<transition source="425_0" destination="430_0" executionTime="12" shift="0"> <messageserver sender="sensor" owner="room" title="GETTEMP"/></transition>
<state id="431_0" atomicpropositions="" >
	<rebec name="room">
		<statevariables>
			<variable name="Room.currentTemp" type="int">22</variable>
			<variable name="Room.currentRegulation" type="int">0</variable>
			<variable name="Room.outside_air" type="int">1</variable>
		</statevariables>
		<queue>
			<message arrival="20" deadline="infinity" sender="room">updateStatus()</message>
		</queue>
		<now>12</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="controller">
		<statevariables>
			<variable name="Controller.currentTemp" type="int">23</variable>
			<variable name="Controller.isHeating" type="boolean">false</variable>
			<variable name="Controller.isCooling" type="boolean">false</variable>
		</statevariables>
		<queue>
		</queue>
		<now>12</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="sensor">
		<statevariables>
		</statevariables>
		<queue>
			<message arrival="12" deadline="infinity" sender="room">setCurrent(22)</message>
			<message arrival="14" deadline="infinity" sender="sensor">callSensor()</message>
		</queue>
		<now>12</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="hc_unit">
		<statevariables>
			<variable name="HC_Unit.heaterOn" type="boolean">false</variable>
			<variable name="HC_Unit.coolerOn" type="boolean">false</variable>
			<variable name="HC_Unit.currentRegulation" type="int">0</variable>
		</statevariables>
		<queue>
			<message arrival="15" deadline="infinity" sender="hc_unit">regulateTemp()</message>
		</queue>
		<now>12</now>
		<pc></pc>
		<res></res>
	</rebec>
</state>
<transition source="426_0" destination="431_0" executionTime="12" shift="0"> <messageserver sender="sensor" owner="room" title="GETTEMP"/></transition>
<state id="432_0" atomicpropositions="isHeating," >
	<rebec name="room">
		<statevariables>
			<variable name="Room.currentTemp" type="int">20</variable>
			<variable name="Room.currentRegulation" type="int">0</variable>
			<variable name="Room.outside_air" type="int">1</variable>
		</statevariables>
		<queue>
			<message arrival="20" deadline="infinity" sender="room">updateStatus()</message>
		</queue>
		<now>12</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="controller">
		<statevariables>
			<variable name="Controller.currentTemp" type="int">20</variable>
			<variable name="Controller.isHeating" type="boolean">true</variable>
			<variable name="Controller.isCooling" type="boolean">false</variable>
		</statevariables>
		<queue>
			<message arrival="12" deadline="infinity" sender="sensor">setCurrent(20)</message>
		</queue>
		<now>12</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="sensor">
		<statevariables>
		</statevariables>
		<queue>
			<message arrival="14" deadline="infinity" sender="sensor">callSensor()</message>
		</queue>
		<now>12</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="hc_unit">
		<statevariables>
			<variable name="HC_Unit.heaterOn" type="boolean">true</variable>
			<variable name="HC_Unit.coolerOn" type="boolean">false</variable>
			<variable name="HC_Unit.currentRegulation" type="int">1</variable>
		</statevariables>
		<queue>
			<message arrival="15" deadline="infinity" sender="hc_unit">regulateTemp()</message>
		</queue>
		<now>12</now>
		<pc></pc>
		<res></res>
	</rebec>
</state>
<transition source="427_0" destination="432_0" executionTime="12" shift="0"> <messageserver sender="room" owner="sensor" title="SETCURRENT"/></transition>
<state id="433_0" atomicpropositions="" >
	<rebec name="room">
		<statevariables>
			<variable name="Room.currentTemp" type="int">23</variable>
			<variable name="Room.currentRegulation" type="int">0</variable>
			<variable name="Room.outside_air" type="int">0</variable>
		</statevariables>
		<queue>
			<message arrival="20" deadline="infinity" sender="room">updateStatus()</message>
		</queue>
		<now>12</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="controller">
		<statevariables>
			<variable name="Controller.currentTemp" type="int">23</variable>
			<variable name="Controller.isHeating" type="boolean">false</variable>
			<variable name="Controller.isCooling" type="boolean">false</variable>
		</statevariables>
		<queue>
			<message arrival="12" deadline="infinity" sender="controller">updateOutput()</message>
		</queue>
		<now>12</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="sensor">
		<statevariables>
		</statevariables>
		<queue>
			<message arrival="14" deadline="infinity" sender="sensor">callSensor()</message>
		</queue>
		<now>12</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="hc_unit">
		<statevariables>
			<variable name="HC_Unit.heaterOn" type="boolean">false</variable>
			<variable name="HC_Unit.coolerOn" type="boolean">false</variable>
			<variable name="HC_Unit.currentRegulation" type="int">0</variable>
		</statevariables>
		<queue>
			<message arrival="15" deadline="infinity" sender="hc_unit">regulateTemp()</message>
		</queue>
		<now>12</now>
		<pc></pc>
		<res></res>
	</rebec>
</state>
<transition source="428_0" destination="433_0" executionTime="12" shift="0"> <messageserver sender="sensor" owner="controller" title="SETCURRENT"/></transition>
<state id="434_0" atomicpropositions="isCooling," >
	<rebec name="room">
		<statevariables>
			<variable name="Room.currentTemp" type="int">24</variable>
			<variable name="Room.currentRegulation" type="int">0</variable>
			<variable name="Room.outside_air" type="int">-1</variable>
		</statevariables>
		<queue>
			<message arrival="20" deadline="infinity" sender="room">updateStatus()</message>
		</queue>
		<now>12</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="controller">
		<statevariables>
			<variable name="Controller.currentTemp" type="int">24</variable>
			<variable name="Controller.isHeating" type="boolean">false</variable>
			<variable name="Controller.isCooling" type="boolean">true</variable>
		</statevariables>
		<queue>
			<message arrival="12" deadline="infinity" sender="sensor">setCurrent(24)</message>
		</queue>
		<now>12</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="sensor">
		<statevariables>
		</statevariables>
		<queue>
			<message arrival="14" deadline="infinity" sender="sensor">callSensor()</message>
		</queue>
		<now>12</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="hc_unit">
		<statevariables>
			<variable name="HC_Unit.heaterOn" type="boolean">false</variable>
			<variable name="HC_Unit.coolerOn" type="boolean">true</variable>
			<variable name="HC_Unit.currentRegulation" type="int">-1</variable>
		</statevariables>
		<queue>
			<message arrival="15" deadline="infinity" sender="hc_unit">regulateTemp()</message>
		</queue>
		<now>12</now>
		<pc></pc>
		<res></res>
	</rebec>
</state>
<transition source="429_0" destination="434_0" executionTime="12" shift="0"> <messageserver sender="room" owner="sensor" title="SETCURRENT"/></transition>
<state id="435_0" atomicpropositions="" >
	<rebec name="room">
		<statevariables>
			<variable name="Room.currentTemp" type="int">22</variable>
			<variable name="Room.currentRegulation" type="int">0</variable>
			<variable name="Room.outside_air" type="int">1</variable>
		</statevariables>
		<queue>
			<message arrival="20" deadline="infinity" sender="room">updateStatus()</message>
		</queue>
		<now>12</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="controller">
		<statevariables>
			<variable name="Controller.currentTemp" type="int">22</variable>
			<variable name="Controller.isHeating" type="boolean">false</variable>
			<variable name="Controller.isCooling" type="boolean">false</variable>
		</statevariables>
		<queue>
			<message arrival="12" deadline="infinity" sender="sensor">setCurrent(22)</message>
		</queue>
		<now>12</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="sensor">
		<statevariables>
		</statevariables>
		<queue>
			<message arrival="14" deadline="infinity" sender="sensor">callSensor()</message>
		</queue>
		<now>12</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="hc_unit">
		<statevariables>
			<variable name="HC_Unit.heaterOn" type="boolean">false</variable>
			<variable name="HC_Unit.coolerOn" type="boolean">false</variable>
			<variable name="HC_Unit.currentRegulation" type="int">0</variable>
		</statevariables>
		<queue>
			<message arrival="15" deadline="infinity" sender="hc_unit">regulateTemp()</message>
		</queue>
		<now>12</now>
		<pc></pc>
		<res></res>
	</rebec>
</state>
<transition source="430_0" destination="435_0" executionTime="12" shift="0"> <messageserver sender="room" owner="sensor" title="SETCURRENT"/></transition>
<state id="436_0" atomicpropositions="" >
	<rebec name="room">
		<statevariables>
			<variable name="Room.currentTemp" type="int">22</variable>
			<variable name="Room.currentRegulation" type="int">0</variable>
			<variable name="Room.outside_air" type="int">1</variable>
		</statevariables>
		<queue>
			<message arrival="20" deadline="infinity" sender="room">updateStatus()</message>
		</queue>
		<now>12</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="controller">
		<statevariables>
			<variable name="Controller.currentTemp" type="int">23</variable>
			<variable name="Controller.isHeating" type="boolean">false</variable>
			<variable name="Controller.isCooling" type="boolean">false</variable>
		</statevariables>
		<queue>
			<message arrival="12" deadline="infinity" sender="sensor">setCurrent(22)</message>
		</queue>
		<now>12</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="sensor">
		<statevariables>
		</statevariables>
		<queue>
			<message arrival="14" deadline="infinity" sender="sensor">callSensor()</message>
		</queue>
		<now>12</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="hc_unit">
		<statevariables>
			<variable name="HC_Unit.heaterOn" type="boolean">false</variable>
			<variable name="HC_Unit.coolerOn" type="boolean">false</variable>
			<variable name="HC_Unit.currentRegulation" type="int">0</variable>
		</statevariables>
		<queue>
			<message arrival="15" deadline="infinity" sender="hc_unit">regulateTemp()</message>
		</queue>
		<now>12</now>
		<pc></pc>
		<res></res>
	</rebec>
</state>
<transition source="431_0" destination="436_0" executionTime="12" shift="0"> <messageserver sender="room" owner="sensor" title="SETCURRENT"/></transition>
<state id="437_0" atomicpropositions="isHeating," >
	<rebec name="room">
		<statevariables>
			<variable name="Room.currentTemp" type="int">20</variable>
			<variable name="Room.currentRegulation" type="int">0</variable>
			<variable name="Room.outside_air" type="int">1</variable>
		</statevariables>
		<queue>
			<message arrival="20" deadline="infinity" sender="room">updateStatus()</message>
		</queue>
		<now>12</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="controller">
		<statevariables>
			<variable name="Controller.currentTemp" type="int">20</variable>
			<variable name="Controller.isHeating" type="boolean">true</variable>
			<variable name="Controller.isCooling" type="boolean">false</variable>
		</statevariables>
		<queue>
			<message arrival="12" deadline="infinity" sender="controller">updateOutput()</message>
		</queue>
		<now>12</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="sensor">
		<statevariables>
		</statevariables>
		<queue>
			<message arrival="14" deadline="infinity" sender="sensor">callSensor()</message>
		</queue>
		<now>12</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="hc_unit">
		<statevariables>
			<variable name="HC_Unit.heaterOn" type="boolean">true</variable>
			<variable name="HC_Unit.coolerOn" type="boolean">false</variable>
			<variable name="HC_Unit.currentRegulation" type="int">1</variable>
		</statevariables>
		<queue>
			<message arrival="15" deadline="infinity" sender="hc_unit">regulateTemp()</message>
		</queue>
		<now>12</now>
		<pc></pc>
		<res></res>
	</rebec>
</state>
<transition source="432_0" destination="437_0" executionTime="12" shift="0"> <messageserver sender="sensor" owner="controller" title="SETCURRENT"/></transition>
<state id="438_0" atomicpropositions="" >
	<rebec name="room">
		<statevariables>
			<variable name="Room.currentTemp" type="int">23</variable>
			<variable name="Room.currentRegulation" type="int">0</variable>
			<variable name="Room.outside_air" type="int">0</variable>
		</statevariables>
		<queue>
			<message arrival="20" deadline="infinity" sender="room">updateStatus()</message>
		</queue>
		<now>12</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="controller">
		<statevariables>
			<variable name="Controller.currentTemp" type="int">23</variable>
			<variable name="Controller.isHeating" type="boolean">false</variable>
			<variable name="Controller.isCooling" type="boolean">false</variable>
		</statevariables>
		<queue>
		</queue>
		<now>12</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="sensor">
		<statevariables>
		</statevariables>
		<queue>
			<message arrival="14" deadline="infinity" sender="sensor">callSensor()</message>
		</queue>
		<now>12</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="hc_unit">
		<statevariables>
			<variable name="HC_Unit.heaterOn" type="boolean">false</variable>
			<variable name="HC_Unit.coolerOn" type="boolean">false</variable>
			<variable name="HC_Unit.currentRegulation" type="int">0</variable>
		</statevariables>
		<queue>
			<message arrival="15" deadline="infinity" sender="hc_unit">regulateTemp()</message>
		</queue>
		<now>12</now>
		<pc></pc>
		<res></res>
	</rebec>
</state>
<state id="439_0" atomicpropositions="" >
	<rebec name="room">
		<statevariables>
			<variable name="Room.currentTemp" type="int">23</variable>
			<variable name="Room.currentRegulation" type="int">0</variable>
			<variable name="Room.outside_air" type="int">0</variable>
		</statevariables>
		<queue>
			<message arrival="20" deadline="infinity" sender="room">updateStatus()</message>
		</queue>
		<now>14</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="controller">
		<statevariables>
			<variable name="Controller.currentTemp" type="int">23</variable>
			<variable name="Controller.isHeating" type="boolean">false</variable>
			<variable name="Controller.isCooling" type="boolean">false</variable>
		</statevariables>
		<queue>
		</queue>
		<now>14</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="sensor">
		<statevariables>
		</statevariables>
		<queue>
			<message arrival="14" deadline="infinity" sender="sensor">callSensor()</message>
		</queue>
		<now>14</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="hc_unit">
		<statevariables>
			<variable name="HC_Unit.heaterOn" type="boolean">false</variable>
			<variable name="HC_Unit.coolerOn" type="boolean">false</variable>
			<variable name="HC_Unit.currentRegulation" type="int">0</variable>
		</statevariables>
		<queue>
			<message arrival="15" deadline="infinity" sender="hc_unit">regulateTemp()</message>
		</queue>
		<now>14</now>
		<pc></pc>
		<res></res>
	</rebec>
</state>
<transition source="438_0" destination="439_0" executionTime="12" shift="0"> <time value="2"/></transition>
<transition source="433_0" destination="438_0" executionTime="12" shift="0"> <messageserver sender="controller" owner="controller" title="UPDATEOUTPUT"/></transition>
<state id="440_0" atomicpropositions="isCooling," >
	<rebec name="room">
		<statevariables>
			<variable name="Room.currentTemp" type="int">24</variable>
			<variable name="Room.currentRegulation" type="int">0</variable>
			<variable name="Room.outside_air" type="int">-1</variable>
		</statevariables>
		<queue>
			<message arrival="20" deadline="infinity" sender="room">updateStatus()</message>
		</queue>
		<now>12</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="controller">
		<statevariables>
			<variable name="Controller.currentTemp" type="int">24</variable>
			<variable name="Controller.isHeating" type="boolean">false</variable>
			<variable name="Controller.isCooling" type="boolean">true</variable>
		</statevariables>
		<queue>
			<message arrival="12" deadline="infinity" sender="controller">updateOutput()</message>
		</queue>
		<now>12</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="sensor">
		<statevariables>
		</statevariables>
		<queue>
			<message arrival="14" deadline="infinity" sender="sensor">callSensor()</message>
		</queue>
		<now>12</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="hc_unit">
		<statevariables>
			<variable name="HC_Unit.heaterOn" type="boolean">false</variable>
			<variable name="HC_Unit.coolerOn" type="boolean">true</variable>
			<variable name="HC_Unit.currentRegulation" type="int">-1</variable>
		</statevariables>
		<queue>
			<message arrival="15" deadline="infinity" sender="hc_unit">regulateTemp()</message>
		</queue>
		<now>12</now>
		<pc></pc>
		<res></res>
	</rebec>
</state>
<transition source="434_0" destination="440_0" executionTime="12" shift="0"> <messageserver sender="sensor" owner="controller" title="SETCURRENT"/></transition>
<state id="441_0" atomicpropositions="" >
	<rebec name="room">
		<statevariables>
			<variable name="Room.currentTemp" type="int">22</variable>
			<variable name="Room.currentRegulation" type="int">0</variable>
			<variable name="Room.outside_air" type="int">1</variable>
		</statevariables>
		<queue>
			<message arrival="20" deadline="infinity" sender="room">updateStatus()</message>
		</queue>
		<now>12</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="controller">
		<statevariables>
			<variable name="Controller.currentTemp" type="int">22</variable>
			<variable name="Controller.isHeating" type="boolean">false</variable>
			<variable name="Controller.isCooling" type="boolean">false</variable>
		</statevariables>
		<queue>
			<message arrival="12" deadline="infinity" sender="controller">updateOutput()</message>
		</queue>
		<now>12</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="sensor">
		<statevariables>
		</statevariables>
		<queue>
			<message arrival="14" deadline="infinity" sender="sensor">callSensor()</message>
		</queue>
		<now>12</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="hc_unit">
		<statevariables>
			<variable name="HC_Unit.heaterOn" type="boolean">false</variable>
			<variable name="HC_Unit.coolerOn" type="boolean">false</variable>
			<variable name="HC_Unit.currentRegulation" type="int">0</variable>
		</statevariables>
		<queue>
			<message arrival="15" deadline="infinity" sender="hc_unit">regulateTemp()</message>
		</queue>
		<now>12</now>
		<pc></pc>
		<res></res>
	</rebec>
</state>
<transition source="435_0" destination="441_0" executionTime="12" shift="0"> <messageserver sender="sensor" owner="controller" title="SETCURRENT"/></transition>
<transition source="436_0" destination="441_0" executionTime="12" shift="0"> <messageserver sender="sensor" owner="controller" title="SETCURRENT"/></transition>
<state id="442_0" atomicpropositions="isHeating," >
	<rebec name="room">
		<statevariables>
			<variable name="Room.currentTemp" type="int">20</variable>
			<variable name="Room.currentRegulation" type="int">0</variable>
			<variable name="Room.outside_air" type="int">1</variable>
		</statevariables>
		<queue>
			<message arrival="20" deadline="infinity" sender="room">updateStatus()</message>
		</queue>
		<now>12</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="controller">
		<statevariables>
			<variable name="Controller.currentTemp" type="int">20</variable>
			<variable name="Controller.isHeating" type="boolean">true</variable>
			<variable name="Controller.isCooling" type="boolean">false</variable>
		</statevariables>
		<queue>
		</queue>
		<now>12</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="sensor">
		<statevariables>
		</statevariables>
		<queue>
			<message arrival="14" deadline="infinity" sender="sensor">callSensor()</message>
		</queue>
		<now>12</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="hc_unit">
		<statevariables>
			<variable name="HC_Unit.heaterOn" type="boolean">true</variable>
			<variable name="HC_Unit.coolerOn" type="boolean">false</variable>
			<variable name="HC_Unit.currentRegulation" type="int">1</variable>
		</statevariables>
		<queue>
			<message arrival="15" deadline="infinity" sender="hc_unit">regulateTemp()</message>
		</queue>
		<now>12</now>
		<pc></pc>
		<res></res>
	</rebec>
</state>
<state id="443_0" atomicpropositions="isHeating," >
	<rebec name="room">
		<statevariables>
			<variable name="Room.currentTemp" type="int">20</variable>
			<variable name="Room.currentRegulation" type="int">0</variable>
			<variable name="Room.outside_air" type="int">1</variable>
		</statevariables>
		<queue>
			<message arrival="20" deadline="infinity" sender="room">updateStatus()</message>
		</queue>
		<now>14</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="controller">
		<statevariables>
			<variable name="Controller.currentTemp" type="int">20</variable>
			<variable name="Controller.isHeating" type="boolean">true</variable>
			<variable name="Controller.isCooling" type="boolean">false</variable>
		</statevariables>
		<queue>
		</queue>
		<now>14</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="sensor">
		<statevariables>
		</statevariables>
		<queue>
			<message arrival="14" deadline="infinity" sender="sensor">callSensor()</message>
		</queue>
		<now>14</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="hc_unit">
		<statevariables>
			<variable name="HC_Unit.heaterOn" type="boolean">true</variable>
			<variable name="HC_Unit.coolerOn" type="boolean">false</variable>
			<variable name="HC_Unit.currentRegulation" type="int">1</variable>
		</statevariables>
		<queue>
			<message arrival="15" deadline="infinity" sender="hc_unit">regulateTemp()</message>
		</queue>
		<now>14</now>
		<pc></pc>
		<res></res>
	</rebec>
</state>
<transition source="442_0" destination="443_0" executionTime="12" shift="0"> <time value="2"/></transition>
<transition source="437_0" destination="442_0" executionTime="12" shift="0"> <messageserver sender="controller" owner="controller" title="UPDATEOUTPUT"/></transition>
<state id="444_0" atomicpropositions="isCooling," >
	<rebec name="room">
		<statevariables>
			<variable name="Room.currentTemp" type="int">24</variable>
			<variable name="Room.currentRegulation" type="int">0</variable>
			<variable name="Room.outside_air" type="int">-1</variable>
		</statevariables>
		<queue>
			<message arrival="20" deadline="infinity" sender="room">updateStatus()</message>
		</queue>
		<now>12</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="controller">
		<statevariables>
			<variable name="Controller.currentTemp" type="int">24</variable>
			<variable name="Controller.isHeating" type="boolean">false</variable>
			<variable name="Controller.isCooling" type="boolean">true</variable>
		</statevariables>
		<queue>
		</queue>
		<now>12</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="sensor">
		<statevariables>
		</statevariables>
		<queue>
			<message arrival="14" deadline="infinity" sender="sensor">callSensor()</message>
		</queue>
		<now>12</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="hc_unit">
		<statevariables>
			<variable name="HC_Unit.heaterOn" type="boolean">false</variable>
			<variable name="HC_Unit.coolerOn" type="boolean">true</variable>
			<variable name="HC_Unit.currentRegulation" type="int">-1</variable>
		</statevariables>
		<queue>
			<message arrival="15" deadline="infinity" sender="hc_unit">regulateTemp()</message>
		</queue>
		<now>12</now>
		<pc></pc>
		<res></res>
	</rebec>
</state>
<state id="445_0" atomicpropositions="isCooling," >
	<rebec name="room">
		<statevariables>
			<variable name="Room.currentTemp" type="int">24</variable>
			<variable name="Room.currentRegulation" type="int">0</variable>
			<variable name="Room.outside_air" type="int">-1</variable>
		</statevariables>
		<queue>
			<message arrival="20" deadline="infinity" sender="room">updateStatus()</message>
		</queue>
		<now>14</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="controller">
		<statevariables>
			<variable name="Controller.currentTemp" type="int">24</variable>
			<variable name="Controller.isHeating" type="boolean">false</variable>
			<variable name="Controller.isCooling" type="boolean">true</variable>
		</statevariables>
		<queue>
		</queue>
		<now>14</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="sensor">
		<statevariables>
		</statevariables>
		<queue>
			<message arrival="14" deadline="infinity" sender="sensor">callSensor()</message>
		</queue>
		<now>14</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="hc_unit">
		<statevariables>
			<variable name="HC_Unit.heaterOn" type="boolean">false</variable>
			<variable name="HC_Unit.coolerOn" type="boolean">true</variable>
			<variable name="HC_Unit.currentRegulation" type="int">-1</variable>
		</statevariables>
		<queue>
			<message arrival="15" deadline="infinity" sender="hc_unit">regulateTemp()</message>
		</queue>
		<now>14</now>
		<pc></pc>
		<res></res>
	</rebec>
</state>
<transition source="444_0" destination="445_0" executionTime="12" shift="0"> <time value="2"/></transition>
<transition source="440_0" destination="444_0" executionTime="12" shift="0"> <messageserver sender="controller" owner="controller" title="UPDATEOUTPUT"/></transition>
<state id="446_0" atomicpropositions="" >
	<rebec name="room">
		<statevariables>
			<variable name="Room.currentTemp" type="int">22</variable>
			<variable name="Room.currentRegulation" type="int">0</variable>
			<variable name="Room.outside_air" type="int">1</variable>
		</statevariables>
		<queue>
			<message arrival="20" deadline="infinity" sender="room">updateStatus()</message>
		</queue>
		<now>12</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="controller">
		<statevariables>
			<variable name="Controller.currentTemp" type="int">22</variable>
			<variable name="Controller.isHeating" type="boolean">false</variable>
			<variable name="Controller.isCooling" type="boolean">false</variable>
		</statevariables>
		<queue>
		</queue>
		<now>12</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="sensor">
		<statevariables>
		</statevariables>
		<queue>
			<message arrival="14" deadline="infinity" sender="sensor">callSensor()</message>
		</queue>
		<now>12</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="hc_unit">
		<statevariables>
			<variable name="HC_Unit.heaterOn" type="boolean">false</variable>
			<variable name="HC_Unit.coolerOn" type="boolean">false</variable>
			<variable name="HC_Unit.currentRegulation" type="int">0</variable>
		</statevariables>
		<queue>
			<message arrival="15" deadline="infinity" sender="hc_unit">regulateTemp()</message>
		</queue>
		<now>12</now>
		<pc></pc>
		<res></res>
	</rebec>
</state>
<state id="447_0" atomicpropositions="" >
	<rebec name="room">
		<statevariables>
			<variable name="Room.currentTemp" type="int">22</variable>
			<variable name="Room.currentRegulation" type="int">0</variable>
			<variable name="Room.outside_air" type="int">1</variable>
		</statevariables>
		<queue>
			<message arrival="20" deadline="infinity" sender="room">updateStatus()</message>
		</queue>
		<now>14</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="controller">
		<statevariables>
			<variable name="Controller.currentTemp" type="int">22</variable>
			<variable name="Controller.isHeating" type="boolean">false</variable>
			<variable name="Controller.isCooling" type="boolean">false</variable>
		</statevariables>
		<queue>
		</queue>
		<now>14</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="sensor">
		<statevariables>
		</statevariables>
		<queue>
			<message arrival="14" deadline="infinity" sender="sensor">callSensor()</message>
		</queue>
		<now>14</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="hc_unit">
		<statevariables>
			<variable name="HC_Unit.heaterOn" type="boolean">false</variable>
			<variable name="HC_Unit.coolerOn" type="boolean">false</variable>
			<variable name="HC_Unit.currentRegulation" type="int">0</variable>
		</statevariables>
		<queue>
			<message arrival="15" deadline="infinity" sender="hc_unit">regulateTemp()</message>
		</queue>
		<now>14</now>
		<pc></pc>
		<res></res>
	</rebec>
</state>
<transition source="446_0" destination="447_0" executionTime="12" shift="0"> <time value="2"/></transition>
<transition source="441_0" destination="446_0" executionTime="12" shift="0"> <messageserver sender="controller" owner="controller" title="UPDATEOUTPUT"/></transition>
<state id="448_0" atomicpropositions="isHeating," >
	<rebec name="room">
		<statevariables>
			<variable name="Room.currentTemp" type="int">20</variable>
			<variable name="Room.currentRegulation" type="int">1</variable>
			<variable name="Room.outside_air" type="int">1</variable>
		</statevariables>
		<queue>
			<message arrival="12" deadline="infinity" sender="sensor">getTemp()</message>
			<message arrival="20" deadline="infinity" sender="room">updateStatus()</message>
		</queue>
		<now>12</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="controller">
		<statevariables>
			<variable name="Controller.currentTemp" type="int">20</variable>
			<variable name="Controller.isHeating" type="boolean">true</variable>
			<variable name="Controller.isCooling" type="boolean">false</variable>
		</statevariables>
		<queue>
		</queue>
		<now>12</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="sensor">
		<statevariables>
		</statevariables>
		<queue>
			<message arrival="14" deadline="infinity" sender="sensor">callSensor()</message>
		</queue>
		<now>12</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="hc_unit">
		<statevariables>
			<variable name="HC_Unit.heaterOn" type="boolean">true</variable>
			<variable name="HC_Unit.coolerOn" type="boolean">false</variable>
			<variable name="HC_Unit.currentRegulation" type="int">1</variable>
		</statevariables>
		<queue>
			<message arrival="15" deadline="infinity" sender="hc_unit">regulateTemp()</message>
		</queue>
		<now>12</now>
		<pc></pc>
		<res></res>
	</rebec>
</state>
<transition source="376_0" destination="448_0" executionTime="12" shift="0"> <messageserver sender="sensor" owner="sensor" title="CALLSENSOR"/></transition>
<state id="449_0" atomicpropositions="" >
	<rebec name="room">
		<statevariables>
			<variable name="Room.currentTemp" type="int">24</variable>
			<variable name="Room.currentRegulation" type="int">0</variable>
			<variable name="Room.outside_air" type="int">-1</variable>
		</statevariables>
		<queue>
			<message arrival="12" deadline="infinity" sender="sensor">getTemp()</message>
			<message arrival="20" deadline="infinity" sender="room">updateStatus()</message>
		</queue>
		<now>12</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="controller">
		<statevariables>
			<variable name="Controller.currentTemp" type="int">23</variable>
			<variable name="Controller.isHeating" type="boolean">false</variable>
			<variable name="Controller.isCooling" type="boolean">false</variable>
		</statevariables>
		<queue>
		</queue>
		<now>12</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="sensor">
		<statevariables>
		</statevariables>
		<queue>
			<message arrival="14" deadline="infinity" sender="sensor">callSensor()</message>
		</queue>
		<now>12</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="hc_unit">
		<statevariables>
			<variable name="HC_Unit.heaterOn" type="boolean">false</variable>
			<variable name="HC_Unit.coolerOn" type="boolean">false</variable>
			<variable name="HC_Unit.currentRegulation" type="int">0</variable>
		</statevariables>
		<queue>
			<message arrival="15" deadline="infinity" sender="hc_unit">regulateTemp()</message>
		</queue>
		<now>12</now>
		<pc></pc>
		<res></res>
	</rebec>
</state>
<transition source="290_0" destination="449_0" executionTime="12" shift="0"> <messageserver sender="sensor" owner="sensor" title="CALLSENSOR"/></transition>
<state id="450_0" atomicpropositions="" >
	<rebec name="room">
		<statevariables>
			<variable name="Room.currentTemp" type="int">20</variable>
			<variable name="Room.currentRegulation" type="int">0</variable>
			<variable name="Room.outside_air" type="int">1</variable>
		</statevariables>
		<queue>
			<message arrival="12" deadline="infinity" sender="sensor">getTemp()</message>
			<message arrival="20" deadline="infinity" sender="room">updateStatus()</message>
		</queue>
		<now>12</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="controller">
		<statevariables>
			<variable name="Controller.currentTemp" type="int">21</variable>
			<variable name="Controller.isHeating" type="boolean">false</variable>
			<variable name="Controller.isCooling" type="boolean">false</variable>
		</statevariables>
		<queue>
		</queue>
		<now>12</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="sensor">
		<statevariables>
		</statevariables>
		<queue>
			<message arrival="14" deadline="infinity" sender="sensor">callSensor()</message>
		</queue>
		<now>12</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="hc_unit">
		<statevariables>
			<variable name="HC_Unit.heaterOn" type="boolean">false</variable>
			<variable name="HC_Unit.coolerOn" type="boolean">false</variable>
			<variable name="HC_Unit.currentRegulation" type="int">0</variable>
		</statevariables>
		<queue>
			<message arrival="15" deadline="infinity" sender="hc_unit">regulateTemp()</message>
		</queue>
		<now>12</now>
		<pc></pc>
		<res></res>
	</rebec>
</state>
<transition source="280_0" destination="450_0" executionTime="12" shift="0"> <messageserver sender="sensor" owner="sensor" title="CALLSENSOR"/></transition>
<state id="451_0" atomicpropositions="isHeating," >
	<rebec name="room">
		<statevariables>
			<variable name="Room.currentTemp" type="int">20</variable>
			<variable name="Room.currentRegulation" type="int">1</variable>
			<variable name="Room.outside_air" type="int">1</variable>
		</statevariables>
		<queue>
			<message arrival="20" deadline="infinity" sender="room">updateStatus()</message>
		</queue>
		<now>12</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="controller">
		<statevariables>
			<variable name="Controller.currentTemp" type="int">20</variable>
			<variable name="Controller.isHeating" type="boolean">true</variable>
			<variable name="Controller.isCooling" type="boolean">false</variable>
		</statevariables>
		<queue>
		</queue>
		<now>12</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="sensor">
		<statevariables>
		</statevariables>
		<queue>
			<message arrival="12" deadline="infinity" sender="room">setCurrent(20)</message>
			<message arrival="14" deadline="infinity" sender="sensor">callSensor()</message>
		</queue>
		<now>12</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="hc_unit">
		<statevariables>
			<variable name="HC_Unit.heaterOn" type="boolean">true</variable>
			<variable name="HC_Unit.coolerOn" type="boolean">false</variable>
			<variable name="HC_Unit.currentRegulation" type="int">1</variable>
		</statevariables>
		<queue>
			<message arrival="15" deadline="infinity" sender="hc_unit">regulateTemp()</message>
		</queue>
		<now>12</now>
		<pc></pc>
		<res></res>
	</rebec>
</state>
<transition source="448_0" destination="451_0" executionTime="12" shift="0"> <messageserver sender="sensor" owner="room" title="GETTEMP"/></transition>
<state id="452_0" atomicpropositions="" >
	<rebec name="room">
		<statevariables>
			<variable name="Room.currentTemp" type="int">24</variable>
			<variable name="Room.currentRegulation" type="int">0</variable>
			<variable name="Room.outside_air" type="int">-1</variable>
		</statevariables>
		<queue>
			<message arrival="20" deadline="infinity" sender="room">updateStatus()</message>
		</queue>
		<now>12</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="controller">
		<statevariables>
			<variable name="Controller.currentTemp" type="int">23</variable>
			<variable name="Controller.isHeating" type="boolean">false</variable>
			<variable name="Controller.isCooling" type="boolean">false</variable>
		</statevariables>
		<queue>
		</queue>
		<now>12</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="sensor">
		<statevariables>
		</statevariables>
		<queue>
			<message arrival="12" deadline="infinity" sender="room">setCurrent(24)</message>
			<message arrival="14" deadline="infinity" sender="sensor">callSensor()</message>
		</queue>
		<now>12</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="hc_unit">
		<statevariables>
			<variable name="HC_Unit.heaterOn" type="boolean">false</variable>
			<variable name="HC_Unit.coolerOn" type="boolean">false</variable>
			<variable name="HC_Unit.currentRegulation" type="int">0</variable>
		</statevariables>
		<queue>
			<message arrival="15" deadline="infinity" sender="hc_unit">regulateTemp()</message>
		</queue>
		<now>12</now>
		<pc></pc>
		<res></res>
	</rebec>
</state>
<transition source="449_0" destination="452_0" executionTime="12" shift="0"> <messageserver sender="sensor" owner="room" title="GETTEMP"/></transition>
<state id="453_0" atomicpropositions="" >
	<rebec name="room">
		<statevariables>
			<variable name="Room.currentTemp" type="int">20</variable>
			<variable name="Room.currentRegulation" type="int">0</variable>
			<variable name="Room.outside_air" type="int">1</variable>
		</statevariables>
		<queue>
			<message arrival="20" deadline="infinity" sender="room">updateStatus()</message>
		</queue>
		<now>12</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="controller">
		<statevariables>
			<variable name="Controller.currentTemp" type="int">21</variable>
			<variable name="Controller.isHeating" type="boolean">false</variable>
			<variable name="Controller.isCooling" type="boolean">false</variable>
		</statevariables>
		<queue>
		</queue>
		<now>12</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="sensor">
		<statevariables>
		</statevariables>
		<queue>
			<message arrival="12" deadline="infinity" sender="room">setCurrent(20)</message>
			<message arrival="14" deadline="infinity" sender="sensor">callSensor()</message>
		</queue>
		<now>12</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="hc_unit">
		<statevariables>
			<variable name="HC_Unit.heaterOn" type="boolean">false</variable>
			<variable name="HC_Unit.coolerOn" type="boolean">false</variable>
			<variable name="HC_Unit.currentRegulation" type="int">0</variable>
		</statevariables>
		<queue>
			<message arrival="15" deadline="infinity" sender="hc_unit">regulateTemp()</message>
		</queue>
		<now>12</now>
		<pc></pc>
		<res></res>
	</rebec>
</state>
<transition source="450_0" destination="453_0" executionTime="12" shift="0"> <messageserver sender="sensor" owner="room" title="GETTEMP"/></transition>
<state id="454_0" atomicpropositions="isHeating," >
	<rebec name="room">
		<statevariables>
			<variable name="Room.currentTemp" type="int">20</variable>
			<variable name="Room.currentRegulation" type="int">1</variable>
			<variable name="Room.outside_air" type="int">1</variable>
		</statevariables>
		<queue>
			<message arrival="20" deadline="infinity" sender="room">updateStatus()</message>
		</queue>
		<now>12</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="controller">
		<statevariables>
			<variable name="Controller.currentTemp" type="int">20</variable>
			<variable name="Controller.isHeating" type="boolean">true</variable>
			<variable name="Controller.isCooling" type="boolean">false</variable>
		</statevariables>
		<queue>
			<message arrival="12" deadline="infinity" sender="sensor">setCurrent(20)</message>
		</queue>
		<now>12</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="sensor">
		<statevariables>
		</statevariables>
		<queue>
			<message arrival="14" deadline="infinity" sender="sensor">callSensor()</message>
		</queue>
		<now>12</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="hc_unit">
		<statevariables>
			<variable name="HC_Unit.heaterOn" type="boolean">true</variable>
			<variable name="HC_Unit.coolerOn" type="boolean">false</variable>
			<variable name="HC_Unit.currentRegulation" type="int">1</variable>
		</statevariables>
		<queue>
			<message arrival="15" deadline="infinity" sender="hc_unit">regulateTemp()</message>
		</queue>
		<now>12</now>
		<pc></pc>
		<res></res>
	</rebec>
</state>
<transition source="451_0" destination="454_0" executionTime="12" shift="0"> <messageserver sender="room" owner="sensor" title="SETCURRENT"/></transition>
<state id="455_0" atomicpropositions="" >
	<rebec name="room">
		<statevariables>
			<variable name="Room.currentTemp" type="int">24</variable>
			<variable name="Room.currentRegulation" type="int">0</variable>
			<variable name="Room.outside_air" type="int">-1</variable>
		</statevariables>
		<queue>
			<message arrival="20" deadline="infinity" sender="room">updateStatus()</message>
		</queue>
		<now>12</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="controller">
		<statevariables>
			<variable name="Controller.currentTemp" type="int">23</variable>
			<variable name="Controller.isHeating" type="boolean">false</variable>
			<variable name="Controller.isCooling" type="boolean">false</variable>
		</statevariables>
		<queue>
			<message arrival="12" deadline="infinity" sender="sensor">setCurrent(24)</message>
		</queue>
		<now>12</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="sensor">
		<statevariables>
		</statevariables>
		<queue>
			<message arrival="14" deadline="infinity" sender="sensor">callSensor()</message>
		</queue>
		<now>12</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="hc_unit">
		<statevariables>
			<variable name="HC_Unit.heaterOn" type="boolean">false</variable>
			<variable name="HC_Unit.coolerOn" type="boolean">false</variable>
			<variable name="HC_Unit.currentRegulation" type="int">0</variable>
		</statevariables>
		<queue>
			<message arrival="15" deadline="infinity" sender="hc_unit">regulateTemp()</message>
		</queue>
		<now>12</now>
		<pc></pc>
		<res></res>
	</rebec>
</state>
<transition source="452_0" destination="455_0" executionTime="12" shift="0"> <messageserver sender="room" owner="sensor" title="SETCURRENT"/></transition>
<state id="456_0" atomicpropositions="" >
	<rebec name="room">
		<statevariables>
			<variable name="Room.currentTemp" type="int">20</variable>
			<variable name="Room.currentRegulation" type="int">0</variable>
			<variable name="Room.outside_air" type="int">1</variable>
		</statevariables>
		<queue>
			<message arrival="20" deadline="infinity" sender="room">updateStatus()</message>
		</queue>
		<now>12</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="controller">
		<statevariables>
			<variable name="Controller.currentTemp" type="int">21</variable>
			<variable name="Controller.isHeating" type="boolean">false</variable>
			<variable name="Controller.isCooling" type="boolean">false</variable>
		</statevariables>
		<queue>
			<message arrival="12" deadline="infinity" sender="sensor">setCurrent(20)</message>
		</queue>
		<now>12</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="sensor">
		<statevariables>
		</statevariables>
		<queue>
			<message arrival="14" deadline="infinity" sender="sensor">callSensor()</message>
		</queue>
		<now>12</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="hc_unit">
		<statevariables>
			<variable name="HC_Unit.heaterOn" type="boolean">false</variable>
			<variable name="HC_Unit.coolerOn" type="boolean">false</variable>
			<variable name="HC_Unit.currentRegulation" type="int">0</variable>
		</statevariables>
		<queue>
			<message arrival="15" deadline="infinity" sender="hc_unit">regulateTemp()</message>
		</queue>
		<now>12</now>
		<pc></pc>
		<res></res>
	</rebec>
</state>
<transition source="453_0" destination="456_0" executionTime="12" shift="0"> <messageserver sender="room" owner="sensor" title="SETCURRENT"/></transition>
<state id="457_0" atomicpropositions="isHeating," >
	<rebec name="room">
		<statevariables>
			<variable name="Room.currentTemp" type="int">20</variable>
			<variable name="Room.currentRegulation" type="int">1</variable>
			<variable name="Room.outside_air" type="int">1</variable>
		</statevariables>
		<queue>
			<message arrival="20" deadline="infinity" sender="room">updateStatus()</message>
		</queue>
		<now>12</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="controller">
		<statevariables>
			<variable name="Controller.currentTemp" type="int">20</variable>
			<variable name="Controller.isHeating" type="boolean">true</variable>
			<variable name="Controller.isCooling" type="boolean">false</variable>
		</statevariables>
		<queue>
			<message arrival="12" deadline="infinity" sender="controller">updateOutput()</message>
		</queue>
		<now>12</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="sensor">
		<statevariables>
		</statevariables>
		<queue>
			<message arrival="14" deadline="infinity" sender="sensor">callSensor()</message>
		</queue>
		<now>12</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="hc_unit">
		<statevariables>
			<variable name="HC_Unit.heaterOn" type="boolean">true</variable>
			<variable name="HC_Unit.coolerOn" type="boolean">false</variable>
			<variable name="HC_Unit.currentRegulation" type="int">1</variable>
		</statevariables>
		<queue>
			<message arrival="15" deadline="infinity" sender="hc_unit">regulateTemp()</message>
		</queue>
		<now>12</now>
		<pc></pc>
		<res></res>
	</rebec>
</state>
<transition source="454_0" destination="457_0" executionTime="12" shift="0"> <messageserver sender="sensor" owner="controller" title="SETCURRENT"/></transition>
<state id="458_0" atomicpropositions="" >
	<rebec name="room">
		<statevariables>
			<variable name="Room.currentTemp" type="int">24</variable>
			<variable name="Room.currentRegulation" type="int">0</variable>
			<variable name="Room.outside_air" type="int">-1</variable>
		</statevariables>
		<queue>
			<message arrival="20" deadline="infinity" sender="room">updateStatus()</message>
		</queue>
		<now>12</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="controller">
		<statevariables>
			<variable name="Controller.currentTemp" type="int">24</variable>
			<variable name="Controller.isHeating" type="boolean">false</variable>
			<variable name="Controller.isCooling" type="boolean">false</variable>
		</statevariables>
		<queue>
			<message arrival="12" deadline="infinity" sender="controller">updateOutput()</message>
		</queue>
		<now>12</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="sensor">
		<statevariables>
		</statevariables>
		<queue>
			<message arrival="14" deadline="infinity" sender="sensor">callSensor()</message>
		</queue>
		<now>12</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="hc_unit">
		<statevariables>
			<variable name="HC_Unit.heaterOn" type="boolean">false</variable>
			<variable name="HC_Unit.coolerOn" type="boolean">false</variable>
			<variable name="HC_Unit.currentRegulation" type="int">0</variable>
		</statevariables>
		<queue>
			<message arrival="15" deadline="infinity" sender="hc_unit">regulateTemp()</message>
		</queue>
		<now>12</now>
		<pc></pc>
		<res></res>
	</rebec>
</state>
<transition source="455_0" destination="458_0" executionTime="12" shift="0"> <messageserver sender="sensor" owner="controller" title="SETCURRENT"/></transition>
<state id="459_0" atomicpropositions="" >
	<rebec name="room">
		<statevariables>
			<variable name="Room.currentTemp" type="int">20</variable>
			<variable name="Room.currentRegulation" type="int">0</variable>
			<variable name="Room.outside_air" type="int">1</variable>
		</statevariables>
		<queue>
			<message arrival="20" deadline="infinity" sender="room">updateStatus()</message>
		</queue>
		<now>12</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="controller">
		<statevariables>
			<variable name="Controller.currentTemp" type="int">20</variable>
			<variable name="Controller.isHeating" type="boolean">false</variable>
			<variable name="Controller.isCooling" type="boolean">false</variable>
		</statevariables>
		<queue>
			<message arrival="12" deadline="infinity" sender="controller">updateOutput()</message>
		</queue>
		<now>12</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="sensor">
		<statevariables>
		</statevariables>
		<queue>
			<message arrival="14" deadline="infinity" sender="sensor">callSensor()</message>
		</queue>
		<now>12</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="hc_unit">
		<statevariables>
			<variable name="HC_Unit.heaterOn" type="boolean">false</variable>
			<variable name="HC_Unit.coolerOn" type="boolean">false</variable>
			<variable name="HC_Unit.currentRegulation" type="int">0</variable>
		</statevariables>
		<queue>
			<message arrival="15" deadline="infinity" sender="hc_unit">regulateTemp()</message>
		</queue>
		<now>12</now>
		<pc></pc>
		<res></res>
	</rebec>
</state>
<transition source="456_0" destination="459_0" executionTime="12" shift="0"> <messageserver sender="sensor" owner="controller" title="SETCURRENT"/></transition>
<state id="460_0" atomicpropositions="isHeating," >
	<rebec name="room">
		<statevariables>
			<variable name="Room.currentTemp" type="int">20</variable>
			<variable name="Room.currentRegulation" type="int">1</variable>
			<variable name="Room.outside_air" type="int">1</variable>
		</statevariables>
		<queue>
			<message arrival="20" deadline="infinity" sender="room">updateStatus()</message>
		</queue>
		<now>12</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="controller">
		<statevariables>
			<variable name="Controller.currentTemp" type="int">20</variable>
			<variable name="Controller.isHeating" type="boolean">true</variable>
			<variable name="Controller.isCooling" type="boolean">false</variable>
		</statevariables>
		<queue>
		</queue>
		<now>12</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="sensor">
		<statevariables>
		</statevariables>
		<queue>
			<message arrival="14" deadline="infinity" sender="sensor">callSensor()</message>
		</queue>
		<now>12</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="hc_unit">
		<statevariables>
			<variable name="HC_Unit.heaterOn" type="boolean">true</variable>
			<variable name="HC_Unit.coolerOn" type="boolean">false</variable>
			<variable name="HC_Unit.currentRegulation" type="int">1</variable>
		</statevariables>
		<queue>
			<message arrival="15" deadline="infinity" sender="hc_unit">regulateTemp()</message>
		</queue>
		<now>12</now>
		<pc></pc>
		<res></res>
	</rebec>
</state>
<state id="461_0" atomicpropositions="isHeating," >
	<rebec name="room">
		<statevariables>
			<variable name="Room.currentTemp" type="int">20</variable>
			<variable name="Room.currentRegulation" type="int">1</variable>
			<variable name="Room.outside_air" type="int">1</variable>
		</statevariables>
		<queue>
			<message arrival="20" deadline="infinity" sender="room">updateStatus()</message>
		</queue>
		<now>14</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="controller">
		<statevariables>
			<variable name="Controller.currentTemp" type="int">20</variable>
			<variable name="Controller.isHeating" type="boolean">true</variable>
			<variable name="Controller.isCooling" type="boolean">false</variable>
		</statevariables>
		<queue>
		</queue>
		<now>14</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="sensor">
		<statevariables>
		</statevariables>
		<queue>
			<message arrival="14" deadline="infinity" sender="sensor">callSensor()</message>
		</queue>
		<now>14</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="hc_unit">
		<statevariables>
			<variable name="HC_Unit.heaterOn" type="boolean">true</variable>
			<variable name="HC_Unit.coolerOn" type="boolean">false</variable>
			<variable name="HC_Unit.currentRegulation" type="int">1</variable>
		</statevariables>
		<queue>
			<message arrival="15" deadline="infinity" sender="hc_unit">regulateTemp()</message>
		</queue>
		<now>14</now>
		<pc></pc>
		<res></res>
	</rebec>
</state>
<transition source="460_0" destination="461_0" executionTime="12" shift="0"> <time value="2"/></transition>
<transition source="457_0" destination="460_0" executionTime="12" shift="0"> <messageserver sender="controller" owner="controller" title="UPDATEOUTPUT"/></transition>
<state id="462_0" atomicpropositions="" >
	<rebec name="room">
		<statevariables>
			<variable name="Room.currentTemp" type="int">24</variable>
			<variable name="Room.currentRegulation" type="int">0</variable>
			<variable name="Room.outside_air" type="int">-1</variable>
		</statevariables>
		<queue>
			<message arrival="20" deadline="infinity" sender="room">updateStatus()</message>
		</queue>
		<now>12</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="controller">
		<statevariables>
			<variable name="Controller.currentTemp" type="int">24</variable>
			<variable name="Controller.isHeating" type="boolean">false</variable>
			<variable name="Controller.isCooling" type="boolean">true</variable>
		</statevariables>
		<queue>
		</queue>
		<now>12</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="sensor">
		<statevariables>
		</statevariables>
		<queue>
			<message arrival="14" deadline="infinity" sender="sensor">callSensor()</message>
		</queue>
		<now>12</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="hc_unit">
		<statevariables>
			<variable name="HC_Unit.heaterOn" type="boolean">false</variable>
			<variable name="HC_Unit.coolerOn" type="boolean">false</variable>
			<variable name="HC_Unit.currentRegulation" type="int">0</variable>
		</statevariables>
		<queue>
			<message arrival="12" deadline="infinity" sender="controller">setCooling()</message>
			<message arrival="15" deadline="infinity" sender="hc_unit">regulateTemp()</message>
		</queue>
		<now>12</now>
		<pc></pc>
		<res></res>
	</rebec>
</state>
<transition source="458_0" destination="462_0" executionTime="12" shift="0"> <messageserver sender="controller" owner="controller" title="UPDATEOUTPUT"/></transition>
<state id="463_0" atomicpropositions="" >
	<rebec name="room">
		<statevariables>
			<variable name="Room.currentTemp" type="int">20</variable>
			<variable name="Room.currentRegulation" type="int">0</variable>
			<variable name="Room.outside_air" type="int">1</variable>
		</statevariables>
		<queue>
			<message arrival="20" deadline="infinity" sender="room">updateStatus()</message>
		</queue>
		<now>12</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="controller">
		<statevariables>
			<variable name="Controller.currentTemp" type="int">20</variable>
			<variable name="Controller.isHeating" type="boolean">true</variable>
			<variable name="Controller.isCooling" type="boolean">false</variable>
		</statevariables>
		<queue>
		</queue>
		<now>12</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="sensor">
		<statevariables>
		</statevariables>
		<queue>
			<message arrival="14" deadline="infinity" sender="sensor">callSensor()</message>
		</queue>
		<now>12</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="hc_unit">
		<statevariables>
			<variable name="HC_Unit.heaterOn" type="boolean">false</variable>
			<variable name="HC_Unit.coolerOn" type="boolean">false</variable>
			<variable name="HC_Unit.currentRegulation" type="int">0</variable>
		</statevariables>
		<queue>
			<message arrival="12" deadline="infinity" sender="controller">setHeating()</message>
			<message arrival="15" deadline="infinity" sender="hc_unit">regulateTemp()</message>
		</queue>
		<now>12</now>
		<pc></pc>
		<res></res>
	</rebec>
</state>
<transition source="459_0" destination="463_0" executionTime="12" shift="0"> <messageserver sender="controller" owner="controller" title="UPDATEOUTPUT"/></transition>
<transition source="462_0" destination="444_0" executionTime="12" shift="0"> <messageserver sender="controller" owner="hc_unit" title="SETCOOLING"/></transition>
<transition source="463_0" destination="442_0" executionTime="12" shift="0"> <messageserver sender="controller" owner="hc_unit" title="SETHEATING"/></transition>
<state id="464_0" atomicpropositions="" >
	<rebec name="room">
		<statevariables>
			<variable name="Room.currentTemp" type="int">21</variable>
			<variable name="Room.currentRegulation" type="int">0</variable>
			<variable name="Room.outside_air" type="int">0</variable>
		</statevariables>
		<queue>
			<message arrival="14" deadline="infinity" sender="sensor">getTemp()</message>
			<message arrival="20" deadline="infinity" sender="room">updateStatus()</message>
		</queue>
		<now>14</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="controller">
		<statevariables>
			<variable name="Controller.currentTemp" type="int">21</variable>
			<variable name="Controller.isHeating" type="boolean">false</variable>
			<variable name="Controller.isCooling" type="boolean">false</variable>
		</statevariables>
		<queue>
		</queue>
		<now>14</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="sensor">
		<statevariables>
		</statevariables>
		<queue>
			<message arrival="16" deadline="infinity" sender="sensor">callSensor()</message>
		</queue>
		<now>14</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="hc_unit">
		<statevariables>
			<variable name="HC_Unit.heaterOn" type="boolean">false</variable>
			<variable name="HC_Unit.coolerOn" type="boolean">false</variable>
			<variable name="HC_Unit.currentRegulation" type="int">0</variable>
		</statevariables>
		<queue>
			<message arrival="15" deadline="infinity" sender="hc_unit">regulateTemp()</message>
		</queue>
		<now>14</now>
		<pc></pc>
		<res></res>
	</rebec>
</state>
<transition source="416_0" destination="464_0" executionTime="14" shift="0"> <messageserver sender="sensor" owner="sensor" title="CALLSENSOR"/></transition>
<state id="465_0" atomicpropositions="isCooling," >
	<rebec name="room">
		<statevariables>
			<variable name="Room.currentTemp" type="int">24</variable>
			<variable name="Room.currentRegulation" type="int">-1</variable>
			<variable name="Room.outside_air" type="int">-1</variable>
		</statevariables>
		<queue>
			<message arrival="14" deadline="infinity" sender="sensor">getTemp()</message>
			<message arrival="20" deadline="infinity" sender="room">updateStatus()</message>
		</queue>
		<now>14</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="controller">
		<statevariables>
			<variable name="Controller.currentTemp" type="int">24</variable>
			<variable name="Controller.isHeating" type="boolean">false</variable>
			<variable name="Controller.isCooling" type="boolean">true</variable>
		</statevariables>
		<queue>
		</queue>
		<now>14</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="sensor">
		<statevariables>
		</statevariables>
		<queue>
			<message arrival="16" deadline="infinity" sender="sensor">callSensor()</message>
		</queue>
		<now>14</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="hc_unit">
		<statevariables>
			<variable name="HC_Unit.heaterOn" type="boolean">false</variable>
			<variable name="HC_Unit.coolerOn" type="boolean">true</variable>
			<variable name="HC_Unit.currentRegulation" type="int">-1</variable>
		</statevariables>
		<queue>
			<message arrival="15" deadline="infinity" sender="hc_unit">regulateTemp()</message>
		</queue>
		<now>14</now>
		<pc></pc>
		<res></res>
	</rebec>
</state>
<transition source="421_0" destination="465_0" executionTime="14" shift="0"> <messageserver sender="sensor" owner="sensor" title="CALLSENSOR"/></transition>
<state id="466_0" atomicpropositions="" >
	<rebec name="room">
		<statevariables>
			<variable name="Room.currentTemp" type="int">22</variable>
			<variable name="Room.currentRegulation" type="int">0</variable>
			<variable name="Room.outside_air" type="int">1</variable>
		</statevariables>
		<queue>
			<message arrival="14" deadline="infinity" sender="sensor">getTemp()</message>
			<message arrival="20" deadline="infinity" sender="room">updateStatus()</message>
		</queue>
		<now>14</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="controller">
		<statevariables>
			<variable name="Controller.currentTemp" type="int">22</variable>
			<variable name="Controller.isHeating" type="boolean">false</variable>
			<variable name="Controller.isCooling" type="boolean">false</variable>
		</statevariables>
		<queue>
		</queue>
		<now>14</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="sensor">
		<statevariables>
		</statevariables>
		<queue>
			<message arrival="16" deadline="infinity" sender="sensor">callSensor()</message>
		</queue>
		<now>14</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="hc_unit">
		<statevariables>
			<variable name="HC_Unit.heaterOn" type="boolean">false</variable>
			<variable name="HC_Unit.coolerOn" type="boolean">false</variable>
			<variable name="HC_Unit.currentRegulation" type="int">0</variable>
		</statevariables>
		<queue>
			<message arrival="15" deadline="infinity" sender="hc_unit">regulateTemp()</message>
		</queue>
		<now>14</now>
		<pc></pc>
		<res></res>
	</rebec>
</state>
<transition source="447_0" destination="466_0" executionTime="14" shift="0"> <messageserver sender="sensor" owner="sensor" title="CALLSENSOR"/></transition>
<state id="467_0" atomicpropositions="isCooling," >
	<rebec name="room">
		<statevariables>
			<variable name="Room.currentTemp" type="int">24</variable>
			<variable name="Room.currentRegulation" type="int">0</variable>
			<variable name="Room.outside_air" type="int">-1</variable>
		</statevariables>
		<queue>
			<message arrival="14" deadline="infinity" sender="sensor">getTemp()</message>
			<message arrival="20" deadline="infinity" sender="room">updateStatus()</message>
		</queue>
		<now>14</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="controller">
		<statevariables>
			<variable name="Controller.currentTemp" type="int">24</variable>
			<variable name="Controller.isHeating" type="boolean">false</variable>
			<variable name="Controller.isCooling" type="boolean">true</variable>
		</statevariables>
		<queue>
		</queue>
		<now>14</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="sensor">
		<statevariables>
		</statevariables>
		<queue>
			<message arrival="16" deadline="infinity" sender="sensor">callSensor()</message>
		</queue>
		<now>14</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="hc_unit">
		<statevariables>
			<variable name="HC_Unit.heaterOn" type="boolean">false</variable>
			<variable name="HC_Unit.coolerOn" type="boolean">true</variable>
			<variable name="HC_Unit.currentRegulation" type="int">-1</variable>
		</statevariables>
		<queue>
			<message arrival="15" deadline="infinity" sender="hc_unit">regulateTemp()</message>
		</queue>
		<now>14</now>
		<pc></pc>
		<res></res>
	</rebec>
</state>
<transition source="445_0" destination="467_0" executionTime="14" shift="0"> <messageserver sender="sensor" owner="sensor" title="CALLSENSOR"/></transition>
<state id="468_0" atomicpropositions="" >
	<rebec name="room">
		<statevariables>
			<variable name="Room.currentTemp" type="int">21</variable>
			<variable name="Room.currentRegulation" type="int">0</variable>
			<variable name="Room.outside_air" type="int">0</variable>
		</statevariables>
		<queue>
			<message arrival="20" deadline="infinity" sender="room">updateStatus()</message>
		</queue>
		<now>14</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="controller">
		<statevariables>
			<variable name="Controller.currentTemp" type="int">21</variable>
			<variable name="Controller.isHeating" type="boolean">false</variable>
			<variable name="Controller.isCooling" type="boolean">false</variable>
		</statevariables>
		<queue>
		</queue>
		<now>14</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="sensor">
		<statevariables>
		</statevariables>
		<queue>
			<message arrival="14" deadline="infinity" sender="room">setCurrent(21)</message>
			<message arrival="16" deadline="infinity" sender="sensor">callSensor()</message>
		</queue>
		<now>14</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="hc_unit">
		<statevariables>
			<variable name="HC_Unit.heaterOn" type="boolean">false</variable>
			<variable name="HC_Unit.coolerOn" type="boolean">false</variable>
			<variable name="HC_Unit.currentRegulation" type="int">0</variable>
		</statevariables>
		<queue>
			<message arrival="15" deadline="infinity" sender="hc_unit">regulateTemp()</message>
		</queue>
		<now>14</now>
		<pc></pc>
		<res></res>
	</rebec>
</state>
<transition source="464_0" destination="468_0" executionTime="14" shift="0"> <messageserver sender="sensor" owner="room" title="GETTEMP"/></transition>
<state id="469_0" atomicpropositions="isCooling," >
	<rebec name="room">
		<statevariables>
			<variable name="Room.currentTemp" type="int">24</variable>
			<variable name="Room.currentRegulation" type="int">-1</variable>
			<variable name="Room.outside_air" type="int">-1</variable>
		</statevariables>
		<queue>
			<message arrival="20" deadline="infinity" sender="room">updateStatus()</message>
		</queue>
		<now>14</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="controller">
		<statevariables>
			<variable name="Controller.currentTemp" type="int">24</variable>
			<variable name="Controller.isHeating" type="boolean">false</variable>
			<variable name="Controller.isCooling" type="boolean">true</variable>
		</statevariables>
		<queue>
		</queue>
		<now>14</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="sensor">
		<statevariables>
		</statevariables>
		<queue>
			<message arrival="14" deadline="infinity" sender="room">setCurrent(24)</message>
			<message arrival="16" deadline="infinity" sender="sensor">callSensor()</message>
		</queue>
		<now>14</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="hc_unit">
		<statevariables>
			<variable name="HC_Unit.heaterOn" type="boolean">false</variable>
			<variable name="HC_Unit.coolerOn" type="boolean">true</variable>
			<variable name="HC_Unit.currentRegulation" type="int">-1</variable>
		</statevariables>
		<queue>
			<message arrival="15" deadline="infinity" sender="hc_unit">regulateTemp()</message>
		</queue>
		<now>14</now>
		<pc></pc>
		<res></res>
	</rebec>
</state>
<transition source="465_0" destination="469_0" executionTime="14" shift="0"> <messageserver sender="sensor" owner="room" title="GETTEMP"/></transition>
<state id="470_0" atomicpropositions="" >
	<rebec name="room">
		<statevariables>
			<variable name="Room.currentTemp" type="int">22</variable>
			<variable name="Room.currentRegulation" type="int">0</variable>
			<variable name="Room.outside_air" type="int">1</variable>
		</statevariables>
		<queue>
			<message arrival="20" deadline="infinity" sender="room">updateStatus()</message>
		</queue>
		<now>14</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="controller">
		<statevariables>
			<variable name="Controller.currentTemp" type="int">22</variable>
			<variable name="Controller.isHeating" type="boolean">false</variable>
			<variable name="Controller.isCooling" type="boolean">false</variable>
		</statevariables>
		<queue>
		</queue>
		<now>14</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="sensor">
		<statevariables>
		</statevariables>
		<queue>
			<message arrival="14" deadline="infinity" sender="room">setCurrent(22)</message>
			<message arrival="16" deadline="infinity" sender="sensor">callSensor()</message>
		</queue>
		<now>14</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="hc_unit">
		<statevariables>
			<variable name="HC_Unit.heaterOn" type="boolean">false</variable>
			<variable name="HC_Unit.coolerOn" type="boolean">false</variable>
			<variable name="HC_Unit.currentRegulation" type="int">0</variable>
		</statevariables>
		<queue>
			<message arrival="15" deadline="infinity" sender="hc_unit">regulateTemp()</message>
		</queue>
		<now>14</now>
		<pc></pc>
		<res></res>
	</rebec>
</state>
<transition source="466_0" destination="470_0" executionTime="14" shift="0"> <messageserver sender="sensor" owner="room" title="GETTEMP"/></transition>
<state id="471_0" atomicpropositions="isCooling," >
	<rebec name="room">
		<statevariables>
			<variable name="Room.currentTemp" type="int">24</variable>
			<variable name="Room.currentRegulation" type="int">0</variable>
			<variable name="Room.outside_air" type="int">-1</variable>
		</statevariables>
		<queue>
			<message arrival="20" deadline="infinity" sender="room">updateStatus()</message>
		</queue>
		<now>14</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="controller">
		<statevariables>
			<variable name="Controller.currentTemp" type="int">24</variable>
			<variable name="Controller.isHeating" type="boolean">false</variable>
			<variable name="Controller.isCooling" type="boolean">true</variable>
		</statevariables>
		<queue>
		</queue>
		<now>14</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="sensor">
		<statevariables>
		</statevariables>
		<queue>
			<message arrival="14" deadline="infinity" sender="room">setCurrent(24)</message>
			<message arrival="16" deadline="infinity" sender="sensor">callSensor()</message>
		</queue>
		<now>14</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="hc_unit">
		<statevariables>
			<variable name="HC_Unit.heaterOn" type="boolean">false</variable>
			<variable name="HC_Unit.coolerOn" type="boolean">true</variable>
			<variable name="HC_Unit.currentRegulation" type="int">-1</variable>
		</statevariables>
		<queue>
			<message arrival="15" deadline="infinity" sender="hc_unit">regulateTemp()</message>
		</queue>
		<now>14</now>
		<pc></pc>
		<res></res>
	</rebec>
</state>
<transition source="467_0" destination="471_0" executionTime="14" shift="0"> <messageserver sender="sensor" owner="room" title="GETTEMP"/></transition>
<state id="472_0" atomicpropositions="" >
	<rebec name="room">
		<statevariables>
			<variable name="Room.currentTemp" type="int">21</variable>
			<variable name="Room.currentRegulation" type="int">0</variable>
			<variable name="Room.outside_air" type="int">0</variable>
		</statevariables>
		<queue>
			<message arrival="20" deadline="infinity" sender="room">updateStatus()</message>
		</queue>
		<now>14</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="controller">
		<statevariables>
			<variable name="Controller.currentTemp" type="int">21</variable>
			<variable name="Controller.isHeating" type="boolean">false</variable>
			<variable name="Controller.isCooling" type="boolean">false</variable>
		</statevariables>
		<queue>
			<message arrival="14" deadline="infinity" sender="sensor">setCurrent(21)</message>
		</queue>
		<now>14</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="sensor">
		<statevariables>
		</statevariables>
		<queue>
			<message arrival="16" deadline="infinity" sender="sensor">callSensor()</message>
		</queue>
		<now>14</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="hc_unit">
		<statevariables>
			<variable name="HC_Unit.heaterOn" type="boolean">false</variable>
			<variable name="HC_Unit.coolerOn" type="boolean">false</variable>
			<variable name="HC_Unit.currentRegulation" type="int">0</variable>
		</statevariables>
		<queue>
			<message arrival="15" deadline="infinity" sender="hc_unit">regulateTemp()</message>
		</queue>
		<now>14</now>
		<pc></pc>
		<res></res>
	</rebec>
</state>
<transition source="468_0" destination="472_0" executionTime="14" shift="0"> <messageserver sender="room" owner="sensor" title="SETCURRENT"/></transition>
<state id="473_0" atomicpropositions="isCooling," >
	<rebec name="room">
		<statevariables>
			<variable name="Room.currentTemp" type="int">24</variable>
			<variable name="Room.currentRegulation" type="int">-1</variable>
			<variable name="Room.outside_air" type="int">-1</variable>
		</statevariables>
		<queue>
			<message arrival="20" deadline="infinity" sender="room">updateStatus()</message>
		</queue>
		<now>14</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="controller">
		<statevariables>
			<variable name="Controller.currentTemp" type="int">24</variable>
			<variable name="Controller.isHeating" type="boolean">false</variable>
			<variable name="Controller.isCooling" type="boolean">true</variable>
		</statevariables>
		<queue>
			<message arrival="14" deadline="infinity" sender="sensor">setCurrent(24)</message>
		</queue>
		<now>14</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="sensor">
		<statevariables>
		</statevariables>
		<queue>
			<message arrival="16" deadline="infinity" sender="sensor">callSensor()</message>
		</queue>
		<now>14</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="hc_unit">
		<statevariables>
			<variable name="HC_Unit.heaterOn" type="boolean">false</variable>
			<variable name="HC_Unit.coolerOn" type="boolean">true</variable>
			<variable name="HC_Unit.currentRegulation" type="int">-1</variable>
		</statevariables>
		<queue>
			<message arrival="15" deadline="infinity" sender="hc_unit">regulateTemp()</message>
		</queue>
		<now>14</now>
		<pc></pc>
		<res></res>
	</rebec>
</state>
<transition source="469_0" destination="473_0" executionTime="14" shift="0"> <messageserver sender="room" owner="sensor" title="SETCURRENT"/></transition>
<state id="474_0" atomicpropositions="" >
	<rebec name="room">
		<statevariables>
			<variable name="Room.currentTemp" type="int">22</variable>
			<variable name="Room.currentRegulation" type="int">0</variable>
			<variable name="Room.outside_air" type="int">1</variable>
		</statevariables>
		<queue>
			<message arrival="20" deadline="infinity" sender="room">updateStatus()</message>
		</queue>
		<now>14</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="controller">
		<statevariables>
			<variable name="Controller.currentTemp" type="int">22</variable>
			<variable name="Controller.isHeating" type="boolean">false</variable>
			<variable name="Controller.isCooling" type="boolean">false</variable>
		</statevariables>
		<queue>
			<message arrival="14" deadline="infinity" sender="sensor">setCurrent(22)</message>
		</queue>
		<now>14</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="sensor">
		<statevariables>
		</statevariables>
		<queue>
			<message arrival="16" deadline="infinity" sender="sensor">callSensor()</message>
		</queue>
		<now>14</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="hc_unit">
		<statevariables>
			<variable name="HC_Unit.heaterOn" type="boolean">false</variable>
			<variable name="HC_Unit.coolerOn" type="boolean">false</variable>
			<variable name="HC_Unit.currentRegulation" type="int">0</variable>
		</statevariables>
		<queue>
			<message arrival="15" deadline="infinity" sender="hc_unit">regulateTemp()</message>
		</queue>
		<now>14</now>
		<pc></pc>
		<res></res>
	</rebec>
</state>
<transition source="470_0" destination="474_0" executionTime="14" shift="0"> <messageserver sender="room" owner="sensor" title="SETCURRENT"/></transition>
<state id="475_0" atomicpropositions="isCooling," >
	<rebec name="room">
		<statevariables>
			<variable name="Room.currentTemp" type="int">24</variable>
			<variable name="Room.currentRegulation" type="int">0</variable>
			<variable name="Room.outside_air" type="int">-1</variable>
		</statevariables>
		<queue>
			<message arrival="20" deadline="infinity" sender="room">updateStatus()</message>
		</queue>
		<now>14</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="controller">
		<statevariables>
			<variable name="Controller.currentTemp" type="int">24</variable>
			<variable name="Controller.isHeating" type="boolean">false</variable>
			<variable name="Controller.isCooling" type="boolean">true</variable>
		</statevariables>
		<queue>
			<message arrival="14" deadline="infinity" sender="sensor">setCurrent(24)</message>
		</queue>
		<now>14</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="sensor">
		<statevariables>
		</statevariables>
		<queue>
			<message arrival="16" deadline="infinity" sender="sensor">callSensor()</message>
		</queue>
		<now>14</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="hc_unit">
		<statevariables>
			<variable name="HC_Unit.heaterOn" type="boolean">false</variable>
			<variable name="HC_Unit.coolerOn" type="boolean">true</variable>
			<variable name="HC_Unit.currentRegulation" type="int">-1</variable>
		</statevariables>
		<queue>
			<message arrival="15" deadline="infinity" sender="hc_unit">regulateTemp()</message>
		</queue>
		<now>14</now>
		<pc></pc>
		<res></res>
	</rebec>
</state>
<transition source="471_0" destination="475_0" executionTime="14" shift="0"> <messageserver sender="room" owner="sensor" title="SETCURRENT"/></transition>
<state id="476_0" atomicpropositions="" >
	<rebec name="room">
		<statevariables>
			<variable name="Room.currentTemp" type="int">21</variable>
			<variable name="Room.currentRegulation" type="int">0</variable>
			<variable name="Room.outside_air" type="int">0</variable>
		</statevariables>
		<queue>
			<message arrival="20" deadline="infinity" sender="room">updateStatus()</message>
		</queue>
		<now>14</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="controller">
		<statevariables>
			<variable name="Controller.currentTemp" type="int">21</variable>
			<variable name="Controller.isHeating" type="boolean">false</variable>
			<variable name="Controller.isCooling" type="boolean">false</variable>
		</statevariables>
		<queue>
			<message arrival="14" deadline="infinity" sender="controller">updateOutput()</message>
		</queue>
		<now>14</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="sensor">
		<statevariables>
		</statevariables>
		<queue>
			<message arrival="16" deadline="infinity" sender="sensor">callSensor()</message>
		</queue>
		<now>14</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="hc_unit">
		<statevariables>
			<variable name="HC_Unit.heaterOn" type="boolean">false</variable>
			<variable name="HC_Unit.coolerOn" type="boolean">false</variable>
			<variable name="HC_Unit.currentRegulation" type="int">0</variable>
		</statevariables>
		<queue>
			<message arrival="15" deadline="infinity" sender="hc_unit">regulateTemp()</message>
		</queue>
		<now>14</now>
		<pc></pc>
		<res></res>
	</rebec>
</state>
<transition source="472_0" destination="476_0" executionTime="14" shift="0"> <messageserver sender="sensor" owner="controller" title="SETCURRENT"/></transition>
<state id="477_0" atomicpropositions="isCooling," >
	<rebec name="room">
		<statevariables>
			<variable name="Room.currentTemp" type="int">24</variable>
			<variable name="Room.currentRegulation" type="int">-1</variable>
			<variable name="Room.outside_air" type="int">-1</variable>
		</statevariables>
		<queue>
			<message arrival="20" deadline="infinity" sender="room">updateStatus()</message>
		</queue>
		<now>14</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="controller">
		<statevariables>
			<variable name="Controller.currentTemp" type="int">24</variable>
			<variable name="Controller.isHeating" type="boolean">false</variable>
			<variable name="Controller.isCooling" type="boolean">true</variable>
		</statevariables>
		<queue>
			<message arrival="14" deadline="infinity" sender="controller">updateOutput()</message>
		</queue>
		<now>14</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="sensor">
		<statevariables>
		</statevariables>
		<queue>
			<message arrival="16" deadline="infinity" sender="sensor">callSensor()</message>
		</queue>
		<now>14</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="hc_unit">
		<statevariables>
			<variable name="HC_Unit.heaterOn" type="boolean">false</variable>
			<variable name="HC_Unit.coolerOn" type="boolean">true</variable>
			<variable name="HC_Unit.currentRegulation" type="int">-1</variable>
		</statevariables>
		<queue>
			<message arrival="15" deadline="infinity" sender="hc_unit">regulateTemp()</message>
		</queue>
		<now>14</now>
		<pc></pc>
		<res></res>
	</rebec>
</state>
<transition source="473_0" destination="477_0" executionTime="14" shift="0"> <messageserver sender="sensor" owner="controller" title="SETCURRENT"/></transition>
<state id="478_0" atomicpropositions="" >
	<rebec name="room">
		<statevariables>
			<variable name="Room.currentTemp" type="int">22</variable>
			<variable name="Room.currentRegulation" type="int">0</variable>
			<variable name="Room.outside_air" type="int">1</variable>
		</statevariables>
		<queue>
			<message arrival="20" deadline="infinity" sender="room">updateStatus()</message>
		</queue>
		<now>14</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="controller">
		<statevariables>
			<variable name="Controller.currentTemp" type="int">22</variable>
			<variable name="Controller.isHeating" type="boolean">false</variable>
			<variable name="Controller.isCooling" type="boolean">false</variable>
		</statevariables>
		<queue>
			<message arrival="14" deadline="infinity" sender="controller">updateOutput()</message>
		</queue>
		<now>14</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="sensor">
		<statevariables>
		</statevariables>
		<queue>
			<message arrival="16" deadline="infinity" sender="sensor">callSensor()</message>
		</queue>
		<now>14</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="hc_unit">
		<statevariables>
			<variable name="HC_Unit.heaterOn" type="boolean">false</variable>
			<variable name="HC_Unit.coolerOn" type="boolean">false</variable>
			<variable name="HC_Unit.currentRegulation" type="int">0</variable>
		</statevariables>
		<queue>
			<message arrival="15" deadline="infinity" sender="hc_unit">regulateTemp()</message>
		</queue>
		<now>14</now>
		<pc></pc>
		<res></res>
	</rebec>
</state>
<transition source="474_0" destination="478_0" executionTime="14" shift="0"> <messageserver sender="sensor" owner="controller" title="SETCURRENT"/></transition>
<state id="479_0" atomicpropositions="isCooling," >
	<rebec name="room">
		<statevariables>
			<variable name="Room.currentTemp" type="int">24</variable>
			<variable name="Room.currentRegulation" type="int">0</variable>
			<variable name="Room.outside_air" type="int">-1</variable>
		</statevariables>
		<queue>
			<message arrival="20" deadline="infinity" sender="room">updateStatus()</message>
		</queue>
		<now>14</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="controller">
		<statevariables>
			<variable name="Controller.currentTemp" type="int">24</variable>
			<variable name="Controller.isHeating" type="boolean">false</variable>
			<variable name="Controller.isCooling" type="boolean">true</variable>
		</statevariables>
		<queue>
			<message arrival="14" deadline="infinity" sender="controller">updateOutput()</message>
		</queue>
		<now>14</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="sensor">
		<statevariables>
		</statevariables>
		<queue>
			<message arrival="16" deadline="infinity" sender="sensor">callSensor()</message>
		</queue>
		<now>14</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="hc_unit">
		<statevariables>
			<variable name="HC_Unit.heaterOn" type="boolean">false</variable>
			<variable name="HC_Unit.coolerOn" type="boolean">true</variable>
			<variable name="HC_Unit.currentRegulation" type="int">-1</variable>
		</statevariables>
		<queue>
			<message arrival="15" deadline="infinity" sender="hc_unit">regulateTemp()</message>
		</queue>
		<now>14</now>
		<pc></pc>
		<res></res>
	</rebec>
</state>
<transition source="475_0" destination="479_0" executionTime="14" shift="0"> <messageserver sender="sensor" owner="controller" title="SETCURRENT"/></transition>
<state id="480_0" atomicpropositions="" >
	<rebec name="room">
		<statevariables>
			<variable name="Room.currentTemp" type="int">21</variable>
			<variable name="Room.currentRegulation" type="int">0</variable>
			<variable name="Room.outside_air" type="int">0</variable>
		</statevariables>
		<queue>
			<message arrival="20" deadline="infinity" sender="room">updateStatus()</message>
		</queue>
		<now>14</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="controller">
		<statevariables>
			<variable name="Controller.currentTemp" type="int">21</variable>
			<variable name="Controller.isHeating" type="boolean">false</variable>
			<variable name="Controller.isCooling" type="boolean">false</variable>
		</statevariables>
		<queue>
		</queue>
		<now>14</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="sensor">
		<statevariables>
		</statevariables>
		<queue>
			<message arrival="16" deadline="infinity" sender="sensor">callSensor()</message>
		</queue>
		<now>14</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="hc_unit">
		<statevariables>
			<variable name="HC_Unit.heaterOn" type="boolean">false</variable>
			<variable name="HC_Unit.coolerOn" type="boolean">false</variable>
			<variable name="HC_Unit.currentRegulation" type="int">0</variable>
		</statevariables>
		<queue>
			<message arrival="15" deadline="infinity" sender="hc_unit">regulateTemp()</message>
		</queue>
		<now>14</now>
		<pc></pc>
		<res></res>
	</rebec>
</state>
<state id="481_0" atomicpropositions="" >
	<rebec name="room">
		<statevariables>
			<variable name="Room.currentTemp" type="int">21</variable>
			<variable name="Room.currentRegulation" type="int">0</variable>
			<variable name="Room.outside_air" type="int">0</variable>
		</statevariables>
		<queue>
			<message arrival="20" deadline="infinity" sender="room">updateStatus()</message>
		</queue>
		<now>15</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="controller">
		<statevariables>
			<variable name="Controller.currentTemp" type="int">21</variable>
			<variable name="Controller.isHeating" type="boolean">false</variable>
			<variable name="Controller.isCooling" type="boolean">false</variable>
		</statevariables>
		<queue>
		</queue>
		<now>15</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="sensor">
		<statevariables>
		</statevariables>
		<queue>
			<message arrival="16" deadline="infinity" sender="sensor">callSensor()</message>
		</queue>
		<now>15</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="hc_unit">
		<statevariables>
			<variable name="HC_Unit.heaterOn" type="boolean">false</variable>
			<variable name="HC_Unit.coolerOn" type="boolean">false</variable>
			<variable name="HC_Unit.currentRegulation" type="int">0</variable>
		</statevariables>
		<queue>
			<message arrival="15" deadline="infinity" sender="hc_unit">regulateTemp()</message>
		</queue>
		<now>15</now>
		<pc></pc>
		<res></res>
	</rebec>
</state>
<transition source="480_0" destination="481_0" executionTime="14" shift="0"> <time value="1"/></transition>
<transition source="476_0" destination="480_0" executionTime="14" shift="0"> <messageserver sender="controller" owner="controller" title="UPDATEOUTPUT"/></transition>
<state id="482_0" atomicpropositions="isCooling," >
	<rebec name="room">
		<statevariables>
			<variable name="Room.currentTemp" type="int">24</variable>
			<variable name="Room.currentRegulation" type="int">-1</variable>
			<variable name="Room.outside_air" type="int">-1</variable>
		</statevariables>
		<queue>
			<message arrival="20" deadline="infinity" sender="room">updateStatus()</message>
		</queue>
		<now>14</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="controller">
		<statevariables>
			<variable name="Controller.currentTemp" type="int">24</variable>
			<variable name="Controller.isHeating" type="boolean">false</variable>
			<variable name="Controller.isCooling" type="boolean">true</variable>
		</statevariables>
		<queue>
		</queue>
		<now>14</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="sensor">
		<statevariables>
		</statevariables>
		<queue>
			<message arrival="16" deadline="infinity" sender="sensor">callSensor()</message>
		</queue>
		<now>14</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="hc_unit">
		<statevariables>
			<variable name="HC_Unit.heaterOn" type="boolean">false</variable>
			<variable name="HC_Unit.coolerOn" type="boolean">true</variable>
			<variable name="HC_Unit.currentRegulation" type="int">-1</variable>
		</statevariables>
		<queue>
			<message arrival="15" deadline="infinity" sender="hc_unit">regulateTemp()</message>
		</queue>
		<now>14</now>
		<pc></pc>
		<res></res>
	</rebec>
</state>
<state id="483_0" atomicpropositions="isCooling," >
	<rebec name="room">
		<statevariables>
			<variable name="Room.currentTemp" type="int">24</variable>
			<variable name="Room.currentRegulation" type="int">-1</variable>
			<variable name="Room.outside_air" type="int">-1</variable>
		</statevariables>
		<queue>
			<message arrival="20" deadline="infinity" sender="room">updateStatus()</message>
		</queue>
		<now>15</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="controller">
		<statevariables>
			<variable name="Controller.currentTemp" type="int">24</variable>
			<variable name="Controller.isHeating" type="boolean">false</variable>
			<variable name="Controller.isCooling" type="boolean">true</variable>
		</statevariables>
		<queue>
		</queue>
		<now>15</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="sensor">
		<statevariables>
		</statevariables>
		<queue>
			<message arrival="16" deadline="infinity" sender="sensor">callSensor()</message>
		</queue>
		<now>15</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="hc_unit">
		<statevariables>
			<variable name="HC_Unit.heaterOn" type="boolean">false</variable>
			<variable name="HC_Unit.coolerOn" type="boolean">true</variable>
			<variable name="HC_Unit.currentRegulation" type="int">-1</variable>
		</statevariables>
		<queue>
			<message arrival="15" deadline="infinity" sender="hc_unit">regulateTemp()</message>
		</queue>
		<now>15</now>
		<pc></pc>
		<res></res>
	</rebec>
</state>
<transition source="482_0" destination="483_0" executionTime="14" shift="0"> <time value="1"/></transition>
<transition source="477_0" destination="482_0" executionTime="14" shift="0"> <messageserver sender="controller" owner="controller" title="UPDATEOUTPUT"/></transition>
<state id="484_0" atomicpropositions="" >
	<rebec name="room">
		<statevariables>
			<variable name="Room.currentTemp" type="int">22</variable>
			<variable name="Room.currentRegulation" type="int">0</variable>
			<variable name="Room.outside_air" type="int">1</variable>
		</statevariables>
		<queue>
			<message arrival="20" deadline="infinity" sender="room">updateStatus()</message>
		</queue>
		<now>14</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="controller">
		<statevariables>
			<variable name="Controller.currentTemp" type="int">22</variable>
			<variable name="Controller.isHeating" type="boolean">false</variable>
			<variable name="Controller.isCooling" type="boolean">false</variable>
		</statevariables>
		<queue>
		</queue>
		<now>14</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="sensor">
		<statevariables>
		</statevariables>
		<queue>
			<message arrival="16" deadline="infinity" sender="sensor">callSensor()</message>
		</queue>
		<now>14</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="hc_unit">
		<statevariables>
			<variable name="HC_Unit.heaterOn" type="boolean">false</variable>
			<variable name="HC_Unit.coolerOn" type="boolean">false</variable>
			<variable name="HC_Unit.currentRegulation" type="int">0</variable>
		</statevariables>
		<queue>
			<message arrival="15" deadline="infinity" sender="hc_unit">regulateTemp()</message>
		</queue>
		<now>14</now>
		<pc></pc>
		<res></res>
	</rebec>
</state>
<state id="485_0" atomicpropositions="" >
	<rebec name="room">
		<statevariables>
			<variable name="Room.currentTemp" type="int">22</variable>
			<variable name="Room.currentRegulation" type="int">0</variable>
			<variable name="Room.outside_air" type="int">1</variable>
		</statevariables>
		<queue>
			<message arrival="20" deadline="infinity" sender="room">updateStatus()</message>
		</queue>
		<now>15</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="controller">
		<statevariables>
			<variable name="Controller.currentTemp" type="int">22</variable>
			<variable name="Controller.isHeating" type="boolean">false</variable>
			<variable name="Controller.isCooling" type="boolean">false</variable>
		</statevariables>
		<queue>
		</queue>
		<now>15</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="sensor">
		<statevariables>
		</statevariables>
		<queue>
			<message arrival="16" deadline="infinity" sender="sensor">callSensor()</message>
		</queue>
		<now>15</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="hc_unit">
		<statevariables>
			<variable name="HC_Unit.heaterOn" type="boolean">false</variable>
			<variable name="HC_Unit.coolerOn" type="boolean">false</variable>
			<variable name="HC_Unit.currentRegulation" type="int">0</variable>
		</statevariables>
		<queue>
			<message arrival="15" deadline="infinity" sender="hc_unit">regulateTemp()</message>
		</queue>
		<now>15</now>
		<pc></pc>
		<res></res>
	</rebec>
</state>
<transition source="484_0" destination="485_0" executionTime="14" shift="0"> <time value="1"/></transition>
<transition source="478_0" destination="484_0" executionTime="14" shift="0"> <messageserver sender="controller" owner="controller" title="UPDATEOUTPUT"/></transition>
<state id="486_0" atomicpropositions="isCooling," >
	<rebec name="room">
		<statevariables>
			<variable name="Room.currentTemp" type="int">24</variable>
			<variable name="Room.currentRegulation" type="int">0</variable>
			<variable name="Room.outside_air" type="int">-1</variable>
		</statevariables>
		<queue>
			<message arrival="20" deadline="infinity" sender="room">updateStatus()</message>
		</queue>
		<now>14</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="controller">
		<statevariables>
			<variable name="Controller.currentTemp" type="int">24</variable>
			<variable name="Controller.isHeating" type="boolean">false</variable>
			<variable name="Controller.isCooling" type="boolean">true</variable>
		</statevariables>
		<queue>
		</queue>
		<now>14</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="sensor">
		<statevariables>
		</statevariables>
		<queue>
			<message arrival="16" deadline="infinity" sender="sensor">callSensor()</message>
		</queue>
		<now>14</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="hc_unit">
		<statevariables>
			<variable name="HC_Unit.heaterOn" type="boolean">false</variable>
			<variable name="HC_Unit.coolerOn" type="boolean">true</variable>
			<variable name="HC_Unit.currentRegulation" type="int">-1</variable>
		</statevariables>
		<queue>
			<message arrival="15" deadline="infinity" sender="hc_unit">regulateTemp()</message>
		</queue>
		<now>14</now>
		<pc></pc>
		<res></res>
	</rebec>
</state>
<state id="487_0" atomicpropositions="isCooling," >
	<rebec name="room">
		<statevariables>
			<variable name="Room.currentTemp" type="int">24</variable>
			<variable name="Room.currentRegulation" type="int">0</variable>
			<variable name="Room.outside_air" type="int">-1</variable>
		</statevariables>
		<queue>
			<message arrival="20" deadline="infinity" sender="room">updateStatus()</message>
		</queue>
		<now>15</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="controller">
		<statevariables>
			<variable name="Controller.currentTemp" type="int">24</variable>
			<variable name="Controller.isHeating" type="boolean">false</variable>
			<variable name="Controller.isCooling" type="boolean">true</variable>
		</statevariables>
		<queue>
		</queue>
		<now>15</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="sensor">
		<statevariables>
		</statevariables>
		<queue>
			<message arrival="16" deadline="infinity" sender="sensor">callSensor()</message>
		</queue>
		<now>15</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="hc_unit">
		<statevariables>
			<variable name="HC_Unit.heaterOn" type="boolean">false</variable>
			<variable name="HC_Unit.coolerOn" type="boolean">true</variable>
			<variable name="HC_Unit.currentRegulation" type="int">-1</variable>
		</statevariables>
		<queue>
			<message arrival="15" deadline="infinity" sender="hc_unit">regulateTemp()</message>
		</queue>
		<now>15</now>
		<pc></pc>
		<res></res>
	</rebec>
</state>
<transition source="486_0" destination="487_0" executionTime="14" shift="0"> <time value="1"/></transition>
<transition source="479_0" destination="486_0" executionTime="14" shift="0"> <messageserver sender="controller" owner="controller" title="UPDATEOUTPUT"/></transition>
<state id="488_0" atomicpropositions="" >
	<rebec name="room">
		<statevariables>
			<variable name="Room.currentTemp" type="int">22</variable>
			<variable name="Room.currentRegulation" type="int">0</variable>
			<variable name="Room.outside_air" type="int">-1</variable>
		</statevariables>
		<queue>
			<message arrival="14" deadline="infinity" sender="sensor">getTemp()</message>
			<message arrival="20" deadline="infinity" sender="room">updateStatus()</message>
		</queue>
		<now>14</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="controller">
		<statevariables>
			<variable name="Controller.currentTemp" type="int">22</variable>
			<variable name="Controller.isHeating" type="boolean">false</variable>
			<variable name="Controller.isCooling" type="boolean">false</variable>
		</statevariables>
		<queue>
		</queue>
		<now>14</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="sensor">
		<statevariables>
		</statevariables>
		<queue>
			<message arrival="16" deadline="infinity" sender="sensor">callSensor()</message>
		</queue>
		<now>14</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="hc_unit">
		<statevariables>
			<variable name="HC_Unit.heaterOn" type="boolean">false</variable>
			<variable name="HC_Unit.coolerOn" type="boolean">false</variable>
			<variable name="HC_Unit.currentRegulation" type="int">0</variable>
		</statevariables>
		<queue>
			<message arrival="15" deadline="infinity" sender="hc_unit">regulateTemp()</message>
		</queue>
		<now>14</now>
		<pc></pc>
		<res></res>
	</rebec>
</state>
<transition source="418_0" destination="488_0" executionTime="14" shift="0"> <messageserver sender="sensor" owner="sensor" title="CALLSENSOR"/></transition>
<state id="489_0" atomicpropositions="" >
	<rebec name="room">
		<statevariables>
			<variable name="Room.currentTemp" type="int">23</variable>
			<variable name="Room.currentRegulation" type="int">0</variable>
			<variable name="Room.outside_air" type="int">0</variable>
		</statevariables>
		<queue>
			<message arrival="14" deadline="infinity" sender="sensor">getTemp()</message>
			<message arrival="20" deadline="infinity" sender="room">updateStatus()</message>
		</queue>
		<now>14</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="controller">
		<statevariables>
			<variable name="Controller.currentTemp" type="int">23</variable>
			<variable name="Controller.isHeating" type="boolean">false</variable>
			<variable name="Controller.isCooling" type="boolean">false</variable>
		</statevariables>
		<queue>
		</queue>
		<now>14</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="sensor">
		<statevariables>
		</statevariables>
		<queue>
			<message arrival="16" deadline="infinity" sender="sensor">callSensor()</message>
		</queue>
		<now>14</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="hc_unit">
		<statevariables>
			<variable name="HC_Unit.heaterOn" type="boolean">false</variable>
			<variable name="HC_Unit.coolerOn" type="boolean">false</variable>
			<variable name="HC_Unit.currentRegulation" type="int">0</variable>
		</statevariables>
		<queue>
			<message arrival="15" deadline="infinity" sender="hc_unit">regulateTemp()</message>
		</queue>
		<now>14</now>
		<pc></pc>
		<res></res>
	</rebec>
</state>
<transition source="439_0" destination="489_0" executionTime="14" shift="0"> <messageserver sender="sensor" owner="sensor" title="CALLSENSOR"/></transition>
<state id="490_0" atomicpropositions="isHeating," >
	<rebec name="room">
		<statevariables>
			<variable name="Room.currentTemp" type="int">20</variable>
			<variable name="Room.currentRegulation" type="int">1</variable>
			<variable name="Room.outside_air" type="int">1</variable>
		</statevariables>
		<queue>
			<message arrival="14" deadline="infinity" sender="sensor">getTemp()</message>
			<message arrival="20" deadline="infinity" sender="room">updateStatus()</message>
		</queue>
		<now>14</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="controller">
		<statevariables>
			<variable name="Controller.currentTemp" type="int">20</variable>
			<variable name="Controller.isHeating" type="boolean">true</variable>
			<variable name="Controller.isCooling" type="boolean">false</variable>
		</statevariables>
		<queue>
		</queue>
		<now>14</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="sensor">
		<statevariables>
		</statevariables>
		<queue>
			<message arrival="16" deadline="infinity" sender="sensor">callSensor()</message>
		</queue>
		<now>14</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="hc_unit">
		<statevariables>
			<variable name="HC_Unit.heaterOn" type="boolean">true</variable>
			<variable name="HC_Unit.coolerOn" type="boolean">false</variable>
			<variable name="HC_Unit.currentRegulation" type="int">1</variable>
		</statevariables>
		<queue>
			<message arrival="15" deadline="infinity" sender="hc_unit">regulateTemp()</message>
		</queue>
		<now>14</now>
		<pc></pc>
		<res></res>
	</rebec>
</state>
<transition source="461_0" destination="490_0" executionTime="14" shift="0"> <messageserver sender="sensor" owner="sensor" title="CALLSENSOR"/></transition>
<state id="491_0" atomicpropositions="isHeating," >
	<rebec name="room">
		<statevariables>
			<variable name="Room.currentTemp" type="int">20</variable>
			<variable name="Room.currentRegulation" type="int">0</variable>
			<variable name="Room.outside_air" type="int">1</variable>
		</statevariables>
		<queue>
			<message arrival="14" deadline="infinity" sender="sensor">getTemp()</message>
			<message arrival="20" deadline="infinity" sender="room">updateStatus()</message>
		</queue>
		<now>14</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="controller">
		<statevariables>
			<variable name="Controller.currentTemp" type="int">20</variable>
			<variable name="Controller.isHeating" type="boolean">true</variable>
			<variable name="Controller.isCooling" type="boolean">false</variable>
		</statevariables>
		<queue>
		</queue>
		<now>14</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="sensor">
		<statevariables>
		</statevariables>
		<queue>
			<message arrival="16" deadline="infinity" sender="sensor">callSensor()</message>
		</queue>
		<now>14</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="hc_unit">
		<statevariables>
			<variable name="HC_Unit.heaterOn" type="boolean">true</variable>
			<variable name="HC_Unit.coolerOn" type="boolean">false</variable>
			<variable name="HC_Unit.currentRegulation" type="int">1</variable>
		</statevariables>
		<queue>
			<message arrival="15" deadline="infinity" sender="hc_unit">regulateTemp()</message>
		</queue>
		<now>14</now>
		<pc></pc>
		<res></res>
	</rebec>
</state>
<transition source="443_0" destination="491_0" executionTime="14" shift="0"> <messageserver sender="sensor" owner="sensor" title="CALLSENSOR"/></transition>
<state id="492_0" atomicpropositions="" >
	<rebec name="room">
		<statevariables>
			<variable name="Room.currentTemp" type="int">22</variable>
			<variable name="Room.currentRegulation" type="int">0</variable>
			<variable name="Room.outside_air" type="int">-1</variable>
		</statevariables>
		<queue>
			<message arrival="20" deadline="infinity" sender="room">updateStatus()</message>
		</queue>
		<now>14</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="controller">
		<statevariables>
			<variable name="Controller.currentTemp" type="int">22</variable>
			<variable name="Controller.isHeating" type="boolean">false</variable>
			<variable name="Controller.isCooling" type="boolean">false</variable>
		</statevariables>
		<queue>
		</queue>
		<now>14</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="sensor">
		<statevariables>
		</statevariables>
		<queue>
			<message arrival="14" deadline="infinity" sender="room">setCurrent(22)</message>
			<message arrival="16" deadline="infinity" sender="sensor">callSensor()</message>
		</queue>
		<now>14</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="hc_unit">
		<statevariables>
			<variable name="HC_Unit.heaterOn" type="boolean">false</variable>
			<variable name="HC_Unit.coolerOn" type="boolean">false</variable>
			<variable name="HC_Unit.currentRegulation" type="int">0</variable>
		</statevariables>
		<queue>
			<message arrival="15" deadline="infinity" sender="hc_unit">regulateTemp()</message>
		</queue>
		<now>14</now>
		<pc></pc>
		<res></res>
	</rebec>
</state>
<transition source="488_0" destination="492_0" executionTime="14" shift="0"> <messageserver sender="sensor" owner="room" title="GETTEMP"/></transition>
<state id="493_0" atomicpropositions="" >
	<rebec name="room">
		<statevariables>
			<variable name="Room.currentTemp" type="int">23</variable>
			<variable name="Room.currentRegulation" type="int">0</variable>
			<variable name="Room.outside_air" type="int">0</variable>
		</statevariables>
		<queue>
			<message arrival="20" deadline="infinity" sender="room">updateStatus()</message>
		</queue>
		<now>14</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="controller">
		<statevariables>
			<variable name="Controller.currentTemp" type="int">23</variable>
			<variable name="Controller.isHeating" type="boolean">false</variable>
			<variable name="Controller.isCooling" type="boolean">false</variable>
		</statevariables>
		<queue>
		</queue>
		<now>14</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="sensor">
		<statevariables>
		</statevariables>
		<queue>
			<message arrival="14" deadline="infinity" sender="room">setCurrent(23)</message>
			<message arrival="16" deadline="infinity" sender="sensor">callSensor()</message>
		</queue>
		<now>14</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="hc_unit">
		<statevariables>
			<variable name="HC_Unit.heaterOn" type="boolean">false</variable>
			<variable name="HC_Unit.coolerOn" type="boolean">false</variable>
			<variable name="HC_Unit.currentRegulation" type="int">0</variable>
		</statevariables>
		<queue>
			<message arrival="15" deadline="infinity" sender="hc_unit">regulateTemp()</message>
		</queue>
		<now>14</now>
		<pc></pc>
		<res></res>
	</rebec>
</state>
<transition source="489_0" destination="493_0" executionTime="14" shift="0"> <messageserver sender="sensor" owner="room" title="GETTEMP"/></transition>
<state id="494_0" atomicpropositions="isHeating," >
	<rebec name="room">
		<statevariables>
			<variable name="Room.currentTemp" type="int">20</variable>
			<variable name="Room.currentRegulation" type="int">1</variable>
			<variable name="Room.outside_air" type="int">1</variable>
		</statevariables>
		<queue>
			<message arrival="20" deadline="infinity" sender="room">updateStatus()</message>
		</queue>
		<now>14</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="controller">
		<statevariables>
			<variable name="Controller.currentTemp" type="int">20</variable>
			<variable name="Controller.isHeating" type="boolean">true</variable>
			<variable name="Controller.isCooling" type="boolean">false</variable>
		</statevariables>
		<queue>
		</queue>
		<now>14</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="sensor">
		<statevariables>
		</statevariables>
		<queue>
			<message arrival="14" deadline="infinity" sender="room">setCurrent(20)</message>
			<message arrival="16" deadline="infinity" sender="sensor">callSensor()</message>
		</queue>
		<now>14</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="hc_unit">
		<statevariables>
			<variable name="HC_Unit.heaterOn" type="boolean">true</variable>
			<variable name="HC_Unit.coolerOn" type="boolean">false</variable>
			<variable name="HC_Unit.currentRegulation" type="int">1</variable>
		</statevariables>
		<queue>
			<message arrival="15" deadline="infinity" sender="hc_unit">regulateTemp()</message>
		</queue>
		<now>14</now>
		<pc></pc>
		<res></res>
	</rebec>
</state>
<transition source="490_0" destination="494_0" executionTime="14" shift="0"> <messageserver sender="sensor" owner="room" title="GETTEMP"/></transition>
<state id="495_0" atomicpropositions="isHeating," >
	<rebec name="room">
		<statevariables>
			<variable name="Room.currentTemp" type="int">20</variable>
			<variable name="Room.currentRegulation" type="int">0</variable>
			<variable name="Room.outside_air" type="int">1</variable>
		</statevariables>
		<queue>
			<message arrival="20" deadline="infinity" sender="room">updateStatus()</message>
		</queue>
		<now>14</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="controller">
		<statevariables>
			<variable name="Controller.currentTemp" type="int">20</variable>
			<variable name="Controller.isHeating" type="boolean">true</variable>
			<variable name="Controller.isCooling" type="boolean">false</variable>
		</statevariables>
		<queue>
		</queue>
		<now>14</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="sensor">
		<statevariables>
		</statevariables>
		<queue>
			<message arrival="14" deadline="infinity" sender="room">setCurrent(20)</message>
			<message arrival="16" deadline="infinity" sender="sensor">callSensor()</message>
		</queue>
		<now>14</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="hc_unit">
		<statevariables>
			<variable name="HC_Unit.heaterOn" type="boolean">true</variable>
			<variable name="HC_Unit.coolerOn" type="boolean">false</variable>
			<variable name="HC_Unit.currentRegulation" type="int">1</variable>
		</statevariables>
		<queue>
			<message arrival="15" deadline="infinity" sender="hc_unit">regulateTemp()</message>
		</queue>
		<now>14</now>
		<pc></pc>
		<res></res>
	</rebec>
</state>
<transition source="491_0" destination="495_0" executionTime="14" shift="0"> <messageserver sender="sensor" owner="room" title="GETTEMP"/></transition>
<state id="496_0" atomicpropositions="" >
	<rebec name="room">
		<statevariables>
			<variable name="Room.currentTemp" type="int">22</variable>
			<variable name="Room.currentRegulation" type="int">0</variable>
			<variable name="Room.outside_air" type="int">-1</variable>
		</statevariables>
		<queue>
			<message arrival="20" deadline="infinity" sender="room">updateStatus()</message>
		</queue>
		<now>14</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="controller">
		<statevariables>
			<variable name="Controller.currentTemp" type="int">22</variable>
			<variable name="Controller.isHeating" type="boolean">false</variable>
			<variable name="Controller.isCooling" type="boolean">false</variable>
		</statevariables>
		<queue>
			<message arrival="14" deadline="infinity" sender="sensor">setCurrent(22)</message>
		</queue>
		<now>14</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="sensor">
		<statevariables>
		</statevariables>
		<queue>
			<message arrival="16" deadline="infinity" sender="sensor">callSensor()</message>
		</queue>
		<now>14</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="hc_unit">
		<statevariables>
			<variable name="HC_Unit.heaterOn" type="boolean">false</variable>
			<variable name="HC_Unit.coolerOn" type="boolean">false</variable>
			<variable name="HC_Unit.currentRegulation" type="int">0</variable>
		</statevariables>
		<queue>
			<message arrival="15" deadline="infinity" sender="hc_unit">regulateTemp()</message>
		</queue>
		<now>14</now>
		<pc></pc>
		<res></res>
	</rebec>
</state>
<transition source="492_0" destination="496_0" executionTime="14" shift="0"> <messageserver sender="room" owner="sensor" title="SETCURRENT"/></transition>
<state id="497_0" atomicpropositions="" >
	<rebec name="room">
		<statevariables>
			<variable name="Room.currentTemp" type="int">23</variable>
			<variable name="Room.currentRegulation" type="int">0</variable>
			<variable name="Room.outside_air" type="int">0</variable>
		</statevariables>
		<queue>
			<message arrival="20" deadline="infinity" sender="room">updateStatus()</message>
		</queue>
		<now>14</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="controller">
		<statevariables>
			<variable name="Controller.currentTemp" type="int">23</variable>
			<variable name="Controller.isHeating" type="boolean">false</variable>
			<variable name="Controller.isCooling" type="boolean">false</variable>
		</statevariables>
		<queue>
			<message arrival="14" deadline="infinity" sender="sensor">setCurrent(23)</message>
		</queue>
		<now>14</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="sensor">
		<statevariables>
		</statevariables>
		<queue>
			<message arrival="16" deadline="infinity" sender="sensor">callSensor()</message>
		</queue>
		<now>14</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="hc_unit">
		<statevariables>
			<variable name="HC_Unit.heaterOn" type="boolean">false</variable>
			<variable name="HC_Unit.coolerOn" type="boolean">false</variable>
			<variable name="HC_Unit.currentRegulation" type="int">0</variable>
		</statevariables>
		<queue>
			<message arrival="15" deadline="infinity" sender="hc_unit">regulateTemp()</message>
		</queue>
		<now>14</now>
		<pc></pc>
		<res></res>
	</rebec>
</state>
<transition source="493_0" destination="497_0" executionTime="14" shift="0"> <messageserver sender="room" owner="sensor" title="SETCURRENT"/></transition>
<state id="498_0" atomicpropositions="isHeating," >
	<rebec name="room">
		<statevariables>
			<variable name="Room.currentTemp" type="int">20</variable>
			<variable name="Room.currentRegulation" type="int">1</variable>
			<variable name="Room.outside_air" type="int">1</variable>
		</statevariables>
		<queue>
			<message arrival="20" deadline="infinity" sender="room">updateStatus()</message>
		</queue>
		<now>14</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="controller">
		<statevariables>
			<variable name="Controller.currentTemp" type="int">20</variable>
			<variable name="Controller.isHeating" type="boolean">true</variable>
			<variable name="Controller.isCooling" type="boolean">false</variable>
		</statevariables>
		<queue>
			<message arrival="14" deadline="infinity" sender="sensor">setCurrent(20)</message>
		</queue>
		<now>14</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="sensor">
		<statevariables>
		</statevariables>
		<queue>
			<message arrival="16" deadline="infinity" sender="sensor">callSensor()</message>
		</queue>
		<now>14</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="hc_unit">
		<statevariables>
			<variable name="HC_Unit.heaterOn" type="boolean">true</variable>
			<variable name="HC_Unit.coolerOn" type="boolean">false</variable>
			<variable name="HC_Unit.currentRegulation" type="int">1</variable>
		</statevariables>
		<queue>
			<message arrival="15" deadline="infinity" sender="hc_unit">regulateTemp()</message>
		</queue>
		<now>14</now>
		<pc></pc>
		<res></res>
	</rebec>
</state>
<transition source="494_0" destination="498_0" executionTime="14" shift="0"> <messageserver sender="room" owner="sensor" title="SETCURRENT"/></transition>
<state id="499_0" atomicpropositions="isHeating," >
	<rebec name="room">
		<statevariables>
			<variable name="Room.currentTemp" type="int">20</variable>
			<variable name="Room.currentRegulation" type="int">0</variable>
			<variable name="Room.outside_air" type="int">1</variable>
		</statevariables>
		<queue>
			<message arrival="20" deadline="infinity" sender="room">updateStatus()</message>
		</queue>
		<now>14</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="controller">
		<statevariables>
			<variable name="Controller.currentTemp" type="int">20</variable>
			<variable name="Controller.isHeating" type="boolean">true</variable>
			<variable name="Controller.isCooling" type="boolean">false</variable>
		</statevariables>
		<queue>
			<message arrival="14" deadline="infinity" sender="sensor">setCurrent(20)</message>
		</queue>
		<now>14</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="sensor">
		<statevariables>
		</statevariables>
		<queue>
			<message arrival="16" deadline="infinity" sender="sensor">callSensor()</message>
		</queue>
		<now>14</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="hc_unit">
		<statevariables>
			<variable name="HC_Unit.heaterOn" type="boolean">true</variable>
			<variable name="HC_Unit.coolerOn" type="boolean">false</variable>
			<variable name="HC_Unit.currentRegulation" type="int">1</variable>
		</statevariables>
		<queue>
			<message arrival="15" deadline="infinity" sender="hc_unit">regulateTemp()</message>
		</queue>
		<now>14</now>
		<pc></pc>
		<res></res>
	</rebec>
</state>
<transition source="495_0" destination="499_0" executionTime="14" shift="0"> <messageserver sender="room" owner="sensor" title="SETCURRENT"/></transition>
<state id="500_0" atomicpropositions="" >
	<rebec name="room">
		<statevariables>
			<variable name="Room.currentTemp" type="int">22</variable>
			<variable name="Room.currentRegulation" type="int">0</variable>
			<variable name="Room.outside_air" type="int">-1</variable>
		</statevariables>
		<queue>
			<message arrival="20" deadline="infinity" sender="room">updateStatus()</message>
		</queue>
		<now>14</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="controller">
		<statevariables>
			<variable name="Controller.currentTemp" type="int">22</variable>
			<variable name="Controller.isHeating" type="boolean">false</variable>
			<variable name="Controller.isCooling" type="boolean">false</variable>
		</statevariables>
		<queue>
			<message arrival="14" deadline="infinity" sender="controller">updateOutput()</message>
		</queue>
		<now>14</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="sensor">
		<statevariables>
		</statevariables>
		<queue>
			<message arrival="16" deadline="infinity" sender="sensor">callSensor()</message>
		</queue>
		<now>14</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="hc_unit">
		<statevariables>
			<variable name="HC_Unit.heaterOn" type="boolean">false</variable>
			<variable name="HC_Unit.coolerOn" type="boolean">false</variable>
			<variable name="HC_Unit.currentRegulation" type="int">0</variable>
		</statevariables>
		<queue>
			<message arrival="15" deadline="infinity" sender="hc_unit">regulateTemp()</message>
		</queue>
		<now>14</now>
		<pc></pc>
		<res></res>
	</rebec>
</state>
<transition source="496_0" destination="500_0" executionTime="14" shift="0"> <messageserver sender="sensor" owner="controller" title="SETCURRENT"/></transition>
<state id="501_0" atomicpropositions="" >
	<rebec name="room">
		<statevariables>
			<variable name="Room.currentTemp" type="int">23</variable>
			<variable name="Room.currentRegulation" type="int">0</variable>
			<variable name="Room.outside_air" type="int">0</variable>
		</statevariables>
		<queue>
			<message arrival="20" deadline="infinity" sender="room">updateStatus()</message>
		</queue>
		<now>14</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="controller">
		<statevariables>
			<variable name="Controller.currentTemp" type="int">23</variable>
			<variable name="Controller.isHeating" type="boolean">false</variable>
			<variable name="Controller.isCooling" type="boolean">false</variable>
		</statevariables>
		<queue>
			<message arrival="14" deadline="infinity" sender="controller">updateOutput()</message>
		</queue>
		<now>14</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="sensor">
		<statevariables>
		</statevariables>
		<queue>
			<message arrival="16" deadline="infinity" sender="sensor">callSensor()</message>
		</queue>
		<now>14</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="hc_unit">
		<statevariables>
			<variable name="HC_Unit.heaterOn" type="boolean">false</variable>
			<variable name="HC_Unit.coolerOn" type="boolean">false</variable>
			<variable name="HC_Unit.currentRegulation" type="int">0</variable>
		</statevariables>
		<queue>
			<message arrival="15" deadline="infinity" sender="hc_unit">regulateTemp()</message>
		</queue>
		<now>14</now>
		<pc></pc>
		<res></res>
	</rebec>
</state>
<transition source="497_0" destination="501_0" executionTime="14" shift="0"> <messageserver sender="sensor" owner="controller" title="SETCURRENT"/></transition>
<state id="502_0" atomicpropositions="isHeating," >
	<rebec name="room">
		<statevariables>
			<variable name="Room.currentTemp" type="int">20</variable>
			<variable name="Room.currentRegulation" type="int">1</variable>
			<variable name="Room.outside_air" type="int">1</variable>
		</statevariables>
		<queue>
			<message arrival="20" deadline="infinity" sender="room">updateStatus()</message>
		</queue>
		<now>14</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="controller">
		<statevariables>
			<variable name="Controller.currentTemp" type="int">20</variable>
			<variable name="Controller.isHeating" type="boolean">true</variable>
			<variable name="Controller.isCooling" type="boolean">false</variable>
		</statevariables>
		<queue>
			<message arrival="14" deadline="infinity" sender="controller">updateOutput()</message>
		</queue>
		<now>14</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="sensor">
		<statevariables>
		</statevariables>
		<queue>
			<message arrival="16" deadline="infinity" sender="sensor">callSensor()</message>
		</queue>
		<now>14</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="hc_unit">
		<statevariables>
			<variable name="HC_Unit.heaterOn" type="boolean">true</variable>
			<variable name="HC_Unit.coolerOn" type="boolean">false</variable>
			<variable name="HC_Unit.currentRegulation" type="int">1</variable>
		</statevariables>
		<queue>
			<message arrival="15" deadline="infinity" sender="hc_unit">regulateTemp()</message>
		</queue>
		<now>14</now>
		<pc></pc>
		<res></res>
	</rebec>
</state>
<transition source="498_0" destination="502_0" executionTime="14" shift="0"> <messageserver sender="sensor" owner="controller" title="SETCURRENT"/></transition>
<state id="503_0" atomicpropositions="isHeating," >
	<rebec name="room">
		<statevariables>
			<variable name="Room.currentTemp" type="int">20</variable>
			<variable name="Room.currentRegulation" type="int">0</variable>
			<variable name="Room.outside_air" type="int">1</variable>
		</statevariables>
		<queue>
			<message arrival="20" deadline="infinity" sender="room">updateStatus()</message>
		</queue>
		<now>14</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="controller">
		<statevariables>
			<variable name="Controller.currentTemp" type="int">20</variable>
			<variable name="Controller.isHeating" type="boolean">true</variable>
			<variable name="Controller.isCooling" type="boolean">false</variable>
		</statevariables>
		<queue>
			<message arrival="14" deadline="infinity" sender="controller">updateOutput()</message>
		</queue>
		<now>14</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="sensor">
		<statevariables>
		</statevariables>
		<queue>
			<message arrival="16" deadline="infinity" sender="sensor">callSensor()</message>
		</queue>
		<now>14</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="hc_unit">
		<statevariables>
			<variable name="HC_Unit.heaterOn" type="boolean">true</variable>
			<variable name="HC_Unit.coolerOn" type="boolean">false</variable>
			<variable name="HC_Unit.currentRegulation" type="int">1</variable>
		</statevariables>
		<queue>
			<message arrival="15" deadline="infinity" sender="hc_unit">regulateTemp()</message>
		</queue>
		<now>14</now>
		<pc></pc>
		<res></res>
	</rebec>
</state>
<transition source="499_0" destination="503_0" executionTime="14" shift="0"> <messageserver sender="sensor" owner="controller" title="SETCURRENT"/></transition>
<state id="504_0" atomicpropositions="" >
	<rebec name="room">
		<statevariables>
			<variable name="Room.currentTemp" type="int">22</variable>
			<variable name="Room.currentRegulation" type="int">0</variable>
			<variable name="Room.outside_air" type="int">-1</variable>
		</statevariables>
		<queue>
			<message arrival="20" deadline="infinity" sender="room">updateStatus()</message>
		</queue>
		<now>14</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="controller">
		<statevariables>
			<variable name="Controller.currentTemp" type="int">22</variable>
			<variable name="Controller.isHeating" type="boolean">false</variable>
			<variable name="Controller.isCooling" type="boolean">false</variable>
		</statevariables>
		<queue>
		</queue>
		<now>14</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="sensor">
		<statevariables>
		</statevariables>
		<queue>
			<message arrival="16" deadline="infinity" sender="sensor">callSensor()</message>
		</queue>
		<now>14</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="hc_unit">
		<statevariables>
			<variable name="HC_Unit.heaterOn" type="boolean">false</variable>
			<variable name="HC_Unit.coolerOn" type="boolean">false</variable>
			<variable name="HC_Unit.currentRegulation" type="int">0</variable>
		</statevariables>
		<queue>
			<message arrival="15" deadline="infinity" sender="hc_unit">regulateTemp()</message>
		</queue>
		<now>14</now>
		<pc></pc>
		<res></res>
	</rebec>
</state>
<state id="505_0" atomicpropositions="" >
	<rebec name="room">
		<statevariables>
			<variable name="Room.currentTemp" type="int">22</variable>
			<variable name="Room.currentRegulation" type="int">0</variable>
			<variable name="Room.outside_air" type="int">-1</variable>
		</statevariables>
		<queue>
			<message arrival="20" deadline="infinity" sender="room">updateStatus()</message>
		</queue>
		<now>15</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="controller">
		<statevariables>
			<variable name="Controller.currentTemp" type="int">22</variable>
			<variable name="Controller.isHeating" type="boolean">false</variable>
			<variable name="Controller.isCooling" type="boolean">false</variable>
		</statevariables>
		<queue>
		</queue>
		<now>15</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="sensor">
		<statevariables>
		</statevariables>
		<queue>
			<message arrival="16" deadline="infinity" sender="sensor">callSensor()</message>
		</queue>
		<now>15</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="hc_unit">
		<statevariables>
			<variable name="HC_Unit.heaterOn" type="boolean">false</variable>
			<variable name="HC_Unit.coolerOn" type="boolean">false</variable>
			<variable name="HC_Unit.currentRegulation" type="int">0</variable>
		</statevariables>
		<queue>
			<message arrival="15" deadline="infinity" sender="hc_unit">regulateTemp()</message>
		</queue>
		<now>15</now>
		<pc></pc>
		<res></res>
	</rebec>
</state>
<transition source="504_0" destination="505_0" executionTime="14" shift="0"> <time value="1"/></transition>
<transition source="500_0" destination="504_0" executionTime="14" shift="0"> <messageserver sender="controller" owner="controller" title="UPDATEOUTPUT"/></transition>
<state id="506_0" atomicpropositions="" >
	<rebec name="room">
		<statevariables>
			<variable name="Room.currentTemp" type="int">23</variable>
			<variable name="Room.currentRegulation" type="int">0</variable>
			<variable name="Room.outside_air" type="int">0</variable>
		</statevariables>
		<queue>
			<message arrival="20" deadline="infinity" sender="room">updateStatus()</message>
		</queue>
		<now>14</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="controller">
		<statevariables>
			<variable name="Controller.currentTemp" type="int">23</variable>
			<variable name="Controller.isHeating" type="boolean">false</variable>
			<variable name="Controller.isCooling" type="boolean">false</variable>
		</statevariables>
		<queue>
		</queue>
		<now>14</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="sensor">
		<statevariables>
		</statevariables>
		<queue>
			<message arrival="16" deadline="infinity" sender="sensor">callSensor()</message>
		</queue>
		<now>14</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="hc_unit">
		<statevariables>
			<variable name="HC_Unit.heaterOn" type="boolean">false</variable>
			<variable name="HC_Unit.coolerOn" type="boolean">false</variable>
			<variable name="HC_Unit.currentRegulation" type="int">0</variable>
		</statevariables>
		<queue>
			<message arrival="15" deadline="infinity" sender="hc_unit">regulateTemp()</message>
		</queue>
		<now>14</now>
		<pc></pc>
		<res></res>
	</rebec>
</state>
<state id="507_0" atomicpropositions="" >
	<rebec name="room">
		<statevariables>
			<variable name="Room.currentTemp" type="int">23</variable>
			<variable name="Room.currentRegulation" type="int">0</variable>
			<variable name="Room.outside_air" type="int">0</variable>
		</statevariables>
		<queue>
			<message arrival="20" deadline="infinity" sender="room">updateStatus()</message>
		</queue>
		<now>15</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="controller">
		<statevariables>
			<variable name="Controller.currentTemp" type="int">23</variable>
			<variable name="Controller.isHeating" type="boolean">false</variable>
			<variable name="Controller.isCooling" type="boolean">false</variable>
		</statevariables>
		<queue>
		</queue>
		<now>15</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="sensor">
		<statevariables>
		</statevariables>
		<queue>
			<message arrival="16" deadline="infinity" sender="sensor">callSensor()</message>
		</queue>
		<now>15</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="hc_unit">
		<statevariables>
			<variable name="HC_Unit.heaterOn" type="boolean">false</variable>
			<variable name="HC_Unit.coolerOn" type="boolean">false</variable>
			<variable name="HC_Unit.currentRegulation" type="int">0</variable>
		</statevariables>
		<queue>
			<message arrival="15" deadline="infinity" sender="hc_unit">regulateTemp()</message>
		</queue>
		<now>15</now>
		<pc></pc>
		<res></res>
	</rebec>
</state>
<transition source="506_0" destination="507_0" executionTime="14" shift="0"> <time value="1"/></transition>
<transition source="501_0" destination="506_0" executionTime="14" shift="0"> <messageserver sender="controller" owner="controller" title="UPDATEOUTPUT"/></transition>
<state id="508_0" atomicpropositions="isHeating," >
	<rebec name="room">
		<statevariables>
			<variable name="Room.currentTemp" type="int">20</variable>
			<variable name="Room.currentRegulation" type="int">1</variable>
			<variable name="Room.outside_air" type="int">1</variable>
		</statevariables>
		<queue>
			<message arrival="20" deadline="infinity" sender="room">updateStatus()</message>
		</queue>
		<now>14</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="controller">
		<statevariables>
			<variable name="Controller.currentTemp" type="int">20</variable>
			<variable name="Controller.isHeating" type="boolean">true</variable>
			<variable name="Controller.isCooling" type="boolean">false</variable>
		</statevariables>
		<queue>
		</queue>
		<now>14</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="sensor">
		<statevariables>
		</statevariables>
		<queue>
			<message arrival="16" deadline="infinity" sender="sensor">callSensor()</message>
		</queue>
		<now>14</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="hc_unit">
		<statevariables>
			<variable name="HC_Unit.heaterOn" type="boolean">true</variable>
			<variable name="HC_Unit.coolerOn" type="boolean">false</variable>
			<variable name="HC_Unit.currentRegulation" type="int">1</variable>
		</statevariables>
		<queue>
			<message arrival="15" deadline="infinity" sender="hc_unit">regulateTemp()</message>
		</queue>
		<now>14</now>
		<pc></pc>
		<res></res>
	</rebec>
</state>
<state id="509_0" atomicpropositions="isHeating," >
	<rebec name="room">
		<statevariables>
			<variable name="Room.currentTemp" type="int">20</variable>
			<variable name="Room.currentRegulation" type="int">1</variable>
			<variable name="Room.outside_air" type="int">1</variable>
		</statevariables>
		<queue>
			<message arrival="20" deadline="infinity" sender="room">updateStatus()</message>
		</queue>
		<now>15</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="controller">
		<statevariables>
			<variable name="Controller.currentTemp" type="int">20</variable>
			<variable name="Controller.isHeating" type="boolean">true</variable>
			<variable name="Controller.isCooling" type="boolean">false</variable>
		</statevariables>
		<queue>
		</queue>
		<now>15</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="sensor">
		<statevariables>
		</statevariables>
		<queue>
			<message arrival="16" deadline="infinity" sender="sensor">callSensor()</message>
		</queue>
		<now>15</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="hc_unit">
		<statevariables>
			<variable name="HC_Unit.heaterOn" type="boolean">true</variable>
			<variable name="HC_Unit.coolerOn" type="boolean">false</variable>
			<variable name="HC_Unit.currentRegulation" type="int">1</variable>
		</statevariables>
		<queue>
			<message arrival="15" deadline="infinity" sender="hc_unit">regulateTemp()</message>
		</queue>
		<now>15</now>
		<pc></pc>
		<res></res>
	</rebec>
</state>
<transition source="508_0" destination="509_0" executionTime="14" shift="0"> <time value="1"/></transition>
<transition source="502_0" destination="508_0" executionTime="14" shift="0"> <messageserver sender="controller" owner="controller" title="UPDATEOUTPUT"/></transition>
<state id="510_0" atomicpropositions="isHeating," >
	<rebec name="room">
		<statevariables>
			<variable name="Room.currentTemp" type="int">20</variable>
			<variable name="Room.currentRegulation" type="int">0</variable>
			<variable name="Room.outside_air" type="int">1</variable>
		</statevariables>
		<queue>
			<message arrival="20" deadline="infinity" sender="room">updateStatus()</message>
		</queue>
		<now>14</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="controller">
		<statevariables>
			<variable name="Controller.currentTemp" type="int">20</variable>
			<variable name="Controller.isHeating" type="boolean">true</variable>
			<variable name="Controller.isCooling" type="boolean">false</variable>
		</statevariables>
		<queue>
		</queue>
		<now>14</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="sensor">
		<statevariables>
		</statevariables>
		<queue>
			<message arrival="16" deadline="infinity" sender="sensor">callSensor()</message>
		</queue>
		<now>14</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="hc_unit">
		<statevariables>
			<variable name="HC_Unit.heaterOn" type="boolean">true</variable>
			<variable name="HC_Unit.coolerOn" type="boolean">false</variable>
			<variable name="HC_Unit.currentRegulation" type="int">1</variable>
		</statevariables>
		<queue>
			<message arrival="15" deadline="infinity" sender="hc_unit">regulateTemp()</message>
		</queue>
		<now>14</now>
		<pc></pc>
		<res></res>
	</rebec>
</state>
<state id="511_0" atomicpropositions="isHeating," >
	<rebec name="room">
		<statevariables>
			<variable name="Room.currentTemp" type="int">20</variable>
			<variable name="Room.currentRegulation" type="int">0</variable>
			<variable name="Room.outside_air" type="int">1</variable>
		</statevariables>
		<queue>
			<message arrival="20" deadline="infinity" sender="room">updateStatus()</message>
		</queue>
		<now>15</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="controller">
		<statevariables>
			<variable name="Controller.currentTemp" type="int">20</variable>
			<variable name="Controller.isHeating" type="boolean">true</variable>
			<variable name="Controller.isCooling" type="boolean">false</variable>
		</statevariables>
		<queue>
		</queue>
		<now>15</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="sensor">
		<statevariables>
		</statevariables>
		<queue>
			<message arrival="16" deadline="infinity" sender="sensor">callSensor()</message>
		</queue>
		<now>15</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="hc_unit">
		<statevariables>
			<variable name="HC_Unit.heaterOn" type="boolean">true</variable>
			<variable name="HC_Unit.coolerOn" type="boolean">false</variable>
			<variable name="HC_Unit.currentRegulation" type="int">1</variable>
		</statevariables>
		<queue>
			<message arrival="15" deadline="infinity" sender="hc_unit">regulateTemp()</message>
		</queue>
		<now>15</now>
		<pc></pc>
		<res></res>
	</rebec>
</state>
<transition source="510_0" destination="511_0" executionTime="14" shift="0"> <time value="1"/></transition>
<transition source="503_0" destination="510_0" executionTime="14" shift="0"> <messageserver sender="controller" owner="controller" title="UPDATEOUTPUT"/></transition>
<state id="512_0" atomicpropositions="" >
	<rebec name="room">
		<statevariables>
			<variable name="Room.currentTemp" type="int">21</variable>
			<variable name="Room.currentRegulation" type="int">0</variable>
			<variable name="Room.outside_air" type="int">0</variable>
		</statevariables>
		<queue>
			<message arrival="15" deadline="infinity" sender="hc_unit">setRegulation(0)</message>
			<message arrival="20" deadline="infinity" sender="room">updateStatus()</message>
		</queue>
		<now>15</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="controller">
		<statevariables>
			<variable name="Controller.currentTemp" type="int">21</variable>
			<variable name="Controller.isHeating" type="boolean">false</variable>
			<variable name="Controller.isCooling" type="boolean">false</variable>
		</statevariables>
		<queue>
		</queue>
		<now>15</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="sensor">
		<statevariables>
		</statevariables>
		<queue>
			<message arrival="16" deadline="infinity" sender="sensor">callSensor()</message>
		</queue>
		<now>15</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="hc_unit">
		<statevariables>
			<variable name="HC_Unit.heaterOn" type="boolean">false</variable>
			<variable name="HC_Unit.coolerOn" type="boolean">false</variable>
			<variable name="HC_Unit.currentRegulation" type="int">0</variable>
		</statevariables>
		<queue>
			<message arrival="20" deadline="infinity" sender="hc_unit">regulateTemp()</message>
		</queue>
		<now>15</now>
		<pc></pc>
		<res></res>
	</rebec>
</state>
<transition source="481_0" destination="512_0" executionTime="15" shift="0"> <messageserver sender="hc_unit" owner="hc_unit" title="REGULATETEMP"/></transition>
<state id="513_0" atomicpropositions="" >
	<rebec name="room">
		<statevariables>
			<variable name="Room.currentTemp" type="int">22</variable>
			<variable name="Room.currentRegulation" type="int">0</variable>
			<variable name="Room.outside_air" type="int">1</variable>
		</statevariables>
		<queue>
			<message arrival="15" deadline="infinity" sender="hc_unit">setRegulation(0)</message>
			<message arrival="20" deadline="infinity" sender="room">updateStatus()</message>
		</queue>
		<now>15</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="controller">
		<statevariables>
			<variable name="Controller.currentTemp" type="int">22</variable>
			<variable name="Controller.isHeating" type="boolean">false</variable>
			<variable name="Controller.isCooling" type="boolean">false</variable>
		</statevariables>
		<queue>
		</queue>
		<now>15</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="sensor">
		<statevariables>
		</statevariables>
		<queue>
			<message arrival="16" deadline="infinity" sender="sensor">callSensor()</message>
		</queue>
		<now>15</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="hc_unit">
		<statevariables>
			<variable name="HC_Unit.heaterOn" type="boolean">false</variable>
			<variable name="HC_Unit.coolerOn" type="boolean">false</variable>
			<variable name="HC_Unit.currentRegulation" type="int">0</variable>
		</statevariables>
		<queue>
			<message arrival="20" deadline="infinity" sender="hc_unit">regulateTemp()</message>
		</queue>
		<now>15</now>
		<pc></pc>
		<res></res>
	</rebec>
</state>
<transition source="485_0" destination="513_0" executionTime="15" shift="0"> <messageserver sender="hc_unit" owner="hc_unit" title="REGULATETEMP"/></transition>
<state id="514_0" atomicpropositions="isHeating," >
	<rebec name="room">
		<statevariables>
			<variable name="Room.currentTemp" type="int">20</variable>
			<variable name="Room.currentRegulation" type="int">1</variable>
			<variable name="Room.outside_air" type="int">1</variable>
		</statevariables>
		<queue>
			<message arrival="15" deadline="infinity" sender="hc_unit">setRegulation(1)</message>
			<message arrival="20" deadline="infinity" sender="room">updateStatus()</message>
		</queue>
		<now>15</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="controller">
		<statevariables>
			<variable name="Controller.currentTemp" type="int">20</variable>
			<variable name="Controller.isHeating" type="boolean">true</variable>
			<variable name="Controller.isCooling" type="boolean">false</variable>
		</statevariables>
		<queue>
		</queue>
		<now>15</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="sensor">
		<statevariables>
		</statevariables>
		<queue>
			<message arrival="16" deadline="infinity" sender="sensor">callSensor()</message>
		</queue>
		<now>15</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="hc_unit">
		<statevariables>
			<variable name="HC_Unit.heaterOn" type="boolean">true</variable>
			<variable name="HC_Unit.coolerOn" type="boolean">false</variable>
			<variable name="HC_Unit.currentRegulation" type="int">1</variable>
		</statevariables>
		<queue>
			<message arrival="20" deadline="infinity" sender="hc_unit">regulateTemp()</message>
		</queue>
		<now>15</now>
		<pc></pc>
		<res></res>
	</rebec>
</state>
<transition source="509_0" destination="514_0" executionTime="15" shift="0"> <messageserver sender="hc_unit" owner="hc_unit" title="REGULATETEMP"/></transition>
<state id="515_0" atomicpropositions="isHeating," >
	<rebec name="room">
		<statevariables>
			<variable name="Room.currentTemp" type="int">20</variable>
			<variable name="Room.currentRegulation" type="int">0</variable>
			<variable name="Room.outside_air" type="int">1</variable>
		</statevariables>
		<queue>
			<message arrival="15" deadline="infinity" sender="hc_unit">setRegulation(1)</message>
			<message arrival="20" deadline="infinity" sender="room">updateStatus()</message>
		</queue>
		<now>15</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="controller">
		<statevariables>
			<variable name="Controller.currentTemp" type="int">20</variable>
			<variable name="Controller.isHeating" type="boolean">true</variable>
			<variable name="Controller.isCooling" type="boolean">false</variable>
		</statevariables>
		<queue>
		</queue>
		<now>15</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="sensor">
		<statevariables>
		</statevariables>
		<queue>
			<message arrival="16" deadline="infinity" sender="sensor">callSensor()</message>
		</queue>
		<now>15</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="hc_unit">
		<statevariables>
			<variable name="HC_Unit.heaterOn" type="boolean">true</variable>
			<variable name="HC_Unit.coolerOn" type="boolean">false</variable>
			<variable name="HC_Unit.currentRegulation" type="int">1</variable>
		</statevariables>
		<queue>
			<message arrival="20" deadline="infinity" sender="hc_unit">regulateTemp()</message>
		</queue>
		<now>15</now>
		<pc></pc>
		<res></res>
	</rebec>
</state>
<transition source="511_0" destination="515_0" executionTime="15" shift="0"> <messageserver sender="hc_unit" owner="hc_unit" title="REGULATETEMP"/></transition>
<state id="516_0" atomicpropositions="" >
	<rebec name="room">
		<statevariables>
			<variable name="Room.currentTemp" type="int">21</variable>
			<variable name="Room.currentRegulation" type="int">0</variable>
			<variable name="Room.outside_air" type="int">0</variable>
		</statevariables>
		<queue>
			<message arrival="20" deadline="infinity" sender="room">updateStatus()</message>
		</queue>
		<now>15</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="controller">
		<statevariables>
			<variable name="Controller.currentTemp" type="int">21</variable>
			<variable name="Controller.isHeating" type="boolean">false</variable>
			<variable name="Controller.isCooling" type="boolean">false</variable>
		</statevariables>
		<queue>
		</queue>
		<now>15</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="sensor">
		<statevariables>
		</statevariables>
		<queue>
			<message arrival="16" deadline="infinity" sender="sensor">callSensor()</message>
		</queue>
		<now>15</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="hc_unit">
		<statevariables>
			<variable name="HC_Unit.heaterOn" type="boolean">false</variable>
			<variable name="HC_Unit.coolerOn" type="boolean">false</variable>
			<variable name="HC_Unit.currentRegulation" type="int">0</variable>
		</statevariables>
		<queue>
			<message arrival="20" deadline="infinity" sender="hc_unit">regulateTemp()</message>
		</queue>
		<now>15</now>
		<pc></pc>
		<res></res>
	</rebec>
</state>
<state id="517_0" atomicpropositions="" >
	<rebec name="room">
		<statevariables>
			<variable name="Room.currentTemp" type="int">21</variable>
			<variable name="Room.currentRegulation" type="int">0</variable>
			<variable name="Room.outside_air" type="int">0</variable>
		</statevariables>
		<queue>
			<message arrival="20" deadline="infinity" sender="room">updateStatus()</message>
		</queue>
		<now>16</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="controller">
		<statevariables>
			<variable name="Controller.currentTemp" type="int">21</variable>
			<variable name="Controller.isHeating" type="boolean">false</variable>
			<variable name="Controller.isCooling" type="boolean">false</variable>
		</statevariables>
		<queue>
		</queue>
		<now>16</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="sensor">
		<statevariables>
		</statevariables>
		<queue>
			<message arrival="16" deadline="infinity" sender="sensor">callSensor()</message>
		</queue>
		<now>16</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="hc_unit">
		<statevariables>
			<variable name="HC_Unit.heaterOn" type="boolean">false</variable>
			<variable name="HC_Unit.coolerOn" type="boolean">false</variable>
			<variable name="HC_Unit.currentRegulation" type="int">0</variable>
		</statevariables>
		<queue>
			<message arrival="20" deadline="infinity" sender="hc_unit">regulateTemp()</message>
		</queue>
		<now>16</now>
		<pc></pc>
		<res></res>
	</rebec>
</state>
<transition source="516_0" destination="517_0" executionTime="15" shift="0"> <time value="1"/></transition>
<transition source="512_0" destination="516_0" executionTime="15" shift="0"> <messageserver sender="hc_unit" owner="room" title="SETREGULATION"/></transition>
<state id="518_0" atomicpropositions="" >
	<rebec name="room">
		<statevariables>
			<variable name="Room.currentTemp" type="int">22</variable>
			<variable name="Room.currentRegulation" type="int">0</variable>
			<variable name="Room.outside_air" type="int">1</variable>
		</statevariables>
		<queue>
			<message arrival="20" deadline="infinity" sender="room">updateStatus()</message>
		</queue>
		<now>15</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="controller">
		<statevariables>
			<variable name="Controller.currentTemp" type="int">22</variable>
			<variable name="Controller.isHeating" type="boolean">false</variable>
			<variable name="Controller.isCooling" type="boolean">false</variable>
		</statevariables>
		<queue>
		</queue>
		<now>15</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="sensor">
		<statevariables>
		</statevariables>
		<queue>
			<message arrival="16" deadline="infinity" sender="sensor">callSensor()</message>
		</queue>
		<now>15</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="hc_unit">
		<statevariables>
			<variable name="HC_Unit.heaterOn" type="boolean">false</variable>
			<variable name="HC_Unit.coolerOn" type="boolean">false</variable>
			<variable name="HC_Unit.currentRegulation" type="int">0</variable>
		</statevariables>
		<queue>
			<message arrival="20" deadline="infinity" sender="hc_unit">regulateTemp()</message>
		</queue>
		<now>15</now>
		<pc></pc>
		<res></res>
	</rebec>
</state>
<state id="519_0" atomicpropositions="" >
	<rebec name="room">
		<statevariables>
			<variable name="Room.currentTemp" type="int">22</variable>
			<variable name="Room.currentRegulation" type="int">0</variable>
			<variable name="Room.outside_air" type="int">1</variable>
		</statevariables>
		<queue>
			<message arrival="20" deadline="infinity" sender="room">updateStatus()</message>
		</queue>
		<now>16</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="controller">
		<statevariables>
			<variable name="Controller.currentTemp" type="int">22</variable>
			<variable name="Controller.isHeating" type="boolean">false</variable>
			<variable name="Controller.isCooling" type="boolean">false</variable>
		</statevariables>
		<queue>
		</queue>
		<now>16</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="sensor">
		<statevariables>
		</statevariables>
		<queue>
			<message arrival="16" deadline="infinity" sender="sensor">callSensor()</message>
		</queue>
		<now>16</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="hc_unit">
		<statevariables>
			<variable name="HC_Unit.heaterOn" type="boolean">false</variable>
			<variable name="HC_Unit.coolerOn" type="boolean">false</variable>
			<variable name="HC_Unit.currentRegulation" type="int">0</variable>
		</statevariables>
		<queue>
			<message arrival="20" deadline="infinity" sender="hc_unit">regulateTemp()</message>
		</queue>
		<now>16</now>
		<pc></pc>
		<res></res>
	</rebec>
</state>
<transition source="518_0" destination="519_0" executionTime="15" shift="0"> <time value="1"/></transition>
<transition source="513_0" destination="518_0" executionTime="15" shift="0"> <messageserver sender="hc_unit" owner="room" title="SETREGULATION"/></transition>
<state id="520_0" atomicpropositions="isHeating," >
	<rebec name="room">
		<statevariables>
			<variable name="Room.currentTemp" type="int">20</variable>
			<variable name="Room.currentRegulation" type="int">1</variable>
			<variable name="Room.outside_air" type="int">1</variable>
		</statevariables>
		<queue>
			<message arrival="20" deadline="infinity" sender="room">updateStatus()</message>
		</queue>
		<now>15</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="controller">
		<statevariables>
			<variable name="Controller.currentTemp" type="int">20</variable>
			<variable name="Controller.isHeating" type="boolean">true</variable>
			<variable name="Controller.isCooling" type="boolean">false</variable>
		</statevariables>
		<queue>
		</queue>
		<now>15</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="sensor">
		<statevariables>
		</statevariables>
		<queue>
			<message arrival="16" deadline="infinity" sender="sensor">callSensor()</message>
		</queue>
		<now>15</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="hc_unit">
		<statevariables>
			<variable name="HC_Unit.heaterOn" type="boolean">true</variable>
			<variable name="HC_Unit.coolerOn" type="boolean">false</variable>
			<variable name="HC_Unit.currentRegulation" type="int">1</variable>
		</statevariables>
		<queue>
			<message arrival="20" deadline="infinity" sender="hc_unit">regulateTemp()</message>
		</queue>
		<now>15</now>
		<pc></pc>
		<res></res>
	</rebec>
</state>
<state id="521_0" atomicpropositions="isHeating," >
	<rebec name="room">
		<statevariables>
			<variable name="Room.currentTemp" type="int">20</variable>
			<variable name="Room.currentRegulation" type="int">1</variable>
			<variable name="Room.outside_air" type="int">1</variable>
		</statevariables>
		<queue>
			<message arrival="20" deadline="infinity" sender="room">updateStatus()</message>
		</queue>
		<now>16</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="controller">
		<statevariables>
			<variable name="Controller.currentTemp" type="int">20</variable>
			<variable name="Controller.isHeating" type="boolean">true</variable>
			<variable name="Controller.isCooling" type="boolean">false</variable>
		</statevariables>
		<queue>
		</queue>
		<now>16</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="sensor">
		<statevariables>
		</statevariables>
		<queue>
			<message arrival="16" deadline="infinity" sender="sensor">callSensor()</message>
		</queue>
		<now>16</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="hc_unit">
		<statevariables>
			<variable name="HC_Unit.heaterOn" type="boolean">true</variable>
			<variable name="HC_Unit.coolerOn" type="boolean">false</variable>
			<variable name="HC_Unit.currentRegulation" type="int">1</variable>
		</statevariables>
		<queue>
			<message arrival="20" deadline="infinity" sender="hc_unit">regulateTemp()</message>
		</queue>
		<now>16</now>
		<pc></pc>
		<res></res>
	</rebec>
</state>
<transition source="520_0" destination="521_0" executionTime="15" shift="0"> <time value="1"/></transition>
<transition source="514_0" destination="520_0" executionTime="15" shift="0"> <messageserver sender="hc_unit" owner="room" title="SETREGULATION"/></transition>
<transition source="515_0" destination="520_0" executionTime="15" shift="0"> <messageserver sender="hc_unit" owner="room" title="SETREGULATION"/></transition>
<state id="522_0" atomicpropositions="isCooling," >
	<rebec name="room">
		<statevariables>
			<variable name="Room.currentTemp" type="int">24</variable>
			<variable name="Room.currentRegulation" type="int">-1</variable>
			<variable name="Room.outside_air" type="int">-1</variable>
		</statevariables>
		<queue>
			<message arrival="15" deadline="infinity" sender="hc_unit">setRegulation(-1)</message>
			<message arrival="20" deadline="infinity" sender="room">updateStatus()</message>
		</queue>
		<now>15</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="controller">
		<statevariables>
			<variable name="Controller.currentTemp" type="int">24</variable>
			<variable name="Controller.isHeating" type="boolean">false</variable>
			<variable name="Controller.isCooling" type="boolean">true</variable>
		</statevariables>
		<queue>
		</queue>
		<now>15</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="sensor">
		<statevariables>
		</statevariables>
		<queue>
			<message arrival="16" deadline="infinity" sender="sensor">callSensor()</message>
		</queue>
		<now>15</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="hc_unit">
		<statevariables>
			<variable name="HC_Unit.heaterOn" type="boolean">false</variable>
			<variable name="HC_Unit.coolerOn" type="boolean">true</variable>
			<variable name="HC_Unit.currentRegulation" type="int">-1</variable>
		</statevariables>
		<queue>
			<message arrival="20" deadline="infinity" sender="hc_unit">regulateTemp()</message>
		</queue>
		<now>15</now>
		<pc></pc>
		<res></res>
	</rebec>
</state>
<transition source="483_0" destination="522_0" executionTime="15" shift="0"> <messageserver sender="hc_unit" owner="hc_unit" title="REGULATETEMP"/></transition>
<state id="523_0" atomicpropositions="isCooling," >
	<rebec name="room">
		<statevariables>
			<variable name="Room.currentTemp" type="int">24</variable>
			<variable name="Room.currentRegulation" type="int">0</variable>
			<variable name="Room.outside_air" type="int">-1</variable>
		</statevariables>
		<queue>
			<message arrival="15" deadline="infinity" sender="hc_unit">setRegulation(-1)</message>
			<message arrival="20" deadline="infinity" sender="room">updateStatus()</message>
		</queue>
		<now>15</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="controller">
		<statevariables>
			<variable name="Controller.currentTemp" type="int">24</variable>
			<variable name="Controller.isHeating" type="boolean">false</variable>
			<variable name="Controller.isCooling" type="boolean">true</variable>
		</statevariables>
		<queue>
		</queue>
		<now>15</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="sensor">
		<statevariables>
		</statevariables>
		<queue>
			<message arrival="16" deadline="infinity" sender="sensor">callSensor()</message>
		</queue>
		<now>15</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="hc_unit">
		<statevariables>
			<variable name="HC_Unit.heaterOn" type="boolean">false</variable>
			<variable name="HC_Unit.coolerOn" type="boolean">true</variable>
			<variable name="HC_Unit.currentRegulation" type="int">-1</variable>
		</statevariables>
		<queue>
			<message arrival="20" deadline="infinity" sender="hc_unit">regulateTemp()</message>
		</queue>
		<now>15</now>
		<pc></pc>
		<res></res>
	</rebec>
</state>
<transition source="487_0" destination="523_0" executionTime="15" shift="0"> <messageserver sender="hc_unit" owner="hc_unit" title="REGULATETEMP"/></transition>
<state id="524_0" atomicpropositions="isCooling," >
	<rebec name="room">
		<statevariables>
			<variable name="Room.currentTemp" type="int">24</variable>
			<variable name="Room.currentRegulation" type="int">-1</variable>
			<variable name="Room.outside_air" type="int">-1</variable>
		</statevariables>
		<queue>
			<message arrival="20" deadline="infinity" sender="room">updateStatus()</message>
		</queue>
		<now>15</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="controller">
		<statevariables>
			<variable name="Controller.currentTemp" type="int">24</variable>
			<variable name="Controller.isHeating" type="boolean">false</variable>
			<variable name="Controller.isCooling" type="boolean">true</variable>
		</statevariables>
		<queue>
		</queue>
		<now>15</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="sensor">
		<statevariables>
		</statevariables>
		<queue>
			<message arrival="16" deadline="infinity" sender="sensor">callSensor()</message>
		</queue>
		<now>15</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="hc_unit">
		<statevariables>
			<variable name="HC_Unit.heaterOn" type="boolean">false</variable>
			<variable name="HC_Unit.coolerOn" type="boolean">true</variable>
			<variable name="HC_Unit.currentRegulation" type="int">-1</variable>
		</statevariables>
		<queue>
			<message arrival="20" deadline="infinity" sender="hc_unit">regulateTemp()</message>
		</queue>
		<now>15</now>
		<pc></pc>
		<res></res>
	</rebec>
</state>
<state id="525_0" atomicpropositions="isCooling," >
	<rebec name="room">
		<statevariables>
			<variable name="Room.currentTemp" type="int">24</variable>
			<variable name="Room.currentRegulation" type="int">-1</variable>
			<variable name="Room.outside_air" type="int">-1</variable>
		</statevariables>
		<queue>
			<message arrival="20" deadline="infinity" sender="room">updateStatus()</message>
		</queue>
		<now>16</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="controller">
		<statevariables>
			<variable name="Controller.currentTemp" type="int">24</variable>
			<variable name="Controller.isHeating" type="boolean">false</variable>
			<variable name="Controller.isCooling" type="boolean">true</variable>
		</statevariables>
		<queue>
		</queue>
		<now>16</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="sensor">
		<statevariables>
		</statevariables>
		<queue>
			<message arrival="16" deadline="infinity" sender="sensor">callSensor()</message>
		</queue>
		<now>16</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="hc_unit">
		<statevariables>
			<variable name="HC_Unit.heaterOn" type="boolean">false</variable>
			<variable name="HC_Unit.coolerOn" type="boolean">true</variable>
			<variable name="HC_Unit.currentRegulation" type="int">-1</variable>
		</statevariables>
		<queue>
			<message arrival="20" deadline="infinity" sender="hc_unit">regulateTemp()</message>
		</queue>
		<now>16</now>
		<pc></pc>
		<res></res>
	</rebec>
</state>
<transition source="524_0" destination="525_0" executionTime="15" shift="0"> <time value="1"/></transition>
<transition source="522_0" destination="524_0" executionTime="15" shift="0"> <messageserver sender="hc_unit" owner="room" title="SETREGULATION"/></transition>
<transition source="523_0" destination="524_0" executionTime="15" shift="0"> <messageserver sender="hc_unit" owner="room" title="SETREGULATION"/></transition>
<state id="526_0" atomicpropositions="" >
	<rebec name="room">
		<statevariables>
			<variable name="Room.currentTemp" type="int">23</variable>
			<variable name="Room.currentRegulation" type="int">0</variable>
			<variable name="Room.outside_air" type="int">0</variable>
		</statevariables>
		<queue>
			<message arrival="15" deadline="infinity" sender="hc_unit">setRegulation(0)</message>
			<message arrival="20" deadline="infinity" sender="room">updateStatus()</message>
		</queue>
		<now>15</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="controller">
		<statevariables>
			<variable name="Controller.currentTemp" type="int">23</variable>
			<variable name="Controller.isHeating" type="boolean">false</variable>
			<variable name="Controller.isCooling" type="boolean">false</variable>
		</statevariables>
		<queue>
		</queue>
		<now>15</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="sensor">
		<statevariables>
		</statevariables>
		<queue>
			<message arrival="16" deadline="infinity" sender="sensor">callSensor()</message>
		</queue>
		<now>15</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="hc_unit">
		<statevariables>
			<variable name="HC_Unit.heaterOn" type="boolean">false</variable>
			<variable name="HC_Unit.coolerOn" type="boolean">false</variable>
			<variable name="HC_Unit.currentRegulation" type="int">0</variable>
		</statevariables>
		<queue>
			<message arrival="20" deadline="infinity" sender="hc_unit">regulateTemp()</message>
		</queue>
		<now>15</now>
		<pc></pc>
		<res></res>
	</rebec>
</state>
<transition source="507_0" destination="526_0" executionTime="15" shift="0"> <messageserver sender="hc_unit" owner="hc_unit" title="REGULATETEMP"/></transition>
<state id="527_0" atomicpropositions="" >
	<rebec name="room">
		<statevariables>
			<variable name="Room.currentTemp" type="int">22</variable>
			<variable name="Room.currentRegulation" type="int">0</variable>
			<variable name="Room.outside_air" type="int">-1</variable>
		</statevariables>
		<queue>
			<message arrival="15" deadline="infinity" sender="hc_unit">setRegulation(0)</message>
			<message arrival="20" deadline="infinity" sender="room">updateStatus()</message>
		</queue>
		<now>15</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="controller">
		<statevariables>
			<variable name="Controller.currentTemp" type="int">22</variable>
			<variable name="Controller.isHeating" type="boolean">false</variable>
			<variable name="Controller.isCooling" type="boolean">false</variable>
		</statevariables>
		<queue>
		</queue>
		<now>15</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="sensor">
		<statevariables>
		</statevariables>
		<queue>
			<message arrival="16" deadline="infinity" sender="sensor">callSensor()</message>
		</queue>
		<now>15</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="hc_unit">
		<statevariables>
			<variable name="HC_Unit.heaterOn" type="boolean">false</variable>
			<variable name="HC_Unit.coolerOn" type="boolean">false</variable>
			<variable name="HC_Unit.currentRegulation" type="int">0</variable>
		</statevariables>
		<queue>
			<message arrival="20" deadline="infinity" sender="hc_unit">regulateTemp()</message>
		</queue>
		<now>15</now>
		<pc></pc>
		<res></res>
	</rebec>
</state>
<transition source="505_0" destination="527_0" executionTime="15" shift="0"> <messageserver sender="hc_unit" owner="hc_unit" title="REGULATETEMP"/></transition>
<state id="528_0" atomicpropositions="" >
	<rebec name="room">
		<statevariables>
			<variable name="Room.currentTemp" type="int">23</variable>
			<variable name="Room.currentRegulation" type="int">0</variable>
			<variable name="Room.outside_air" type="int">0</variable>
		</statevariables>
		<queue>
			<message arrival="20" deadline="infinity" sender="room">updateStatus()</message>
		</queue>
		<now>15</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="controller">
		<statevariables>
			<variable name="Controller.currentTemp" type="int">23</variable>
			<variable name="Controller.isHeating" type="boolean">false</variable>
			<variable name="Controller.isCooling" type="boolean">false</variable>
		</statevariables>
		<queue>
		</queue>
		<now>15</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="sensor">
		<statevariables>
		</statevariables>
		<queue>
			<message arrival="16" deadline="infinity" sender="sensor">callSensor()</message>
		</queue>
		<now>15</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="hc_unit">
		<statevariables>
			<variable name="HC_Unit.heaterOn" type="boolean">false</variable>
			<variable name="HC_Unit.coolerOn" type="boolean">false</variable>
			<variable name="HC_Unit.currentRegulation" type="int">0</variable>
		</statevariables>
		<queue>
			<message arrival="20" deadline="infinity" sender="hc_unit">regulateTemp()</message>
		</queue>
		<now>15</now>
		<pc></pc>
		<res></res>
	</rebec>
</state>
<state id="529_0" atomicpropositions="" >
	<rebec name="room">
		<statevariables>
			<variable name="Room.currentTemp" type="int">23</variable>
			<variable name="Room.currentRegulation" type="int">0</variable>
			<variable name="Room.outside_air" type="int">0</variable>
		</statevariables>
		<queue>
			<message arrival="20" deadline="infinity" sender="room">updateStatus()</message>
		</queue>
		<now>16</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="controller">
		<statevariables>
			<variable name="Controller.currentTemp" type="int">23</variable>
			<variable name="Controller.isHeating" type="boolean">false</variable>
			<variable name="Controller.isCooling" type="boolean">false</variable>
		</statevariables>
		<queue>
		</queue>
		<now>16</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="sensor">
		<statevariables>
		</statevariables>
		<queue>
			<message arrival="16" deadline="infinity" sender="sensor">callSensor()</message>
		</queue>
		<now>16</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="hc_unit">
		<statevariables>
			<variable name="HC_Unit.heaterOn" type="boolean">false</variable>
			<variable name="HC_Unit.coolerOn" type="boolean">false</variable>
			<variable name="HC_Unit.currentRegulation" type="int">0</variable>
		</statevariables>
		<queue>
			<message arrival="20" deadline="infinity" sender="hc_unit">regulateTemp()</message>
		</queue>
		<now>16</now>
		<pc></pc>
		<res></res>
	</rebec>
</state>
<transition source="528_0" destination="529_0" executionTime="15" shift="0"> <time value="1"/></transition>
<transition source="526_0" destination="528_0" executionTime="15" shift="0"> <messageserver sender="hc_unit" owner="room" title="SETREGULATION"/></transition>
<state id="530_0" atomicpropositions="" >
	<rebec name="room">
		<statevariables>
			<variable name="Room.currentTemp" type="int">22</variable>
			<variable name="Room.currentRegulation" type="int">0</variable>
			<variable name="Room.outside_air" type="int">-1</variable>
		</statevariables>
		<queue>
			<message arrival="20" deadline="infinity" sender="room">updateStatus()</message>
		</queue>
		<now>15</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="controller">
		<statevariables>
			<variable name="Controller.currentTemp" type="int">22</variable>
			<variable name="Controller.isHeating" type="boolean">false</variable>
			<variable name="Controller.isCooling" type="boolean">false</variable>
		</statevariables>
		<queue>
		</queue>
		<now>15</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="sensor">
		<statevariables>
		</statevariables>
		<queue>
			<message arrival="16" deadline="infinity" sender="sensor">callSensor()</message>
		</queue>
		<now>15</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="hc_unit">
		<statevariables>
			<variable name="HC_Unit.heaterOn" type="boolean">false</variable>
			<variable name="HC_Unit.coolerOn" type="boolean">false</variable>
			<variable name="HC_Unit.currentRegulation" type="int">0</variable>
		</statevariables>
		<queue>
			<message arrival="20" deadline="infinity" sender="hc_unit">regulateTemp()</message>
		</queue>
		<now>15</now>
		<pc></pc>
		<res></res>
	</rebec>
</state>
<state id="531_0" atomicpropositions="" >
	<rebec name="room">
		<statevariables>
			<variable name="Room.currentTemp" type="int">22</variable>
			<variable name="Room.currentRegulation" type="int">0</variable>
			<variable name="Room.outside_air" type="int">-1</variable>
		</statevariables>
		<queue>
			<message arrival="20" deadline="infinity" sender="room">updateStatus()</message>
		</queue>
		<now>16</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="controller">
		<statevariables>
			<variable name="Controller.currentTemp" type="int">22</variable>
			<variable name="Controller.isHeating" type="boolean">false</variable>
			<variable name="Controller.isCooling" type="boolean">false</variable>
		</statevariables>
		<queue>
		</queue>
		<now>16</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="sensor">
		<statevariables>
		</statevariables>
		<queue>
			<message arrival="16" deadline="infinity" sender="sensor">callSensor()</message>
		</queue>
		<now>16</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="hc_unit">
		<statevariables>
			<variable name="HC_Unit.heaterOn" type="boolean">false</variable>
			<variable name="HC_Unit.coolerOn" type="boolean">false</variable>
			<variable name="HC_Unit.currentRegulation" type="int">0</variable>
		</statevariables>
		<queue>
			<message arrival="20" deadline="infinity" sender="hc_unit">regulateTemp()</message>
		</queue>
		<now>16</now>
		<pc></pc>
		<res></res>
	</rebec>
</state>
<transition source="530_0" destination="531_0" executionTime="15" shift="0"> <time value="1"/></transition>
<transition source="527_0" destination="530_0" executionTime="15" shift="0"> <messageserver sender="hc_unit" owner="room" title="SETREGULATION"/></transition>
<state id="532_0" atomicpropositions="" >
	<rebec name="room">
		<statevariables>
			<variable name="Room.currentTemp" type="int">21</variable>
			<variable name="Room.currentRegulation" type="int">0</variable>
			<variable name="Room.outside_air" type="int">0</variable>
		</statevariables>
		<queue>
			<message arrival="16" deadline="infinity" sender="sensor">getTemp()</message>
			<message arrival="20" deadline="infinity" sender="room">updateStatus()</message>
		</queue>
		<now>16</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="controller">
		<statevariables>
			<variable name="Controller.currentTemp" type="int">21</variable>
			<variable name="Controller.isHeating" type="boolean">false</variable>
			<variable name="Controller.isCooling" type="boolean">false</variable>
		</statevariables>
		<queue>
		</queue>
		<now>16</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="sensor">
		<statevariables>
		</statevariables>
		<queue>
			<message arrival="18" deadline="infinity" sender="sensor">callSensor()</message>
		</queue>
		<now>16</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="hc_unit">
		<statevariables>
			<variable name="HC_Unit.heaterOn" type="boolean">false</variable>
			<variable name="HC_Unit.coolerOn" type="boolean">false</variable>
			<variable name="HC_Unit.currentRegulation" type="int">0</variable>
		</statevariables>
		<queue>
			<message arrival="20" deadline="infinity" sender="hc_unit">regulateTemp()</message>
		</queue>
		<now>16</now>
		<pc></pc>
		<res></res>
	</rebec>
</state>
<transition source="517_0" destination="532_0" executionTime="16" shift="0"> <messageserver sender="sensor" owner="sensor" title="CALLSENSOR"/></transition>
<state id="533_0" atomicpropositions="" >
	<rebec name="room">
		<statevariables>
			<variable name="Room.currentTemp" type="int">23</variable>
			<variable name="Room.currentRegulation" type="int">0</variable>
			<variable name="Room.outside_air" type="int">0</variable>
		</statevariables>
		<queue>
			<message arrival="16" deadline="infinity" sender="sensor">getTemp()</message>
			<message arrival="20" deadline="infinity" sender="room">updateStatus()</message>
		</queue>
		<now>16</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="controller">
		<statevariables>
			<variable name="Controller.currentTemp" type="int">23</variable>
			<variable name="Controller.isHeating" type="boolean">false</variable>
			<variable name="Controller.isCooling" type="boolean">false</variable>
		</statevariables>
		<queue>
		</queue>
		<now>16</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="sensor">
		<statevariables>
		</statevariables>
		<queue>
			<message arrival="18" deadline="infinity" sender="sensor">callSensor()</message>
		</queue>
		<now>16</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="hc_unit">
		<statevariables>
			<variable name="HC_Unit.heaterOn" type="boolean">false</variable>
			<variable name="HC_Unit.coolerOn" type="boolean">false</variable>
			<variable name="HC_Unit.currentRegulation" type="int">0</variable>
		</statevariables>
		<queue>
			<message arrival="20" deadline="infinity" sender="hc_unit">regulateTemp()</message>
		</queue>
		<now>16</now>
		<pc></pc>
		<res></res>
	</rebec>
</state>
<transition source="529_0" destination="533_0" executionTime="16" shift="0"> <messageserver sender="sensor" owner="sensor" title="CALLSENSOR"/></transition>
<state id="534_0" atomicpropositions="" >
	<rebec name="room">
		<statevariables>
			<variable name="Room.currentTemp" type="int">22</variable>
			<variable name="Room.currentRegulation" type="int">0</variable>
			<variable name="Room.outside_air" type="int">-1</variable>
		</statevariables>
		<queue>
			<message arrival="16" deadline="infinity" sender="sensor">getTemp()</message>
			<message arrival="20" deadline="infinity" sender="room">updateStatus()</message>
		</queue>
		<now>16</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="controller">
		<statevariables>
			<variable name="Controller.currentTemp" type="int">22</variable>
			<variable name="Controller.isHeating" type="boolean">false</variable>
			<variable name="Controller.isCooling" type="boolean">false</variable>
		</statevariables>
		<queue>
		</queue>
		<now>16</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="sensor">
		<statevariables>
		</statevariables>
		<queue>
			<message arrival="18" deadline="infinity" sender="sensor">callSensor()</message>
		</queue>
		<now>16</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="hc_unit">
		<statevariables>
			<variable name="HC_Unit.heaterOn" type="boolean">false</variable>
			<variable name="HC_Unit.coolerOn" type="boolean">false</variable>
			<variable name="HC_Unit.currentRegulation" type="int">0</variable>
		</statevariables>
		<queue>
			<message arrival="20" deadline="infinity" sender="hc_unit">regulateTemp()</message>
		</queue>
		<now>16</now>
		<pc></pc>
		<res></res>
	</rebec>
</state>
<transition source="531_0" destination="534_0" executionTime="16" shift="0"> <messageserver sender="sensor" owner="sensor" title="CALLSENSOR"/></transition>
<state id="535_0" atomicpropositions="" >
	<rebec name="room">
		<statevariables>
			<variable name="Room.currentTemp" type="int">21</variable>
			<variable name="Room.currentRegulation" type="int">0</variable>
			<variable name="Room.outside_air" type="int">0</variable>
		</statevariables>
		<queue>
			<message arrival="20" deadline="infinity" sender="room">updateStatus()</message>
		</queue>
		<now>16</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="controller">
		<statevariables>
			<variable name="Controller.currentTemp" type="int">21</variable>
			<variable name="Controller.isHeating" type="boolean">false</variable>
			<variable name="Controller.isCooling" type="boolean">false</variable>
		</statevariables>
		<queue>
		</queue>
		<now>16</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="sensor">
		<statevariables>
		</statevariables>
		<queue>
			<message arrival="16" deadline="infinity" sender="room">setCurrent(21)</message>
			<message arrival="18" deadline="infinity" sender="sensor">callSensor()</message>
		</queue>
		<now>16</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="hc_unit">
		<statevariables>
			<variable name="HC_Unit.heaterOn" type="boolean">false</variable>
			<variable name="HC_Unit.coolerOn" type="boolean">false</variable>
			<variable name="HC_Unit.currentRegulation" type="int">0</variable>
		</statevariables>
		<queue>
			<message arrival="20" deadline="infinity" sender="hc_unit">regulateTemp()</message>
		</queue>
		<now>16</now>
		<pc></pc>
		<res></res>
	</rebec>
</state>
<transition source="532_0" destination="535_0" executionTime="16" shift="0"> <messageserver sender="sensor" owner="room" title="GETTEMP"/></transition>
<state id="536_0" atomicpropositions="" >
	<rebec name="room">
		<statevariables>
			<variable name="Room.currentTemp" type="int">23</variable>
			<variable name="Room.currentRegulation" type="int">0</variable>
			<variable name="Room.outside_air" type="int">0</variable>
		</statevariables>
		<queue>
			<message arrival="20" deadline="infinity" sender="room">updateStatus()</message>
		</queue>
		<now>16</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="controller">
		<statevariables>
			<variable name="Controller.currentTemp" type="int">23</variable>
			<variable name="Controller.isHeating" type="boolean">false</variable>
			<variable name="Controller.isCooling" type="boolean">false</variable>
		</statevariables>
		<queue>
		</queue>
		<now>16</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="sensor">
		<statevariables>
		</statevariables>
		<queue>
			<message arrival="16" deadline="infinity" sender="room">setCurrent(23)</message>
			<message arrival="18" deadline="infinity" sender="sensor">callSensor()</message>
		</queue>
		<now>16</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="hc_unit">
		<statevariables>
			<variable name="HC_Unit.heaterOn" type="boolean">false</variable>
			<variable name="HC_Unit.coolerOn" type="boolean">false</variable>
			<variable name="HC_Unit.currentRegulation" type="int">0</variable>
		</statevariables>
		<queue>
			<message arrival="20" deadline="infinity" sender="hc_unit">regulateTemp()</message>
		</queue>
		<now>16</now>
		<pc></pc>
		<res></res>
	</rebec>
</state>
<transition source="533_0" destination="536_0" executionTime="16" shift="0"> <messageserver sender="sensor" owner="room" title="GETTEMP"/></transition>
<state id="537_0" atomicpropositions="" >
	<rebec name="room">
		<statevariables>
			<variable name="Room.currentTemp" type="int">22</variable>
			<variable name="Room.currentRegulation" type="int">0</variable>
			<variable name="Room.outside_air" type="int">-1</variable>
		</statevariables>
		<queue>
			<message arrival="20" deadline="infinity" sender="room">updateStatus()</message>
		</queue>
		<now>16</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="controller">
		<statevariables>
			<variable name="Controller.currentTemp" type="int">22</variable>
			<variable name="Controller.isHeating" type="boolean">false</variable>
			<variable name="Controller.isCooling" type="boolean">false</variable>
		</statevariables>
		<queue>
		</queue>
		<now>16</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="sensor">
		<statevariables>
		</statevariables>
		<queue>
			<message arrival="16" deadline="infinity" sender="room">setCurrent(22)</message>
			<message arrival="18" deadline="infinity" sender="sensor">callSensor()</message>
		</queue>
		<now>16</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="hc_unit">
		<statevariables>
			<variable name="HC_Unit.heaterOn" type="boolean">false</variable>
			<variable name="HC_Unit.coolerOn" type="boolean">false</variable>
			<variable name="HC_Unit.currentRegulation" type="int">0</variable>
		</statevariables>
		<queue>
			<message arrival="20" deadline="infinity" sender="hc_unit">regulateTemp()</message>
		</queue>
		<now>16</now>
		<pc></pc>
		<res></res>
	</rebec>
</state>
<transition source="534_0" destination="537_0" executionTime="16" shift="0"> <messageserver sender="sensor" owner="room" title="GETTEMP"/></transition>
<state id="538_0" atomicpropositions="" >
	<rebec name="room">
		<statevariables>
			<variable name="Room.currentTemp" type="int">21</variable>
			<variable name="Room.currentRegulation" type="int">0</variable>
			<variable name="Room.outside_air" type="int">0</variable>
		</statevariables>
		<queue>
			<message arrival="20" deadline="infinity" sender="room">updateStatus()</message>
		</queue>
		<now>16</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="controller">
		<statevariables>
			<variable name="Controller.currentTemp" type="int">21</variable>
			<variable name="Controller.isHeating" type="boolean">false</variable>
			<variable name="Controller.isCooling" type="boolean">false</variable>
		</statevariables>
		<queue>
			<message arrival="16" deadline="infinity" sender="sensor">setCurrent(21)</message>
		</queue>
		<now>16</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="sensor">
		<statevariables>
		</statevariables>
		<queue>
			<message arrival="18" deadline="infinity" sender="sensor">callSensor()</message>
		</queue>
		<now>16</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="hc_unit">
		<statevariables>
			<variable name="HC_Unit.heaterOn" type="boolean">false</variable>
			<variable name="HC_Unit.coolerOn" type="boolean">false</variable>
			<variable name="HC_Unit.currentRegulation" type="int">0</variable>
		</statevariables>
		<queue>
			<message arrival="20" deadline="infinity" sender="hc_unit">regulateTemp()</message>
		</queue>
		<now>16</now>
		<pc></pc>
		<res></res>
	</rebec>
</state>
<transition source="535_0" destination="538_0" executionTime="16" shift="0"> <messageserver sender="room" owner="sensor" title="SETCURRENT"/></transition>
<state id="539_0" atomicpropositions="" >
	<rebec name="room">
		<statevariables>
			<variable name="Room.currentTemp" type="int">23</variable>
			<variable name="Room.currentRegulation" type="int">0</variable>
			<variable name="Room.outside_air" type="int">0</variable>
		</statevariables>
		<queue>
			<message arrival="20" deadline="infinity" sender="room">updateStatus()</message>
		</queue>
		<now>16</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="controller">
		<statevariables>
			<variable name="Controller.currentTemp" type="int">23</variable>
			<variable name="Controller.isHeating" type="boolean">false</variable>
			<variable name="Controller.isCooling" type="boolean">false</variable>
		</statevariables>
		<queue>
			<message arrival="16" deadline="infinity" sender="sensor">setCurrent(23)</message>
		</queue>
		<now>16</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="sensor">
		<statevariables>
		</statevariables>
		<queue>
			<message arrival="18" deadline="infinity" sender="sensor">callSensor()</message>
		</queue>
		<now>16</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="hc_unit">
		<statevariables>
			<variable name="HC_Unit.heaterOn" type="boolean">false</variable>
			<variable name="HC_Unit.coolerOn" type="boolean">false</variable>
			<variable name="HC_Unit.currentRegulation" type="int">0</variable>
		</statevariables>
		<queue>
			<message arrival="20" deadline="infinity" sender="hc_unit">regulateTemp()</message>
		</queue>
		<now>16</now>
		<pc></pc>
		<res></res>
	</rebec>
</state>
<transition source="536_0" destination="539_0" executionTime="16" shift="0"> <messageserver sender="room" owner="sensor" title="SETCURRENT"/></transition>
<state id="540_0" atomicpropositions="" >
	<rebec name="room">
		<statevariables>
			<variable name="Room.currentTemp" type="int">22</variable>
			<variable name="Room.currentRegulation" type="int">0</variable>
			<variable name="Room.outside_air" type="int">-1</variable>
		</statevariables>
		<queue>
			<message arrival="20" deadline="infinity" sender="room">updateStatus()</message>
		</queue>
		<now>16</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="controller">
		<statevariables>
			<variable name="Controller.currentTemp" type="int">22</variable>
			<variable name="Controller.isHeating" type="boolean">false</variable>
			<variable name="Controller.isCooling" type="boolean">false</variable>
		</statevariables>
		<queue>
			<message arrival="16" deadline="infinity" sender="sensor">setCurrent(22)</message>
		</queue>
		<now>16</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="sensor">
		<statevariables>
		</statevariables>
		<queue>
			<message arrival="18" deadline="infinity" sender="sensor">callSensor()</message>
		</queue>
		<now>16</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="hc_unit">
		<statevariables>
			<variable name="HC_Unit.heaterOn" type="boolean">false</variable>
			<variable name="HC_Unit.coolerOn" type="boolean">false</variable>
			<variable name="HC_Unit.currentRegulation" type="int">0</variable>
		</statevariables>
		<queue>
			<message arrival="20" deadline="infinity" sender="hc_unit">regulateTemp()</message>
		</queue>
		<now>16</now>
		<pc></pc>
		<res></res>
	</rebec>
</state>
<transition source="537_0" destination="540_0" executionTime="16" shift="0"> <messageserver sender="room" owner="sensor" title="SETCURRENT"/></transition>
<state id="541_0" atomicpropositions="" >
	<rebec name="room">
		<statevariables>
			<variable name="Room.currentTemp" type="int">21</variable>
			<variable name="Room.currentRegulation" type="int">0</variable>
			<variable name="Room.outside_air" type="int">0</variable>
		</statevariables>
		<queue>
			<message arrival="20" deadline="infinity" sender="room">updateStatus()</message>
		</queue>
		<now>16</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="controller">
		<statevariables>
			<variable name="Controller.currentTemp" type="int">21</variable>
			<variable name="Controller.isHeating" type="boolean">false</variable>
			<variable name="Controller.isCooling" type="boolean">false</variable>
		</statevariables>
		<queue>
			<message arrival="16" deadline="infinity" sender="controller">updateOutput()</message>
		</queue>
		<now>16</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="sensor">
		<statevariables>
		</statevariables>
		<queue>
			<message arrival="18" deadline="infinity" sender="sensor">callSensor()</message>
		</queue>
		<now>16</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="hc_unit">
		<statevariables>
			<variable name="HC_Unit.heaterOn" type="boolean">false</variable>
			<variable name="HC_Unit.coolerOn" type="boolean">false</variable>
			<variable name="HC_Unit.currentRegulation" type="int">0</variable>
		</statevariables>
		<queue>
			<message arrival="20" deadline="infinity" sender="hc_unit">regulateTemp()</message>
		</queue>
		<now>16</now>
		<pc></pc>
		<res></res>
	</rebec>
</state>
<transition source="538_0" destination="541_0" executionTime="16" shift="0"> <messageserver sender="sensor" owner="controller" title="SETCURRENT"/></transition>
<state id="542_0" atomicpropositions="" >
	<rebec name="room">
		<statevariables>
			<variable name="Room.currentTemp" type="int">23</variable>
			<variable name="Room.currentRegulation" type="int">0</variable>
			<variable name="Room.outside_air" type="int">0</variable>
		</statevariables>
		<queue>
			<message arrival="20" deadline="infinity" sender="room">updateStatus()</message>
		</queue>
		<now>16</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="controller">
		<statevariables>
			<variable name="Controller.currentTemp" type="int">23</variable>
			<variable name="Controller.isHeating" type="boolean">false</variable>
			<variable name="Controller.isCooling" type="boolean">false</variable>
		</statevariables>
		<queue>
			<message arrival="16" deadline="infinity" sender="controller">updateOutput()</message>
		</queue>
		<now>16</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="sensor">
		<statevariables>
		</statevariables>
		<queue>
			<message arrival="18" deadline="infinity" sender="sensor">callSensor()</message>
		</queue>
		<now>16</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="hc_unit">
		<statevariables>
			<variable name="HC_Unit.heaterOn" type="boolean">false</variable>
			<variable name="HC_Unit.coolerOn" type="boolean">false</variable>
			<variable name="HC_Unit.currentRegulation" type="int">0</variable>
		</statevariables>
		<queue>
			<message arrival="20" deadline="infinity" sender="hc_unit">regulateTemp()</message>
		</queue>
		<now>16</now>
		<pc></pc>
		<res></res>
	</rebec>
</state>
<transition source="539_0" destination="542_0" executionTime="16" shift="0"> <messageserver sender="sensor" owner="controller" title="SETCURRENT"/></transition>
<state id="543_0" atomicpropositions="" >
	<rebec name="room">
		<statevariables>
			<variable name="Room.currentTemp" type="int">22</variable>
			<variable name="Room.currentRegulation" type="int">0</variable>
			<variable name="Room.outside_air" type="int">-1</variable>
		</statevariables>
		<queue>
			<message arrival="20" deadline="infinity" sender="room">updateStatus()</message>
		</queue>
		<now>16</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="controller">
		<statevariables>
			<variable name="Controller.currentTemp" type="int">22</variable>
			<variable name="Controller.isHeating" type="boolean">false</variable>
			<variable name="Controller.isCooling" type="boolean">false</variable>
		</statevariables>
		<queue>
			<message arrival="16" deadline="infinity" sender="controller">updateOutput()</message>
		</queue>
		<now>16</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="sensor">
		<statevariables>
		</statevariables>
		<queue>
			<message arrival="18" deadline="infinity" sender="sensor">callSensor()</message>
		</queue>
		<now>16</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="hc_unit">
		<statevariables>
			<variable name="HC_Unit.heaterOn" type="boolean">false</variable>
			<variable name="HC_Unit.coolerOn" type="boolean">false</variable>
			<variable name="HC_Unit.currentRegulation" type="int">0</variable>
		</statevariables>
		<queue>
			<message arrival="20" deadline="infinity" sender="hc_unit">regulateTemp()</message>
		</queue>
		<now>16</now>
		<pc></pc>
		<res></res>
	</rebec>
</state>
<transition source="540_0" destination="543_0" executionTime="16" shift="0"> <messageserver sender="sensor" owner="controller" title="SETCURRENT"/></transition>
<state id="544_0" atomicpropositions="" >
	<rebec name="room">
		<statevariables>
			<variable name="Room.currentTemp" type="int">21</variable>
			<variable name="Room.currentRegulation" type="int">0</variable>
			<variable name="Room.outside_air" type="int">0</variable>
		</statevariables>
		<queue>
			<message arrival="20" deadline="infinity" sender="room">updateStatus()</message>
		</queue>
		<now>16</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="controller">
		<statevariables>
			<variable name="Controller.currentTemp" type="int">21</variable>
			<variable name="Controller.isHeating" type="boolean">false</variable>
			<variable name="Controller.isCooling" type="boolean">false</variable>
		</statevariables>
		<queue>
		</queue>
		<now>16</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="sensor">
		<statevariables>
		</statevariables>
		<queue>
			<message arrival="18" deadline="infinity" sender="sensor">callSensor()</message>
		</queue>
		<now>16</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="hc_unit">
		<statevariables>
			<variable name="HC_Unit.heaterOn" type="boolean">false</variable>
			<variable name="HC_Unit.coolerOn" type="boolean">false</variable>
			<variable name="HC_Unit.currentRegulation" type="int">0</variable>
		</statevariables>
		<queue>
			<message arrival="20" deadline="infinity" sender="hc_unit">regulateTemp()</message>
		</queue>
		<now>16</now>
		<pc></pc>
		<res></res>
	</rebec>
</state>
<state id="545_0" atomicpropositions="" >
	<rebec name="room">
		<statevariables>
			<variable name="Room.currentTemp" type="int">21</variable>
			<variable name="Room.currentRegulation" type="int">0</variable>
			<variable name="Room.outside_air" type="int">0</variable>
		</statevariables>
		<queue>
			<message arrival="20" deadline="infinity" sender="room">updateStatus()</message>
		</queue>
		<now>18</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="controller">
		<statevariables>
			<variable name="Controller.currentTemp" type="int">21</variable>
			<variable name="Controller.isHeating" type="boolean">false</variable>
			<variable name="Controller.isCooling" type="boolean">false</variable>
		</statevariables>
		<queue>
		</queue>
		<now>18</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="sensor">
		<statevariables>
		</statevariables>
		<queue>
			<message arrival="18" deadline="infinity" sender="sensor">callSensor()</message>
		</queue>
		<now>18</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="hc_unit">
		<statevariables>
			<variable name="HC_Unit.heaterOn" type="boolean">false</variable>
			<variable name="HC_Unit.coolerOn" type="boolean">false</variable>
			<variable name="HC_Unit.currentRegulation" type="int">0</variable>
		</statevariables>
		<queue>
			<message arrival="20" deadline="infinity" sender="hc_unit">regulateTemp()</message>
		</queue>
		<now>18</now>
		<pc></pc>
		<res></res>
	</rebec>
</state>
<transition source="544_0" destination="545_0" executionTime="16" shift="0"> <time value="2"/></transition>
<transition source="541_0" destination="544_0" executionTime="16" shift="0"> <messageserver sender="controller" owner="controller" title="UPDATEOUTPUT"/></transition>
<state id="546_0" atomicpropositions="" >
	<rebec name="room">
		<statevariables>
			<variable name="Room.currentTemp" type="int">23</variable>
			<variable name="Room.currentRegulation" type="int">0</variable>
			<variable name="Room.outside_air" type="int">0</variable>
		</statevariables>
		<queue>
			<message arrival="20" deadline="infinity" sender="room">updateStatus()</message>
		</queue>
		<now>16</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="controller">
		<statevariables>
			<variable name="Controller.currentTemp" type="int">23</variable>
			<variable name="Controller.isHeating" type="boolean">false</variable>
			<variable name="Controller.isCooling" type="boolean">false</variable>
		</statevariables>
		<queue>
		</queue>
		<now>16</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="sensor">
		<statevariables>
		</statevariables>
		<queue>
			<message arrival="18" deadline="infinity" sender="sensor">callSensor()</message>
		</queue>
		<now>16</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="hc_unit">
		<statevariables>
			<variable name="HC_Unit.heaterOn" type="boolean">false</variable>
			<variable name="HC_Unit.coolerOn" type="boolean">false</variable>
			<variable name="HC_Unit.currentRegulation" type="int">0</variable>
		</statevariables>
		<queue>
			<message arrival="20" deadline="infinity" sender="hc_unit">regulateTemp()</message>
		</queue>
		<now>16</now>
		<pc></pc>
		<res></res>
	</rebec>
</state>
<state id="547_0" atomicpropositions="" >
	<rebec name="room">
		<statevariables>
			<variable name="Room.currentTemp" type="int">23</variable>
			<variable name="Room.currentRegulation" type="int">0</variable>
			<variable name="Room.outside_air" type="int">0</variable>
		</statevariables>
		<queue>
			<message arrival="20" deadline="infinity" sender="room">updateStatus()</message>
		</queue>
		<now>18</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="controller">
		<statevariables>
			<variable name="Controller.currentTemp" type="int">23</variable>
			<variable name="Controller.isHeating" type="boolean">false</variable>
			<variable name="Controller.isCooling" type="boolean">false</variable>
		</statevariables>
		<queue>
		</queue>
		<now>18</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="sensor">
		<statevariables>
		</statevariables>
		<queue>
			<message arrival="18" deadline="infinity" sender="sensor">callSensor()</message>
		</queue>
		<now>18</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="hc_unit">
		<statevariables>
			<variable name="HC_Unit.heaterOn" type="boolean">false</variable>
			<variable name="HC_Unit.coolerOn" type="boolean">false</variable>
			<variable name="HC_Unit.currentRegulation" type="int">0</variable>
		</statevariables>
		<queue>
			<message arrival="20" deadline="infinity" sender="hc_unit">regulateTemp()</message>
		</queue>
		<now>18</now>
		<pc></pc>
		<res></res>
	</rebec>
</state>
<transition source="546_0" destination="547_0" executionTime="16" shift="0"> <time value="2"/></transition>
<transition source="542_0" destination="546_0" executionTime="16" shift="0"> <messageserver sender="controller" owner="controller" title="UPDATEOUTPUT"/></transition>
<state id="548_0" atomicpropositions="" >
	<rebec name="room">
		<statevariables>
			<variable name="Room.currentTemp" type="int">22</variable>
			<variable name="Room.currentRegulation" type="int">0</variable>
			<variable name="Room.outside_air" type="int">-1</variable>
		</statevariables>
		<queue>
			<message arrival="20" deadline="infinity" sender="room">updateStatus()</message>
		</queue>
		<now>16</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="controller">
		<statevariables>
			<variable name="Controller.currentTemp" type="int">22</variable>
			<variable name="Controller.isHeating" type="boolean">false</variable>
			<variable name="Controller.isCooling" type="boolean">false</variable>
		</statevariables>
		<queue>
		</queue>
		<now>16</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="sensor">
		<statevariables>
		</statevariables>
		<queue>
			<message arrival="18" deadline="infinity" sender="sensor">callSensor()</message>
		</queue>
		<now>16</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="hc_unit">
		<statevariables>
			<variable name="HC_Unit.heaterOn" type="boolean">false</variable>
			<variable name="HC_Unit.coolerOn" type="boolean">false</variable>
			<variable name="HC_Unit.currentRegulation" type="int">0</variable>
		</statevariables>
		<queue>
			<message arrival="20" deadline="infinity" sender="hc_unit">regulateTemp()</message>
		</queue>
		<now>16</now>
		<pc></pc>
		<res></res>
	</rebec>
</state>
<state id="549_0" atomicpropositions="" >
	<rebec name="room">
		<statevariables>
			<variable name="Room.currentTemp" type="int">22</variable>
			<variable name="Room.currentRegulation" type="int">0</variable>
			<variable name="Room.outside_air" type="int">-1</variable>
		</statevariables>
		<queue>
			<message arrival="20" deadline="infinity" sender="room">updateStatus()</message>
		</queue>
		<now>18</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="controller">
		<statevariables>
			<variable name="Controller.currentTemp" type="int">22</variable>
			<variable name="Controller.isHeating" type="boolean">false</variable>
			<variable name="Controller.isCooling" type="boolean">false</variable>
		</statevariables>
		<queue>
		</queue>
		<now>18</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="sensor">
		<statevariables>
		</statevariables>
		<queue>
			<message arrival="18" deadline="infinity" sender="sensor">callSensor()</message>
		</queue>
		<now>18</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="hc_unit">
		<statevariables>
			<variable name="HC_Unit.heaterOn" type="boolean">false</variable>
			<variable name="HC_Unit.coolerOn" type="boolean">false</variable>
			<variable name="HC_Unit.currentRegulation" type="int">0</variable>
		</statevariables>
		<queue>
			<message arrival="20" deadline="infinity" sender="hc_unit">regulateTemp()</message>
		</queue>
		<now>18</now>
		<pc></pc>
		<res></res>
	</rebec>
</state>
<transition source="548_0" destination="549_0" executionTime="16" shift="0"> <time value="2"/></transition>
<transition source="543_0" destination="548_0" executionTime="16" shift="0"> <messageserver sender="controller" owner="controller" title="UPDATEOUTPUT"/></transition>
<state id="550_0" atomicpropositions="isHeating," >
	<rebec name="room">
		<statevariables>
			<variable name="Room.currentTemp" type="int">20</variable>
			<variable name="Room.currentRegulation" type="int">1</variable>
			<variable name="Room.outside_air" type="int">1</variable>
		</statevariables>
		<queue>
			<message arrival="16" deadline="infinity" sender="sensor">getTemp()</message>
			<message arrival="20" deadline="infinity" sender="room">updateStatus()</message>
		</queue>
		<now>16</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="controller">
		<statevariables>
			<variable name="Controller.currentTemp" type="int">20</variable>
			<variable name="Controller.isHeating" type="boolean">true</variable>
			<variable name="Controller.isCooling" type="boolean">false</variable>
		</statevariables>
		<queue>
		</queue>
		<now>16</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="sensor">
		<statevariables>
		</statevariables>
		<queue>
			<message arrival="18" deadline="infinity" sender="sensor">callSensor()</message>
		</queue>
		<now>16</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="hc_unit">
		<statevariables>
			<variable name="HC_Unit.heaterOn" type="boolean">true</variable>
			<variable name="HC_Unit.coolerOn" type="boolean">false</variable>
			<variable name="HC_Unit.currentRegulation" type="int">1</variable>
		</statevariables>
		<queue>
			<message arrival="20" deadline="infinity" sender="hc_unit">regulateTemp()</message>
		</queue>
		<now>16</now>
		<pc></pc>
		<res></res>
	</rebec>
</state>
<transition source="521_0" destination="550_0" executionTime="16" shift="0"> <messageserver sender="sensor" owner="sensor" title="CALLSENSOR"/></transition>
<state id="551_0" atomicpropositions="" >
	<rebec name="room">
		<statevariables>
			<variable name="Room.currentTemp" type="int">22</variable>
			<variable name="Room.currentRegulation" type="int">0</variable>
			<variable name="Room.outside_air" type="int">1</variable>
		</statevariables>
		<queue>
			<message arrival="16" deadline="infinity" sender="sensor">getTemp()</message>
			<message arrival="20" deadline="infinity" sender="room">updateStatus()</message>
		</queue>
		<now>16</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="controller">
		<statevariables>
			<variable name="Controller.currentTemp" type="int">22</variable>
			<variable name="Controller.isHeating" type="boolean">false</variable>
			<variable name="Controller.isCooling" type="boolean">false</variable>
		</statevariables>
		<queue>
		</queue>
		<now>16</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="sensor">
		<statevariables>
		</statevariables>
		<queue>
			<message arrival="18" deadline="infinity" sender="sensor">callSensor()</message>
		</queue>
		<now>16</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="hc_unit">
		<statevariables>
			<variable name="HC_Unit.heaterOn" type="boolean">false</variable>
			<variable name="HC_Unit.coolerOn" type="boolean">false</variable>
			<variable name="HC_Unit.currentRegulation" type="int">0</variable>
		</statevariables>
		<queue>
			<message arrival="20" deadline="infinity" sender="hc_unit">regulateTemp()</message>
		</queue>
		<now>16</now>
		<pc></pc>
		<res></res>
	</rebec>
</state>
<transition source="519_0" destination="551_0" executionTime="16" shift="0"> <messageserver sender="sensor" owner="sensor" title="CALLSENSOR"/></transition>
<state id="552_0" atomicpropositions="isHeating," >
	<rebec name="room">
		<statevariables>
			<variable name="Room.currentTemp" type="int">20</variable>
			<variable name="Room.currentRegulation" type="int">1</variable>
			<variable name="Room.outside_air" type="int">1</variable>
		</statevariables>
		<queue>
			<message arrival="20" deadline="infinity" sender="room">updateStatus()</message>
		</queue>
		<now>16</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="controller">
		<statevariables>
			<variable name="Controller.currentTemp" type="int">20</variable>
			<variable name="Controller.isHeating" type="boolean">true</variable>
			<variable name="Controller.isCooling" type="boolean">false</variable>
		</statevariables>
		<queue>
		</queue>
		<now>16</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="sensor">
		<statevariables>
		</statevariables>
		<queue>
			<message arrival="16" deadline="infinity" sender="room">setCurrent(20)</message>
			<message arrival="18" deadline="infinity" sender="sensor">callSensor()</message>
		</queue>
		<now>16</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="hc_unit">
		<statevariables>
			<variable name="HC_Unit.heaterOn" type="boolean">true</variable>
			<variable name="HC_Unit.coolerOn" type="boolean">false</variable>
			<variable name="HC_Unit.currentRegulation" type="int">1</variable>
		</statevariables>
		<queue>
			<message arrival="20" deadline="infinity" sender="hc_unit">regulateTemp()</message>
		</queue>
		<now>16</now>
		<pc></pc>
		<res></res>
	</rebec>
</state>
<transition source="550_0" destination="552_0" executionTime="16" shift="0"> <messageserver sender="sensor" owner="room" title="GETTEMP"/></transition>
<state id="553_0" atomicpropositions="" >
	<rebec name="room">
		<statevariables>
			<variable name="Room.currentTemp" type="int">22</variable>
			<variable name="Room.currentRegulation" type="int">0</variable>
			<variable name="Room.outside_air" type="int">1</variable>
		</statevariables>
		<queue>
			<message arrival="20" deadline="infinity" sender="room">updateStatus()</message>
		</queue>
		<now>16</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="controller">
		<statevariables>
			<variable name="Controller.currentTemp" type="int">22</variable>
			<variable name="Controller.isHeating" type="boolean">false</variable>
			<variable name="Controller.isCooling" type="boolean">false</variable>
		</statevariables>
		<queue>
		</queue>
		<now>16</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="sensor">
		<statevariables>
		</statevariables>
		<queue>
			<message arrival="16" deadline="infinity" sender="room">setCurrent(22)</message>
			<message arrival="18" deadline="infinity" sender="sensor">callSensor()</message>
		</queue>
		<now>16</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="hc_unit">
		<statevariables>
			<variable name="HC_Unit.heaterOn" type="boolean">false</variable>
			<variable name="HC_Unit.coolerOn" type="boolean">false</variable>
			<variable name="HC_Unit.currentRegulation" type="int">0</variable>
		</statevariables>
		<queue>
			<message arrival="20" deadline="infinity" sender="hc_unit">regulateTemp()</message>
		</queue>
		<now>16</now>
		<pc></pc>
		<res></res>
	</rebec>
</state>
<transition source="551_0" destination="553_0" executionTime="16" shift="0"> <messageserver sender="sensor" owner="room" title="GETTEMP"/></transition>
<state id="554_0" atomicpropositions="isHeating," >
	<rebec name="room">
		<statevariables>
			<variable name="Room.currentTemp" type="int">20</variable>
			<variable name="Room.currentRegulation" type="int">1</variable>
			<variable name="Room.outside_air" type="int">1</variable>
		</statevariables>
		<queue>
			<message arrival="20" deadline="infinity" sender="room">updateStatus()</message>
		</queue>
		<now>16</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="controller">
		<statevariables>
			<variable name="Controller.currentTemp" type="int">20</variable>
			<variable name="Controller.isHeating" type="boolean">true</variable>
			<variable name="Controller.isCooling" type="boolean">false</variable>
		</statevariables>
		<queue>
			<message arrival="16" deadline="infinity" sender="sensor">setCurrent(20)</message>
		</queue>
		<now>16</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="sensor">
		<statevariables>
		</statevariables>
		<queue>
			<message arrival="18" deadline="infinity" sender="sensor">callSensor()</message>
		</queue>
		<now>16</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="hc_unit">
		<statevariables>
			<variable name="HC_Unit.heaterOn" type="boolean">true</variable>
			<variable name="HC_Unit.coolerOn" type="boolean">false</variable>
			<variable name="HC_Unit.currentRegulation" type="int">1</variable>
		</statevariables>
		<queue>
			<message arrival="20" deadline="infinity" sender="hc_unit">regulateTemp()</message>
		</queue>
		<now>16</now>
		<pc></pc>
		<res></res>
	</rebec>
</state>
<transition source="552_0" destination="554_0" executionTime="16" shift="0"> <messageserver sender="room" owner="sensor" title="SETCURRENT"/></transition>
<state id="555_0" atomicpropositions="" >
	<rebec name="room">
		<statevariables>
			<variable name="Room.currentTemp" type="int">22</variable>
			<variable name="Room.currentRegulation" type="int">0</variable>
			<variable name="Room.outside_air" type="int">1</variable>
		</statevariables>
		<queue>
			<message arrival="20" deadline="infinity" sender="room">updateStatus()</message>
		</queue>
		<now>16</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="controller">
		<statevariables>
			<variable name="Controller.currentTemp" type="int">22</variable>
			<variable name="Controller.isHeating" type="boolean">false</variable>
			<variable name="Controller.isCooling" type="boolean">false</variable>
		</statevariables>
		<queue>
			<message arrival="16" deadline="infinity" sender="sensor">setCurrent(22)</message>
		</queue>
		<now>16</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="sensor">
		<statevariables>
		</statevariables>
		<queue>
			<message arrival="18" deadline="infinity" sender="sensor">callSensor()</message>
		</queue>
		<now>16</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="hc_unit">
		<statevariables>
			<variable name="HC_Unit.heaterOn" type="boolean">false</variable>
			<variable name="HC_Unit.coolerOn" type="boolean">false</variable>
			<variable name="HC_Unit.currentRegulation" type="int">0</variable>
		</statevariables>
		<queue>
			<message arrival="20" deadline="infinity" sender="hc_unit">regulateTemp()</message>
		</queue>
		<now>16</now>
		<pc></pc>
		<res></res>
	</rebec>
</state>
<transition source="553_0" destination="555_0" executionTime="16" shift="0"> <messageserver sender="room" owner="sensor" title="SETCURRENT"/></transition>
<state id="556_0" atomicpropositions="isHeating," >
	<rebec name="room">
		<statevariables>
			<variable name="Room.currentTemp" type="int">20</variable>
			<variable name="Room.currentRegulation" type="int">1</variable>
			<variable name="Room.outside_air" type="int">1</variable>
		</statevariables>
		<queue>
			<message arrival="20" deadline="infinity" sender="room">updateStatus()</message>
		</queue>
		<now>16</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="controller">
		<statevariables>
			<variable name="Controller.currentTemp" type="int">20</variable>
			<variable name="Controller.isHeating" type="boolean">true</variable>
			<variable name="Controller.isCooling" type="boolean">false</variable>
		</statevariables>
		<queue>
			<message arrival="16" deadline="infinity" sender="controller">updateOutput()</message>
		</queue>
		<now>16</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="sensor">
		<statevariables>
		</statevariables>
		<queue>
			<message arrival="18" deadline="infinity" sender="sensor">callSensor()</message>
		</queue>
		<now>16</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="hc_unit">
		<statevariables>
			<variable name="HC_Unit.heaterOn" type="boolean">true</variable>
			<variable name="HC_Unit.coolerOn" type="boolean">false</variable>
			<variable name="HC_Unit.currentRegulation" type="int">1</variable>
		</statevariables>
		<queue>
			<message arrival="20" deadline="infinity" sender="hc_unit">regulateTemp()</message>
		</queue>
		<now>16</now>
		<pc></pc>
		<res></res>
	</rebec>
</state>
<transition source="554_0" destination="556_0" executionTime="16" shift="0"> <messageserver sender="sensor" owner="controller" title="SETCURRENT"/></transition>
<state id="557_0" atomicpropositions="" >
	<rebec name="room">
		<statevariables>
			<variable name="Room.currentTemp" type="int">22</variable>
			<variable name="Room.currentRegulation" type="int">0</variable>
			<variable name="Room.outside_air" type="int">1</variable>
		</statevariables>
		<queue>
			<message arrival="20" deadline="infinity" sender="room">updateStatus()</message>
		</queue>
		<now>16</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="controller">
		<statevariables>
			<variable name="Controller.currentTemp" type="int">22</variable>
			<variable name="Controller.isHeating" type="boolean">false</variable>
			<variable name="Controller.isCooling" type="boolean">false</variable>
		</statevariables>
		<queue>
			<message arrival="16" deadline="infinity" sender="controller">updateOutput()</message>
		</queue>
		<now>16</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="sensor">
		<statevariables>
		</statevariables>
		<queue>
			<message arrival="18" deadline="infinity" sender="sensor">callSensor()</message>
		</queue>
		<now>16</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="hc_unit">
		<statevariables>
			<variable name="HC_Unit.heaterOn" type="boolean">false</variable>
			<variable name="HC_Unit.coolerOn" type="boolean">false</variable>
			<variable name="HC_Unit.currentRegulation" type="int">0</variable>
		</statevariables>
		<queue>
			<message arrival="20" deadline="infinity" sender="hc_unit">regulateTemp()</message>
		</queue>
		<now>16</now>
		<pc></pc>
		<res></res>
	</rebec>
</state>
<transition source="555_0" destination="557_0" executionTime="16" shift="0"> <messageserver sender="sensor" owner="controller" title="SETCURRENT"/></transition>
<state id="558_0" atomicpropositions="isHeating," >
	<rebec name="room">
		<statevariables>
			<variable name="Room.currentTemp" type="int">20</variable>
			<variable name="Room.currentRegulation" type="int">1</variable>
			<variable name="Room.outside_air" type="int">1</variable>
		</statevariables>
		<queue>
			<message arrival="20" deadline="infinity" sender="room">updateStatus()</message>
		</queue>
		<now>16</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="controller">
		<statevariables>
			<variable name="Controller.currentTemp" type="int">20</variable>
			<variable name="Controller.isHeating" type="boolean">true</variable>
			<variable name="Controller.isCooling" type="boolean">false</variable>
		</statevariables>
		<queue>
		</queue>
		<now>16</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="sensor">
		<statevariables>
		</statevariables>
		<queue>
			<message arrival="18" deadline="infinity" sender="sensor">callSensor()</message>
		</queue>
		<now>16</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="hc_unit">
		<statevariables>
			<variable name="HC_Unit.heaterOn" type="boolean">true</variable>
			<variable name="HC_Unit.coolerOn" type="boolean">false</variable>
			<variable name="HC_Unit.currentRegulation" type="int">1</variable>
		</statevariables>
		<queue>
			<message arrival="20" deadline="infinity" sender="hc_unit">regulateTemp()</message>
		</queue>
		<now>16</now>
		<pc></pc>
		<res></res>
	</rebec>
</state>
<state id="559_0" atomicpropositions="isHeating," >
	<rebec name="room">
		<statevariables>
			<variable name="Room.currentTemp" type="int">20</variable>
			<variable name="Room.currentRegulation" type="int">1</variable>
			<variable name="Room.outside_air" type="int">1</variable>
		</statevariables>
		<queue>
			<message arrival="20" deadline="infinity" sender="room">updateStatus()</message>
		</queue>
		<now>18</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="controller">
		<statevariables>
			<variable name="Controller.currentTemp" type="int">20</variable>
			<variable name="Controller.isHeating" type="boolean">true</variable>
			<variable name="Controller.isCooling" type="boolean">false</variable>
		</statevariables>
		<queue>
		</queue>
		<now>18</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="sensor">
		<statevariables>
		</statevariables>
		<queue>
			<message arrival="18" deadline="infinity" sender="sensor">callSensor()</message>
		</queue>
		<now>18</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="hc_unit">
		<statevariables>
			<variable name="HC_Unit.heaterOn" type="boolean">true</variable>
			<variable name="HC_Unit.coolerOn" type="boolean">false</variable>
			<variable name="HC_Unit.currentRegulation" type="int">1</variable>
		</statevariables>
		<queue>
			<message arrival="20" deadline="infinity" sender="hc_unit">regulateTemp()</message>
		</queue>
		<now>18</now>
		<pc></pc>
		<res></res>
	</rebec>
</state>
<transition source="558_0" destination="559_0" executionTime="16" shift="0"> <time value="2"/></transition>
<transition source="556_0" destination="558_0" executionTime="16" shift="0"> <messageserver sender="controller" owner="controller" title="UPDATEOUTPUT"/></transition>
<state id="560_0" atomicpropositions="" >
	<rebec name="room">
		<statevariables>
			<variable name="Room.currentTemp" type="int">22</variable>
			<variable name="Room.currentRegulation" type="int">0</variable>
			<variable name="Room.outside_air" type="int">1</variable>
		</statevariables>
		<queue>
			<message arrival="20" deadline="infinity" sender="room">updateStatus()</message>
		</queue>
		<now>16</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="controller">
		<statevariables>
			<variable name="Controller.currentTemp" type="int">22</variable>
			<variable name="Controller.isHeating" type="boolean">false</variable>
			<variable name="Controller.isCooling" type="boolean">false</variable>
		</statevariables>
		<queue>
		</queue>
		<now>16</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="sensor">
		<statevariables>
		</statevariables>
		<queue>
			<message arrival="18" deadline="infinity" sender="sensor">callSensor()</message>
		</queue>
		<now>16</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="hc_unit">
		<statevariables>
			<variable name="HC_Unit.heaterOn" type="boolean">false</variable>
			<variable name="HC_Unit.coolerOn" type="boolean">false</variable>
			<variable name="HC_Unit.currentRegulation" type="int">0</variable>
		</statevariables>
		<queue>
			<message arrival="20" deadline="infinity" sender="hc_unit">regulateTemp()</message>
		</queue>
		<now>16</now>
		<pc></pc>
		<res></res>
	</rebec>
</state>
<state id="561_0" atomicpropositions="" >
	<rebec name="room">
		<statevariables>
			<variable name="Room.currentTemp" type="int">22</variable>
			<variable name="Room.currentRegulation" type="int">0</variable>
			<variable name="Room.outside_air" type="int">1</variable>
		</statevariables>
		<queue>
			<message arrival="20" deadline="infinity" sender="room">updateStatus()</message>
		</queue>
		<now>18</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="controller">
		<statevariables>
			<variable name="Controller.currentTemp" type="int">22</variable>
			<variable name="Controller.isHeating" type="boolean">false</variable>
			<variable name="Controller.isCooling" type="boolean">false</variable>
		</statevariables>
		<queue>
		</queue>
		<now>18</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="sensor">
		<statevariables>
		</statevariables>
		<queue>
			<message arrival="18" deadline="infinity" sender="sensor">callSensor()</message>
		</queue>
		<now>18</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="hc_unit">
		<statevariables>
			<variable name="HC_Unit.heaterOn" type="boolean">false</variable>
			<variable name="HC_Unit.coolerOn" type="boolean">false</variable>
			<variable name="HC_Unit.currentRegulation" type="int">0</variable>
		</statevariables>
		<queue>
			<message arrival="20" deadline="infinity" sender="hc_unit">regulateTemp()</message>
		</queue>
		<now>18</now>
		<pc></pc>
		<res></res>
	</rebec>
</state>
<transition source="560_0" destination="561_0" executionTime="16" shift="0"> <time value="2"/></transition>
<transition source="557_0" destination="560_0" executionTime="16" shift="0"> <messageserver sender="controller" owner="controller" title="UPDATEOUTPUT"/></transition>
<state id="562_0" atomicpropositions="isCooling," >
	<rebec name="room">
		<statevariables>
			<variable name="Room.currentTemp" type="int">24</variable>
			<variable name="Room.currentRegulation" type="int">-1</variable>
			<variable name="Room.outside_air" type="int">-1</variable>
		</statevariables>
		<queue>
			<message arrival="16" deadline="infinity" sender="sensor">getTemp()</message>
			<message arrival="20" deadline="infinity" sender="room">updateStatus()</message>
		</queue>
		<now>16</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="controller">
		<statevariables>
			<variable name="Controller.currentTemp" type="int">24</variable>
			<variable name="Controller.isHeating" type="boolean">false</variable>
			<variable name="Controller.isCooling" type="boolean">true</variable>
		</statevariables>
		<queue>
		</queue>
		<now>16</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="sensor">
		<statevariables>
		</statevariables>
		<queue>
			<message arrival="18" deadline="infinity" sender="sensor">callSensor()</message>
		</queue>
		<now>16</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="hc_unit">
		<statevariables>
			<variable name="HC_Unit.heaterOn" type="boolean">false</variable>
			<variable name="HC_Unit.coolerOn" type="boolean">true</variable>
			<variable name="HC_Unit.currentRegulation" type="int">-1</variable>
		</statevariables>
		<queue>
			<message arrival="20" deadline="infinity" sender="hc_unit">regulateTemp()</message>
		</queue>
		<now>16</now>
		<pc></pc>
		<res></res>
	</rebec>
</state>
<transition source="525_0" destination="562_0" executionTime="16" shift="0"> <messageserver sender="sensor" owner="sensor" title="CALLSENSOR"/></transition>
<state id="563_0" atomicpropositions="isCooling," >
	<rebec name="room">
		<statevariables>
			<variable name="Room.currentTemp" type="int">24</variable>
			<variable name="Room.currentRegulation" type="int">-1</variable>
			<variable name="Room.outside_air" type="int">-1</variable>
		</statevariables>
		<queue>
			<message arrival="20" deadline="infinity" sender="room">updateStatus()</message>
		</queue>
		<now>16</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="controller">
		<statevariables>
			<variable name="Controller.currentTemp" type="int">24</variable>
			<variable name="Controller.isHeating" type="boolean">false</variable>
			<variable name="Controller.isCooling" type="boolean">true</variable>
		</statevariables>
		<queue>
		</queue>
		<now>16</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="sensor">
		<statevariables>
		</statevariables>
		<queue>
			<message arrival="16" deadline="infinity" sender="room">setCurrent(24)</message>
			<message arrival="18" deadline="infinity" sender="sensor">callSensor()</message>
		</queue>
		<now>16</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="hc_unit">
		<statevariables>
			<variable name="HC_Unit.heaterOn" type="boolean">false</variable>
			<variable name="HC_Unit.coolerOn" type="boolean">true</variable>
			<variable name="HC_Unit.currentRegulation" type="int">-1</variable>
		</statevariables>
		<queue>
			<message arrival="20" deadline="infinity" sender="hc_unit">regulateTemp()</message>
		</queue>
		<now>16</now>
		<pc></pc>
		<res></res>
	</rebec>
</state>
<transition source="562_0" destination="563_0" executionTime="16" shift="0"> <messageserver sender="sensor" owner="room" title="GETTEMP"/></transition>
<state id="564_0" atomicpropositions="isCooling," >
	<rebec name="room">
		<statevariables>
			<variable name="Room.currentTemp" type="int">24</variable>
			<variable name="Room.currentRegulation" type="int">-1</variable>
			<variable name="Room.outside_air" type="int">-1</variable>
		</statevariables>
		<queue>
			<message arrival="20" deadline="infinity" sender="room">updateStatus()</message>
		</queue>
		<now>16</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="controller">
		<statevariables>
			<variable name="Controller.currentTemp" type="int">24</variable>
			<variable name="Controller.isHeating" type="boolean">false</variable>
			<variable name="Controller.isCooling" type="boolean">true</variable>
		</statevariables>
		<queue>
			<message arrival="16" deadline="infinity" sender="sensor">setCurrent(24)</message>
		</queue>
		<now>16</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="sensor">
		<statevariables>
		</statevariables>
		<queue>
			<message arrival="18" deadline="infinity" sender="sensor">callSensor()</message>
		</queue>
		<now>16</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="hc_unit">
		<statevariables>
			<variable name="HC_Unit.heaterOn" type="boolean">false</variable>
			<variable name="HC_Unit.coolerOn" type="boolean">true</variable>
			<variable name="HC_Unit.currentRegulation" type="int">-1</variable>
		</statevariables>
		<queue>
			<message arrival="20" deadline="infinity" sender="hc_unit">regulateTemp()</message>
		</queue>
		<now>16</now>
		<pc></pc>
		<res></res>
	</rebec>
</state>
<transition source="563_0" destination="564_0" executionTime="16" shift="0"> <messageserver sender="room" owner="sensor" title="SETCURRENT"/></transition>
<state id="565_0" atomicpropositions="isCooling," >
	<rebec name="room">
		<statevariables>
			<variable name="Room.currentTemp" type="int">24</variable>
			<variable name="Room.currentRegulation" type="int">-1</variable>
			<variable name="Room.outside_air" type="int">-1</variable>
		</statevariables>
		<queue>
			<message arrival="20" deadline="infinity" sender="room">updateStatus()</message>
		</queue>
		<now>16</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="controller">
		<statevariables>
			<variable name="Controller.currentTemp" type="int">24</variable>
			<variable name="Controller.isHeating" type="boolean">false</variable>
			<variable name="Controller.isCooling" type="boolean">true</variable>
		</statevariables>
		<queue>
			<message arrival="16" deadline="infinity" sender="controller">updateOutput()</message>
		</queue>
		<now>16</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="sensor">
		<statevariables>
		</statevariables>
		<queue>
			<message arrival="18" deadline="infinity" sender="sensor">callSensor()</message>
		</queue>
		<now>16</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="hc_unit">
		<statevariables>
			<variable name="HC_Unit.heaterOn" type="boolean">false</variable>
			<variable name="HC_Unit.coolerOn" type="boolean">true</variable>
			<variable name="HC_Unit.currentRegulation" type="int">-1</variable>
		</statevariables>
		<queue>
			<message arrival="20" deadline="infinity" sender="hc_unit">regulateTemp()</message>
		</queue>
		<now>16</now>
		<pc></pc>
		<res></res>
	</rebec>
</state>
<transition source="564_0" destination="565_0" executionTime="16" shift="0"> <messageserver sender="sensor" owner="controller" title="SETCURRENT"/></transition>
<state id="566_0" atomicpropositions="isCooling," >
	<rebec name="room">
		<statevariables>
			<variable name="Room.currentTemp" type="int">24</variable>
			<variable name="Room.currentRegulation" type="int">-1</variable>
			<variable name="Room.outside_air" type="int">-1</variable>
		</statevariables>
		<queue>
			<message arrival="20" deadline="infinity" sender="room">updateStatus()</message>
		</queue>
		<now>16</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="controller">
		<statevariables>
			<variable name="Controller.currentTemp" type="int">24</variable>
			<variable name="Controller.isHeating" type="boolean">false</variable>
			<variable name="Controller.isCooling" type="boolean">true</variable>
		</statevariables>
		<queue>
		</queue>
		<now>16</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="sensor">
		<statevariables>
		</statevariables>
		<queue>
			<message arrival="18" deadline="infinity" sender="sensor">callSensor()</message>
		</queue>
		<now>16</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="hc_unit">
		<statevariables>
			<variable name="HC_Unit.heaterOn" type="boolean">false</variable>
			<variable name="HC_Unit.coolerOn" type="boolean">true</variable>
			<variable name="HC_Unit.currentRegulation" type="int">-1</variable>
		</statevariables>
		<queue>
			<message arrival="20" deadline="infinity" sender="hc_unit">regulateTemp()</message>
		</queue>
		<now>16</now>
		<pc></pc>
		<res></res>
	</rebec>
</state>
<state id="567_0" atomicpropositions="isCooling," >
	<rebec name="room">
		<statevariables>
			<variable name="Room.currentTemp" type="int">24</variable>
			<variable name="Room.currentRegulation" type="int">-1</variable>
			<variable name="Room.outside_air" type="int">-1</variable>
		</statevariables>
		<queue>
			<message arrival="20" deadline="infinity" sender="room">updateStatus()</message>
		</queue>
		<now>18</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="controller">
		<statevariables>
			<variable name="Controller.currentTemp" type="int">24</variable>
			<variable name="Controller.isHeating" type="boolean">false</variable>
			<variable name="Controller.isCooling" type="boolean">true</variable>
		</statevariables>
		<queue>
		</queue>
		<now>18</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="sensor">
		<statevariables>
		</statevariables>
		<queue>
			<message arrival="18" deadline="infinity" sender="sensor">callSensor()</message>
		</queue>
		<now>18</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="hc_unit">
		<statevariables>
			<variable name="HC_Unit.heaterOn" type="boolean">false</variable>
			<variable name="HC_Unit.coolerOn" type="boolean">true</variable>
			<variable name="HC_Unit.currentRegulation" type="int">-1</variable>
		</statevariables>
		<queue>
			<message arrival="20" deadline="infinity" sender="hc_unit">regulateTemp()</message>
		</queue>
		<now>18</now>
		<pc></pc>
		<res></res>
	</rebec>
</state>
<transition source="566_0" destination="567_0" executionTime="16" shift="0"> <time value="2"/></transition>
<transition source="565_0" destination="566_0" executionTime="16" shift="0"> <messageserver sender="controller" owner="controller" title="UPDATEOUTPUT"/></transition>
<state id="568_0" atomicpropositions="" >
	<rebec name="room">
		<statevariables>
			<variable name="Room.currentTemp" type="int">21</variable>
			<variable name="Room.currentRegulation" type="int">0</variable>
			<variable name="Room.outside_air" type="int">0</variable>
		</statevariables>
		<queue>
			<message arrival="18" deadline="infinity" sender="sensor">getTemp()</message>
			<message arrival="20" deadline="infinity" sender="room">updateStatus()</message>
		</queue>
		<now>18</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="controller">
		<statevariables>
			<variable name="Controller.currentTemp" type="int">21</variable>
			<variable name="Controller.isHeating" type="boolean">false</variable>
			<variable name="Controller.isCooling" type="boolean">false</variable>
		</statevariables>
		<queue>
		</queue>
		<now>18</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="sensor">
		<statevariables>
		</statevariables>
		<queue>
			<message arrival="20" deadline="infinity" sender="sensor">callSensor()</message>
		</queue>
		<now>18</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="hc_unit">
		<statevariables>
			<variable name="HC_Unit.heaterOn" type="boolean">false</variable>
			<variable name="HC_Unit.coolerOn" type="boolean">false</variable>
			<variable name="HC_Unit.currentRegulation" type="int">0</variable>
		</statevariables>
		<queue>
			<message arrival="20" deadline="infinity" sender="hc_unit">regulateTemp()</message>
		</queue>
		<now>18</now>
		<pc></pc>
		<res></res>
	</rebec>
</state>
<transition source="545_0" destination="568_0" executionTime="18" shift="0"> <messageserver sender="sensor" owner="sensor" title="CALLSENSOR"/></transition>
<state id="569_0" atomicpropositions="" >
	<rebec name="room">
		<statevariables>
			<variable name="Room.currentTemp" type="int">22</variable>
			<variable name="Room.currentRegulation" type="int">0</variable>
			<variable name="Room.outside_air" type="int">1</variable>
		</statevariables>
		<queue>
			<message arrival="18" deadline="infinity" sender="sensor">getTemp()</message>
			<message arrival="20" deadline="infinity" sender="room">updateStatus()</message>
		</queue>
		<now>18</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="controller">
		<statevariables>
			<variable name="Controller.currentTemp" type="int">22</variable>
			<variable name="Controller.isHeating" type="boolean">false</variable>
			<variable name="Controller.isCooling" type="boolean">false</variable>
		</statevariables>
		<queue>
		</queue>
		<now>18</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="sensor">
		<statevariables>
		</statevariables>
		<queue>
			<message arrival="20" deadline="infinity" sender="sensor">callSensor()</message>
		</queue>
		<now>18</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="hc_unit">
		<statevariables>
			<variable name="HC_Unit.heaterOn" type="boolean">false</variable>
			<variable name="HC_Unit.coolerOn" type="boolean">false</variable>
			<variable name="HC_Unit.currentRegulation" type="int">0</variable>
		</statevariables>
		<queue>
			<message arrival="20" deadline="infinity" sender="hc_unit">regulateTemp()</message>
		</queue>
		<now>18</now>
		<pc></pc>
		<res></res>
	</rebec>
</state>
<transition source="561_0" destination="569_0" executionTime="18" shift="0"> <messageserver sender="sensor" owner="sensor" title="CALLSENSOR"/></transition>
<state id="570_0" atomicpropositions="isCooling," >
	<rebec name="room">
		<statevariables>
			<variable name="Room.currentTemp" type="int">24</variable>
			<variable name="Room.currentRegulation" type="int">-1</variable>
			<variable name="Room.outside_air" type="int">-1</variable>
		</statevariables>
		<queue>
			<message arrival="18" deadline="infinity" sender="sensor">getTemp()</message>
			<message arrival="20" deadline="infinity" sender="room">updateStatus()</message>
		</queue>
		<now>18</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="controller">
		<statevariables>
			<variable name="Controller.currentTemp" type="int">24</variable>
			<variable name="Controller.isHeating" type="boolean">false</variable>
			<variable name="Controller.isCooling" type="boolean">true</variable>
		</statevariables>
		<queue>
		</queue>
		<now>18</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="sensor">
		<statevariables>
		</statevariables>
		<queue>
			<message arrival="20" deadline="infinity" sender="sensor">callSensor()</message>
		</queue>
		<now>18</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="hc_unit">
		<statevariables>
			<variable name="HC_Unit.heaterOn" type="boolean">false</variable>
			<variable name="HC_Unit.coolerOn" type="boolean">true</variable>
			<variable name="HC_Unit.currentRegulation" type="int">-1</variable>
		</statevariables>
		<queue>
			<message arrival="20" deadline="infinity" sender="hc_unit">regulateTemp()</message>
		</queue>
		<now>18</now>
		<pc></pc>
		<res></res>
	</rebec>
</state>
<transition source="567_0" destination="570_0" executionTime="18" shift="0"> <messageserver sender="sensor" owner="sensor" title="CALLSENSOR"/></transition>
<state id="571_0" atomicpropositions="" >
	<rebec name="room">
		<statevariables>
			<variable name="Room.currentTemp" type="int">21</variable>
			<variable name="Room.currentRegulation" type="int">0</variable>
			<variable name="Room.outside_air" type="int">0</variable>
		</statevariables>
		<queue>
			<message arrival="20" deadline="infinity" sender="room">updateStatus()</message>
		</queue>
		<now>18</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="controller">
		<statevariables>
			<variable name="Controller.currentTemp" type="int">21</variable>
			<variable name="Controller.isHeating" type="boolean">false</variable>
			<variable name="Controller.isCooling" type="boolean">false</variable>
		</statevariables>
		<queue>
		</queue>
		<now>18</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="sensor">
		<statevariables>
		</statevariables>
		<queue>
			<message arrival="18" deadline="infinity" sender="room">setCurrent(21)</message>
			<message arrival="20" deadline="infinity" sender="sensor">callSensor()</message>
		</queue>
		<now>18</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="hc_unit">
		<statevariables>
			<variable name="HC_Unit.heaterOn" type="boolean">false</variable>
			<variable name="HC_Unit.coolerOn" type="boolean">false</variable>
			<variable name="HC_Unit.currentRegulation" type="int">0</variable>
		</statevariables>
		<queue>
			<message arrival="20" deadline="infinity" sender="hc_unit">regulateTemp()</message>
		</queue>
		<now>18</now>
		<pc></pc>
		<res></res>
	</rebec>
</state>
<transition source="568_0" destination="571_0" executionTime="18" shift="0"> <messageserver sender="sensor" owner="room" title="GETTEMP"/></transition>
<state id="572_0" atomicpropositions="" >
	<rebec name="room">
		<statevariables>
			<variable name="Room.currentTemp" type="int">22</variable>
			<variable name="Room.currentRegulation" type="int">0</variable>
			<variable name="Room.outside_air" type="int">1</variable>
		</statevariables>
		<queue>
			<message arrival="20" deadline="infinity" sender="room">updateStatus()</message>
		</queue>
		<now>18</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="controller">
		<statevariables>
			<variable name="Controller.currentTemp" type="int">22</variable>
			<variable name="Controller.isHeating" type="boolean">false</variable>
			<variable name="Controller.isCooling" type="boolean">false</variable>
		</statevariables>
		<queue>
		</queue>
		<now>18</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="sensor">
		<statevariables>
		</statevariables>
		<queue>
			<message arrival="18" deadline="infinity" sender="room">setCurrent(22)</message>
			<message arrival="20" deadline="infinity" sender="sensor">callSensor()</message>
		</queue>
		<now>18</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="hc_unit">
		<statevariables>
			<variable name="HC_Unit.heaterOn" type="boolean">false</variable>
			<variable name="HC_Unit.coolerOn" type="boolean">false</variable>
			<variable name="HC_Unit.currentRegulation" type="int">0</variable>
		</statevariables>
		<queue>
			<message arrival="20" deadline="infinity" sender="hc_unit">regulateTemp()</message>
		</queue>
		<now>18</now>
		<pc></pc>
		<res></res>
	</rebec>
</state>
<transition source="569_0" destination="572_0" executionTime="18" shift="0"> <messageserver sender="sensor" owner="room" title="GETTEMP"/></transition>
<state id="573_0" atomicpropositions="isCooling," >
	<rebec name="room">
		<statevariables>
			<variable name="Room.currentTemp" type="int">24</variable>
			<variable name="Room.currentRegulation" type="int">-1</variable>
			<variable name="Room.outside_air" type="int">-1</variable>
		</statevariables>
		<queue>
			<message arrival="20" deadline="infinity" sender="room">updateStatus()</message>
		</queue>
		<now>18</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="controller">
		<statevariables>
			<variable name="Controller.currentTemp" type="int">24</variable>
			<variable name="Controller.isHeating" type="boolean">false</variable>
			<variable name="Controller.isCooling" type="boolean">true</variable>
		</statevariables>
		<queue>
		</queue>
		<now>18</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="sensor">
		<statevariables>
		</statevariables>
		<queue>
			<message arrival="18" deadline="infinity" sender="room">setCurrent(24)</message>
			<message arrival="20" deadline="infinity" sender="sensor">callSensor()</message>
		</queue>
		<now>18</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="hc_unit">
		<statevariables>
			<variable name="HC_Unit.heaterOn" type="boolean">false</variable>
			<variable name="HC_Unit.coolerOn" type="boolean">true</variable>
			<variable name="HC_Unit.currentRegulation" type="int">-1</variable>
		</statevariables>
		<queue>
			<message arrival="20" deadline="infinity" sender="hc_unit">regulateTemp()</message>
		</queue>
		<now>18</now>
		<pc></pc>
		<res></res>
	</rebec>
</state>
<transition source="570_0" destination="573_0" executionTime="18" shift="0"> <messageserver sender="sensor" owner="room" title="GETTEMP"/></transition>
<state id="574_0" atomicpropositions="" >
	<rebec name="room">
		<statevariables>
			<variable name="Room.currentTemp" type="int">21</variable>
			<variable name="Room.currentRegulation" type="int">0</variable>
			<variable name="Room.outside_air" type="int">0</variable>
		</statevariables>
		<queue>
			<message arrival="20" deadline="infinity" sender="room">updateStatus()</message>
		</queue>
		<now>18</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="controller">
		<statevariables>
			<variable name="Controller.currentTemp" type="int">21</variable>
			<variable name="Controller.isHeating" type="boolean">false</variable>
			<variable name="Controller.isCooling" type="boolean">false</variable>
		</statevariables>
		<queue>
			<message arrival="18" deadline="infinity" sender="sensor">setCurrent(21)</message>
		</queue>
		<now>18</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="sensor">
		<statevariables>
		</statevariables>
		<queue>
			<message arrival="20" deadline="infinity" sender="sensor">callSensor()</message>
		</queue>
		<now>18</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="hc_unit">
		<statevariables>
			<variable name="HC_Unit.heaterOn" type="boolean">false</variable>
			<variable name="HC_Unit.coolerOn" type="boolean">false</variable>
			<variable name="HC_Unit.currentRegulation" type="int">0</variable>
		</statevariables>
		<queue>
			<message arrival="20" deadline="infinity" sender="hc_unit">regulateTemp()</message>
		</queue>
		<now>18</now>
		<pc></pc>
		<res></res>
	</rebec>
</state>
<transition source="571_0" destination="574_0" executionTime="18" shift="0"> <messageserver sender="room" owner="sensor" title="SETCURRENT"/></transition>
<state id="575_0" atomicpropositions="" >
	<rebec name="room">
		<statevariables>
			<variable name="Room.currentTemp" type="int">22</variable>
			<variable name="Room.currentRegulation" type="int">0</variable>
			<variable name="Room.outside_air" type="int">1</variable>
		</statevariables>
		<queue>
			<message arrival="20" deadline="infinity" sender="room">updateStatus()</message>
		</queue>
		<now>18</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="controller">
		<statevariables>
			<variable name="Controller.currentTemp" type="int">22</variable>
			<variable name="Controller.isHeating" type="boolean">false</variable>
			<variable name="Controller.isCooling" type="boolean">false</variable>
		</statevariables>
		<queue>
			<message arrival="18" deadline="infinity" sender="sensor">setCurrent(22)</message>
		</queue>
		<now>18</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="sensor">
		<statevariables>
		</statevariables>
		<queue>
			<message arrival="20" deadline="infinity" sender="sensor">callSensor()</message>
		</queue>
		<now>18</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="hc_unit">
		<statevariables>
			<variable name="HC_Unit.heaterOn" type="boolean">false</variable>
			<variable name="HC_Unit.coolerOn" type="boolean">false</variable>
			<variable name="HC_Unit.currentRegulation" type="int">0</variable>
		</statevariables>
		<queue>
			<message arrival="20" deadline="infinity" sender="hc_unit">regulateTemp()</message>
		</queue>
		<now>18</now>
		<pc></pc>
		<res></res>
	</rebec>
</state>
<transition source="572_0" destination="575_0" executionTime="18" shift="0"> <messageserver sender="room" owner="sensor" title="SETCURRENT"/></transition>
<state id="576_0" atomicpropositions="isCooling," >
	<rebec name="room">
		<statevariables>
			<variable name="Room.currentTemp" type="int">24</variable>
			<variable name="Room.currentRegulation" type="int">-1</variable>
			<variable name="Room.outside_air" type="int">-1</variable>
		</statevariables>
		<queue>
			<message arrival="20" deadline="infinity" sender="room">updateStatus()</message>
		</queue>
		<now>18</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="controller">
		<statevariables>
			<variable name="Controller.currentTemp" type="int">24</variable>
			<variable name="Controller.isHeating" type="boolean">false</variable>
			<variable name="Controller.isCooling" type="boolean">true</variable>
		</statevariables>
		<queue>
			<message arrival="18" deadline="infinity" sender="sensor">setCurrent(24)</message>
		</queue>
		<now>18</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="sensor">
		<statevariables>
		</statevariables>
		<queue>
			<message arrival="20" deadline="infinity" sender="sensor">callSensor()</message>
		</queue>
		<now>18</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="hc_unit">
		<statevariables>
			<variable name="HC_Unit.heaterOn" type="boolean">false</variable>
			<variable name="HC_Unit.coolerOn" type="boolean">true</variable>
			<variable name="HC_Unit.currentRegulation" type="int">-1</variable>
		</statevariables>
		<queue>
			<message arrival="20" deadline="infinity" sender="hc_unit">regulateTemp()</message>
		</queue>
		<now>18</now>
		<pc></pc>
		<res></res>
	</rebec>
</state>
<transition source="573_0" destination="576_0" executionTime="18" shift="0"> <messageserver sender="room" owner="sensor" title="SETCURRENT"/></transition>
<state id="577_0" atomicpropositions="" >
	<rebec name="room">
		<statevariables>
			<variable name="Room.currentTemp" type="int">21</variable>
			<variable name="Room.currentRegulation" type="int">0</variable>
			<variable name="Room.outside_air" type="int">0</variable>
		</statevariables>
		<queue>
			<message arrival="20" deadline="infinity" sender="room">updateStatus()</message>
		</queue>
		<now>18</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="controller">
		<statevariables>
			<variable name="Controller.currentTemp" type="int">21</variable>
			<variable name="Controller.isHeating" type="boolean">false</variable>
			<variable name="Controller.isCooling" type="boolean">false</variable>
		</statevariables>
		<queue>
			<message arrival="18" deadline="infinity" sender="controller">updateOutput()</message>
		</queue>
		<now>18</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="sensor">
		<statevariables>
		</statevariables>
		<queue>
			<message arrival="20" deadline="infinity" sender="sensor">callSensor()</message>
		</queue>
		<now>18</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="hc_unit">
		<statevariables>
			<variable name="HC_Unit.heaterOn" type="boolean">false</variable>
			<variable name="HC_Unit.coolerOn" type="boolean">false</variable>
			<variable name="HC_Unit.currentRegulation" type="int">0</variable>
		</statevariables>
		<queue>
			<message arrival="20" deadline="infinity" sender="hc_unit">regulateTemp()</message>
		</queue>
		<now>18</now>
		<pc></pc>
		<res></res>
	</rebec>
</state>
<transition source="574_0" destination="577_0" executionTime="18" shift="0"> <messageserver sender="sensor" owner="controller" title="SETCURRENT"/></transition>
<state id="578_0" atomicpropositions="" >
	<rebec name="room">
		<statevariables>
			<variable name="Room.currentTemp" type="int">22</variable>
			<variable name="Room.currentRegulation" type="int">0</variable>
			<variable name="Room.outside_air" type="int">1</variable>
		</statevariables>
		<queue>
			<message arrival="20" deadline="infinity" sender="room">updateStatus()</message>
		</queue>
		<now>18</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="controller">
		<statevariables>
			<variable name="Controller.currentTemp" type="int">22</variable>
			<variable name="Controller.isHeating" type="boolean">false</variable>
			<variable name="Controller.isCooling" type="boolean">false</variable>
		</statevariables>
		<queue>
			<message arrival="18" deadline="infinity" sender="controller">updateOutput()</message>
		</queue>
		<now>18</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="sensor">
		<statevariables>
		</statevariables>
		<queue>
			<message arrival="20" deadline="infinity" sender="sensor">callSensor()</message>
		</queue>
		<now>18</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="hc_unit">
		<statevariables>
			<variable name="HC_Unit.heaterOn" type="boolean">false</variable>
			<variable name="HC_Unit.coolerOn" type="boolean">false</variable>
			<variable name="HC_Unit.currentRegulation" type="int">0</variable>
		</statevariables>
		<queue>
			<message arrival="20" deadline="infinity" sender="hc_unit">regulateTemp()</message>
		</queue>
		<now>18</now>
		<pc></pc>
		<res></res>
	</rebec>
</state>
<transition source="575_0" destination="578_0" executionTime="18" shift="0"> <messageserver sender="sensor" owner="controller" title="SETCURRENT"/></transition>
<state id="579_0" atomicpropositions="isCooling," >
	<rebec name="room">
		<statevariables>
			<variable name="Room.currentTemp" type="int">24</variable>
			<variable name="Room.currentRegulation" type="int">-1</variable>
			<variable name="Room.outside_air" type="int">-1</variable>
		</statevariables>
		<queue>
			<message arrival="20" deadline="infinity" sender="room">updateStatus()</message>
		</queue>
		<now>18</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="controller">
		<statevariables>
			<variable name="Controller.currentTemp" type="int">24</variable>
			<variable name="Controller.isHeating" type="boolean">false</variable>
			<variable name="Controller.isCooling" type="boolean">true</variable>
		</statevariables>
		<queue>
			<message arrival="18" deadline="infinity" sender="controller">updateOutput()</message>
		</queue>
		<now>18</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="sensor">
		<statevariables>
		</statevariables>
		<queue>
			<message arrival="20" deadline="infinity" sender="sensor">callSensor()</message>
		</queue>
		<now>18</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="hc_unit">
		<statevariables>
			<variable name="HC_Unit.heaterOn" type="boolean">false</variable>
			<variable name="HC_Unit.coolerOn" type="boolean">true</variable>
			<variable name="HC_Unit.currentRegulation" type="int">-1</variable>
		</statevariables>
		<queue>
			<message arrival="20" deadline="infinity" sender="hc_unit">regulateTemp()</message>
		</queue>
		<now>18</now>
		<pc></pc>
		<res></res>
	</rebec>
</state>
<transition source="576_0" destination="579_0" executionTime="18" shift="0"> <messageserver sender="sensor" owner="controller" title="SETCURRENT"/></transition>
<state id="580_0" atomicpropositions="" >
	<rebec name="room">
		<statevariables>
			<variable name="Room.currentTemp" type="int">21</variable>
			<variable name="Room.currentRegulation" type="int">0</variable>
			<variable name="Room.outside_air" type="int">0</variable>
		</statevariables>
		<queue>
			<message arrival="20" deadline="infinity" sender="room">updateStatus()</message>
		</queue>
		<now>18</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="controller">
		<statevariables>
			<variable name="Controller.currentTemp" type="int">21</variable>
			<variable name="Controller.isHeating" type="boolean">false</variable>
			<variable name="Controller.isCooling" type="boolean">false</variable>
		</statevariables>
		<queue>
		</queue>
		<now>18</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="sensor">
		<statevariables>
		</statevariables>
		<queue>
			<message arrival="20" deadline="infinity" sender="sensor">callSensor()</message>
		</queue>
		<now>18</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="hc_unit">
		<statevariables>
			<variable name="HC_Unit.heaterOn" type="boolean">false</variable>
			<variable name="HC_Unit.coolerOn" type="boolean">false</variable>
			<variable name="HC_Unit.currentRegulation" type="int">0</variable>
		</statevariables>
		<queue>
			<message arrival="20" deadline="infinity" sender="hc_unit">regulateTemp()</message>
		</queue>
		<now>18</now>
		<pc></pc>
		<res></res>
	</rebec>
</state>
<state id="581_0" atomicpropositions="" >
	<rebec name="room">
		<statevariables>
			<variable name="Room.currentTemp" type="int">21</variable>
			<variable name="Room.currentRegulation" type="int">0</variable>
			<variable name="Room.outside_air" type="int">0</variable>
		</statevariables>
		<queue>
			<message arrival="20" deadline="infinity" sender="room">updateStatus()</message>
		</queue>
		<now>20</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="controller">
		<statevariables>
			<variable name="Controller.currentTemp" type="int">21</variable>
			<variable name="Controller.isHeating" type="boolean">false</variable>
			<variable name="Controller.isCooling" type="boolean">false</variable>
		</statevariables>
		<queue>
		</queue>
		<now>20</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="sensor">
		<statevariables>
		</statevariables>
		<queue>
			<message arrival="20" deadline="infinity" sender="sensor">callSensor()</message>
		</queue>
		<now>20</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="hc_unit">
		<statevariables>
			<variable name="HC_Unit.heaterOn" type="boolean">false</variable>
			<variable name="HC_Unit.coolerOn" type="boolean">false</variable>
			<variable name="HC_Unit.currentRegulation" type="int">0</variable>
		</statevariables>
		<queue>
			<message arrival="20" deadline="infinity" sender="hc_unit">regulateTemp()</message>
		</queue>
		<now>20</now>
		<pc></pc>
		<res></res>
	</rebec>
</state>
<transition source="580_0" destination="581_0" executionTime="18" shift="0"> <time value="2"/></transition>
<transition source="577_0" destination="580_0" executionTime="18" shift="0"> <messageserver sender="controller" owner="controller" title="UPDATEOUTPUT"/></transition>
<state id="582_0" atomicpropositions="" >
	<rebec name="room">
		<statevariables>
			<variable name="Room.currentTemp" type="int">22</variable>
			<variable name="Room.currentRegulation" type="int">0</variable>
			<variable name="Room.outside_air" type="int">1</variable>
		</statevariables>
		<queue>
			<message arrival="20" deadline="infinity" sender="room">updateStatus()</message>
		</queue>
		<now>18</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="controller">
		<statevariables>
			<variable name="Controller.currentTemp" type="int">22</variable>
			<variable name="Controller.isHeating" type="boolean">false</variable>
			<variable name="Controller.isCooling" type="boolean">false</variable>
		</statevariables>
		<queue>
		</queue>
		<now>18</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="sensor">
		<statevariables>
		</statevariables>
		<queue>
			<message arrival="20" deadline="infinity" sender="sensor">callSensor()</message>
		</queue>
		<now>18</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="hc_unit">
		<statevariables>
			<variable name="HC_Unit.heaterOn" type="boolean">false</variable>
			<variable name="HC_Unit.coolerOn" type="boolean">false</variable>
			<variable name="HC_Unit.currentRegulation" type="int">0</variable>
		</statevariables>
		<queue>
			<message arrival="20" deadline="infinity" sender="hc_unit">regulateTemp()</message>
		</queue>
		<now>18</now>
		<pc></pc>
		<res></res>
	</rebec>
</state>
<state id="583_0" atomicpropositions="" >
	<rebec name="room">
		<statevariables>
			<variable name="Room.currentTemp" type="int">22</variable>
			<variable name="Room.currentRegulation" type="int">0</variable>
			<variable name="Room.outside_air" type="int">1</variable>
		</statevariables>
		<queue>
			<message arrival="20" deadline="infinity" sender="room">updateStatus()</message>
		</queue>
		<now>20</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="controller">
		<statevariables>
			<variable name="Controller.currentTemp" type="int">22</variable>
			<variable name="Controller.isHeating" type="boolean">false</variable>
			<variable name="Controller.isCooling" type="boolean">false</variable>
		</statevariables>
		<queue>
		</queue>
		<now>20</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="sensor">
		<statevariables>
		</statevariables>
		<queue>
			<message arrival="20" deadline="infinity" sender="sensor">callSensor()</message>
		</queue>
		<now>20</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="hc_unit">
		<statevariables>
			<variable name="HC_Unit.heaterOn" type="boolean">false</variable>
			<variable name="HC_Unit.coolerOn" type="boolean">false</variable>
			<variable name="HC_Unit.currentRegulation" type="int">0</variable>
		</statevariables>
		<queue>
			<message arrival="20" deadline="infinity" sender="hc_unit">regulateTemp()</message>
		</queue>
		<now>20</now>
		<pc></pc>
		<res></res>
	</rebec>
</state>
<transition source="582_0" destination="583_0" executionTime="18" shift="0"> <time value="2"/></transition>
<transition source="578_0" destination="582_0" executionTime="18" shift="0"> <messageserver sender="controller" owner="controller" title="UPDATEOUTPUT"/></transition>
<state id="584_0" atomicpropositions="isCooling," >
	<rebec name="room">
		<statevariables>
			<variable name="Room.currentTemp" type="int">24</variable>
			<variable name="Room.currentRegulation" type="int">-1</variable>
			<variable name="Room.outside_air" type="int">-1</variable>
		</statevariables>
		<queue>
			<message arrival="20" deadline="infinity" sender="room">updateStatus()</message>
		</queue>
		<now>18</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="controller">
		<statevariables>
			<variable name="Controller.currentTemp" type="int">24</variable>
			<variable name="Controller.isHeating" type="boolean">false</variable>
			<variable name="Controller.isCooling" type="boolean">true</variable>
		</statevariables>
		<queue>
		</queue>
		<now>18</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="sensor">
		<statevariables>
		</statevariables>
		<queue>
			<message arrival="20" deadline="infinity" sender="sensor">callSensor()</message>
		</queue>
		<now>18</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="hc_unit">
		<statevariables>
			<variable name="HC_Unit.heaterOn" type="boolean">false</variable>
			<variable name="HC_Unit.coolerOn" type="boolean">true</variable>
			<variable name="HC_Unit.currentRegulation" type="int">-1</variable>
		</statevariables>
		<queue>
			<message arrival="20" deadline="infinity" sender="hc_unit">regulateTemp()</message>
		</queue>
		<now>18</now>
		<pc></pc>
		<res></res>
	</rebec>
</state>
<state id="585_0" atomicpropositions="isCooling," >
	<rebec name="room">
		<statevariables>
			<variable name="Room.currentTemp" type="int">24</variable>
			<variable name="Room.currentRegulation" type="int">-1</variable>
			<variable name="Room.outside_air" type="int">-1</variable>
		</statevariables>
		<queue>
			<message arrival="20" deadline="infinity" sender="room">updateStatus()</message>
		</queue>
		<now>20</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="controller">
		<statevariables>
			<variable name="Controller.currentTemp" type="int">24</variable>
			<variable name="Controller.isHeating" type="boolean">false</variable>
			<variable name="Controller.isCooling" type="boolean">true</variable>
		</statevariables>
		<queue>
		</queue>
		<now>20</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="sensor">
		<statevariables>
		</statevariables>
		<queue>
			<message arrival="20" deadline="infinity" sender="sensor">callSensor()</message>
		</queue>
		<now>20</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="hc_unit">
		<statevariables>
			<variable name="HC_Unit.heaterOn" type="boolean">false</variable>
			<variable name="HC_Unit.coolerOn" type="boolean">true</variable>
			<variable name="HC_Unit.currentRegulation" type="int">-1</variable>
		</statevariables>
		<queue>
			<message arrival="20" deadline="infinity" sender="hc_unit">regulateTemp()</message>
		</queue>
		<now>20</now>
		<pc></pc>
		<res></res>
	</rebec>
</state>
<transition source="584_0" destination="585_0" executionTime="18" shift="0"> <time value="2"/></transition>
<transition source="579_0" destination="584_0" executionTime="18" shift="0"> <messageserver sender="controller" owner="controller" title="UPDATEOUTPUT"/></transition>
<state id="586_0" atomicpropositions="" >
	<rebec name="room">
		<statevariables>
			<variable name="Room.currentTemp" type="int">23</variable>
			<variable name="Room.currentRegulation" type="int">0</variable>
			<variable name="Room.outside_air" type="int">0</variable>
		</statevariables>
		<queue>
			<message arrival="18" deadline="infinity" sender="sensor">getTemp()</message>
			<message arrival="20" deadline="infinity" sender="room">updateStatus()</message>
		</queue>
		<now>18</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="controller">
		<statevariables>
			<variable name="Controller.currentTemp" type="int">23</variable>
			<variable name="Controller.isHeating" type="boolean">false</variable>
			<variable name="Controller.isCooling" type="boolean">false</variable>
		</statevariables>
		<queue>
		</queue>
		<now>18</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="sensor">
		<statevariables>
		</statevariables>
		<queue>
			<message arrival="20" deadline="infinity" sender="sensor">callSensor()</message>
		</queue>
		<now>18</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="hc_unit">
		<statevariables>
			<variable name="HC_Unit.heaterOn" type="boolean">false</variable>
			<variable name="HC_Unit.coolerOn" type="boolean">false</variable>
			<variable name="HC_Unit.currentRegulation" type="int">0</variable>
		</statevariables>
		<queue>
			<message arrival="20" deadline="infinity" sender="hc_unit">regulateTemp()</message>
		</queue>
		<now>18</now>
		<pc></pc>
		<res></res>
	</rebec>
</state>
<transition source="547_0" destination="586_0" executionTime="18" shift="0"> <messageserver sender="sensor" owner="sensor" title="CALLSENSOR"/></transition>
<state id="587_0" atomicpropositions="isHeating," >
	<rebec name="room">
		<statevariables>
			<variable name="Room.currentTemp" type="int">20</variable>
			<variable name="Room.currentRegulation" type="int">1</variable>
			<variable name="Room.outside_air" type="int">1</variable>
		</statevariables>
		<queue>
			<message arrival="18" deadline="infinity" sender="sensor">getTemp()</message>
			<message arrival="20" deadline="infinity" sender="room">updateStatus()</message>
		</queue>
		<now>18</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="controller">
		<statevariables>
			<variable name="Controller.currentTemp" type="int">20</variable>
			<variable name="Controller.isHeating" type="boolean">true</variable>
			<variable name="Controller.isCooling" type="boolean">false</variable>
		</statevariables>
		<queue>
		</queue>
		<now>18</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="sensor">
		<statevariables>
		</statevariables>
		<queue>
			<message arrival="20" deadline="infinity" sender="sensor">callSensor()</message>
		</queue>
		<now>18</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="hc_unit">
		<statevariables>
			<variable name="HC_Unit.heaterOn" type="boolean">true</variable>
			<variable name="HC_Unit.coolerOn" type="boolean">false</variable>
			<variable name="HC_Unit.currentRegulation" type="int">1</variable>
		</statevariables>
		<queue>
			<message arrival="20" deadline="infinity" sender="hc_unit">regulateTemp()</message>
		</queue>
		<now>18</now>
		<pc></pc>
		<res></res>
	</rebec>
</state>
<transition source="559_0" destination="587_0" executionTime="18" shift="0"> <messageserver sender="sensor" owner="sensor" title="CALLSENSOR"/></transition>
<state id="588_0" atomicpropositions="" >
	<rebec name="room">
		<statevariables>
			<variable name="Room.currentTemp" type="int">23</variable>
			<variable name="Room.currentRegulation" type="int">0</variable>
			<variable name="Room.outside_air" type="int">0</variable>
		</statevariables>
		<queue>
			<message arrival="20" deadline="infinity" sender="room">updateStatus()</message>
		</queue>
		<now>18</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="controller">
		<statevariables>
			<variable name="Controller.currentTemp" type="int">23</variable>
			<variable name="Controller.isHeating" type="boolean">false</variable>
			<variable name="Controller.isCooling" type="boolean">false</variable>
		</statevariables>
		<queue>
		</queue>
		<now>18</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="sensor">
		<statevariables>
		</statevariables>
		<queue>
			<message arrival="18" deadline="infinity" sender="room">setCurrent(23)</message>
			<message arrival="20" deadline="infinity" sender="sensor">callSensor()</message>
		</queue>
		<now>18</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="hc_unit">
		<statevariables>
			<variable name="HC_Unit.heaterOn" type="boolean">false</variable>
			<variable name="HC_Unit.coolerOn" type="boolean">false</variable>
			<variable name="HC_Unit.currentRegulation" type="int">0</variable>
		</statevariables>
		<queue>
			<message arrival="20" deadline="infinity" sender="hc_unit">regulateTemp()</message>
		</queue>
		<now>18</now>
		<pc></pc>
		<res></res>
	</rebec>
</state>
<transition source="586_0" destination="588_0" executionTime="18" shift="0"> <messageserver sender="sensor" owner="room" title="GETTEMP"/></transition>
<state id="589_0" atomicpropositions="isHeating," >
	<rebec name="room">
		<statevariables>
			<variable name="Room.currentTemp" type="int">20</variable>
			<variable name="Room.currentRegulation" type="int">1</variable>
			<variable name="Room.outside_air" type="int">1</variable>
		</statevariables>
		<queue>
			<message arrival="20" deadline="infinity" sender="room">updateStatus()</message>
		</queue>
		<now>18</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="controller">
		<statevariables>
			<variable name="Controller.currentTemp" type="int">20</variable>
			<variable name="Controller.isHeating" type="boolean">true</variable>
			<variable name="Controller.isCooling" type="boolean">false</variable>
		</statevariables>
		<queue>
		</queue>
		<now>18</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="sensor">
		<statevariables>
		</statevariables>
		<queue>
			<message arrival="18" deadline="infinity" sender="room">setCurrent(20)</message>
			<message arrival="20" deadline="infinity" sender="sensor">callSensor()</message>
		</queue>
		<now>18</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="hc_unit">
		<statevariables>
			<variable name="HC_Unit.heaterOn" type="boolean">true</variable>
			<variable name="HC_Unit.coolerOn" type="boolean">false</variable>
			<variable name="HC_Unit.currentRegulation" type="int">1</variable>
		</statevariables>
		<queue>
			<message arrival="20" deadline="infinity" sender="hc_unit">regulateTemp()</message>
		</queue>
		<now>18</now>
		<pc></pc>
		<res></res>
	</rebec>
</state>
<transition source="587_0" destination="589_0" executionTime="18" shift="0"> <messageserver sender="sensor" owner="room" title="GETTEMP"/></transition>
<state id="590_0" atomicpropositions="" >
	<rebec name="room">
		<statevariables>
			<variable name="Room.currentTemp" type="int">23</variable>
			<variable name="Room.currentRegulation" type="int">0</variable>
			<variable name="Room.outside_air" type="int">0</variable>
		</statevariables>
		<queue>
			<message arrival="20" deadline="infinity" sender="room">updateStatus()</message>
		</queue>
		<now>18</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="controller">
		<statevariables>
			<variable name="Controller.currentTemp" type="int">23</variable>
			<variable name="Controller.isHeating" type="boolean">false</variable>
			<variable name="Controller.isCooling" type="boolean">false</variable>
		</statevariables>
		<queue>
			<message arrival="18" deadline="infinity" sender="sensor">setCurrent(23)</message>
		</queue>
		<now>18</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="sensor">
		<statevariables>
		</statevariables>
		<queue>
			<message arrival="20" deadline="infinity" sender="sensor">callSensor()</message>
		</queue>
		<now>18</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="hc_unit">
		<statevariables>
			<variable name="HC_Unit.heaterOn" type="boolean">false</variable>
			<variable name="HC_Unit.coolerOn" type="boolean">false</variable>
			<variable name="HC_Unit.currentRegulation" type="int">0</variable>
		</statevariables>
		<queue>
			<message arrival="20" deadline="infinity" sender="hc_unit">regulateTemp()</message>
		</queue>
		<now>18</now>
		<pc></pc>
		<res></res>
	</rebec>
</state>
<transition source="588_0" destination="590_0" executionTime="18" shift="0"> <messageserver sender="room" owner="sensor" title="SETCURRENT"/></transition>
<state id="591_0" atomicpropositions="isHeating," >
	<rebec name="room">
		<statevariables>
			<variable name="Room.currentTemp" type="int">20</variable>
			<variable name="Room.currentRegulation" type="int">1</variable>
			<variable name="Room.outside_air" type="int">1</variable>
		</statevariables>
		<queue>
			<message arrival="20" deadline="infinity" sender="room">updateStatus()</message>
		</queue>
		<now>18</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="controller">
		<statevariables>
			<variable name="Controller.currentTemp" type="int">20</variable>
			<variable name="Controller.isHeating" type="boolean">true</variable>
			<variable name="Controller.isCooling" type="boolean">false</variable>
		</statevariables>
		<queue>
			<message arrival="18" deadline="infinity" sender="sensor">setCurrent(20)</message>
		</queue>
		<now>18</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="sensor">
		<statevariables>
		</statevariables>
		<queue>
			<message arrival="20" deadline="infinity" sender="sensor">callSensor()</message>
		</queue>
		<now>18</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="hc_unit">
		<statevariables>
			<variable name="HC_Unit.heaterOn" type="boolean">true</variable>
			<variable name="HC_Unit.coolerOn" type="boolean">false</variable>
			<variable name="HC_Unit.currentRegulation" type="int">1</variable>
		</statevariables>
		<queue>
			<message arrival="20" deadline="infinity" sender="hc_unit">regulateTemp()</message>
		</queue>
		<now>18</now>
		<pc></pc>
		<res></res>
	</rebec>
</state>
<transition source="589_0" destination="591_0" executionTime="18" shift="0"> <messageserver sender="room" owner="sensor" title="SETCURRENT"/></transition>
<state id="592_0" atomicpropositions="" >
	<rebec name="room">
		<statevariables>
			<variable name="Room.currentTemp" type="int">23</variable>
			<variable name="Room.currentRegulation" type="int">0</variable>
			<variable name="Room.outside_air" type="int">0</variable>
		</statevariables>
		<queue>
			<message arrival="20" deadline="infinity" sender="room">updateStatus()</message>
		</queue>
		<now>18</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="controller">
		<statevariables>
			<variable name="Controller.currentTemp" type="int">23</variable>
			<variable name="Controller.isHeating" type="boolean">false</variable>
			<variable name="Controller.isCooling" type="boolean">false</variable>
		</statevariables>
		<queue>
			<message arrival="18" deadline="infinity" sender="controller">updateOutput()</message>
		</queue>
		<now>18</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="sensor">
		<statevariables>
		</statevariables>
		<queue>
			<message arrival="20" deadline="infinity" sender="sensor">callSensor()</message>
		</queue>
		<now>18</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="hc_unit">
		<statevariables>
			<variable name="HC_Unit.heaterOn" type="boolean">false</variable>
			<variable name="HC_Unit.coolerOn" type="boolean">false</variable>
			<variable name="HC_Unit.currentRegulation" type="int">0</variable>
		</statevariables>
		<queue>
			<message arrival="20" deadline="infinity" sender="hc_unit">regulateTemp()</message>
		</queue>
		<now>18</now>
		<pc></pc>
		<res></res>
	</rebec>
</state>
<transition source="590_0" destination="592_0" executionTime="18" shift="0"> <messageserver sender="sensor" owner="controller" title="SETCURRENT"/></transition>
<state id="593_0" atomicpropositions="isHeating," >
	<rebec name="room">
		<statevariables>
			<variable name="Room.currentTemp" type="int">20</variable>
			<variable name="Room.currentRegulation" type="int">1</variable>
			<variable name="Room.outside_air" type="int">1</variable>
		</statevariables>
		<queue>
			<message arrival="20" deadline="infinity" sender="room">updateStatus()</message>
		</queue>
		<now>18</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="controller">
		<statevariables>
			<variable name="Controller.currentTemp" type="int">20</variable>
			<variable name="Controller.isHeating" type="boolean">true</variable>
			<variable name="Controller.isCooling" type="boolean">false</variable>
		</statevariables>
		<queue>
			<message arrival="18" deadline="infinity" sender="controller">updateOutput()</message>
		</queue>
		<now>18</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="sensor">
		<statevariables>
		</statevariables>
		<queue>
			<message arrival="20" deadline="infinity" sender="sensor">callSensor()</message>
		</queue>
		<now>18</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="hc_unit">
		<statevariables>
			<variable name="HC_Unit.heaterOn" type="boolean">true</variable>
			<variable name="HC_Unit.coolerOn" type="boolean">false</variable>
			<variable name="HC_Unit.currentRegulation" type="int">1</variable>
		</statevariables>
		<queue>
			<message arrival="20" deadline="infinity" sender="hc_unit">regulateTemp()</message>
		</queue>
		<now>18</now>
		<pc></pc>
		<res></res>
	</rebec>
</state>
<transition source="591_0" destination="593_0" executionTime="18" shift="0"> <messageserver sender="sensor" owner="controller" title="SETCURRENT"/></transition>
<state id="594_0" atomicpropositions="" >
	<rebec name="room">
		<statevariables>
			<variable name="Room.currentTemp" type="int">23</variable>
			<variable name="Room.currentRegulation" type="int">0</variable>
			<variable name="Room.outside_air" type="int">0</variable>
		</statevariables>
		<queue>
			<message arrival="20" deadline="infinity" sender="room">updateStatus()</message>
		</queue>
		<now>18</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="controller">
		<statevariables>
			<variable name="Controller.currentTemp" type="int">23</variable>
			<variable name="Controller.isHeating" type="boolean">false</variable>
			<variable name="Controller.isCooling" type="boolean">false</variable>
		</statevariables>
		<queue>
		</queue>
		<now>18</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="sensor">
		<statevariables>
		</statevariables>
		<queue>
			<message arrival="20" deadline="infinity" sender="sensor">callSensor()</message>
		</queue>
		<now>18</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="hc_unit">
		<statevariables>
			<variable name="HC_Unit.heaterOn" type="boolean">false</variable>
			<variable name="HC_Unit.coolerOn" type="boolean">false</variable>
			<variable name="HC_Unit.currentRegulation" type="int">0</variable>
		</statevariables>
		<queue>
			<message arrival="20" deadline="infinity" sender="hc_unit">regulateTemp()</message>
		</queue>
		<now>18</now>
		<pc></pc>
		<res></res>
	</rebec>
</state>
<state id="595_0" atomicpropositions="" >
	<rebec name="room">
		<statevariables>
			<variable name="Room.currentTemp" type="int">23</variable>
			<variable name="Room.currentRegulation" type="int">0</variable>
			<variable name="Room.outside_air" type="int">0</variable>
		</statevariables>
		<queue>
			<message arrival="20" deadline="infinity" sender="room">updateStatus()</message>
		</queue>
		<now>20</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="controller">
		<statevariables>
			<variable name="Controller.currentTemp" type="int">23</variable>
			<variable name="Controller.isHeating" type="boolean">false</variable>
			<variable name="Controller.isCooling" type="boolean">false</variable>
		</statevariables>
		<queue>
		</queue>
		<now>20</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="sensor">
		<statevariables>
		</statevariables>
		<queue>
			<message arrival="20" deadline="infinity" sender="sensor">callSensor()</message>
		</queue>
		<now>20</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="hc_unit">
		<statevariables>
			<variable name="HC_Unit.heaterOn" type="boolean">false</variable>
			<variable name="HC_Unit.coolerOn" type="boolean">false</variable>
			<variable name="HC_Unit.currentRegulation" type="int">0</variable>
		</statevariables>
		<queue>
			<message arrival="20" deadline="infinity" sender="hc_unit">regulateTemp()</message>
		</queue>
		<now>20</now>
		<pc></pc>
		<res></res>
	</rebec>
</state>
<transition source="594_0" destination="595_0" executionTime="18" shift="0"> <time value="2"/></transition>
<transition source="592_0" destination="594_0" executionTime="18" shift="0"> <messageserver sender="controller" owner="controller" title="UPDATEOUTPUT"/></transition>
<state id="596_0" atomicpropositions="isHeating," >
	<rebec name="room">
		<statevariables>
			<variable name="Room.currentTemp" type="int">20</variable>
			<variable name="Room.currentRegulation" type="int">1</variable>
			<variable name="Room.outside_air" type="int">1</variable>
		</statevariables>
		<queue>
			<message arrival="20" deadline="infinity" sender="room">updateStatus()</message>
		</queue>
		<now>18</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="controller">
		<statevariables>
			<variable name="Controller.currentTemp" type="int">20</variable>
			<variable name="Controller.isHeating" type="boolean">true</variable>
			<variable name="Controller.isCooling" type="boolean">false</variable>
		</statevariables>
		<queue>
		</queue>
		<now>18</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="sensor">
		<statevariables>
		</statevariables>
		<queue>
			<message arrival="20" deadline="infinity" sender="sensor">callSensor()</message>
		</queue>
		<now>18</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="hc_unit">
		<statevariables>
			<variable name="HC_Unit.heaterOn" type="boolean">true</variable>
			<variable name="HC_Unit.coolerOn" type="boolean">false</variable>
			<variable name="HC_Unit.currentRegulation" type="int">1</variable>
		</statevariables>
		<queue>
			<message arrival="20" deadline="infinity" sender="hc_unit">regulateTemp()</message>
		</queue>
		<now>18</now>
		<pc></pc>
		<res></res>
	</rebec>
</state>
<state id="597_0" atomicpropositions="isHeating," >
	<rebec name="room">
		<statevariables>
			<variable name="Room.currentTemp" type="int">20</variable>
			<variable name="Room.currentRegulation" type="int">1</variable>
			<variable name="Room.outside_air" type="int">1</variable>
		</statevariables>
		<queue>
			<message arrival="20" deadline="infinity" sender="room">updateStatus()</message>
		</queue>
		<now>20</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="controller">
		<statevariables>
			<variable name="Controller.currentTemp" type="int">20</variable>
			<variable name="Controller.isHeating" type="boolean">true</variable>
			<variable name="Controller.isCooling" type="boolean">false</variable>
		</statevariables>
		<queue>
		</queue>
		<now>20</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="sensor">
		<statevariables>
		</statevariables>
		<queue>
			<message arrival="20" deadline="infinity" sender="sensor">callSensor()</message>
		</queue>
		<now>20</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="hc_unit">
		<statevariables>
			<variable name="HC_Unit.heaterOn" type="boolean">true</variable>
			<variable name="HC_Unit.coolerOn" type="boolean">false</variable>
			<variable name="HC_Unit.currentRegulation" type="int">1</variable>
		</statevariables>
		<queue>
			<message arrival="20" deadline="infinity" sender="hc_unit">regulateTemp()</message>
		</queue>
		<now>20</now>
		<pc></pc>
		<res></res>
	</rebec>
</state>
<transition source="596_0" destination="597_0" executionTime="18" shift="0"> <time value="2"/></transition>
<transition source="593_0" destination="596_0" executionTime="18" shift="0"> <messageserver sender="controller" owner="controller" title="UPDATEOUTPUT"/></transition>
<state id="598_0" atomicpropositions="" >
	<rebec name="room">
		<statevariables>
			<variable name="Room.currentTemp" type="int">22</variable>
			<variable name="Room.currentRegulation" type="int">0</variable>
			<variable name="Room.outside_air" type="int">-1</variable>
		</statevariables>
		<queue>
			<message arrival="18" deadline="infinity" sender="sensor">getTemp()</message>
			<message arrival="20" deadline="infinity" sender="room">updateStatus()</message>
		</queue>
		<now>18</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="controller">
		<statevariables>
			<variable name="Controller.currentTemp" type="int">22</variable>
			<variable name="Controller.isHeating" type="boolean">false</variable>
			<variable name="Controller.isCooling" type="boolean">false</variable>
		</statevariables>
		<queue>
		</queue>
		<now>18</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="sensor">
		<statevariables>
		</statevariables>
		<queue>
			<message arrival="20" deadline="infinity" sender="sensor">callSensor()</message>
		</queue>
		<now>18</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="hc_unit">
		<statevariables>
			<variable name="HC_Unit.heaterOn" type="boolean">false</variable>
			<variable name="HC_Unit.coolerOn" type="boolean">false</variable>
			<variable name="HC_Unit.currentRegulation" type="int">0</variable>
		</statevariables>
		<queue>
			<message arrival="20" deadline="infinity" sender="hc_unit">regulateTemp()</message>
		</queue>
		<now>18</now>
		<pc></pc>
		<res></res>
	</rebec>
</state>
<transition source="549_0" destination="598_0" executionTime="18" shift="0"> <messageserver sender="sensor" owner="sensor" title="CALLSENSOR"/></transition>
<state id="599_0" atomicpropositions="" >
	<rebec name="room">
		<statevariables>
			<variable name="Room.currentTemp" type="int">22</variable>
			<variable name="Room.currentRegulation" type="int">0</variable>
			<variable name="Room.outside_air" type="int">-1</variable>
		</statevariables>
		<queue>
			<message arrival="20" deadline="infinity" sender="room">updateStatus()</message>
		</queue>
		<now>18</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="controller">
		<statevariables>
			<variable name="Controller.currentTemp" type="int">22</variable>
			<variable name="Controller.isHeating" type="boolean">false</variable>
			<variable name="Controller.isCooling" type="boolean">false</variable>
		</statevariables>
		<queue>
		</queue>
		<now>18</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="sensor">
		<statevariables>
		</statevariables>
		<queue>
			<message arrival="18" deadline="infinity" sender="room">setCurrent(22)</message>
			<message arrival="20" deadline="infinity" sender="sensor">callSensor()</message>
		</queue>
		<now>18</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="hc_unit">
		<statevariables>
			<variable name="HC_Unit.heaterOn" type="boolean">false</variable>
			<variable name="HC_Unit.coolerOn" type="boolean">false</variable>
			<variable name="HC_Unit.currentRegulation" type="int">0</variable>
		</statevariables>
		<queue>
			<message arrival="20" deadline="infinity" sender="hc_unit">regulateTemp()</message>
		</queue>
		<now>18</now>
		<pc></pc>
		<res></res>
	</rebec>
</state>
<transition source="598_0" destination="599_0" executionTime="18" shift="0"> <messageserver sender="sensor" owner="room" title="GETTEMP"/></transition>
<state id="600_0" atomicpropositions="" >
	<rebec name="room">
		<statevariables>
			<variable name="Room.currentTemp" type="int">22</variable>
			<variable name="Room.currentRegulation" type="int">0</variable>
			<variable name="Room.outside_air" type="int">-1</variable>
		</statevariables>
		<queue>
			<message arrival="20" deadline="infinity" sender="room">updateStatus()</message>
		</queue>
		<now>18</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="controller">
		<statevariables>
			<variable name="Controller.currentTemp" type="int">22</variable>
			<variable name="Controller.isHeating" type="boolean">false</variable>
			<variable name="Controller.isCooling" type="boolean">false</variable>
		</statevariables>
		<queue>
			<message arrival="18" deadline="infinity" sender="sensor">setCurrent(22)</message>
		</queue>
		<now>18</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="sensor">
		<statevariables>
		</statevariables>
		<queue>
			<message arrival="20" deadline="infinity" sender="sensor">callSensor()</message>
		</queue>
		<now>18</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="hc_unit">
		<statevariables>
			<variable name="HC_Unit.heaterOn" type="boolean">false</variable>
			<variable name="HC_Unit.coolerOn" type="boolean">false</variable>
			<variable name="HC_Unit.currentRegulation" type="int">0</variable>
		</statevariables>
		<queue>
			<message arrival="20" deadline="infinity" sender="hc_unit">regulateTemp()</message>
		</queue>
		<now>18</now>
		<pc></pc>
		<res></res>
	</rebec>
</state>
<transition source="599_0" destination="600_0" executionTime="18" shift="0"> <messageserver sender="room" owner="sensor" title="SETCURRENT"/></transition>
<state id="601_0" atomicpropositions="" >
	<rebec name="room">
		<statevariables>
			<variable name="Room.currentTemp" type="int">22</variable>
			<variable name="Room.currentRegulation" type="int">0</variable>
			<variable name="Room.outside_air" type="int">-1</variable>
		</statevariables>
		<queue>
			<message arrival="20" deadline="infinity" sender="room">updateStatus()</message>
		</queue>
		<now>18</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="controller">
		<statevariables>
			<variable name="Controller.currentTemp" type="int">22</variable>
			<variable name="Controller.isHeating" type="boolean">false</variable>
			<variable name="Controller.isCooling" type="boolean">false</variable>
		</statevariables>
		<queue>
			<message arrival="18" deadline="infinity" sender="controller">updateOutput()</message>
		</queue>
		<now>18</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="sensor">
		<statevariables>
		</statevariables>
		<queue>
			<message arrival="20" deadline="infinity" sender="sensor">callSensor()</message>
		</queue>
		<now>18</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="hc_unit">
		<statevariables>
			<variable name="HC_Unit.heaterOn" type="boolean">false</variable>
			<variable name="HC_Unit.coolerOn" type="boolean">false</variable>
			<variable name="HC_Unit.currentRegulation" type="int">0</variable>
		</statevariables>
		<queue>
			<message arrival="20" deadline="infinity" sender="hc_unit">regulateTemp()</message>
		</queue>
		<now>18</now>
		<pc></pc>
		<res></res>
	</rebec>
</state>
<transition source="600_0" destination="601_0" executionTime="18" shift="0"> <messageserver sender="sensor" owner="controller" title="SETCURRENT"/></transition>
<state id="602_0" atomicpropositions="" >
	<rebec name="room">
		<statevariables>
			<variable name="Room.currentTemp" type="int">22</variable>
			<variable name="Room.currentRegulation" type="int">0</variable>
			<variable name="Room.outside_air" type="int">-1</variable>
		</statevariables>
		<queue>
			<message arrival="20" deadline="infinity" sender="room">updateStatus()</message>
		</queue>
		<now>18</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="controller">
		<statevariables>
			<variable name="Controller.currentTemp" type="int">22</variable>
			<variable name="Controller.isHeating" type="boolean">false</variable>
			<variable name="Controller.isCooling" type="boolean">false</variable>
		</statevariables>
		<queue>
		</queue>
		<now>18</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="sensor">
		<statevariables>
		</statevariables>
		<queue>
			<message arrival="20" deadline="infinity" sender="sensor">callSensor()</message>
		</queue>
		<now>18</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="hc_unit">
		<statevariables>
			<variable name="HC_Unit.heaterOn" type="boolean">false</variable>
			<variable name="HC_Unit.coolerOn" type="boolean">false</variable>
			<variable name="HC_Unit.currentRegulation" type="int">0</variable>
		</statevariables>
		<queue>
			<message arrival="20" deadline="infinity" sender="hc_unit">regulateTemp()</message>
		</queue>
		<now>18</now>
		<pc></pc>
		<res></res>
	</rebec>
</state>
<state id="603_0" atomicpropositions="" >
	<rebec name="room">
		<statevariables>
			<variable name="Room.currentTemp" type="int">22</variable>
			<variable name="Room.currentRegulation" type="int">0</variable>
			<variable name="Room.outside_air" type="int">-1</variable>
		</statevariables>
		<queue>
			<message arrival="20" deadline="infinity" sender="room">updateStatus()</message>
		</queue>
		<now>20</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="controller">
		<statevariables>
			<variable name="Controller.currentTemp" type="int">22</variable>
			<variable name="Controller.isHeating" type="boolean">false</variable>
			<variable name="Controller.isCooling" type="boolean">false</variable>
		</statevariables>
		<queue>
		</queue>
		<now>20</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="sensor">
		<statevariables>
		</statevariables>
		<queue>
			<message arrival="20" deadline="infinity" sender="sensor">callSensor()</message>
		</queue>
		<now>20</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="hc_unit">
		<statevariables>
			<variable name="HC_Unit.heaterOn" type="boolean">false</variable>
			<variable name="HC_Unit.coolerOn" type="boolean">false</variable>
			<variable name="HC_Unit.currentRegulation" type="int">0</variable>
		</statevariables>
		<queue>
			<message arrival="20" deadline="infinity" sender="hc_unit">regulateTemp()</message>
		</queue>
		<now>20</now>
		<pc></pc>
		<res></res>
	</rebec>
</state>
<transition source="602_0" destination="603_0" executionTime="18" shift="0"> <time value="2"/></transition>
<transition source="601_0" destination="602_0" executionTime="18" shift="0"> <messageserver sender="controller" owner="controller" title="UPDATEOUTPUT"/></transition>
<transition source="581_0" destination="188_0" executionTime="20" shift="10"> <messageserver sender="room" owner="room" title="UPDATESTATUS"/></transition>
<transition source="581_0" destination="189_0" executionTime="20" shift="10"> <messageserver sender="room" owner="room" title="UPDATESTATUS"/></transition>
<transition source="581_0" destination="190_0" executionTime="20" shift="10"> <messageserver sender="room" owner="room" title="UPDATESTATUS"/></transition>
<state id="604_0" atomicpropositions="" >
	<rebec name="room">
		<statevariables>
			<variable name="Room.currentTemp" type="int">21</variable>
			<variable name="Room.currentRegulation" type="int">0</variable>
			<variable name="Room.outside_air" type="int">0</variable>
		</statevariables>
		<queue>
			<message arrival="20" deadline="infinity" sender="room">updateStatus()</message>
			<message arrival="20" deadline="infinity" sender="sensor">getTemp()</message>
		</queue>
		<now>20</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="controller">
		<statevariables>
			<variable name="Controller.currentTemp" type="int">21</variable>
			<variable name="Controller.isHeating" type="boolean">false</variable>
			<variable name="Controller.isCooling" type="boolean">false</variable>
		</statevariables>
		<queue>
		</queue>
		<now>20</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="sensor">
		<statevariables>
		</statevariables>
		<queue>
			<message arrival="22" deadline="infinity" sender="sensor">callSensor()</message>
		</queue>
		<now>20</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="hc_unit">
		<statevariables>
			<variable name="HC_Unit.heaterOn" type="boolean">false</variable>
			<variable name="HC_Unit.coolerOn" type="boolean">false</variable>
			<variable name="HC_Unit.currentRegulation" type="int">0</variable>
		</statevariables>
		<queue>
			<message arrival="20" deadline="infinity" sender="hc_unit">regulateTemp()</message>
		</queue>
		<now>20</now>
		<pc></pc>
		<res></res>
	</rebec>
</state>
<transition source="581_0" destination="604_0" executionTime="20" shift="0"> <messageserver sender="sensor" owner="sensor" title="CALLSENSOR"/></transition>
<state id="605_0" atomicpropositions="" >
	<rebec name="room">
		<statevariables>
			<variable name="Room.currentTemp" type="int">21</variable>
			<variable name="Room.currentRegulation" type="int">0</variable>
			<variable name="Room.outside_air" type="int">0</variable>
		</statevariables>
		<queue>
			<message arrival="20" deadline="infinity" sender="room">updateStatus()</message>
			<message arrival="20" deadline="infinity" sender="hc_unit">setRegulation(0)</message>
		</queue>
		<now>20</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="controller">
		<statevariables>
			<variable name="Controller.currentTemp" type="int">21</variable>
			<variable name="Controller.isHeating" type="boolean">false</variable>
			<variable name="Controller.isCooling" type="boolean">false</variable>
		</statevariables>
		<queue>
		</queue>
		<now>20</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="sensor">
		<statevariables>
		</statevariables>
		<queue>
			<message arrival="20" deadline="infinity" sender="sensor">callSensor()</message>
		</queue>
		<now>20</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="hc_unit">
		<statevariables>
			<variable name="HC_Unit.heaterOn" type="boolean">false</variable>
			<variable name="HC_Unit.coolerOn" type="boolean">false</variable>
			<variable name="HC_Unit.currentRegulation" type="int">0</variable>
		</statevariables>
		<queue>
			<message arrival="25" deadline="infinity" sender="hc_unit">regulateTemp()</message>
		</queue>
		<now>20</now>
		<pc></pc>
		<res></res>
	</rebec>
</state>
<transition source="581_0" destination="605_0" executionTime="20" shift="0"> <messageserver sender="hc_unit" owner="hc_unit" title="REGULATETEMP"/></transition>
<state id="606_0" atomicpropositions="isHeating," >
	<rebec name="room">
		<statevariables>
			<variable name="Room.currentTemp" type="int">20</variable>
			<variable name="Room.currentRegulation" type="int">1</variable>
			<variable name="Room.outside_air" type="int">1</variable>
		</statevariables>
		<queue>
			<message arrival="30" deadline="infinity" sender="room">updateStatus()</message>
		</queue>
		<now>20</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="controller">
		<statevariables>
			<variable name="Controller.currentTemp" type="int">20</variable>
			<variable name="Controller.isHeating" type="boolean">true</variable>
			<variable name="Controller.isCooling" type="boolean">false</variable>
		</statevariables>
		<queue>
		</queue>
		<now>20</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="sensor">
		<statevariables>
		</statevariables>
		<queue>
			<message arrival="20" deadline="infinity" sender="sensor">callSensor()</message>
		</queue>
		<now>20</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="hc_unit">
		<statevariables>
			<variable name="HC_Unit.heaterOn" type="boolean">true</variable>
			<variable name="HC_Unit.coolerOn" type="boolean">false</variable>
			<variable name="HC_Unit.currentRegulation" type="int">1</variable>
		</statevariables>
		<queue>
			<message arrival="20" deadline="infinity" sender="hc_unit">regulateTemp()</message>
		</queue>
		<now>20</now>
		<pc></pc>
		<res></res>
	</rebec>
</state>
<transition source="597_0" destination="606_0" executionTime="20" shift="0"> <messageserver sender="room" owner="room" title="UPDATESTATUS"/></transition>
<state id="607_0" atomicpropositions="isHeating," >
	<rebec name="room">
		<statevariables>
			<variable name="Room.currentTemp" type="int">21</variable>
			<variable name="Room.currentRegulation" type="int">1</variable>
			<variable name="Room.outside_air" type="int">0</variable>
		</statevariables>
		<queue>
			<message arrival="30" deadline="infinity" sender="room">updateStatus()</message>
		</queue>
		<now>20</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="controller">
		<statevariables>
			<variable name="Controller.currentTemp" type="int">20</variable>
			<variable name="Controller.isHeating" type="boolean">true</variable>
			<variable name="Controller.isCooling" type="boolean">false</variable>
		</statevariables>
		<queue>
		</queue>
		<now>20</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="sensor">
		<statevariables>
		</statevariables>
		<queue>
			<message arrival="20" deadline="infinity" sender="sensor">callSensor()</message>
		</queue>
		<now>20</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="hc_unit">
		<statevariables>
			<variable name="HC_Unit.heaterOn" type="boolean">true</variable>
			<variable name="HC_Unit.coolerOn" type="boolean">false</variable>
			<variable name="HC_Unit.currentRegulation" type="int">1</variable>
		</statevariables>
		<queue>
			<message arrival="20" deadline="infinity" sender="hc_unit">regulateTemp()</message>
		</queue>
		<now>20</now>
		<pc></pc>
		<res></res>
	</rebec>
</state>
<transition source="597_0" destination="607_0" executionTime="20" shift="0"> <messageserver sender="room" owner="room" title="UPDATESTATUS"/></transition>
<state id="608_0" atomicpropositions="isHeating," >
	<rebec name="room">
		<statevariables>
			<variable name="Room.currentTemp" type="int">22</variable>
			<variable name="Room.currentRegulation" type="int">1</variable>
			<variable name="Room.outside_air" type="int">-1</variable>
		</statevariables>
		<queue>
			<message arrival="30" deadline="infinity" sender="room">updateStatus()</message>
		</queue>
		<now>20</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="controller">
		<statevariables>
			<variable name="Controller.currentTemp" type="int">20</variable>
			<variable name="Controller.isHeating" type="boolean">true</variable>
			<variable name="Controller.isCooling" type="boolean">false</variable>
		</statevariables>
		<queue>
		</queue>
		<now>20</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="sensor">
		<statevariables>
		</statevariables>
		<queue>
			<message arrival="20" deadline="infinity" sender="sensor">callSensor()</message>
		</queue>
		<now>20</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="hc_unit">
		<statevariables>
			<variable name="HC_Unit.heaterOn" type="boolean">true</variable>
			<variable name="HC_Unit.coolerOn" type="boolean">false</variable>
			<variable name="HC_Unit.currentRegulation" type="int">1</variable>
		</statevariables>
		<queue>
			<message arrival="20" deadline="infinity" sender="hc_unit">regulateTemp()</message>
		</queue>
		<now>20</now>
		<pc></pc>
		<res></res>
	</rebec>
</state>
<transition source="597_0" destination="608_0" executionTime="20" shift="0"> <messageserver sender="room" owner="room" title="UPDATESTATUS"/></transition>
<state id="609_0" atomicpropositions="isHeating," >
	<rebec name="room">
		<statevariables>
			<variable name="Room.currentTemp" type="int">20</variable>
			<variable name="Room.currentRegulation" type="int">1</variable>
			<variable name="Room.outside_air" type="int">1</variable>
		</statevariables>
		<queue>
			<message arrival="20" deadline="infinity" sender="room">updateStatus()</message>
			<message arrival="20" deadline="infinity" sender="sensor">getTemp()</message>
		</queue>
		<now>20</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="controller">
		<statevariables>
			<variable name="Controller.currentTemp" type="int">20</variable>
			<variable name="Controller.isHeating" type="boolean">true</variable>
			<variable name="Controller.isCooling" type="boolean">false</variable>
		</statevariables>
		<queue>
		</queue>
		<now>20</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="sensor">
		<statevariables>
		</statevariables>
		<queue>
			<message arrival="22" deadline="infinity" sender="sensor">callSensor()</message>
		</queue>
		<now>20</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="hc_unit">
		<statevariables>
			<variable name="HC_Unit.heaterOn" type="boolean">true</variable>
			<variable name="HC_Unit.coolerOn" type="boolean">false</variable>
			<variable name="HC_Unit.currentRegulation" type="int">1</variable>
		</statevariables>
		<queue>
			<message arrival="20" deadline="infinity" sender="hc_unit">regulateTemp()</message>
		</queue>
		<now>20</now>
		<pc></pc>
		<res></res>
	</rebec>
</state>
<transition source="597_0" destination="609_0" executionTime="20" shift="0"> <messageserver sender="sensor" owner="sensor" title="CALLSENSOR"/></transition>
<state id="610_0" atomicpropositions="isHeating," >
	<rebec name="room">
		<statevariables>
			<variable name="Room.currentTemp" type="int">20</variable>
			<variable name="Room.currentRegulation" type="int">1</variable>
			<variable name="Room.outside_air" type="int">1</variable>
		</statevariables>
		<queue>
			<message arrival="20" deadline="infinity" sender="room">updateStatus()</message>
			<message arrival="20" deadline="infinity" sender="hc_unit">setRegulation(1)</message>
		</queue>
		<now>20</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="controller">
		<statevariables>
			<variable name="Controller.currentTemp" type="int">20</variable>
			<variable name="Controller.isHeating" type="boolean">true</variable>
			<variable name="Controller.isCooling" type="boolean">false</variable>
		</statevariables>
		<queue>
		</queue>
		<now>20</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="sensor">
		<statevariables>
		</statevariables>
		<queue>
			<message arrival="20" deadline="infinity" sender="sensor">callSensor()</message>
		</queue>
		<now>20</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="hc_unit">
		<statevariables>
			<variable name="HC_Unit.heaterOn" type="boolean">true</variable>
			<variable name="HC_Unit.coolerOn" type="boolean">false</variable>
			<variable name="HC_Unit.currentRegulation" type="int">1</variable>
		</statevariables>
		<queue>
			<message arrival="25" deadline="infinity" sender="hc_unit">regulateTemp()</message>
		</queue>
		<now>20</now>
		<pc></pc>
		<res></res>
	</rebec>
</state>
<transition source="597_0" destination="610_0" executionTime="20" shift="0"> <messageserver sender="hc_unit" owner="hc_unit" title="REGULATETEMP"/></transition>
<transition source="603_0" destination="2_0" executionTime="20" shift="20"> <messageserver sender="room" owner="room" title="UPDATESTATUS"/></transition>
<transition source="603_0" destination="3_0" executionTime="20" shift="20"> <messageserver sender="room" owner="room" title="UPDATESTATUS"/></transition>
<transition source="603_0" destination="4_0" executionTime="20" shift="20"> <messageserver sender="room" owner="room" title="UPDATESTATUS"/></transition>
<state id="611_0" atomicpropositions="" >
	<rebec name="room">
		<statevariables>
			<variable name="Room.currentTemp" type="int">22</variable>
			<variable name="Room.currentRegulation" type="int">0</variable>
			<variable name="Room.outside_air" type="int">-1</variable>
		</statevariables>
		<queue>
			<message arrival="20" deadline="infinity" sender="room">updateStatus()</message>
			<message arrival="20" deadline="infinity" sender="sensor">getTemp()</message>
		</queue>
		<now>20</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="controller">
		<statevariables>
			<variable name="Controller.currentTemp" type="int">22</variable>
			<variable name="Controller.isHeating" type="boolean">false</variable>
			<variable name="Controller.isCooling" type="boolean">false</variable>
		</statevariables>
		<queue>
		</queue>
		<now>20</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="sensor">
		<statevariables>
		</statevariables>
		<queue>
			<message arrival="22" deadline="infinity" sender="sensor">callSensor()</message>
		</queue>
		<now>20</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="hc_unit">
		<statevariables>
			<variable name="HC_Unit.heaterOn" type="boolean">false</variable>
			<variable name="HC_Unit.coolerOn" type="boolean">false</variable>
			<variable name="HC_Unit.currentRegulation" type="int">0</variable>
		</statevariables>
		<queue>
			<message arrival="20" deadline="infinity" sender="hc_unit">regulateTemp()</message>
		</queue>
		<now>20</now>
		<pc></pc>
		<res></res>
	</rebec>
</state>
<transition source="603_0" destination="611_0" executionTime="20" shift="0"> <messageserver sender="sensor" owner="sensor" title="CALLSENSOR"/></transition>
<state id="612_0" atomicpropositions="" >
	<rebec name="room">
		<statevariables>
			<variable name="Room.currentTemp" type="int">22</variable>
			<variable name="Room.currentRegulation" type="int">0</variable>
			<variable name="Room.outside_air" type="int">-1</variable>
		</statevariables>
		<queue>
			<message arrival="20" deadline="infinity" sender="room">updateStatus()</message>
			<message arrival="20" deadline="infinity" sender="hc_unit">setRegulation(0)</message>
		</queue>
		<now>20</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="controller">
		<statevariables>
			<variable name="Controller.currentTemp" type="int">22</variable>
			<variable name="Controller.isHeating" type="boolean">false</variable>
			<variable name="Controller.isCooling" type="boolean">false</variable>
		</statevariables>
		<queue>
		</queue>
		<now>20</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="sensor">
		<statevariables>
		</statevariables>
		<queue>
			<message arrival="20" deadline="infinity" sender="sensor">callSensor()</message>
		</queue>
		<now>20</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="hc_unit">
		<statevariables>
			<variable name="HC_Unit.heaterOn" type="boolean">false</variable>
			<variable name="HC_Unit.coolerOn" type="boolean">false</variable>
			<variable name="HC_Unit.currentRegulation" type="int">0</variable>
		</statevariables>
		<queue>
			<message arrival="25" deadline="infinity" sender="hc_unit">regulateTemp()</message>
		</queue>
		<now>20</now>
		<pc></pc>
		<res></res>
	</rebec>
</state>
<transition source="603_0" destination="612_0" executionTime="20" shift="0"> <messageserver sender="hc_unit" owner="hc_unit" title="REGULATETEMP"/></transition>
<transition source="604_0" destination="336_0" executionTime="20" shift="10"> <messageserver sender="room" owner="room" title="UPDATESTATUS"/></transition>
<transition source="604_0" destination="198_0" executionTime="20" shift="10"> <messageserver sender="room" owner="room" title="UPDATESTATUS"/></transition>
<transition source="604_0" destination="337_0" executionTime="20" shift="10"> <messageserver sender="room" owner="room" title="UPDATESTATUS"/></transition>
<state id="613_0" atomicpropositions="" >
	<rebec name="room">
		<statevariables>
			<variable name="Room.currentTemp" type="int">21</variable>
			<variable name="Room.currentRegulation" type="int">0</variable>
			<variable name="Room.outside_air" type="int">0</variable>
		</statevariables>
		<queue>
			<message arrival="20" deadline="infinity" sender="room">updateStatus()</message>
		</queue>
		<now>20</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="controller">
		<statevariables>
			<variable name="Controller.currentTemp" type="int">21</variable>
			<variable name="Controller.isHeating" type="boolean">false</variable>
			<variable name="Controller.isCooling" type="boolean">false</variable>
		</statevariables>
		<queue>
		</queue>
		<now>20</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="sensor">
		<statevariables>
		</statevariables>
		<queue>
			<message arrival="20" deadline="infinity" sender="room">setCurrent(21)</message>
			<message arrival="22" deadline="infinity" sender="sensor">callSensor()</message>
		</queue>
		<now>20</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="hc_unit">
		<statevariables>
			<variable name="HC_Unit.heaterOn" type="boolean">false</variable>
			<variable name="HC_Unit.coolerOn" type="boolean">false</variable>
			<variable name="HC_Unit.currentRegulation" type="int">0</variable>
		</statevariables>
		<queue>
			<message arrival="20" deadline="infinity" sender="hc_unit">regulateTemp()</message>
		</queue>
		<now>20</now>
		<pc></pc>
		<res></res>
	</rebec>
</state>
<transition source="604_0" destination="613_0" executionTime="20" shift="0"> <messageserver sender="sensor" owner="room" title="GETTEMP"/></transition>
<state id="614_0" atomicpropositions="" >
	<rebec name="room">
		<statevariables>
			<variable name="Room.currentTemp" type="int">21</variable>
			<variable name="Room.currentRegulation" type="int">0</variable>
			<variable name="Room.outside_air" type="int">0</variable>
		</statevariables>
		<queue>
			<message arrival="20" deadline="infinity" sender="room">updateStatus()</message>
			<message arrival="20" deadline="infinity" sender="hc_unit">setRegulation(0)</message>
			<message arrival="20" deadline="infinity" sender="sensor">getTemp()</message>
		</queue>
		<now>20</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="controller">
		<statevariables>
			<variable name="Controller.currentTemp" type="int">21</variable>
			<variable name="Controller.isHeating" type="boolean">false</variable>
			<variable name="Controller.isCooling" type="boolean">false</variable>
		</statevariables>
		<queue>
		</queue>
		<now>20</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="sensor">
		<statevariables>
		</statevariables>
		<queue>
			<message arrival="22" deadline="infinity" sender="sensor">callSensor()</message>
		</queue>
		<now>20</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="hc_unit">
		<statevariables>
			<variable name="HC_Unit.heaterOn" type="boolean">false</variable>
			<variable name="HC_Unit.coolerOn" type="boolean">false</variable>
			<variable name="HC_Unit.currentRegulation" type="int">0</variable>
		</statevariables>
		<queue>
			<message arrival="25" deadline="infinity" sender="hc_unit">regulateTemp()</message>
		</queue>
		<now>20</now>
		<pc></pc>
		<res></res>
	</rebec>
</state>
<transition source="604_0" destination="614_0" executionTime="20" shift="0"> <messageserver sender="hc_unit" owner="hc_unit" title="REGULATETEMP"/></transition>
<state id="615_0" atomicpropositions="isHeating," >
	<rebec name="room">
		<statevariables>
			<variable name="Room.currentTemp" type="int">20</variable>
			<variable name="Room.currentRegulation" type="int">1</variable>
			<variable name="Room.outside_air" type="int">1</variable>
		</statevariables>
		<queue>
			<message arrival="20" deadline="infinity" sender="sensor">getTemp()</message>
			<message arrival="30" deadline="infinity" sender="room">updateStatus()</message>
		</queue>
		<now>20</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="controller">
		<statevariables>
			<variable name="Controller.currentTemp" type="int">20</variable>
			<variable name="Controller.isHeating" type="boolean">true</variable>
			<variable name="Controller.isCooling" type="boolean">false</variable>
		</statevariables>
		<queue>
		</queue>
		<now>20</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="sensor">
		<statevariables>
		</statevariables>
		<queue>
			<message arrival="22" deadline="infinity" sender="sensor">callSensor()</message>
		</queue>
		<now>20</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="hc_unit">
		<statevariables>
			<variable name="HC_Unit.heaterOn" type="boolean">true</variable>
			<variable name="HC_Unit.coolerOn" type="boolean">false</variable>
			<variable name="HC_Unit.currentRegulation" type="int">1</variable>
		</statevariables>
		<queue>
			<message arrival="20" deadline="infinity" sender="hc_unit">regulateTemp()</message>
		</queue>
		<now>20</now>
		<pc></pc>
		<res></res>
	</rebec>
</state>
<transition source="606_0" destination="615_0" executionTime="20" shift="0"> <messageserver sender="sensor" owner="sensor" title="CALLSENSOR"/></transition>
<state id="616_0" atomicpropositions="isHeating," >
	<rebec name="room">
		<statevariables>
			<variable name="Room.currentTemp" type="int">20</variable>
			<variable name="Room.currentRegulation" type="int">1</variable>
			<variable name="Room.outside_air" type="int">1</variable>
		</statevariables>
		<queue>
			<message arrival="20" deadline="infinity" sender="hc_unit">setRegulation(1)</message>
			<message arrival="30" deadline="infinity" sender="room">updateStatus()</message>
		</queue>
		<now>20</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="controller">
		<statevariables>
			<variable name="Controller.currentTemp" type="int">20</variable>
			<variable name="Controller.isHeating" type="boolean">true</variable>
			<variable name="Controller.isCooling" type="boolean">false</variable>
		</statevariables>
		<queue>
		</queue>
		<now>20</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="sensor">
		<statevariables>
		</statevariables>
		<queue>
			<message arrival="20" deadline="infinity" sender="sensor">callSensor()</message>
		</queue>
		<now>20</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="hc_unit">
		<statevariables>
			<variable name="HC_Unit.heaterOn" type="boolean">true</variable>
			<variable name="HC_Unit.coolerOn" type="boolean">false</variable>
			<variable name="HC_Unit.currentRegulation" type="int">1</variable>
		</statevariables>
		<queue>
			<message arrival="25" deadline="infinity" sender="hc_unit">regulateTemp()</message>
		</queue>
		<now>20</now>
		<pc></pc>
		<res></res>
	</rebec>
</state>
<transition source="606_0" destination="616_0" executionTime="20" shift="0"> <messageserver sender="hc_unit" owner="hc_unit" title="REGULATETEMP"/></transition>
<transition source="610_0" destination="616_0" executionTime="20" shift="0"> <messageserver sender="room" owner="room" title="UPDATESTATUS"/></transition>
<state id="617_0" atomicpropositions="isHeating," >
	<rebec name="room">
		<statevariables>
			<variable name="Room.currentTemp" type="int">21</variable>
			<variable name="Room.currentRegulation" type="int">1</variable>
			<variable name="Room.outside_air" type="int">0</variable>
		</statevariables>
		<queue>
			<message arrival="20" deadline="infinity" sender="hc_unit">setRegulation(1)</message>
			<message arrival="30" deadline="infinity" sender="room">updateStatus()</message>
		</queue>
		<now>20</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="controller">
		<statevariables>
			<variable name="Controller.currentTemp" type="int">20</variable>
			<variable name="Controller.isHeating" type="boolean">true</variable>
			<variable name="Controller.isCooling" type="boolean">false</variable>
		</statevariables>
		<queue>
		</queue>
		<now>20</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="sensor">
		<statevariables>
		</statevariables>
		<queue>
			<message arrival="20" deadline="infinity" sender="sensor">callSensor()</message>
		</queue>
		<now>20</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="hc_unit">
		<statevariables>
			<variable name="HC_Unit.heaterOn" type="boolean">true</variable>
			<variable name="HC_Unit.coolerOn" type="boolean">false</variable>
			<variable name="HC_Unit.currentRegulation" type="int">1</variable>
		</statevariables>
		<queue>
			<message arrival="25" deadline="infinity" sender="hc_unit">regulateTemp()</message>
		</queue>
		<now>20</now>
		<pc></pc>
		<res></res>
	</rebec>
</state>
<transition source="610_0" destination="617_0" executionTime="20" shift="0"> <messageserver sender="room" owner="room" title="UPDATESTATUS"/></transition>
<state id="618_0" atomicpropositions="isHeating," >
	<rebec name="room">
		<statevariables>
			<variable name="Room.currentTemp" type="int">22</variable>
			<variable name="Room.currentRegulation" type="int">1</variable>
			<variable name="Room.outside_air" type="int">-1</variable>
		</statevariables>
		<queue>
			<message arrival="20" deadline="infinity" sender="hc_unit">setRegulation(1)</message>
			<message arrival="30" deadline="infinity" sender="room">updateStatus()</message>
		</queue>
		<now>20</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="controller">
		<statevariables>
			<variable name="Controller.currentTemp" type="int">20</variable>
			<variable name="Controller.isHeating" type="boolean">true</variable>
			<variable name="Controller.isCooling" type="boolean">false</variable>
		</statevariables>
		<queue>
		</queue>
		<now>20</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="sensor">
		<statevariables>
		</statevariables>
		<queue>
			<message arrival="20" deadline="infinity" sender="sensor">callSensor()</message>
		</queue>
		<now>20</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="hc_unit">
		<statevariables>
			<variable name="HC_Unit.heaterOn" type="boolean">true</variable>
			<variable name="HC_Unit.coolerOn" type="boolean">false</variable>
			<variable name="HC_Unit.currentRegulation" type="int">1</variable>
		</statevariables>
		<queue>
			<message arrival="25" deadline="infinity" sender="hc_unit">regulateTemp()</message>
		</queue>
		<now>20</now>
		<pc></pc>
		<res></res>
	</rebec>
</state>
<transition source="610_0" destination="618_0" executionTime="20" shift="0"> <messageserver sender="room" owner="room" title="UPDATESTATUS"/></transition>
<state id="619_0" atomicpropositions="isHeating," >
	<rebec name="room">
		<statevariables>
			<variable name="Room.currentTemp" type="int">20</variable>
			<variable name="Room.currentRegulation" type="int">1</variable>
			<variable name="Room.outside_air" type="int">1</variable>
		</statevariables>
		<queue>
			<message arrival="20" deadline="infinity" sender="room">updateStatus()</message>
		</queue>
		<now>20</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="controller">
		<statevariables>
			<variable name="Controller.currentTemp" type="int">20</variable>
			<variable name="Controller.isHeating" type="boolean">true</variable>
			<variable name="Controller.isCooling" type="boolean">false</variable>
		</statevariables>
		<queue>
		</queue>
		<now>20</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="sensor">
		<statevariables>
		</statevariables>
		<queue>
			<message arrival="20" deadline="infinity" sender="sensor">callSensor()</message>
		</queue>
		<now>20</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="hc_unit">
		<statevariables>
			<variable name="HC_Unit.heaterOn" type="boolean">true</variable>
			<variable name="HC_Unit.coolerOn" type="boolean">false</variable>
			<variable name="HC_Unit.currentRegulation" type="int">1</variable>
		</statevariables>
		<queue>
			<message arrival="25" deadline="infinity" sender="hc_unit">regulateTemp()</message>
		</queue>
		<now>20</now>
		<pc></pc>
		<res></res>
	</rebec>
</state>
<transition source="610_0" destination="619_0" executionTime="20" shift="0"> <messageserver sender="hc_unit" owner="room" title="SETREGULATION"/></transition>
<state id="620_0" atomicpropositions="isHeating," >
	<rebec name="room">
		<statevariables>
			<variable name="Room.currentTemp" type="int">20</variable>
			<variable name="Room.currentRegulation" type="int">1</variable>
			<variable name="Room.outside_air" type="int">1</variable>
		</statevariables>
		<queue>
			<message arrival="20" deadline="infinity" sender="room">updateStatus()</message>
			<message arrival="20" deadline="infinity" sender="hc_unit">setRegulation(1)</message>
			<message arrival="20" deadline="infinity" sender="sensor">getTemp()</message>
		</queue>
		<now>20</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="controller">
		<statevariables>
			<variable name="Controller.currentTemp" type="int">20</variable>
			<variable name="Controller.isHeating" type="boolean">true</variable>
			<variable name="Controller.isCooling" type="boolean">false</variable>
		</statevariables>
		<queue>
		</queue>
		<now>20</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="sensor">
		<statevariables>
		</statevariables>
		<queue>
			<message arrival="22" deadline="infinity" sender="sensor">callSensor()</message>
		</queue>
		<now>20</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="hc_unit">
		<statevariables>
			<variable name="HC_Unit.heaterOn" type="boolean">true</variable>
			<variable name="HC_Unit.coolerOn" type="boolean">false</variable>
			<variable name="HC_Unit.currentRegulation" type="int">1</variable>
		</statevariables>
		<queue>
			<message arrival="25" deadline="infinity" sender="hc_unit">regulateTemp()</message>
		</queue>
		<now>20</now>
		<pc></pc>
		<res></res>
	</rebec>
</state>
<transition source="610_0" destination="620_0" executionTime="20" shift="0"> <messageserver sender="sensor" owner="sensor" title="CALLSENSOR"/></transition>
<transition source="612_0" destination="8_0" executionTime="20" shift="20"> <messageserver sender="room" owner="room" title="UPDATESTATUS"/></transition>
<transition source="612_0" destination="11_0" executionTime="20" shift="20"> <messageserver sender="room" owner="room" title="UPDATESTATUS"/></transition>
<transition source="612_0" destination="10_0" executionTime="20" shift="20"> <messageserver sender="room" owner="room" title="UPDATESTATUS"/></transition>
<state id="621_0" atomicpropositions="" >
	<rebec name="room">
		<statevariables>
			<variable name="Room.currentTemp" type="int">22</variable>
			<variable name="Room.currentRegulation" type="int">0</variable>
			<variable name="Room.outside_air" type="int">-1</variable>
		</statevariables>
		<queue>
			<message arrival="20" deadline="infinity" sender="room">updateStatus()</message>
		</queue>
		<now>20</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="controller">
		<statevariables>
			<variable name="Controller.currentTemp" type="int">22</variable>
			<variable name="Controller.isHeating" type="boolean">false</variable>
			<variable name="Controller.isCooling" type="boolean">false</variable>
		</statevariables>
		<queue>
		</queue>
		<now>20</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="sensor">
		<statevariables>
		</statevariables>
		<queue>
			<message arrival="20" deadline="infinity" sender="sensor">callSensor()</message>
		</queue>
		<now>20</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="hc_unit">
		<statevariables>
			<variable name="HC_Unit.heaterOn" type="boolean">false</variable>
			<variable name="HC_Unit.coolerOn" type="boolean">false</variable>
			<variable name="HC_Unit.currentRegulation" type="int">0</variable>
		</statevariables>
		<queue>
			<message arrival="25" deadline="infinity" sender="hc_unit">regulateTemp()</message>
		</queue>
		<now>20</now>
		<pc></pc>
		<res></res>
	</rebec>
</state>
<transition source="612_0" destination="621_0" executionTime="20" shift="0"> <messageserver sender="hc_unit" owner="room" title="SETREGULATION"/></transition>
<state id="622_0" atomicpropositions="" >
	<rebec name="room">
		<statevariables>
			<variable name="Room.currentTemp" type="int">22</variable>
			<variable name="Room.currentRegulation" type="int">0</variable>
			<variable name="Room.outside_air" type="int">-1</variable>
		</statevariables>
		<queue>
			<message arrival="20" deadline="infinity" sender="room">updateStatus()</message>
			<message arrival="20" deadline="infinity" sender="hc_unit">setRegulation(0)</message>
			<message arrival="20" deadline="infinity" sender="sensor">getTemp()</message>
		</queue>
		<now>20</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="controller">
		<statevariables>
			<variable name="Controller.currentTemp" type="int">22</variable>
			<variable name="Controller.isHeating" type="boolean">false</variable>
			<variable name="Controller.isCooling" type="boolean">false</variable>
		</statevariables>
		<queue>
		</queue>
		<now>20</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="sensor">
		<statevariables>
		</statevariables>
		<queue>
			<message arrival="22" deadline="infinity" sender="sensor">callSensor()</message>
		</queue>
		<now>20</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="hc_unit">
		<statevariables>
			<variable name="HC_Unit.heaterOn" type="boolean">false</variable>
			<variable name="HC_Unit.coolerOn" type="boolean">false</variable>
			<variable name="HC_Unit.currentRegulation" type="int">0</variable>
		</statevariables>
		<queue>
			<message arrival="25" deadline="infinity" sender="hc_unit">regulateTemp()</message>
		</queue>
		<now>20</now>
		<pc></pc>
		<res></res>
	</rebec>
</state>
<transition source="612_0" destination="622_0" executionTime="20" shift="0"> <messageserver sender="sensor" owner="sensor" title="CALLSENSOR"/></transition>
<transition source="614_0" destination="212_0" executionTime="20" shift="10"> <messageserver sender="room" owner="room" title="UPDATESTATUS"/></transition>
<transition source="614_0" destination="211_0" executionTime="20" shift="10"> <messageserver sender="room" owner="room" title="UPDATESTATUS"/></transition>
<transition source="614_0" destination="213_0" executionTime="20" shift="10"> <messageserver sender="room" owner="room" title="UPDATESTATUS"/></transition>
<state id="623_0" atomicpropositions="" >
	<rebec name="room">
		<statevariables>
			<variable name="Room.currentTemp" type="int">21</variable>
			<variable name="Room.currentRegulation" type="int">0</variable>
			<variable name="Room.outside_air" type="int">0</variable>
		</statevariables>
		<queue>
			<message arrival="20" deadline="infinity" sender="room">updateStatus()</message>
			<message arrival="20" deadline="infinity" sender="sensor">getTemp()</message>
		</queue>
		<now>20</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="controller">
		<statevariables>
			<variable name="Controller.currentTemp" type="int">21</variable>
			<variable name="Controller.isHeating" type="boolean">false</variable>
			<variable name="Controller.isCooling" type="boolean">false</variable>
		</statevariables>
		<queue>
		</queue>
		<now>20</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="sensor">
		<statevariables>
		</statevariables>
		<queue>
			<message arrival="22" deadline="infinity" sender="sensor">callSensor()</message>
		</queue>
		<now>20</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="hc_unit">
		<statevariables>
			<variable name="HC_Unit.heaterOn" type="boolean">false</variable>
			<variable name="HC_Unit.coolerOn" type="boolean">false</variable>
			<variable name="HC_Unit.currentRegulation" type="int">0</variable>
		</statevariables>
		<queue>
			<message arrival="25" deadline="infinity" sender="hc_unit">regulateTemp()</message>
		</queue>
		<now>20</now>
		<pc></pc>
		<res></res>
	</rebec>
</state>
<transition source="614_0" destination="623_0" executionTime="20" shift="0"> <messageserver sender="hc_unit" owner="room" title="SETREGULATION"/></transition>
<state id="624_0" atomicpropositions="" >
	<rebec name="room">
		<statevariables>
			<variable name="Room.currentTemp" type="int">21</variable>
			<variable name="Room.currentRegulation" type="int">0</variable>
			<variable name="Room.outside_air" type="int">0</variable>
		</statevariables>
		<queue>
			<message arrival="20" deadline="infinity" sender="room">updateStatus()</message>
			<message arrival="20" deadline="infinity" sender="hc_unit">setRegulation(0)</message>
		</queue>
		<now>20</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="controller">
		<statevariables>
			<variable name="Controller.currentTemp" type="int">21</variable>
			<variable name="Controller.isHeating" type="boolean">false</variable>
			<variable name="Controller.isCooling" type="boolean">false</variable>
		</statevariables>
		<queue>
		</queue>
		<now>20</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="sensor">
		<statevariables>
		</statevariables>
		<queue>
			<message arrival="20" deadline="infinity" sender="room">setCurrent(21)</message>
			<message arrival="22" deadline="infinity" sender="sensor">callSensor()</message>
		</queue>
		<now>20</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="hc_unit">
		<statevariables>
			<variable name="HC_Unit.heaterOn" type="boolean">false</variable>
			<variable name="HC_Unit.coolerOn" type="boolean">false</variable>
			<variable name="HC_Unit.currentRegulation" type="int">0</variable>
		</statevariables>
		<queue>
			<message arrival="25" deadline="infinity" sender="hc_unit">regulateTemp()</message>
		</queue>
		<now>20</now>
		<pc></pc>
		<res></res>
	</rebec>
</state>
<transition source="614_0" destination="624_0" executionTime="20" shift="0"> <messageserver sender="sensor" owner="room" title="GETTEMP"/></transition>
<state id="625_0" atomicpropositions="isHeating," >
	<rebec name="room">
		<statevariables>
			<variable name="Room.currentTemp" type="int">20</variable>
			<variable name="Room.currentRegulation" type="int">1</variable>
			<variable name="Room.outside_air" type="int">1</variable>
		</statevariables>
		<queue>
			<message arrival="30" deadline="infinity" sender="room">updateStatus()</message>
		</queue>
		<now>20</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="controller">
		<statevariables>
			<variable name="Controller.currentTemp" type="int">20</variable>
			<variable name="Controller.isHeating" type="boolean">true</variable>
			<variable name="Controller.isCooling" type="boolean">false</variable>
		</statevariables>
		<queue>
		</queue>
		<now>20</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="sensor">
		<statevariables>
		</statevariables>
		<queue>
			<message arrival="20" deadline="infinity" sender="sensor">callSensor()</message>
		</queue>
		<now>20</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="hc_unit">
		<statevariables>
			<variable name="HC_Unit.heaterOn" type="boolean">true</variable>
			<variable name="HC_Unit.coolerOn" type="boolean">false</variable>
			<variable name="HC_Unit.currentRegulation" type="int">1</variable>
		</statevariables>
		<queue>
			<message arrival="25" deadline="infinity" sender="hc_unit">regulateTemp()</message>
		</queue>
		<now>20</now>
		<pc></pc>
		<res></res>
	</rebec>
</state>
<transition source="616_0" destination="625_0" executionTime="20" shift="0"> <messageserver sender="hc_unit" owner="room" title="SETREGULATION"/></transition>
<state id="626_0" atomicpropositions="isHeating," >
	<rebec name="room">
		<statevariables>
			<variable name="Room.currentTemp" type="int">20</variable>
			<variable name="Room.currentRegulation" type="int">1</variable>
			<variable name="Room.outside_air" type="int">1</variable>
		</statevariables>
		<queue>
			<message arrival="20" deadline="infinity" sender="hc_unit">setRegulation(1)</message>
			<message arrival="20" deadline="infinity" sender="sensor">getTemp()</message>
			<message arrival="30" deadline="infinity" sender="room">updateStatus()</message>
		</queue>
		<now>20</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="controller">
		<statevariables>
			<variable name="Controller.currentTemp" type="int">20</variable>
			<variable name="Controller.isHeating" type="boolean">true</variable>
			<variable name="Controller.isCooling" type="boolean">false</variable>
		</statevariables>
		<queue>
		</queue>
		<now>20</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="sensor">
		<statevariables>
		</statevariables>
		<queue>
			<message arrival="22" deadline="infinity" sender="sensor">callSensor()</message>
		</queue>
		<now>20</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="hc_unit">
		<statevariables>
			<variable name="HC_Unit.heaterOn" type="boolean">true</variable>
			<variable name="HC_Unit.coolerOn" type="boolean">false</variable>
			<variable name="HC_Unit.currentRegulation" type="int">1</variable>
		</statevariables>
		<queue>
			<message arrival="25" deadline="infinity" sender="hc_unit">regulateTemp()</message>
		</queue>
		<now>20</now>
		<pc></pc>
		<res></res>
	</rebec>
</state>
<transition source="616_0" destination="626_0" executionTime="20" shift="0"> <messageserver sender="sensor" owner="sensor" title="CALLSENSOR"/></transition>
<state id="627_0" atomicpropositions="isHeating," >
	<rebec name="room">
		<statevariables>
			<variable name="Room.currentTemp" type="int">22</variable>
			<variable name="Room.currentRegulation" type="int">1</variable>
			<variable name="Room.outside_air" type="int">-1</variable>
		</statevariables>
		<queue>
			<message arrival="30" deadline="infinity" sender="room">updateStatus()</message>
		</queue>
		<now>20</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="controller">
		<statevariables>
			<variable name="Controller.currentTemp" type="int">20</variable>
			<variable name="Controller.isHeating" type="boolean">true</variable>
			<variable name="Controller.isCooling" type="boolean">false</variable>
		</statevariables>
		<queue>
		</queue>
		<now>20</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="sensor">
		<statevariables>
		</statevariables>
		<queue>
			<message arrival="20" deadline="infinity" sender="sensor">callSensor()</message>
		</queue>
		<now>20</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="hc_unit">
		<statevariables>
			<variable name="HC_Unit.heaterOn" type="boolean">true</variable>
			<variable name="HC_Unit.coolerOn" type="boolean">false</variable>
			<variable name="HC_Unit.currentRegulation" type="int">1</variable>
		</statevariables>
		<queue>
			<message arrival="25" deadline="infinity" sender="hc_unit">regulateTemp()</message>
		</queue>
		<now>20</now>
		<pc></pc>
		<res></res>
	</rebec>
</state>
<transition source="618_0" destination="627_0" executionTime="20" shift="0"> <messageserver sender="hc_unit" owner="room" title="SETREGULATION"/></transition>
<state id="628_0" atomicpropositions="isHeating," >
	<rebec name="room">
		<statevariables>
			<variable name="Room.currentTemp" type="int">22</variable>
			<variable name="Room.currentRegulation" type="int">1</variable>
			<variable name="Room.outside_air" type="int">-1</variable>
		</statevariables>
		<queue>
			<message arrival="20" deadline="infinity" sender="hc_unit">setRegulation(1)</message>
			<message arrival="20" deadline="infinity" sender="sensor">getTemp()</message>
			<message arrival="30" deadline="infinity" sender="room">updateStatus()</message>
		</queue>
		<now>20</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="controller">
		<statevariables>
			<variable name="Controller.currentTemp" type="int">20</variable>
			<variable name="Controller.isHeating" type="boolean">true</variable>
			<variable name="Controller.isCooling" type="boolean">false</variable>
		</statevariables>
		<queue>
		</queue>
		<now>20</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="sensor">
		<statevariables>
		</statevariables>
		<queue>
			<message arrival="22" deadline="infinity" sender="sensor">callSensor()</message>
		</queue>
		<now>20</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="hc_unit">
		<statevariables>
			<variable name="HC_Unit.heaterOn" type="boolean">true</variable>
			<variable name="HC_Unit.coolerOn" type="boolean">false</variable>
			<variable name="HC_Unit.currentRegulation" type="int">1</variable>
		</statevariables>
		<queue>
			<message arrival="25" deadline="infinity" sender="hc_unit">regulateTemp()</message>
		</queue>
		<now>20</now>
		<pc></pc>
		<res></res>
	</rebec>
</state>
<transition source="618_0" destination="628_0" executionTime="20" shift="0"> <messageserver sender="sensor" owner="sensor" title="CALLSENSOR"/></transition>
<transition source="620_0" destination="626_0" executionTime="20" shift="0"> <messageserver sender="room" owner="room" title="UPDATESTATUS"/></transition>
<state id="629_0" atomicpropositions="isHeating," >
	<rebec name="room">
		<statevariables>
			<variable name="Room.currentTemp" type="int">21</variable>
			<variable name="Room.currentRegulation" type="int">1</variable>
			<variable name="Room.outside_air" type="int">0</variable>
		</statevariables>
		<queue>
			<message arrival="20" deadline="infinity" sender="hc_unit">setRegulation(1)</message>
			<message arrival="20" deadline="infinity" sender="sensor">getTemp()</message>
			<message arrival="30" deadline="infinity" sender="room">updateStatus()</message>
		</queue>
		<now>20</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="controller">
		<statevariables>
			<variable name="Controller.currentTemp" type="int">20</variable>
			<variable name="Controller.isHeating" type="boolean">true</variable>
			<variable name="Controller.isCooling" type="boolean">false</variable>
		</statevariables>
		<queue>
		</queue>
		<now>20</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="sensor">
		<statevariables>
		</statevariables>
		<queue>
			<message arrival="22" deadline="infinity" sender="sensor">callSensor()</message>
		</queue>
		<now>20</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="hc_unit">
		<statevariables>
			<variable name="HC_Unit.heaterOn" type="boolean">true</variable>
			<variable name="HC_Unit.coolerOn" type="boolean">false</variable>
			<variable name="HC_Unit.currentRegulation" type="int">1</variable>
		</statevariables>
		<queue>
			<message arrival="25" deadline="infinity" sender="hc_unit">regulateTemp()</message>
		</queue>
		<now>20</now>
		<pc></pc>
		<res></res>
	</rebec>
</state>
<transition source="620_0" destination="629_0" executionTime="20" shift="0"> <messageserver sender="room" owner="room" title="UPDATESTATUS"/></transition>
<transition source="620_0" destination="628_0" executionTime="20" shift="0"> <messageserver sender="room" owner="room" title="UPDATESTATUS"/></transition>
<state id="630_0" atomicpropositions="isHeating," >
	<rebec name="room">
		<statevariables>
			<variable name="Room.currentTemp" type="int">20</variable>
			<variable name="Room.currentRegulation" type="int">1</variable>
			<variable name="Room.outside_air" type="int">1</variable>
		</statevariables>
		<queue>
			<message arrival="20" deadline="infinity" sender="room">updateStatus()</message>
			<message arrival="20" deadline="infinity" sender="sensor">getTemp()</message>
		</queue>
		<now>20</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="controller">
		<statevariables>
			<variable name="Controller.currentTemp" type="int">20</variable>
			<variable name="Controller.isHeating" type="boolean">true</variable>
			<variable name="Controller.isCooling" type="boolean">false</variable>
		</statevariables>
		<queue>
		</queue>
		<now>20</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="sensor">
		<statevariables>
		</statevariables>
		<queue>
			<message arrival="22" deadline="infinity" sender="sensor">callSensor()</message>
		</queue>
		<now>20</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="hc_unit">
		<statevariables>
			<variable name="HC_Unit.heaterOn" type="boolean">true</variable>
			<variable name="HC_Unit.coolerOn" type="boolean">false</variable>
			<variable name="HC_Unit.currentRegulation" type="int">1</variable>
		</statevariables>
		<queue>
			<message arrival="25" deadline="infinity" sender="hc_unit">regulateTemp()</message>
		</queue>
		<now>20</now>
		<pc></pc>
		<res></res>
	</rebec>
</state>
<transition source="620_0" destination="630_0" executionTime="20" shift="0"> <messageserver sender="hc_unit" owner="room" title="SETREGULATION"/></transition>
<state id="631_0" atomicpropositions="isHeating," >
	<rebec name="room">
		<statevariables>
			<variable name="Room.currentTemp" type="int">20</variable>
			<variable name="Room.currentRegulation" type="int">1</variable>
			<variable name="Room.outside_air" type="int">1</variable>
		</statevariables>
		<queue>
			<message arrival="20" deadline="infinity" sender="room">updateStatus()</message>
			<message arrival="20" deadline="infinity" sender="hc_unit">setRegulation(1)</message>
		</queue>
		<now>20</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="controller">
		<statevariables>
			<variable name="Controller.currentTemp" type="int">20</variable>
			<variable name="Controller.isHeating" type="boolean">true</variable>
			<variable name="Controller.isCooling" type="boolean">false</variable>
		</statevariables>
		<queue>
		</queue>
		<now>20</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="sensor">
		<statevariables>
		</statevariables>
		<queue>
			<message arrival="20" deadline="infinity" sender="room">setCurrent(20)</message>
			<message arrival="22" deadline="infinity" sender="sensor">callSensor()</message>
		</queue>
		<now>20</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="hc_unit">
		<statevariables>
			<variable name="HC_Unit.heaterOn" type="boolean">true</variable>
			<variable name="HC_Unit.coolerOn" type="boolean">false</variable>
			<variable name="HC_Unit.currentRegulation" type="int">1</variable>
		</statevariables>
		<queue>
			<message arrival="25" deadline="infinity" sender="hc_unit">regulateTemp()</message>
		</queue>
		<now>20</now>
		<pc></pc>
		<res></res>
	</rebec>
</state>
<transition source="620_0" destination="631_0" executionTime="20" shift="0"> <messageserver sender="sensor" owner="room" title="GETTEMP"/></transition>
<transition source="622_0" destination="15_0" executionTime="20" shift="20"> <messageserver sender="room" owner="room" title="UPDATESTATUS"/></transition>
<transition source="622_0" destination="19_0" executionTime="20" shift="20"> <messageserver sender="room" owner="room" title="UPDATESTATUS"/></transition>
<transition source="622_0" destination="17_0" executionTime="20" shift="20"> <messageserver sender="room" owner="room" title="UPDATESTATUS"/></transition>
<state id="632_0" atomicpropositions="" >
	<rebec name="room">
		<statevariables>
			<variable name="Room.currentTemp" type="int">22</variable>
			<variable name="Room.currentRegulation" type="int">0</variable>
			<variable name="Room.outside_air" type="int">-1</variable>
		</statevariables>
		<queue>
			<message arrival="20" deadline="infinity" sender="room">updateStatus()</message>
			<message arrival="20" deadline="infinity" sender="sensor">getTemp()</message>
		</queue>
		<now>20</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="controller">
		<statevariables>
			<variable name="Controller.currentTemp" type="int">22</variable>
			<variable name="Controller.isHeating" type="boolean">false</variable>
			<variable name="Controller.isCooling" type="boolean">false</variable>
		</statevariables>
		<queue>
		</queue>
		<now>20</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="sensor">
		<statevariables>
		</statevariables>
		<queue>
			<message arrival="22" deadline="infinity" sender="sensor">callSensor()</message>
		</queue>
		<now>20</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="hc_unit">
		<statevariables>
			<variable name="HC_Unit.heaterOn" type="boolean">false</variable>
			<variable name="HC_Unit.coolerOn" type="boolean">false</variable>
			<variable name="HC_Unit.currentRegulation" type="int">0</variable>
		</statevariables>
		<queue>
			<message arrival="25" deadline="infinity" sender="hc_unit">regulateTemp()</message>
		</queue>
		<now>20</now>
		<pc></pc>
		<res></res>
	</rebec>
</state>
<transition source="622_0" destination="632_0" executionTime="20" shift="0"> <messageserver sender="hc_unit" owner="room" title="SETREGULATION"/></transition>
<state id="633_0" atomicpropositions="" >
	<rebec name="room">
		<statevariables>
			<variable name="Room.currentTemp" type="int">22</variable>
			<variable name="Room.currentRegulation" type="int">0</variable>
			<variable name="Room.outside_air" type="int">-1</variable>
		</statevariables>
		<queue>
			<message arrival="20" deadline="infinity" sender="room">updateStatus()</message>
			<message arrival="20" deadline="infinity" sender="hc_unit">setRegulation(0)</message>
		</queue>
		<now>20</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="controller">
		<statevariables>
			<variable name="Controller.currentTemp" type="int">22</variable>
			<variable name="Controller.isHeating" type="boolean">false</variable>
			<variable name="Controller.isCooling" type="boolean">false</variable>
		</statevariables>
		<queue>
		</queue>
		<now>20</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="sensor">
		<statevariables>
		</statevariables>
		<queue>
			<message arrival="20" deadline="infinity" sender="room">setCurrent(22)</message>
			<message arrival="22" deadline="infinity" sender="sensor">callSensor()</message>
		</queue>
		<now>20</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="hc_unit">
		<statevariables>
			<variable name="HC_Unit.heaterOn" type="boolean">false</variable>
			<variable name="HC_Unit.coolerOn" type="boolean">false</variable>
			<variable name="HC_Unit.currentRegulation" type="int">0</variable>
		</statevariables>
		<queue>
			<message arrival="25" deadline="infinity" sender="hc_unit">regulateTemp()</message>
		</queue>
		<now>20</now>
		<pc></pc>
		<res></res>
	</rebec>
</state>
<transition source="622_0" destination="633_0" executionTime="20" shift="0"> <messageserver sender="sensor" owner="room" title="GETTEMP"/></transition>
<transition source="624_0" destination="225_0" executionTime="20" shift="10"> <messageserver sender="room" owner="room" title="UPDATESTATUS"/></transition>
<transition source="624_0" destination="224_0" executionTime="20" shift="10"> <messageserver sender="room" owner="room" title="UPDATESTATUS"/></transition>
<transition source="624_0" destination="226_0" executionTime="20" shift="10"> <messageserver sender="room" owner="room" title="UPDATESTATUS"/></transition>
<state id="634_0" atomicpropositions="" >
	<rebec name="room">
		<statevariables>
			<variable name="Room.currentTemp" type="int">21</variable>
			<variable name="Room.currentRegulation" type="int">0</variable>
			<variable name="Room.outside_air" type="int">0</variable>
		</statevariables>
		<queue>
			<message arrival="20" deadline="infinity" sender="room">updateStatus()</message>
		</queue>
		<now>20</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="controller">
		<statevariables>
			<variable name="Controller.currentTemp" type="int">21</variable>
			<variable name="Controller.isHeating" type="boolean">false</variable>
			<variable name="Controller.isCooling" type="boolean">false</variable>
		</statevariables>
		<queue>
		</queue>
		<now>20</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="sensor">
		<statevariables>
		</statevariables>
		<queue>
			<message arrival="20" deadline="infinity" sender="room">setCurrent(21)</message>
			<message arrival="22" deadline="infinity" sender="sensor">callSensor()</message>
		</queue>
		<now>20</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="hc_unit">
		<statevariables>
			<variable name="HC_Unit.heaterOn" type="boolean">false</variable>
			<variable name="HC_Unit.coolerOn" type="boolean">false</variable>
			<variable name="HC_Unit.currentRegulation" type="int">0</variable>
		</statevariables>
		<queue>
			<message arrival="25" deadline="infinity" sender="hc_unit">regulateTemp()</message>
		</queue>
		<now>20</now>
		<pc></pc>
		<res></res>
	</rebec>
</state>
<transition source="624_0" destination="634_0" executionTime="20" shift="0"> <messageserver sender="hc_unit" owner="room" title="SETREGULATION"/></transition>
<state id="635_0" atomicpropositions="" >
	<rebec name="room">
		<statevariables>
			<variable name="Room.currentTemp" type="int">21</variable>
			<variable name="Room.currentRegulation" type="int">0</variable>
			<variable name="Room.outside_air" type="int">0</variable>
		</statevariables>
		<queue>
			<message arrival="20" deadline="infinity" sender="room">updateStatus()</message>
			<message arrival="20" deadline="infinity" sender="hc_unit">setRegulation(0)</message>
		</queue>
		<now>20</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="controller">
		<statevariables>
			<variable name="Controller.currentTemp" type="int">21</variable>
			<variable name="Controller.isHeating" type="boolean">false</variable>
			<variable name="Controller.isCooling" type="boolean">false</variable>
		</statevariables>
		<queue>
			<message arrival="20" deadline="infinity" sender="sensor">setCurrent(21)</message>
		</queue>
		<now>20</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="sensor">
		<statevariables>
		</statevariables>
		<queue>
			<message arrival="22" deadline="infinity" sender="sensor">callSensor()</message>
		</queue>
		<now>20</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="hc_unit">
		<statevariables>
			<variable name="HC_Unit.heaterOn" type="boolean">false</variable>
			<variable name="HC_Unit.coolerOn" type="boolean">false</variable>
			<variable name="HC_Unit.currentRegulation" type="int">0</variable>
		</statevariables>
		<queue>
			<message arrival="25" deadline="infinity" sender="hc_unit">regulateTemp()</message>
		</queue>
		<now>20</now>
		<pc></pc>
		<res></res>
	</rebec>
</state>
<transition source="624_0" destination="635_0" executionTime="20" shift="0"> <messageserver sender="room" owner="sensor" title="SETCURRENT"/></transition>
<state id="636_0" atomicpropositions="isHeating," >
	<rebec name="room">
		<statevariables>
			<variable name="Room.currentTemp" type="int">20</variable>
			<variable name="Room.currentRegulation" type="int">1</variable>
			<variable name="Room.outside_air" type="int">1</variable>
		</statevariables>
		<queue>
			<message arrival="20" deadline="infinity" sender="sensor">getTemp()</message>
			<message arrival="30" deadline="infinity" sender="room">updateStatus()</message>
		</queue>
		<now>20</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="controller">
		<statevariables>
			<variable name="Controller.currentTemp" type="int">20</variable>
			<variable name="Controller.isHeating" type="boolean">true</variable>
			<variable name="Controller.isCooling" type="boolean">false</variable>
		</statevariables>
		<queue>
		</queue>
		<now>20</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="sensor">
		<statevariables>
		</statevariables>
		<queue>
			<message arrival="22" deadline="infinity" sender="sensor">callSensor()</message>
		</queue>
		<now>20</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="hc_unit">
		<statevariables>
			<variable name="HC_Unit.heaterOn" type="boolean">true</variable>
			<variable name="HC_Unit.coolerOn" type="boolean">false</variable>
			<variable name="HC_Unit.currentRegulation" type="int">1</variable>
		</statevariables>
		<queue>
			<message arrival="25" deadline="infinity" sender="hc_unit">regulateTemp()</message>
		</queue>
		<now>20</now>
		<pc></pc>
		<res></res>
	</rebec>
</state>
<transition source="626_0" destination="636_0" executionTime="20" shift="0"> <messageserver sender="hc_unit" owner="room" title="SETREGULATION"/></transition>
<state id="637_0" atomicpropositions="isHeating," >
	<rebec name="room">
		<statevariables>
			<variable name="Room.currentTemp" type="int">20</variable>
			<variable name="Room.currentRegulation" type="int">1</variable>
			<variable name="Room.outside_air" type="int">1</variable>
		</statevariables>
		<queue>
			<message arrival="20" deadline="infinity" sender="hc_unit">setRegulation(1)</message>
			<message arrival="30" deadline="infinity" sender="room">updateStatus()</message>
		</queue>
		<now>20</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="controller">
		<statevariables>
			<variable name="Controller.currentTemp" type="int">20</variable>
			<variable name="Controller.isHeating" type="boolean">true</variable>
			<variable name="Controller.isCooling" type="boolean">false</variable>
		</statevariables>
		<queue>
		</queue>
		<now>20</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="sensor">
		<statevariables>
		</statevariables>
		<queue>
			<message arrival="20" deadline="infinity" sender="room">setCurrent(20)</message>
			<message arrival="22" deadline="infinity" sender="sensor">callSensor()</message>
		</queue>
		<now>20</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="hc_unit">
		<statevariables>
			<variable name="HC_Unit.heaterOn" type="boolean">true</variable>
			<variable name="HC_Unit.coolerOn" type="boolean">false</variable>
			<variable name="HC_Unit.currentRegulation" type="int">1</variable>
		</statevariables>
		<queue>
			<message arrival="25" deadline="infinity" sender="hc_unit">regulateTemp()</message>
		</queue>
		<now>20</now>
		<pc></pc>
		<res></res>
	</rebec>
</state>
<transition source="626_0" destination="637_0" executionTime="20" shift="0"> <messageserver sender="sensor" owner="room" title="GETTEMP"/></transition>
<state id="638_0" atomicpropositions="isHeating," >
	<rebec name="room">
		<statevariables>
			<variable name="Room.currentTemp" type="int">22</variable>
			<variable name="Room.currentRegulation" type="int">1</variable>
			<variable name="Room.outside_air" type="int">-1</variable>
		</statevariables>
		<queue>
			<message arrival="20" deadline="infinity" sender="sensor">getTemp()</message>
			<message arrival="30" deadline="infinity" sender="room">updateStatus()</message>
		</queue>
		<now>20</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="controller">
		<statevariables>
			<variable name="Controller.currentTemp" type="int">20</variable>
			<variable name="Controller.isHeating" type="boolean">true</variable>
			<variable name="Controller.isCooling" type="boolean">false</variable>
		</statevariables>
		<queue>
		</queue>
		<now>20</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="sensor">
		<statevariables>
		</statevariables>
		<queue>
			<message arrival="22" deadline="infinity" sender="sensor">callSensor()</message>
		</queue>
		<now>20</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="hc_unit">
		<statevariables>
			<variable name="HC_Unit.heaterOn" type="boolean">true</variable>
			<variable name="HC_Unit.coolerOn" type="boolean">false</variable>
			<variable name="HC_Unit.currentRegulation" type="int">1</variable>
		</statevariables>
		<queue>
			<message arrival="25" deadline="infinity" sender="hc_unit">regulateTemp()</message>
		</queue>
		<now>20</now>
		<pc></pc>
		<res></res>
	</rebec>
</state>
<transition source="628_0" destination="638_0" executionTime="20" shift="0"> <messageserver sender="hc_unit" owner="room" title="SETREGULATION"/></transition>
<state id="639_0" atomicpropositions="isHeating," >
	<rebec name="room">
		<statevariables>
			<variable name="Room.currentTemp" type="int">22</variable>
			<variable name="Room.currentRegulation" type="int">1</variable>
			<variable name="Room.outside_air" type="int">-1</variable>
		</statevariables>
		<queue>
			<message arrival="20" deadline="infinity" sender="hc_unit">setRegulation(1)</message>
			<message arrival="30" deadline="infinity" sender="room">updateStatus()</message>
		</queue>
		<now>20</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="controller">
		<statevariables>
			<variable name="Controller.currentTemp" type="int">20</variable>
			<variable name="Controller.isHeating" type="boolean">true</variable>
			<variable name="Controller.isCooling" type="boolean">false</variable>
		</statevariables>
		<queue>
		</queue>
		<now>20</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="sensor">
		<statevariables>
		</statevariables>
		<queue>
			<message arrival="20" deadline="infinity" sender="room">setCurrent(22)</message>
			<message arrival="22" deadline="infinity" sender="sensor">callSensor()</message>
		</queue>
		<now>20</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="hc_unit">
		<statevariables>
			<variable name="HC_Unit.heaterOn" type="boolean">true</variable>
			<variable name="HC_Unit.coolerOn" type="boolean">false</variable>
			<variable name="HC_Unit.currentRegulation" type="int">1</variable>
		</statevariables>
		<queue>
			<message arrival="25" deadline="infinity" sender="hc_unit">regulateTemp()</message>
		</queue>
		<now>20</now>
		<pc></pc>
		<res></res>
	</rebec>
</state>
<transition source="628_0" destination="639_0" executionTime="20" shift="0"> <messageserver sender="sensor" owner="room" title="GETTEMP"/></transition>
<transition source="631_0" destination="637_0" executionTime="20" shift="0"> <messageserver sender="room" owner="room" title="UPDATESTATUS"/></transition>
<state id="640_0" atomicpropositions="isHeating," >
	<rebec name="room">
		<statevariables>
			<variable name="Room.currentTemp" type="int">21</variable>
			<variable name="Room.currentRegulation" type="int">1</variable>
			<variable name="Room.outside_air" type="int">0</variable>
		</statevariables>
		<queue>
			<message arrival="20" deadline="infinity" sender="hc_unit">setRegulation(1)</message>
			<message arrival="30" deadline="infinity" sender="room">updateStatus()</message>
		</queue>
		<now>20</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="controller">
		<statevariables>
			<variable name="Controller.currentTemp" type="int">20</variable>
			<variable name="Controller.isHeating" type="boolean">true</variable>
			<variable name="Controller.isCooling" type="boolean">false</variable>
		</statevariables>
		<queue>
		</queue>
		<now>20</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="sensor">
		<statevariables>
		</statevariables>
		<queue>
			<message arrival="20" deadline="infinity" sender="room">setCurrent(20)</message>
			<message arrival="22" deadline="infinity" sender="sensor">callSensor()</message>
		</queue>
		<now>20</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="hc_unit">
		<statevariables>
			<variable name="HC_Unit.heaterOn" type="boolean">true</variable>
			<variable name="HC_Unit.coolerOn" type="boolean">false</variable>
			<variable name="HC_Unit.currentRegulation" type="int">1</variable>
		</statevariables>
		<queue>
			<message arrival="25" deadline="infinity" sender="hc_unit">regulateTemp()</message>
		</queue>
		<now>20</now>
		<pc></pc>
		<res></res>
	</rebec>
</state>
<transition source="631_0" destination="640_0" executionTime="20" shift="0"> <messageserver sender="room" owner="room" title="UPDATESTATUS"/></transition>
<state id="641_0" atomicpropositions="isHeating," >
	<rebec name="room">
		<statevariables>
			<variable name="Room.currentTemp" type="int">22</variable>
			<variable name="Room.currentRegulation" type="int">1</variable>
			<variable name="Room.outside_air" type="int">-1</variable>
		</statevariables>
		<queue>
			<message arrival="20" deadline="infinity" sender="hc_unit">setRegulation(1)</message>
			<message arrival="30" deadline="infinity" sender="room">updateStatus()</message>
		</queue>
		<now>20</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="controller">
		<statevariables>
			<variable name="Controller.currentTemp" type="int">20</variable>
			<variable name="Controller.isHeating" type="boolean">true</variable>
			<variable name="Controller.isCooling" type="boolean">false</variable>
		</statevariables>
		<queue>
		</queue>
		<now>20</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="sensor">
		<statevariables>
		</statevariables>
		<queue>
			<message arrival="20" deadline="infinity" sender="room">setCurrent(20)</message>
			<message arrival="22" deadline="infinity" sender="sensor">callSensor()</message>
		</queue>
		<now>20</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="hc_unit">
		<statevariables>
			<variable name="HC_Unit.heaterOn" type="boolean">true</variable>
			<variable name="HC_Unit.coolerOn" type="boolean">false</variable>
			<variable name="HC_Unit.currentRegulation" type="int">1</variable>
		</statevariables>
		<queue>
			<message arrival="25" deadline="infinity" sender="hc_unit">regulateTemp()</message>
		</queue>
		<now>20</now>
		<pc></pc>
		<res></res>
	</rebec>
</state>
<transition source="631_0" destination="641_0" executionTime="20" shift="0"> <messageserver sender="room" owner="room" title="UPDATESTATUS"/></transition>
<state id="642_0" atomicpropositions="isHeating," >
	<rebec name="room">
		<statevariables>
			<variable name="Room.currentTemp" type="int">20</variable>
			<variable name="Room.currentRegulation" type="int">1</variable>
			<variable name="Room.outside_air" type="int">1</variable>
		</statevariables>
		<queue>
			<message arrival="20" deadline="infinity" sender="room">updateStatus()</message>
		</queue>
		<now>20</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="controller">
		<statevariables>
			<variable name="Controller.currentTemp" type="int">20</variable>
			<variable name="Controller.isHeating" type="boolean">true</variable>
			<variable name="Controller.isCooling" type="boolean">false</variable>
		</statevariables>
		<queue>
		</queue>
		<now>20</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="sensor">
		<statevariables>
		</statevariables>
		<queue>
			<message arrival="20" deadline="infinity" sender="room">setCurrent(20)</message>
			<message arrival="22" deadline="infinity" sender="sensor">callSensor()</message>
		</queue>
		<now>20</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="hc_unit">
		<statevariables>
			<variable name="HC_Unit.heaterOn" type="boolean">true</variable>
			<variable name="HC_Unit.coolerOn" type="boolean">false</variable>
			<variable name="HC_Unit.currentRegulation" type="int">1</variable>
		</statevariables>
		<queue>
			<message arrival="25" deadline="infinity" sender="hc_unit">regulateTemp()</message>
		</queue>
		<now>20</now>
		<pc></pc>
		<res></res>
	</rebec>
</state>
<transition source="631_0" destination="642_0" executionTime="20" shift="0"> <messageserver sender="hc_unit" owner="room" title="SETREGULATION"/></transition>
<state id="643_0" atomicpropositions="isHeating," >
	<rebec name="room">
		<statevariables>
			<variable name="Room.currentTemp" type="int">20</variable>
			<variable name="Room.currentRegulation" type="int">1</variable>
			<variable name="Room.outside_air" type="int">1</variable>
		</statevariables>
		<queue>
			<message arrival="20" deadline="infinity" sender="room">updateStatus()</message>
			<message arrival="20" deadline="infinity" sender="hc_unit">setRegulation(1)</message>
		</queue>
		<now>20</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="controller">
		<statevariables>
			<variable name="Controller.currentTemp" type="int">20</variable>
			<variable name="Controller.isHeating" type="boolean">true</variable>
			<variable name="Controller.isCooling" type="boolean">false</variable>
		</statevariables>
		<queue>
			<message arrival="20" deadline="infinity" sender="sensor">setCurrent(20)</message>
		</queue>
		<now>20</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="sensor">
		<statevariables>
		</statevariables>
		<queue>
			<message arrival="22" deadline="infinity" sender="sensor">callSensor()</message>
		</queue>
		<now>20</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="hc_unit">
		<statevariables>
			<variable name="HC_Unit.heaterOn" type="boolean">true</variable>
			<variable name="HC_Unit.coolerOn" type="boolean">false</variable>
			<variable name="HC_Unit.currentRegulation" type="int">1</variable>
		</statevariables>
		<queue>
			<message arrival="25" deadline="infinity" sender="hc_unit">regulateTemp()</message>
		</queue>
		<now>20</now>
		<pc></pc>
		<res></res>
	</rebec>
</state>
<transition source="631_0" destination="643_0" executionTime="20" shift="0"> <messageserver sender="room" owner="sensor" title="SETCURRENT"/></transition>
<transition source="633_0" destination="28_0" executionTime="20" shift="20"> <messageserver sender="room" owner="room" title="UPDATESTATUS"/></transition>
<transition source="633_0" destination="27_0" executionTime="20" shift="20"> <messageserver sender="room" owner="room" title="UPDATESTATUS"/></transition>
<transition source="633_0" destination="29_0" executionTime="20" shift="20"> <messageserver sender="room" owner="room" title="UPDATESTATUS"/></transition>
<state id="644_0" atomicpropositions="" >
	<rebec name="room">
		<statevariables>
			<variable name="Room.currentTemp" type="int">22</variable>
			<variable name="Room.currentRegulation" type="int">0</variable>
			<variable name="Room.outside_air" type="int">-1</variable>
		</statevariables>
		<queue>
			<message arrival="20" deadline="infinity" sender="room">updateStatus()</message>
		</queue>
		<now>20</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="controller">
		<statevariables>
			<variable name="Controller.currentTemp" type="int">22</variable>
			<variable name="Controller.isHeating" type="boolean">false</variable>
			<variable name="Controller.isCooling" type="boolean">false</variable>
		</statevariables>
		<queue>
		</queue>
		<now>20</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="sensor">
		<statevariables>
		</statevariables>
		<queue>
			<message arrival="20" deadline="infinity" sender="room">setCurrent(22)</message>
			<message arrival="22" deadline="infinity" sender="sensor">callSensor()</message>
		</queue>
		<now>20</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="hc_unit">
		<statevariables>
			<variable name="HC_Unit.heaterOn" type="boolean">false</variable>
			<variable name="HC_Unit.coolerOn" type="boolean">false</variable>
			<variable name="HC_Unit.currentRegulation" type="int">0</variable>
		</statevariables>
		<queue>
			<message arrival="25" deadline="infinity" sender="hc_unit">regulateTemp()</message>
		</queue>
		<now>20</now>
		<pc></pc>
		<res></res>
	</rebec>
</state>
<transition source="633_0" destination="644_0" executionTime="20" shift="0"> <messageserver sender="hc_unit" owner="room" title="SETREGULATION"/></transition>
<state id="645_0" atomicpropositions="" >
	<rebec name="room">
		<statevariables>
			<variable name="Room.currentTemp" type="int">22</variable>
			<variable name="Room.currentRegulation" type="int">0</variable>
			<variable name="Room.outside_air" type="int">-1</variable>
		</statevariables>
		<queue>
			<message arrival="20" deadline="infinity" sender="room">updateStatus()</message>
			<message arrival="20" deadline="infinity" sender="hc_unit">setRegulation(0)</message>
		</queue>
		<now>20</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="controller">
		<statevariables>
			<variable name="Controller.currentTemp" type="int">22</variable>
			<variable name="Controller.isHeating" type="boolean">false</variable>
			<variable name="Controller.isCooling" type="boolean">false</variable>
		</statevariables>
		<queue>
			<message arrival="20" deadline="infinity" sender="sensor">setCurrent(22)</message>
		</queue>
		<now>20</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="sensor">
		<statevariables>
		</statevariables>
		<queue>
			<message arrival="22" deadline="infinity" sender="sensor">callSensor()</message>
		</queue>
		<now>20</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="hc_unit">
		<statevariables>
			<variable name="HC_Unit.heaterOn" type="boolean">false</variable>
			<variable name="HC_Unit.coolerOn" type="boolean">false</variable>
			<variable name="HC_Unit.currentRegulation" type="int">0</variable>
		</statevariables>
		<queue>
			<message arrival="25" deadline="infinity" sender="hc_unit">regulateTemp()</message>
		</queue>
		<now>20</now>
		<pc></pc>
		<res></res>
	</rebec>
</state>
<transition source="633_0" destination="645_0" executionTime="20" shift="0"> <messageserver sender="room" owner="sensor" title="SETCURRENT"/></transition>
<transition source="635_0" destination="239_0" executionTime="20" shift="10"> <messageserver sender="room" owner="room" title="UPDATESTATUS"/></transition>
<transition source="635_0" destination="238_0" executionTime="20" shift="10"> <messageserver sender="room" owner="room" title="UPDATESTATUS"/></transition>
<transition source="635_0" destination="240_0" executionTime="20" shift="10"> <messageserver sender="room" owner="room" title="UPDATESTATUS"/></transition>
<state id="646_0" atomicpropositions="" >
	<rebec name="room">
		<statevariables>
			<variable name="Room.currentTemp" type="int">21</variable>
			<variable name="Room.currentRegulation" type="int">0</variable>
			<variable name="Room.outside_air" type="int">0</variable>
		</statevariables>
		<queue>
			<message arrival="20" deadline="infinity" sender="room">updateStatus()</message>
		</queue>
		<now>20</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="controller">
		<statevariables>
			<variable name="Controller.currentTemp" type="int">21</variable>
			<variable name="Controller.isHeating" type="boolean">false</variable>
			<variable name="Controller.isCooling" type="boolean">false</variable>
		</statevariables>
		<queue>
			<message arrival="20" deadline="infinity" sender="sensor">setCurrent(21)</message>
		</queue>
		<now>20</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="sensor">
		<statevariables>
		</statevariables>
		<queue>
			<message arrival="22" deadline="infinity" sender="sensor">callSensor()</message>
		</queue>
		<now>20</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="hc_unit">
		<statevariables>
			<variable name="HC_Unit.heaterOn" type="boolean">false</variable>
			<variable name="HC_Unit.coolerOn" type="boolean">false</variable>
			<variable name="HC_Unit.currentRegulation" type="int">0</variable>
		</statevariables>
		<queue>
			<message arrival="25" deadline="infinity" sender="hc_unit">regulateTemp()</message>
		</queue>
		<now>20</now>
		<pc></pc>
		<res></res>
	</rebec>
</state>
<transition source="635_0" destination="646_0" executionTime="20" shift="0"> <messageserver sender="hc_unit" owner="room" title="SETREGULATION"/></transition>
<state id="647_0" atomicpropositions="" >
	<rebec name="room">
		<statevariables>
			<variable name="Room.currentTemp" type="int">21</variable>
			<variable name="Room.currentRegulation" type="int">0</variable>
			<variable name="Room.outside_air" type="int">0</variable>
		</statevariables>
		<queue>
			<message arrival="20" deadline="infinity" sender="room">updateStatus()</message>
			<message arrival="20" deadline="infinity" sender="hc_unit">setRegulation(0)</message>
		</queue>
		<now>20</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="controller">
		<statevariables>
			<variable name="Controller.currentTemp" type="int">21</variable>
			<variable name="Controller.isHeating" type="boolean">false</variable>
			<variable name="Controller.isCooling" type="boolean">false</variable>
		</statevariables>
		<queue>
			<message arrival="20" deadline="infinity" sender="controller">updateOutput()</message>
		</queue>
		<now>20</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="sensor">
		<statevariables>
		</statevariables>
		<queue>
			<message arrival="22" deadline="infinity" sender="sensor">callSensor()</message>
		</queue>
		<now>20</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="hc_unit">
		<statevariables>
			<variable name="HC_Unit.heaterOn" type="boolean">false</variable>
			<variable name="HC_Unit.coolerOn" type="boolean">false</variable>
			<variable name="HC_Unit.currentRegulation" type="int">0</variable>
		</statevariables>
		<queue>
			<message arrival="25" deadline="infinity" sender="hc_unit">regulateTemp()</message>
		</queue>
		<now>20</now>
		<pc></pc>
		<res></res>
	</rebec>
</state>
<transition source="635_0" destination="647_0" executionTime="20" shift="0"> <messageserver sender="sensor" owner="controller" title="SETCURRENT"/></transition>
<state id="648_0" atomicpropositions="isHeating," >
	<rebec name="room">
		<statevariables>
			<variable name="Room.currentTemp" type="int">20</variable>
			<variable name="Room.currentRegulation" type="int">1</variable>
			<variable name="Room.outside_air" type="int">1</variable>
		</statevariables>
		<queue>
			<message arrival="30" deadline="infinity" sender="room">updateStatus()</message>
		</queue>
		<now>20</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="controller">
		<statevariables>
			<variable name="Controller.currentTemp" type="int">20</variable>
			<variable name="Controller.isHeating" type="boolean">true</variable>
			<variable name="Controller.isCooling" type="boolean">false</variable>
		</statevariables>
		<queue>
		</queue>
		<now>20</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="sensor">
		<statevariables>
		</statevariables>
		<queue>
			<message arrival="20" deadline="infinity" sender="room">setCurrent(20)</message>
			<message arrival="22" deadline="infinity" sender="sensor">callSensor()</message>
		</queue>
		<now>20</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="hc_unit">
		<statevariables>
			<variable name="HC_Unit.heaterOn" type="boolean">true</variable>
			<variable name="HC_Unit.coolerOn" type="boolean">false</variable>
			<variable name="HC_Unit.currentRegulation" type="int">1</variable>
		</statevariables>
		<queue>
			<message arrival="25" deadline="infinity" sender="hc_unit">regulateTemp()</message>
		</queue>
		<now>20</now>
		<pc></pc>
		<res></res>
	</rebec>
</state>
<transition source="637_0" destination="648_0" executionTime="20" shift="0"> <messageserver sender="hc_unit" owner="room" title="SETREGULATION"/></transition>
<state id="649_0" atomicpropositions="isHeating," >
	<rebec name="room">
		<statevariables>
			<variable name="Room.currentTemp" type="int">20</variable>
			<variable name="Room.currentRegulation" type="int">1</variable>
			<variable name="Room.outside_air" type="int">1</variable>
		</statevariables>
		<queue>
			<message arrival="20" deadline="infinity" sender="hc_unit">setRegulation(1)</message>
			<message arrival="30" deadline="infinity" sender="room">updateStatus()</message>
		</queue>
		<now>20</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="controller">
		<statevariables>
			<variable name="Controller.currentTemp" type="int">20</variable>
			<variable name="Controller.isHeating" type="boolean">true</variable>
			<variable name="Controller.isCooling" type="boolean">false</variable>
		</statevariables>
		<queue>
			<message arrival="20" deadline="infinity" sender="sensor">setCurrent(20)</message>
		</queue>
		<now>20</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="sensor">
		<statevariables>
		</statevariables>
		<queue>
			<message arrival="22" deadline="infinity" sender="sensor">callSensor()</message>
		</queue>
		<now>20</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="hc_unit">
		<statevariables>
			<variable name="HC_Unit.heaterOn" type="boolean">true</variable>
			<variable name="HC_Unit.coolerOn" type="boolean">false</variable>
			<variable name="HC_Unit.currentRegulation" type="int">1</variable>
		</statevariables>
		<queue>
			<message arrival="25" deadline="infinity" sender="hc_unit">regulateTemp()</message>
		</queue>
		<now>20</now>
		<pc></pc>
		<res></res>
	</rebec>
</state>
<transition source="637_0" destination="649_0" executionTime="20" shift="0"> <messageserver sender="room" owner="sensor" title="SETCURRENT"/></transition>
<state id="650_0" atomicpropositions="isHeating," >
	<rebec name="room">
		<statevariables>
			<variable name="Room.currentTemp" type="int">22</variable>
			<variable name="Room.currentRegulation" type="int">1</variable>
			<variable name="Room.outside_air" type="int">-1</variable>
		</statevariables>
		<queue>
			<message arrival="30" deadline="infinity" sender="room">updateStatus()</message>
		</queue>
		<now>20</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="controller">
		<statevariables>
			<variable name="Controller.currentTemp" type="int">20</variable>
			<variable name="Controller.isHeating" type="boolean">true</variable>
			<variable name="Controller.isCooling" type="boolean">false</variable>
		</statevariables>
		<queue>
		</queue>
		<now>20</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="sensor">
		<statevariables>
		</statevariables>
		<queue>
			<message arrival="20" deadline="infinity" sender="room">setCurrent(22)</message>
			<message arrival="22" deadline="infinity" sender="sensor">callSensor()</message>
		</queue>
		<now>20</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="hc_unit">
		<statevariables>
			<variable name="HC_Unit.heaterOn" type="boolean">true</variable>
			<variable name="HC_Unit.coolerOn" type="boolean">false</variable>
			<variable name="HC_Unit.currentRegulation" type="int">1</variable>
		</statevariables>
		<queue>
			<message arrival="25" deadline="infinity" sender="hc_unit">regulateTemp()</message>
		</queue>
		<now>20</now>
		<pc></pc>
		<res></res>
	</rebec>
</state>
<transition source="639_0" destination="650_0" executionTime="20" shift="0"> <messageserver sender="hc_unit" owner="room" title="SETREGULATION"/></transition>
<state id="651_0" atomicpropositions="isHeating," >
	<rebec name="room">
		<statevariables>
			<variable name="Room.currentTemp" type="int">22</variable>
			<variable name="Room.currentRegulation" type="int">1</variable>
			<variable name="Room.outside_air" type="int">-1</variable>
		</statevariables>
		<queue>
			<message arrival="20" deadline="infinity" sender="hc_unit">setRegulation(1)</message>
			<message arrival="30" deadline="infinity" sender="room">updateStatus()</message>
		</queue>
		<now>20</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="controller">
		<statevariables>
			<variable name="Controller.currentTemp" type="int">20</variable>
			<variable name="Controller.isHeating" type="boolean">true</variable>
			<variable name="Controller.isCooling" type="boolean">false</variable>
		</statevariables>
		<queue>
			<message arrival="20" deadline="infinity" sender="sensor">setCurrent(22)</message>
		</queue>
		<now>20</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="sensor">
		<statevariables>
		</statevariables>
		<queue>
			<message arrival="22" deadline="infinity" sender="sensor">callSensor()</message>
		</queue>
		<now>20</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="hc_unit">
		<statevariables>
			<variable name="HC_Unit.heaterOn" type="boolean">true</variable>
			<variable name="HC_Unit.coolerOn" type="boolean">false</variable>
			<variable name="HC_Unit.currentRegulation" type="int">1</variable>
		</statevariables>
		<queue>
			<message arrival="25" deadline="infinity" sender="hc_unit">regulateTemp()</message>
		</queue>
		<now>20</now>
		<pc></pc>
		<res></res>
	</rebec>
</state>
<transition source="639_0" destination="651_0" executionTime="20" shift="0"> <messageserver sender="room" owner="sensor" title="SETCURRENT"/></transition>
<transition source="643_0" destination="649_0" executionTime="20" shift="0"> <messageserver sender="room" owner="room" title="UPDATESTATUS"/></transition>
<state id="652_0" atomicpropositions="isHeating," >
	<rebec name="room">
		<statevariables>
			<variable name="Room.currentTemp" type="int">21</variable>
			<variable name="Room.currentRegulation" type="int">1</variable>
			<variable name="Room.outside_air" type="int">0</variable>
		</statevariables>
		<queue>
			<message arrival="20" deadline="infinity" sender="hc_unit">setRegulation(1)</message>
			<message arrival="30" deadline="infinity" sender="room">updateStatus()</message>
		</queue>
		<now>20</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="controller">
		<statevariables>
			<variable name="Controller.currentTemp" type="int">20</variable>
			<variable name="Controller.isHeating" type="boolean">true</variable>
			<variable name="Controller.isCooling" type="boolean">false</variable>
		</statevariables>
		<queue>
			<message arrival="20" deadline="infinity" sender="sensor">setCurrent(20)</message>
		</queue>
		<now>20</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="sensor">
		<statevariables>
		</statevariables>
		<queue>
			<message arrival="22" deadline="infinity" sender="sensor">callSensor()</message>
		</queue>
		<now>20</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="hc_unit">
		<statevariables>
			<variable name="HC_Unit.heaterOn" type="boolean">true</variable>
			<variable name="HC_Unit.coolerOn" type="boolean">false</variable>
			<variable name="HC_Unit.currentRegulation" type="int">1</variable>
		</statevariables>
		<queue>
			<message arrival="25" deadline="infinity" sender="hc_unit">regulateTemp()</message>
		</queue>
		<now>20</now>
		<pc></pc>
		<res></res>
	</rebec>
</state>
<transition source="643_0" destination="652_0" executionTime="20" shift="0"> <messageserver sender="room" owner="room" title="UPDATESTATUS"/></transition>
<state id="653_0" atomicpropositions="isHeating," >
	<rebec name="room">
		<statevariables>
			<variable name="Room.currentTemp" type="int">22</variable>
			<variable name="Room.currentRegulation" type="int">1</variable>
			<variable name="Room.outside_air" type="int">-1</variable>
		</statevariables>
		<queue>
			<message arrival="20" deadline="infinity" sender="hc_unit">setRegulation(1)</message>
			<message arrival="30" deadline="infinity" sender="room">updateStatus()</message>
		</queue>
		<now>20</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="controller">
		<statevariables>
			<variable name="Controller.currentTemp" type="int">20</variable>
			<variable name="Controller.isHeating" type="boolean">true</variable>
			<variable name="Controller.isCooling" type="boolean">false</variable>
		</statevariables>
		<queue>
			<message arrival="20" deadline="infinity" sender="sensor">setCurrent(20)</message>
		</queue>
		<now>20</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="sensor">
		<statevariables>
		</statevariables>
		<queue>
			<message arrival="22" deadline="infinity" sender="sensor">callSensor()</message>
		</queue>
		<now>20</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="hc_unit">
		<statevariables>
			<variable name="HC_Unit.heaterOn" type="boolean">true</variable>
			<variable name="HC_Unit.coolerOn" type="boolean">false</variable>
			<variable name="HC_Unit.currentRegulation" type="int">1</variable>
		</statevariables>
		<queue>
			<message arrival="25" deadline="infinity" sender="hc_unit">regulateTemp()</message>
		</queue>
		<now>20</now>
		<pc></pc>
		<res></res>
	</rebec>
</state>
<transition source="643_0" destination="653_0" executionTime="20" shift="0"> <messageserver sender="room" owner="room" title="UPDATESTATUS"/></transition>
<state id="654_0" atomicpropositions="isHeating," >
	<rebec name="room">
		<statevariables>
			<variable name="Room.currentTemp" type="int">20</variable>
			<variable name="Room.currentRegulation" type="int">1</variable>
			<variable name="Room.outside_air" type="int">1</variable>
		</statevariables>
		<queue>
			<message arrival="20" deadline="infinity" sender="room">updateStatus()</message>
		</queue>
		<now>20</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="controller">
		<statevariables>
			<variable name="Controller.currentTemp" type="int">20</variable>
			<variable name="Controller.isHeating" type="boolean">true</variable>
			<variable name="Controller.isCooling" type="boolean">false</variable>
		</statevariables>
		<queue>
			<message arrival="20" deadline="infinity" sender="sensor">setCurrent(20)</message>
		</queue>
		<now>20</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="sensor">
		<statevariables>
		</statevariables>
		<queue>
			<message arrival="22" deadline="infinity" sender="sensor">callSensor()</message>
		</queue>
		<now>20</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="hc_unit">
		<statevariables>
			<variable name="HC_Unit.heaterOn" type="boolean">true</variable>
			<variable name="HC_Unit.coolerOn" type="boolean">false</variable>
			<variable name="HC_Unit.currentRegulation" type="int">1</variable>
		</statevariables>
		<queue>
			<message arrival="25" deadline="infinity" sender="hc_unit">regulateTemp()</message>
		</queue>
		<now>20</now>
		<pc></pc>
		<res></res>
	</rebec>
</state>
<transition source="643_0" destination="654_0" executionTime="20" shift="0"> <messageserver sender="hc_unit" owner="room" title="SETREGULATION"/></transition>
<state id="655_0" atomicpropositions="isHeating," >
	<rebec name="room">
		<statevariables>
			<variable name="Room.currentTemp" type="int">20</variable>
			<variable name="Room.currentRegulation" type="int">1</variable>
			<variable name="Room.outside_air" type="int">1</variable>
		</statevariables>
		<queue>
			<message arrival="20" deadline="infinity" sender="room">updateStatus()</message>
			<message arrival="20" deadline="infinity" sender="hc_unit">setRegulation(1)</message>
		</queue>
		<now>20</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="controller">
		<statevariables>
			<variable name="Controller.currentTemp" type="int">20</variable>
			<variable name="Controller.isHeating" type="boolean">true</variable>
			<variable name="Controller.isCooling" type="boolean">false</variable>
		</statevariables>
		<queue>
			<message arrival="20" deadline="infinity" sender="controller">updateOutput()</message>
		</queue>
		<now>20</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="sensor">
		<statevariables>
		</statevariables>
		<queue>
			<message arrival="22" deadline="infinity" sender="sensor">callSensor()</message>
		</queue>
		<now>20</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="hc_unit">
		<statevariables>
			<variable name="HC_Unit.heaterOn" type="boolean">true</variable>
			<variable name="HC_Unit.coolerOn" type="boolean">false</variable>
			<variable name="HC_Unit.currentRegulation" type="int">1</variable>
		</statevariables>
		<queue>
			<message arrival="25" deadline="infinity" sender="hc_unit">regulateTemp()</message>
		</queue>
		<now>20</now>
		<pc></pc>
		<res></res>
	</rebec>
</state>
<transition source="643_0" destination="655_0" executionTime="20" shift="0"> <messageserver sender="sensor" owner="controller" title="SETCURRENT"/></transition>
<transition source="644_0" destination="76_0" executionTime="20" shift="20"> <messageserver sender="room" owner="room" title="UPDATESTATUS"/></transition>
<transition source="644_0" destination="35_0" executionTime="20" shift="20"> <messageserver sender="room" owner="room" title="UPDATESTATUS"/></transition>
<transition source="644_0" destination="77_0" executionTime="20" shift="20"> <messageserver sender="room" owner="room" title="UPDATESTATUS"/></transition>
<state id="656_0" atomicpropositions="" >
	<rebec name="room">
		<statevariables>
			<variable name="Room.currentTemp" type="int">22</variable>
			<variable name="Room.currentRegulation" type="int">0</variable>
			<variable name="Room.outside_air" type="int">-1</variable>
		</statevariables>
		<queue>
			<message arrival="20" deadline="infinity" sender="room">updateStatus()</message>
		</queue>
		<now>20</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="controller">
		<statevariables>
			<variable name="Controller.currentTemp" type="int">22</variable>
			<variable name="Controller.isHeating" type="boolean">false</variable>
			<variable name="Controller.isCooling" type="boolean">false</variable>
		</statevariables>
		<queue>
			<message arrival="20" deadline="infinity" sender="sensor">setCurrent(22)</message>
		</queue>
		<now>20</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="sensor">
		<statevariables>
		</statevariables>
		<queue>
			<message arrival="22" deadline="infinity" sender="sensor">callSensor()</message>
		</queue>
		<now>20</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="hc_unit">
		<statevariables>
			<variable name="HC_Unit.heaterOn" type="boolean">false</variable>
			<variable name="HC_Unit.coolerOn" type="boolean">false</variable>
			<variable name="HC_Unit.currentRegulation" type="int">0</variable>
		</statevariables>
		<queue>
			<message arrival="25" deadline="infinity" sender="hc_unit">regulateTemp()</message>
		</queue>
		<now>20</now>
		<pc></pc>
		<res></res>
	</rebec>
</state>
<transition source="644_0" destination="656_0" executionTime="20" shift="0"> <messageserver sender="room" owner="sensor" title="SETCURRENT"/></transition>
<transition source="646_0" destination="294_0" executionTime="20" shift="10"> <messageserver sender="room" owner="room" title="UPDATESTATUS"/></transition>
<transition source="646_0" destination="251_0" executionTime="20" shift="10"> <messageserver sender="room" owner="room" title="UPDATESTATUS"/></transition>
<transition source="646_0" destination="295_0" executionTime="20" shift="10"> <messageserver sender="room" owner="room" title="UPDATESTATUS"/></transition>
<state id="657_0" atomicpropositions="" >
	<rebec name="room">
		<statevariables>
			<variable name="Room.currentTemp" type="int">21</variable>
			<variable name="Room.currentRegulation" type="int">0</variable>
			<variable name="Room.outside_air" type="int">0</variable>
		</statevariables>
		<queue>
			<message arrival="20" deadline="infinity" sender="room">updateStatus()</message>
		</queue>
		<now>20</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="controller">
		<statevariables>
			<variable name="Controller.currentTemp" type="int">21</variable>
			<variable name="Controller.isHeating" type="boolean">false</variable>
			<variable name="Controller.isCooling" type="boolean">false</variable>
		</statevariables>
		<queue>
			<message arrival="20" deadline="infinity" sender="controller">updateOutput()</message>
		</queue>
		<now>20</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="sensor">
		<statevariables>
		</statevariables>
		<queue>
			<message arrival="22" deadline="infinity" sender="sensor">callSensor()</message>
		</queue>
		<now>20</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="hc_unit">
		<statevariables>
			<variable name="HC_Unit.heaterOn" type="boolean">false</variable>
			<variable name="HC_Unit.coolerOn" type="boolean">false</variable>
			<variable name="HC_Unit.currentRegulation" type="int">0</variable>
		</statevariables>
		<queue>
			<message arrival="25" deadline="infinity" sender="hc_unit">regulateTemp()</message>
		</queue>
		<now>20</now>
		<pc></pc>
		<res></res>
	</rebec>
</state>
<transition source="646_0" destination="657_0" executionTime="20" shift="0"> <messageserver sender="sensor" owner="controller" title="SETCURRENT"/></transition>
<transition source="647_0" destination="253_0" executionTime="20" shift="10"> <messageserver sender="room" owner="room" title="UPDATESTATUS"/></transition>
<transition source="647_0" destination="252_0" executionTime="20" shift="10"> <messageserver sender="room" owner="room" title="UPDATESTATUS"/></transition>
<transition source="647_0" destination="254_0" executionTime="20" shift="10"> <messageserver sender="room" owner="room" title="UPDATESTATUS"/></transition>
<transition source="647_0" destination="657_0" executionTime="20" shift="0"> <messageserver sender="hc_unit" owner="room" title="SETREGULATION"/></transition>
<state id="658_0" atomicpropositions="" >
	<rebec name="room">
		<statevariables>
			<variable name="Room.currentTemp" type="int">21</variable>
			<variable name="Room.currentRegulation" type="int">0</variable>
			<variable name="Room.outside_air" type="int">0</variable>
		</statevariables>
		<queue>
			<message arrival="20" deadline="infinity" sender="room">updateStatus()</message>
			<message arrival="20" deadline="infinity" sender="hc_unit">setRegulation(0)</message>
		</queue>
		<now>20</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="controller">
		<statevariables>
			<variable name="Controller.currentTemp" type="int">21</variable>
			<variable name="Controller.isHeating" type="boolean">false</variable>
			<variable name="Controller.isCooling" type="boolean">false</variable>
		</statevariables>
		<queue>
		</queue>
		<now>20</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="sensor">
		<statevariables>
		</statevariables>
		<queue>
			<message arrival="22" deadline="infinity" sender="sensor">callSensor()</message>
		</queue>
		<now>20</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="hc_unit">
		<statevariables>
			<variable name="HC_Unit.heaterOn" type="boolean">false</variable>
			<variable name="HC_Unit.coolerOn" type="boolean">false</variable>
			<variable name="HC_Unit.currentRegulation" type="int">0</variable>
		</statevariables>
		<queue>
			<message arrival="25" deadline="infinity" sender="hc_unit">regulateTemp()</message>
		</queue>
		<now>20</now>
		<pc></pc>
		<res></res>
	</rebec>
</state>
<transition source="647_0" destination="658_0" executionTime="20" shift="0"> <messageserver sender="controller" owner="controller" title="UPDATEOUTPUT"/></transition>
<state id="659_0" atomicpropositions="isHeating," >
	<rebec name="room">
		<statevariables>
			<variable name="Room.currentTemp" type="int">20</variable>
			<variable name="Room.currentRegulation" type="int">1</variable>
			<variable name="Room.outside_air" type="int">1</variable>
		</statevariables>
		<queue>
			<message arrival="30" deadline="infinity" sender="room">updateStatus()</message>
		</queue>
		<now>20</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="controller">
		<statevariables>
			<variable name="Controller.currentTemp" type="int">20</variable>
			<variable name="Controller.isHeating" type="boolean">true</variable>
			<variable name="Controller.isCooling" type="boolean">false</variable>
		</statevariables>
		<queue>
			<message arrival="20" deadline="infinity" sender="sensor">setCurrent(20)</message>
		</queue>
		<now>20</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="sensor">
		<statevariables>
		</statevariables>
		<queue>
			<message arrival="22" deadline="infinity" sender="sensor">callSensor()</message>
		</queue>
		<now>20</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="hc_unit">
		<statevariables>
			<variable name="HC_Unit.heaterOn" type="boolean">true</variable>
			<variable name="HC_Unit.coolerOn" type="boolean">false</variable>
			<variable name="HC_Unit.currentRegulation" type="int">1</variable>
		</statevariables>
		<queue>
			<message arrival="25" deadline="infinity" sender="hc_unit">regulateTemp()</message>
		</queue>
		<now>20</now>
		<pc></pc>
		<res></res>
	</rebec>
</state>
<transition source="649_0" destination="659_0" executionTime="20" shift="0"> <messageserver sender="hc_unit" owner="room" title="SETREGULATION"/></transition>
<state id="660_0" atomicpropositions="isHeating," >
	<rebec name="room">
		<statevariables>
			<variable name="Room.currentTemp" type="int">20</variable>
			<variable name="Room.currentRegulation" type="int">1</variable>
			<variable name="Room.outside_air" type="int">1</variable>
		</statevariables>
		<queue>
			<message arrival="20" deadline="infinity" sender="hc_unit">setRegulation(1)</message>
			<message arrival="30" deadline="infinity" sender="room">updateStatus()</message>
		</queue>
		<now>20</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="controller">
		<statevariables>
			<variable name="Controller.currentTemp" type="int">20</variable>
			<variable name="Controller.isHeating" type="boolean">true</variable>
			<variable name="Controller.isCooling" type="boolean">false</variable>
		</statevariables>
		<queue>
			<message arrival="20" deadline="infinity" sender="controller">updateOutput()</message>
		</queue>
		<now>20</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="sensor">
		<statevariables>
		</statevariables>
		<queue>
			<message arrival="22" deadline="infinity" sender="sensor">callSensor()</message>
		</queue>
		<now>20</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="hc_unit">
		<statevariables>
			<variable name="HC_Unit.heaterOn" type="boolean">true</variable>
			<variable name="HC_Unit.coolerOn" type="boolean">false</variable>
			<variable name="HC_Unit.currentRegulation" type="int">1</variable>
		</statevariables>
		<queue>
			<message arrival="25" deadline="infinity" sender="hc_unit">regulateTemp()</message>
		</queue>
		<now>20</now>
		<pc></pc>
		<res></res>
	</rebec>
</state>
<transition source="649_0" destination="660_0" executionTime="20" shift="0"> <messageserver sender="sensor" owner="controller" title="SETCURRENT"/></transition>
<state id="661_0" atomicpropositions="isHeating," >
	<rebec name="room">
		<statevariables>
			<variable name="Room.currentTemp" type="int">22</variable>
			<variable name="Room.currentRegulation" type="int">1</variable>
			<variable name="Room.outside_air" type="int">-1</variable>
		</statevariables>
		<queue>
			<message arrival="30" deadline="infinity" sender="room">updateStatus()</message>
		</queue>
		<now>20</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="controller">
		<statevariables>
			<variable name="Controller.currentTemp" type="int">20</variable>
			<variable name="Controller.isHeating" type="boolean">true</variable>
			<variable name="Controller.isCooling" type="boolean">false</variable>
		</statevariables>
		<queue>
			<message arrival="20" deadline="infinity" sender="sensor">setCurrent(22)</message>
		</queue>
		<now>20</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="sensor">
		<statevariables>
		</statevariables>
		<queue>
			<message arrival="22" deadline="infinity" sender="sensor">callSensor()</message>
		</queue>
		<now>20</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="hc_unit">
		<statevariables>
			<variable name="HC_Unit.heaterOn" type="boolean">true</variable>
			<variable name="HC_Unit.coolerOn" type="boolean">false</variable>
			<variable name="HC_Unit.currentRegulation" type="int">1</variable>
		</statevariables>
		<queue>
			<message arrival="25" deadline="infinity" sender="hc_unit">regulateTemp()</message>
		</queue>
		<now>20</now>
		<pc></pc>
		<res></res>
	</rebec>
</state>
<transition source="651_0" destination="661_0" executionTime="20" shift="0"> <messageserver sender="hc_unit" owner="room" title="SETREGULATION"/></transition>
<state id="662_0" atomicpropositions="isHeating," >
	<rebec name="room">
		<statevariables>
			<variable name="Room.currentTemp" type="int">22</variable>
			<variable name="Room.currentRegulation" type="int">1</variable>
			<variable name="Room.outside_air" type="int">-1</variable>
		</statevariables>
		<queue>
			<message arrival="20" deadline="infinity" sender="hc_unit">setRegulation(1)</message>
			<message arrival="30" deadline="infinity" sender="room">updateStatus()</message>
		</queue>
		<now>20</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="controller">
		<statevariables>
			<variable name="Controller.currentTemp" type="int">22</variable>
			<variable name="Controller.isHeating" type="boolean">true</variable>
			<variable name="Controller.isCooling" type="boolean">false</variable>
		</statevariables>
		<queue>
			<message arrival="20" deadline="infinity" sender="controller">updateOutput()</message>
		</queue>
		<now>20</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="sensor">
		<statevariables>
		</statevariables>
		<queue>
			<message arrival="22" deadline="infinity" sender="sensor">callSensor()</message>
		</queue>
		<now>20</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="hc_unit">
		<statevariables>
			<variable name="HC_Unit.heaterOn" type="boolean">true</variable>
			<variable name="HC_Unit.coolerOn" type="boolean">false</variable>
			<variable name="HC_Unit.currentRegulation" type="int">1</variable>
		</statevariables>
		<queue>
			<message arrival="25" deadline="infinity" sender="hc_unit">regulateTemp()</message>
		</queue>
		<now>20</now>
		<pc></pc>
		<res></res>
	</rebec>
</state>
<transition source="651_0" destination="662_0" executionTime="20" shift="0"> <messageserver sender="sensor" owner="controller" title="SETCURRENT"/></transition>
<transition source="655_0" destination="660_0" executionTime="20" shift="0"> <messageserver sender="room" owner="room" title="UPDATESTATUS"/></transition>
<state id="663_0" atomicpropositions="isHeating," >
	<rebec name="room">
		<statevariables>
			<variable name="Room.currentTemp" type="int">21</variable>
			<variable name="Room.currentRegulation" type="int">1</variable>
			<variable name="Room.outside_air" type="int">0</variable>
		</statevariables>
		<queue>
			<message arrival="20" deadline="infinity" sender="hc_unit">setRegulation(1)</message>
			<message arrival="30" deadline="infinity" sender="room">updateStatus()</message>
		</queue>
		<now>20</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="controller">
		<statevariables>
			<variable name="Controller.currentTemp" type="int">20</variable>
			<variable name="Controller.isHeating" type="boolean">true</variable>
			<variable name="Controller.isCooling" type="boolean">false</variable>
		</statevariables>
		<queue>
			<message arrival="20" deadline="infinity" sender="controller">updateOutput()</message>
		</queue>
		<now>20</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="sensor">
		<statevariables>
		</statevariables>
		<queue>
			<message arrival="22" deadline="infinity" sender="sensor">callSensor()</message>
		</queue>
		<now>20</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="hc_unit">
		<statevariables>
			<variable name="HC_Unit.heaterOn" type="boolean">true</variable>
			<variable name="HC_Unit.coolerOn" type="boolean">false</variable>
			<variable name="HC_Unit.currentRegulation" type="int">1</variable>
		</statevariables>
		<queue>
			<message arrival="25" deadline="infinity" sender="hc_unit">regulateTemp()</message>
		</queue>
		<now>20</now>
		<pc></pc>
		<res></res>
	</rebec>
</state>
<transition source="655_0" destination="663_0" executionTime="20" shift="0"> <messageserver sender="room" owner="room" title="UPDATESTATUS"/></transition>
<state id="664_0" atomicpropositions="isHeating," >
	<rebec name="room">
		<statevariables>
			<variable name="Room.currentTemp" type="int">22</variable>
			<variable name="Room.currentRegulation" type="int">1</variable>
			<variable name="Room.outside_air" type="int">-1</variable>
		</statevariables>
		<queue>
			<message arrival="20" deadline="infinity" sender="hc_unit">setRegulation(1)</message>
			<message arrival="30" deadline="infinity" sender="room">updateStatus()</message>
		</queue>
		<now>20</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="controller">
		<statevariables>
			<variable name="Controller.currentTemp" type="int">20</variable>
			<variable name="Controller.isHeating" type="boolean">true</variable>
			<variable name="Controller.isCooling" type="boolean">false</variable>
		</statevariables>
		<queue>
			<message arrival="20" deadline="infinity" sender="controller">updateOutput()</message>
		</queue>
		<now>20</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="sensor">
		<statevariables>
		</statevariables>
		<queue>
			<message arrival="22" deadline="infinity" sender="sensor">callSensor()</message>
		</queue>
		<now>20</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="hc_unit">
		<statevariables>
			<variable name="HC_Unit.heaterOn" type="boolean">true</variable>
			<variable name="HC_Unit.coolerOn" type="boolean">false</variable>
			<variable name="HC_Unit.currentRegulation" type="int">1</variable>
		</statevariables>
		<queue>
			<message arrival="25" deadline="infinity" sender="hc_unit">regulateTemp()</message>
		</queue>
		<now>20</now>
		<pc></pc>
		<res></res>
	</rebec>
</state>
<transition source="655_0" destination="664_0" executionTime="20" shift="0"> <messageserver sender="room" owner="room" title="UPDATESTATUS"/></transition>
<state id="665_0" atomicpropositions="isHeating," >
	<rebec name="room">
		<statevariables>
			<variable name="Room.currentTemp" type="int">20</variable>
			<variable name="Room.currentRegulation" type="int">1</variable>
			<variable name="Room.outside_air" type="int">1</variable>
		</statevariables>
		<queue>
			<message arrival="20" deadline="infinity" sender="room">updateStatus()</message>
		</queue>
		<now>20</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="controller">
		<statevariables>
			<variable name="Controller.currentTemp" type="int">20</variable>
			<variable name="Controller.isHeating" type="boolean">true</variable>
			<variable name="Controller.isCooling" type="boolean">false</variable>
		</statevariables>
		<queue>
			<message arrival="20" deadline="infinity" sender="controller">updateOutput()</message>
		</queue>
		<now>20</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="sensor">
		<statevariables>
		</statevariables>
		<queue>
			<message arrival="22" deadline="infinity" sender="sensor">callSensor()</message>
		</queue>
		<now>20</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="hc_unit">
		<statevariables>
			<variable name="HC_Unit.heaterOn" type="boolean">true</variable>
			<variable name="HC_Unit.coolerOn" type="boolean">false</variable>
			<variable name="HC_Unit.currentRegulation" type="int">1</variable>
		</statevariables>
		<queue>
			<message arrival="25" deadline="infinity" sender="hc_unit">regulateTemp()</message>
		</queue>
		<now>20</now>
		<pc></pc>
		<res></res>
	</rebec>
</state>
<transition source="655_0" destination="665_0" executionTime="20" shift="0"> <messageserver sender="hc_unit" owner="room" title="SETREGULATION"/></transition>
<state id="666_0" atomicpropositions="isHeating," >
	<rebec name="room">
		<statevariables>
			<variable name="Room.currentTemp" type="int">20</variable>
			<variable name="Room.currentRegulation" type="int">1</variable>
			<variable name="Room.outside_air" type="int">1</variable>
		</statevariables>
		<queue>
			<message arrival="20" deadline="infinity" sender="room">updateStatus()</message>
			<message arrival="20" deadline="infinity" sender="hc_unit">setRegulation(1)</message>
		</queue>
		<now>20</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="controller">
		<statevariables>
			<variable name="Controller.currentTemp" type="int">20</variable>
			<variable name="Controller.isHeating" type="boolean">true</variable>
			<variable name="Controller.isCooling" type="boolean">false</variable>
		</statevariables>
		<queue>
		</queue>
		<now>20</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="sensor">
		<statevariables>
		</statevariables>
		<queue>
			<message arrival="22" deadline="infinity" sender="sensor">callSensor()</message>
		</queue>
		<now>20</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="hc_unit">
		<statevariables>
			<variable name="HC_Unit.heaterOn" type="boolean">true</variable>
			<variable name="HC_Unit.coolerOn" type="boolean">false</variable>
			<variable name="HC_Unit.currentRegulation" type="int">1</variable>
		</statevariables>
		<queue>
			<message arrival="25" deadline="infinity" sender="hc_unit">regulateTemp()</message>
		</queue>
		<now>20</now>
		<pc></pc>
		<res></res>
	</rebec>
</state>
<transition source="655_0" destination="666_0" executionTime="20" shift="0"> <messageserver sender="controller" owner="controller" title="UPDATEOUTPUT"/></transition>
<transition source="656_0" destination="74_0" executionTime="20" shift="20"> <messageserver sender="room" owner="room" title="UPDATESTATUS"/></transition>
<transition source="656_0" destination="44_0" executionTime="20" shift="20"> <messageserver sender="room" owner="room" title="UPDATESTATUS"/></transition>
<transition source="656_0" destination="75_0" executionTime="20" shift="20"> <messageserver sender="room" owner="room" title="UPDATESTATUS"/></transition>
<state id="667_0" atomicpropositions="" >
	<rebec name="room">
		<statevariables>
			<variable name="Room.currentTemp" type="int">22</variable>
			<variable name="Room.currentRegulation" type="int">0</variable>
			<variable name="Room.outside_air" type="int">-1</variable>
		</statevariables>
		<queue>
			<message arrival="20" deadline="infinity" sender="room">updateStatus()</message>
		</queue>
		<now>20</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="controller">
		<statevariables>
			<variable name="Controller.currentTemp" type="int">22</variable>
			<variable name="Controller.isHeating" type="boolean">false</variable>
			<variable name="Controller.isCooling" type="boolean">false</variable>
		</statevariables>
		<queue>
			<message arrival="20" deadline="infinity" sender="controller">updateOutput()</message>
		</queue>
		<now>20</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="sensor">
		<statevariables>
		</statevariables>
		<queue>
			<message arrival="22" deadline="infinity" sender="sensor">callSensor()</message>
		</queue>
		<now>20</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="hc_unit">
		<statevariables>
			<variable name="HC_Unit.heaterOn" type="boolean">false</variable>
			<variable name="HC_Unit.coolerOn" type="boolean">false</variable>
			<variable name="HC_Unit.currentRegulation" type="int">0</variable>
		</statevariables>
		<queue>
			<message arrival="25" deadline="infinity" sender="hc_unit">regulateTemp()</message>
		</queue>
		<now>20</now>
		<pc></pc>
		<res></res>
	</rebec>
</state>
<transition source="656_0" destination="667_0" executionTime="20" shift="0"> <messageserver sender="sensor" owner="controller" title="SETCURRENT"/></transition>
<transition source="657_0" destination="300_0" executionTime="20" shift="10"> <messageserver sender="room" owner="room" title="UPDATESTATUS"/></transition>
<transition source="657_0" destination="265_0" executionTime="20" shift="10"> <messageserver sender="room" owner="room" title="UPDATESTATUS"/></transition>
<transition source="657_0" destination="301_0" executionTime="20" shift="10"> <messageserver sender="room" owner="room" title="UPDATESTATUS"/></transition>
<state id="668_0" atomicpropositions="" >
	<rebec name="room">
		<statevariables>
			<variable name="Room.currentTemp" type="int">21</variable>
			<variable name="Room.currentRegulation" type="int">0</variable>
			<variable name="Room.outside_air" type="int">0</variable>
		</statevariables>
		<queue>
			<message arrival="20" deadline="infinity" sender="room">updateStatus()</message>
		</queue>
		<now>20</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="controller">
		<statevariables>
			<variable name="Controller.currentTemp" type="int">21</variable>
			<variable name="Controller.isHeating" type="boolean">false</variable>
			<variable name="Controller.isCooling" type="boolean">false</variable>
		</statevariables>
		<queue>
		</queue>
		<now>20</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="sensor">
		<statevariables>
		</statevariables>
		<queue>
			<message arrival="22" deadline="infinity" sender="sensor">callSensor()</message>
		</queue>
		<now>20</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="hc_unit">
		<statevariables>
			<variable name="HC_Unit.heaterOn" type="boolean">false</variable>
			<variable name="HC_Unit.coolerOn" type="boolean">false</variable>
			<variable name="HC_Unit.currentRegulation" type="int">0</variable>
		</statevariables>
		<queue>
			<message arrival="25" deadline="infinity" sender="hc_unit">regulateTemp()</message>
		</queue>
		<now>20</now>
		<pc></pc>
		<res></res>
	</rebec>
</state>
<transition source="657_0" destination="668_0" executionTime="20" shift="0"> <messageserver sender="controller" owner="controller" title="UPDATEOUTPUT"/></transition>
<transition source="658_0" destination="267_0" executionTime="20" shift="10"> <messageserver sender="room" owner="room" title="UPDATESTATUS"/></transition>
<transition source="658_0" destination="266_0" executionTime="20" shift="10"> <messageserver sender="room" owner="room" title="UPDATESTATUS"/></transition>
<transition source="658_0" destination="268_0" executionTime="20" shift="10"> <messageserver sender="room" owner="room" title="UPDATESTATUS"/></transition>
<transition source="658_0" destination="668_0" executionTime="20" shift="0"> <messageserver sender="hc_unit" owner="room" title="SETREGULATION"/></transition>
<state id="669_0" atomicpropositions="isHeating," >
	<rebec name="room">
		<statevariables>
			<variable name="Room.currentTemp" type="int">20</variable>
			<variable name="Room.currentRegulation" type="int">1</variable>
			<variable name="Room.outside_air" type="int">1</variable>
		</statevariables>
		<queue>
			<message arrival="30" deadline="infinity" sender="room">updateStatus()</message>
		</queue>
		<now>20</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="controller">
		<statevariables>
			<variable name="Controller.currentTemp" type="int">20</variable>
			<variable name="Controller.isHeating" type="boolean">true</variable>
			<variable name="Controller.isCooling" type="boolean">false</variable>
		</statevariables>
		<queue>
			<message arrival="20" deadline="infinity" sender="controller">updateOutput()</message>
		</queue>
		<now>20</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="sensor">
		<statevariables>
		</statevariables>
		<queue>
			<message arrival="22" deadline="infinity" sender="sensor">callSensor()</message>
		</queue>
		<now>20</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="hc_unit">
		<statevariables>
			<variable name="HC_Unit.heaterOn" type="boolean">true</variable>
			<variable name="HC_Unit.coolerOn" type="boolean">false</variable>
			<variable name="HC_Unit.currentRegulation" type="int">1</variable>
		</statevariables>
		<queue>
			<message arrival="25" deadline="infinity" sender="hc_unit">regulateTemp()</message>
		</queue>
		<now>20</now>
		<pc></pc>
		<res></res>
	</rebec>
</state>
<transition source="660_0" destination="669_0" executionTime="20" shift="0"> <messageserver sender="hc_unit" owner="room" title="SETREGULATION"/></transition>
<state id="670_0" atomicpropositions="isHeating," >
	<rebec name="room">
		<statevariables>
			<variable name="Room.currentTemp" type="int">20</variable>
			<variable name="Room.currentRegulation" type="int">1</variable>
			<variable name="Room.outside_air" type="int">1</variable>
		</statevariables>
		<queue>
			<message arrival="20" deadline="infinity" sender="hc_unit">setRegulation(1)</message>
			<message arrival="30" deadline="infinity" sender="room">updateStatus()</message>
		</queue>
		<now>20</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="controller">
		<statevariables>
			<variable name="Controller.currentTemp" type="int">20</variable>
			<variable name="Controller.isHeating" type="boolean">true</variable>
			<variable name="Controller.isCooling" type="boolean">false</variable>
		</statevariables>
		<queue>
		</queue>
		<now>20</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="sensor">
		<statevariables>
		</statevariables>
		<queue>
			<message arrival="22" deadline="infinity" sender="sensor">callSensor()</message>
		</queue>
		<now>20</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="hc_unit">
		<statevariables>
			<variable name="HC_Unit.heaterOn" type="boolean">true</variable>
			<variable name="HC_Unit.coolerOn" type="boolean">false</variable>
			<variable name="HC_Unit.currentRegulation" type="int">1</variable>
		</statevariables>
		<queue>
			<message arrival="25" deadline="infinity" sender="hc_unit">regulateTemp()</message>
		</queue>
		<now>20</now>
		<pc></pc>
		<res></res>
	</rebec>
</state>
<transition source="660_0" destination="670_0" executionTime="20" shift="0"> <messageserver sender="controller" owner="controller" title="UPDATEOUTPUT"/></transition>
<state id="671_0" atomicpropositions="isHeating," >
	<rebec name="room">
		<statevariables>
			<variable name="Room.currentTemp" type="int">22</variable>
			<variable name="Room.currentRegulation" type="int">1</variable>
			<variable name="Room.outside_air" type="int">-1</variable>
		</statevariables>
		<queue>
			<message arrival="30" deadline="infinity" sender="room">updateStatus()</message>
		</queue>
		<now>20</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="controller">
		<statevariables>
			<variable name="Controller.currentTemp" type="int">22</variable>
			<variable name="Controller.isHeating" type="boolean">true</variable>
			<variable name="Controller.isCooling" type="boolean">false</variable>
		</statevariables>
		<queue>
			<message arrival="20" deadline="infinity" sender="controller">updateOutput()</message>
		</queue>
		<now>20</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="sensor">
		<statevariables>
		</statevariables>
		<queue>
			<message arrival="22" deadline="infinity" sender="sensor">callSensor()</message>
		</queue>
		<now>20</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="hc_unit">
		<statevariables>
			<variable name="HC_Unit.heaterOn" type="boolean">true</variable>
			<variable name="HC_Unit.coolerOn" type="boolean">false</variable>
			<variable name="HC_Unit.currentRegulation" type="int">1</variable>
		</statevariables>
		<queue>
			<message arrival="25" deadline="infinity" sender="hc_unit">regulateTemp()</message>
		</queue>
		<now>20</now>
		<pc></pc>
		<res></res>
	</rebec>
</state>
<transition source="662_0" destination="671_0" executionTime="20" shift="0"> <messageserver sender="hc_unit" owner="room" title="SETREGULATION"/></transition>
<state id="672_0" atomicpropositions="isHeating," >
	<rebec name="room">
		<statevariables>
			<variable name="Room.currentTemp" type="int">22</variable>
			<variable name="Room.currentRegulation" type="int">1</variable>
			<variable name="Room.outside_air" type="int">-1</variable>
		</statevariables>
		<queue>
			<message arrival="20" deadline="infinity" sender="hc_unit">setRegulation(1)</message>
			<message arrival="30" deadline="infinity" sender="room">updateStatus()</message>
		</queue>
		<now>20</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="controller">
		<statevariables>
			<variable name="Controller.currentTemp" type="int">22</variable>
			<variable name="Controller.isHeating" type="boolean">false</variable>
			<variable name="Controller.isCooling" type="boolean">false</variable>
		</statevariables>
		<queue>
		</queue>
		<now>20</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="sensor">
		<statevariables>
		</statevariables>
		<queue>
			<message arrival="22" deadline="infinity" sender="sensor">callSensor()</message>
		</queue>
		<now>20</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="hc_unit">
		<statevariables>
			<variable name="HC_Unit.heaterOn" type="boolean">true</variable>
			<variable name="HC_Unit.coolerOn" type="boolean">false</variable>
			<variable name="HC_Unit.currentRegulation" type="int">1</variable>
		</statevariables>
		<queue>
			<message arrival="20" deadline="infinity" sender="controller">switchoff()</message>
			<message arrival="25" deadline="infinity" sender="hc_unit">regulateTemp()</message>
		</queue>
		<now>20</now>
		<pc></pc>
		<res></res>
	</rebec>
</state>
<transition source="662_0" destination="672_0" executionTime="20" shift="0"> <messageserver sender="controller" owner="controller" title="UPDATEOUTPUT"/></transition>
<transition source="666_0" destination="670_0" executionTime="20" shift="0"> <messageserver sender="room" owner="room" title="UPDATESTATUS"/></transition>
<state id="673_0" atomicpropositions="isHeating," >
	<rebec name="room">
		<statevariables>
			<variable name="Room.currentTemp" type="int">21</variable>
			<variable name="Room.currentRegulation" type="int">1</variable>
			<variable name="Room.outside_air" type="int">0</variable>
		</statevariables>
		<queue>
			<message arrival="20" deadline="infinity" sender="hc_unit">setRegulation(1)</message>
			<message arrival="30" deadline="infinity" sender="room">updateStatus()</message>
		</queue>
		<now>20</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="controller">
		<statevariables>
			<variable name="Controller.currentTemp" type="int">20</variable>
			<variable name="Controller.isHeating" type="boolean">true</variable>
			<variable name="Controller.isCooling" type="boolean">false</variable>
		</statevariables>
		<queue>
		</queue>
		<now>20</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="sensor">
		<statevariables>
		</statevariables>
		<queue>
			<message arrival="22" deadline="infinity" sender="sensor">callSensor()</message>
		</queue>
		<now>20</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="hc_unit">
		<statevariables>
			<variable name="HC_Unit.heaterOn" type="boolean">true</variable>
			<variable name="HC_Unit.coolerOn" type="boolean">false</variable>
			<variable name="HC_Unit.currentRegulation" type="int">1</variable>
		</statevariables>
		<queue>
			<message arrival="25" deadline="infinity" sender="hc_unit">regulateTemp()</message>
		</queue>
		<now>20</now>
		<pc></pc>
		<res></res>
	</rebec>
</state>
<transition source="666_0" destination="673_0" executionTime="20" shift="0"> <messageserver sender="room" owner="room" title="UPDATESTATUS"/></transition>
<state id="674_0" atomicpropositions="isHeating," >
	<rebec name="room">
		<statevariables>
			<variable name="Room.currentTemp" type="int">22</variable>
			<variable name="Room.currentRegulation" type="int">1</variable>
			<variable name="Room.outside_air" type="int">-1</variable>
		</statevariables>
		<queue>
			<message arrival="20" deadline="infinity" sender="hc_unit">setRegulation(1)</message>
			<message arrival="30" deadline="infinity" sender="room">updateStatus()</message>
		</queue>
		<now>20</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="controller">
		<statevariables>
			<variable name="Controller.currentTemp" type="int">20</variable>
			<variable name="Controller.isHeating" type="boolean">true</variable>
			<variable name="Controller.isCooling" type="boolean">false</variable>
		</statevariables>
		<queue>
		</queue>
		<now>20</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="sensor">
		<statevariables>
		</statevariables>
		<queue>
			<message arrival="22" deadline="infinity" sender="sensor">callSensor()</message>
		</queue>
		<now>20</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="hc_unit">
		<statevariables>
			<variable name="HC_Unit.heaterOn" type="boolean">true</variable>
			<variable name="HC_Unit.coolerOn" type="boolean">false</variable>
			<variable name="HC_Unit.currentRegulation" type="int">1</variable>
		</statevariables>
		<queue>
			<message arrival="25" deadline="infinity" sender="hc_unit">regulateTemp()</message>
		</queue>
		<now>20</now>
		<pc></pc>
		<res></res>
	</rebec>
</state>
<transition source="666_0" destination="674_0" executionTime="20" shift="0"> <messageserver sender="room" owner="room" title="UPDATESTATUS"/></transition>
<state id="675_0" atomicpropositions="isHeating," >
	<rebec name="room">
		<statevariables>
			<variable name="Room.currentTemp" type="int">20</variable>
			<variable name="Room.currentRegulation" type="int">1</variable>
			<variable name="Room.outside_air" type="int">1</variable>
		</statevariables>
		<queue>
			<message arrival="20" deadline="infinity" sender="room">updateStatus()</message>
		</queue>
		<now>20</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="controller">
		<statevariables>
			<variable name="Controller.currentTemp" type="int">20</variable>
			<variable name="Controller.isHeating" type="boolean">true</variable>
			<variable name="Controller.isCooling" type="boolean">false</variable>
		</statevariables>
		<queue>
		</queue>
		<now>20</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="sensor">
		<statevariables>
		</statevariables>
		<queue>
			<message arrival="22" deadline="infinity" sender="sensor">callSensor()</message>
		</queue>
		<now>20</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="hc_unit">
		<statevariables>
			<variable name="HC_Unit.heaterOn" type="boolean">true</variable>
			<variable name="HC_Unit.coolerOn" type="boolean">false</variable>
			<variable name="HC_Unit.currentRegulation" type="int">1</variable>
		</statevariables>
		<queue>
			<message arrival="25" deadline="infinity" sender="hc_unit">regulateTemp()</message>
		</queue>
		<now>20</now>
		<pc></pc>
		<res></res>
	</rebec>
</state>
<transition source="666_0" destination="675_0" executionTime="20" shift="0"> <messageserver sender="hc_unit" owner="room" title="SETREGULATION"/></transition>
<transition source="667_0" destination="72_0" executionTime="20" shift="20"> <messageserver sender="room" owner="room" title="UPDATESTATUS"/></transition>
<transition source="667_0" destination="53_0" executionTime="20" shift="20"> <messageserver sender="room" owner="room" title="UPDATESTATUS"/></transition>
<transition source="667_0" destination="73_0" executionTime="20" shift="20"> <messageserver sender="room" owner="room" title="UPDATESTATUS"/></transition>
<state id="676_0" atomicpropositions="" >
	<rebec name="room">
		<statevariables>
			<variable name="Room.currentTemp" type="int">22</variable>
			<variable name="Room.currentRegulation" type="int">0</variable>
			<variable name="Room.outside_air" type="int">-1</variable>
		</statevariables>
		<queue>
			<message arrival="20" deadline="infinity" sender="room">updateStatus()</message>
		</queue>
		<now>20</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="controller">
		<statevariables>
			<variable name="Controller.currentTemp" type="int">22</variable>
			<variable name="Controller.isHeating" type="boolean">false</variable>
			<variable name="Controller.isCooling" type="boolean">false</variable>
		</statevariables>
		<queue>
		</queue>
		<now>20</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="sensor">
		<statevariables>
		</statevariables>
		<queue>
			<message arrival="22" deadline="infinity" sender="sensor">callSensor()</message>
		</queue>
		<now>20</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="hc_unit">
		<statevariables>
			<variable name="HC_Unit.heaterOn" type="boolean">false</variable>
			<variable name="HC_Unit.coolerOn" type="boolean">false</variable>
			<variable name="HC_Unit.currentRegulation" type="int">0</variable>
		</statevariables>
		<queue>
			<message arrival="25" deadline="infinity" sender="hc_unit">regulateTemp()</message>
		</queue>
		<now>20</now>
		<pc></pc>
		<res></res>
	</rebec>
</state>
<transition source="667_0" destination="676_0" executionTime="20" shift="0"> <messageserver sender="controller" owner="controller" title="UPDATEOUTPUT"/></transition>
<transition source="668_0" destination="279_0" executionTime="20" shift="10"> <messageserver sender="room" owner="room" title="UPDATESTATUS"/></transition>
<transition source="668_0" destination="277_0" executionTime="20" shift="10"> <messageserver sender="room" owner="room" title="UPDATESTATUS"/></transition>
<transition source="668_0" destination="281_0" executionTime="20" shift="10"> <messageserver sender="room" owner="room" title="UPDATESTATUS"/></transition>
<transition source="665_0" destination="669_0" executionTime="20" shift="0"> <messageserver sender="room" owner="room" title="UPDATESTATUS"/></transition>
<state id="677_0" atomicpropositions="isHeating," >
	<rebec name="room">
		<statevariables>
			<variable name="Room.currentTemp" type="int">21</variable>
			<variable name="Room.currentRegulation" type="int">1</variable>
			<variable name="Room.outside_air" type="int">0</variable>
		</statevariables>
		<queue>
			<message arrival="30" deadline="infinity" sender="room">updateStatus()</message>
		</queue>
		<now>20</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="controller">
		<statevariables>
			<variable name="Controller.currentTemp" type="int">20</variable>
			<variable name="Controller.isHeating" type="boolean">true</variable>
			<variable name="Controller.isCooling" type="boolean">false</variable>
		</statevariables>
		<queue>
			<message arrival="20" deadline="infinity" sender="controller">updateOutput()</message>
		</queue>
		<now>20</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="sensor">
		<statevariables>
		</statevariables>
		<queue>
			<message arrival="22" deadline="infinity" sender="sensor">callSensor()</message>
		</queue>
		<now>20</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="hc_unit">
		<statevariables>
			<variable name="HC_Unit.heaterOn" type="boolean">true</variable>
			<variable name="HC_Unit.coolerOn" type="boolean">false</variable>
			<variable name="HC_Unit.currentRegulation" type="int">1</variable>
		</statevariables>
		<queue>
			<message arrival="25" deadline="infinity" sender="hc_unit">regulateTemp()</message>
		</queue>
		<now>20</now>
		<pc></pc>
		<res></res>
	</rebec>
</state>
<transition source="665_0" destination="677_0" executionTime="20" shift="0"> <messageserver sender="room" owner="room" title="UPDATESTATUS"/></transition>
<state id="678_0" atomicpropositions="isHeating," >
	<rebec name="room">
		<statevariables>
			<variable name="Room.currentTemp" type="int">22</variable>
			<variable name="Room.currentRegulation" type="int">1</variable>
			<variable name="Room.outside_air" type="int">-1</variable>
		</statevariables>
		<queue>
			<message arrival="30" deadline="infinity" sender="room">updateStatus()</message>
		</queue>
		<now>20</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="controller">
		<statevariables>
			<variable name="Controller.currentTemp" type="int">20</variable>
			<variable name="Controller.isHeating" type="boolean">true</variable>
			<variable name="Controller.isCooling" type="boolean">false</variable>
		</statevariables>
		<queue>
			<message arrival="20" deadline="infinity" sender="controller">updateOutput()</message>
		</queue>
		<now>20</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="sensor">
		<statevariables>
		</statevariables>
		<queue>
			<message arrival="22" deadline="infinity" sender="sensor">callSensor()</message>
		</queue>
		<now>20</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="hc_unit">
		<statevariables>
			<variable name="HC_Unit.heaterOn" type="boolean">true</variable>
			<variable name="HC_Unit.coolerOn" type="boolean">false</variable>
			<variable name="HC_Unit.currentRegulation" type="int">1</variable>
		</statevariables>
		<queue>
			<message arrival="25" deadline="infinity" sender="hc_unit">regulateTemp()</message>
		</queue>
		<now>20</now>
		<pc></pc>
		<res></res>
	</rebec>
</state>
<transition source="665_0" destination="678_0" executionTime="20" shift="0"> <messageserver sender="room" owner="room" title="UPDATESTATUS"/></transition>
<transition source="665_0" destination="675_0" executionTime="20" shift="0"> <messageserver sender="controller" owner="controller" title="UPDATEOUTPUT"/></transition>
<transition source="670_0" destination="375_0" executionTime="20" shift="10"> <messageserver sender="hc_unit" owner="room" title="SETREGULATION"/></transition>
<state id="679_0" atomicpropositions="isHeating," >
	<rebec name="room">
		<statevariables>
			<variable name="Room.currentTemp" type="int">22</variable>
			<variable name="Room.currentRegulation" type="int">1</variable>
			<variable name="Room.outside_air" type="int">-1</variable>
		</statevariables>
		<queue>
			<message arrival="30" deadline="infinity" sender="room">updateStatus()</message>
		</queue>
		<now>20</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="controller">
		<statevariables>
			<variable name="Controller.currentTemp" type="int">22</variable>
			<variable name="Controller.isHeating" type="boolean">false</variable>
			<variable name="Controller.isCooling" type="boolean">false</variable>
		</statevariables>
		<queue>
		</queue>
		<now>20</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="sensor">
		<statevariables>
		</statevariables>
		<queue>
			<message arrival="22" deadline="infinity" sender="sensor">callSensor()</message>
		</queue>
		<now>20</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="hc_unit">
		<statevariables>
			<variable name="HC_Unit.heaterOn" type="boolean">true</variable>
			<variable name="HC_Unit.coolerOn" type="boolean">false</variable>
			<variable name="HC_Unit.currentRegulation" type="int">1</variable>
		</statevariables>
		<queue>
			<message arrival="20" deadline="infinity" sender="controller">switchoff()</message>
			<message arrival="25" deadline="infinity" sender="hc_unit">regulateTemp()</message>
		</queue>
		<now>20</now>
		<pc></pc>
		<res></res>
	</rebec>
</state>
<transition source="672_0" destination="679_0" executionTime="20" shift="0"> <messageserver sender="hc_unit" owner="room" title="SETREGULATION"/></transition>
<state id="680_0" atomicpropositions="" >
	<rebec name="room">
		<statevariables>
			<variable name="Room.currentTemp" type="int">22</variable>
			<variable name="Room.currentRegulation" type="int">1</variable>
			<variable name="Room.outside_air" type="int">-1</variable>
		</statevariables>
		<queue>
			<message arrival="20" deadline="infinity" sender="hc_unit">setRegulation(1)</message>
			<message arrival="30" deadline="infinity" sender="room">updateStatus()</message>
		</queue>
		<now>20</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="controller">
		<statevariables>
			<variable name="Controller.currentTemp" type="int">22</variable>
			<variable name="Controller.isHeating" type="boolean">false</variable>
			<variable name="Controller.isCooling" type="boolean">false</variable>
		</statevariables>
		<queue>
		</queue>
		<now>20</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="sensor">
		<statevariables>
		</statevariables>
		<queue>
			<message arrival="22" deadline="infinity" sender="sensor">callSensor()</message>
		</queue>
		<now>20</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="hc_unit">
		<statevariables>
			<variable name="HC_Unit.heaterOn" type="boolean">false</variable>
			<variable name="HC_Unit.coolerOn" type="boolean">false</variable>
			<variable name="HC_Unit.currentRegulation" type="int">0</variable>
		</statevariables>
		<queue>
			<message arrival="25" deadline="infinity" sender="hc_unit">regulateTemp()</message>
		</queue>
		<now>20</now>
		<pc></pc>
		<res></res>
	</rebec>
</state>
<transition source="672_0" destination="680_0" executionTime="20" shift="0"> <messageserver sender="controller" owner="hc_unit" title="SWITCHOFF"/></transition>
<transition source="675_0" destination="375_0" executionTime="20" shift="10"> <messageserver sender="room" owner="room" title="UPDATESTATUS"/></transition>
<state id="681_0" atomicpropositions="isHeating," >
	<rebec name="room">
		<statevariables>
			<variable name="Room.currentTemp" type="int">21</variable>
			<variable name="Room.currentRegulation" type="int">1</variable>
			<variable name="Room.outside_air" type="int">0</variable>
		</statevariables>
		<queue>
			<message arrival="30" deadline="infinity" sender="room">updateStatus()</message>
		</queue>
		<now>20</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="controller">
		<statevariables>
			<variable name="Controller.currentTemp" type="int">20</variable>
			<variable name="Controller.isHeating" type="boolean">true</variable>
			<variable name="Controller.isCooling" type="boolean">false</variable>
		</statevariables>
		<queue>
		</queue>
		<now>20</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="sensor">
		<statevariables>
		</statevariables>
		<queue>
			<message arrival="22" deadline="infinity" sender="sensor">callSensor()</message>
		</queue>
		<now>20</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="hc_unit">
		<statevariables>
			<variable name="HC_Unit.heaterOn" type="boolean">true</variable>
			<variable name="HC_Unit.coolerOn" type="boolean">false</variable>
			<variable name="HC_Unit.currentRegulation" type="int">1</variable>
		</statevariables>
		<queue>
			<message arrival="25" deadline="infinity" sender="hc_unit">regulateTemp()</message>
		</queue>
		<now>20</now>
		<pc></pc>
		<res></res>
	</rebec>
</state>
<state id="682_0" atomicpropositions="isHeating," >
	<rebec name="room">
		<statevariables>
			<variable name="Room.currentTemp" type="int">21</variable>
			<variable name="Room.currentRegulation" type="int">1</variable>
			<variable name="Room.outside_air" type="int">0</variable>
		</statevariables>
		<queue>
			<message arrival="30" deadline="infinity" sender="room">updateStatus()</message>
		</queue>
		<now>22</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="controller">
		<statevariables>
			<variable name="Controller.currentTemp" type="int">20</variable>
			<variable name="Controller.isHeating" type="boolean">true</variable>
			<variable name="Controller.isCooling" type="boolean">false</variable>
		</statevariables>
		<queue>
		</queue>
		<now>22</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="sensor">
		<statevariables>
		</statevariables>
		<queue>
			<message arrival="22" deadline="infinity" sender="sensor">callSensor()</message>
		</queue>
		<now>22</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="hc_unit">
		<statevariables>
			<variable name="HC_Unit.heaterOn" type="boolean">true</variable>
			<variable name="HC_Unit.coolerOn" type="boolean">false</variable>
			<variable name="HC_Unit.currentRegulation" type="int">1</variable>
		</statevariables>
		<queue>
			<message arrival="25" deadline="infinity" sender="hc_unit">regulateTemp()</message>
		</queue>
		<now>22</now>
		<pc></pc>
		<res></res>
	</rebec>
</state>
<transition source="681_0" destination="682_0" executionTime="20" shift="0"> <time value="2"/></transition>
<transition source="675_0" destination="681_0" executionTime="20" shift="0"> <messageserver sender="room" owner="room" title="UPDATESTATUS"/></transition>
<state id="683_0" atomicpropositions="isHeating," >
	<rebec name="room">
		<statevariables>
			<variable name="Room.currentTemp" type="int">22</variable>
			<variable name="Room.currentRegulation" type="int">1</variable>
			<variable name="Room.outside_air" type="int">-1</variable>
		</statevariables>
		<queue>
			<message arrival="30" deadline="infinity" sender="room">updateStatus()</message>
		</queue>
		<now>20</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="controller">
		<statevariables>
			<variable name="Controller.currentTemp" type="int">20</variable>
			<variable name="Controller.isHeating" type="boolean">true</variable>
			<variable name="Controller.isCooling" type="boolean">false</variable>
		</statevariables>
		<queue>
		</queue>
		<now>20</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="sensor">
		<statevariables>
		</statevariables>
		<queue>
			<message arrival="22" deadline="infinity" sender="sensor">callSensor()</message>
		</queue>
		<now>20</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="hc_unit">
		<statevariables>
			<variable name="HC_Unit.heaterOn" type="boolean">true</variable>
			<variable name="HC_Unit.coolerOn" type="boolean">false</variable>
			<variable name="HC_Unit.currentRegulation" type="int">1</variable>
		</statevariables>
		<queue>
			<message arrival="25" deadline="infinity" sender="hc_unit">regulateTemp()</message>
		</queue>
		<now>20</now>
		<pc></pc>
		<res></res>
	</rebec>
</state>
<state id="684_0" atomicpropositions="isHeating," >
	<rebec name="room">
		<statevariables>
			<variable name="Room.currentTemp" type="int">22</variable>
			<variable name="Room.currentRegulation" type="int">1</variable>
			<variable name="Room.outside_air" type="int">-1</variable>
		</statevariables>
		<queue>
			<message arrival="30" deadline="infinity" sender="room">updateStatus()</message>
		</queue>
		<now>22</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="controller">
		<statevariables>
			<variable name="Controller.currentTemp" type="int">20</variable>
			<variable name="Controller.isHeating" type="boolean">true</variable>
			<variable name="Controller.isCooling" type="boolean">false</variable>
		</statevariables>
		<queue>
		</queue>
		<now>22</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="sensor">
		<statevariables>
		</statevariables>
		<queue>
			<message arrival="22" deadline="infinity" sender="sensor">callSensor()</message>
		</queue>
		<now>22</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="hc_unit">
		<statevariables>
			<variable name="HC_Unit.heaterOn" type="boolean">true</variable>
			<variable name="HC_Unit.coolerOn" type="boolean">false</variable>
			<variable name="HC_Unit.currentRegulation" type="int">1</variable>
		</statevariables>
		<queue>
			<message arrival="25" deadline="infinity" sender="hc_unit">regulateTemp()</message>
		</queue>
		<now>22</now>
		<pc></pc>
		<res></res>
	</rebec>
</state>
<transition source="683_0" destination="684_0" executionTime="20" shift="0"> <time value="2"/></transition>
<transition source="675_0" destination="683_0" executionTime="20" shift="0"> <messageserver sender="room" owner="room" title="UPDATESTATUS"/></transition>
<transition source="676_0" destination="64_0" executionTime="20" shift="20"> <messageserver sender="room" owner="room" title="UPDATESTATUS"/></transition>
<transition source="676_0" destination="62_0" executionTime="20" shift="20"> <messageserver sender="room" owner="room" title="UPDATESTATUS"/></transition>
<transition source="676_0" destination="66_0" executionTime="20" shift="20"> <messageserver sender="room" owner="room" title="UPDATESTATUS"/></transition>
<transition source="674_0" destination="683_0" executionTime="20" shift="0"> <messageserver sender="hc_unit" owner="room" title="SETREGULATION"/></transition>
<transition source="678_0" destination="683_0" executionTime="20" shift="0"> <messageserver sender="controller" owner="controller" title="UPDATEOUTPUT"/></transition>
<transition source="677_0" destination="681_0" executionTime="20" shift="0"> <messageserver sender="controller" owner="controller" title="UPDATEOUTPUT"/></transition>
<state id="685_0" atomicpropositions="" >
	<rebec name="room">
		<statevariables>
			<variable name="Room.currentTemp" type="int">22</variable>
			<variable name="Room.currentRegulation" type="int">1</variable>
			<variable name="Room.outside_air" type="int">-1</variable>
		</statevariables>
		<queue>
			<message arrival="30" deadline="infinity" sender="room">updateStatus()</message>
		</queue>
		<now>20</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="controller">
		<statevariables>
			<variable name="Controller.currentTemp" type="int">22</variable>
			<variable name="Controller.isHeating" type="boolean">false</variable>
			<variable name="Controller.isCooling" type="boolean">false</variable>
		</statevariables>
		<queue>
		</queue>
		<now>20</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="sensor">
		<statevariables>
		</statevariables>
		<queue>
			<message arrival="22" deadline="infinity" sender="sensor">callSensor()</message>
		</queue>
		<now>20</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="hc_unit">
		<statevariables>
			<variable name="HC_Unit.heaterOn" type="boolean">false</variable>
			<variable name="HC_Unit.coolerOn" type="boolean">false</variable>
			<variable name="HC_Unit.currentRegulation" type="int">0</variable>
		</statevariables>
		<queue>
			<message arrival="25" deadline="infinity" sender="hc_unit">regulateTemp()</message>
		</queue>
		<now>20</now>
		<pc></pc>
		<res></res>
	</rebec>
</state>
<state id="686_0" atomicpropositions="" >
	<rebec name="room">
		<statevariables>
			<variable name="Room.currentTemp" type="int">22</variable>
			<variable name="Room.currentRegulation" type="int">1</variable>
			<variable name="Room.outside_air" type="int">-1</variable>
		</statevariables>
		<queue>
			<message arrival="30" deadline="infinity" sender="room">updateStatus()</message>
		</queue>
		<now>22</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="controller">
		<statevariables>
			<variable name="Controller.currentTemp" type="int">22</variable>
			<variable name="Controller.isHeating" type="boolean">false</variable>
			<variable name="Controller.isCooling" type="boolean">false</variable>
		</statevariables>
		<queue>
		</queue>
		<now>22</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="sensor">
		<statevariables>
		</statevariables>
		<queue>
			<message arrival="22" deadline="infinity" sender="sensor">callSensor()</message>
		</queue>
		<now>22</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="hc_unit">
		<statevariables>
			<variable name="HC_Unit.heaterOn" type="boolean">false</variable>
			<variable name="HC_Unit.coolerOn" type="boolean">false</variable>
			<variable name="HC_Unit.currentRegulation" type="int">0</variable>
		</statevariables>
		<queue>
			<message arrival="25" deadline="infinity" sender="hc_unit">regulateTemp()</message>
		</queue>
		<now>22</now>
		<pc></pc>
		<res></res>
	</rebec>
</state>
<transition source="685_0" destination="686_0" executionTime="20" shift="0"> <time value="2"/></transition>
<transition source="680_0" destination="685_0" executionTime="20" shift="0"> <messageserver sender="hc_unit" owner="room" title="SETREGULATION"/></transition>
<transition source="645_0" destination="37_0" executionTime="20" shift="20"> <messageserver sender="room" owner="room" title="UPDATESTATUS"/></transition>
<transition source="645_0" destination="36_0" executionTime="20" shift="20"> <messageserver sender="room" owner="room" title="UPDATESTATUS"/></transition>
<transition source="645_0" destination="38_0" executionTime="20" shift="20"> <messageserver sender="room" owner="room" title="UPDATESTATUS"/></transition>
<transition source="645_0" destination="656_0" executionTime="20" shift="0"> <messageserver sender="hc_unit" owner="room" title="SETREGULATION"/></transition>
<state id="687_0" atomicpropositions="" >
	<rebec name="room">
		<statevariables>
			<variable name="Room.currentTemp" type="int">22</variable>
			<variable name="Room.currentRegulation" type="int">0</variable>
			<variable name="Room.outside_air" type="int">-1</variable>
		</statevariables>
		<queue>
			<message arrival="20" deadline="infinity" sender="room">updateStatus()</message>
			<message arrival="20" deadline="infinity" sender="hc_unit">setRegulation(0)</message>
		</queue>
		<now>20</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="controller">
		<statevariables>
			<variable name="Controller.currentTemp" type="int">22</variable>
			<variable name="Controller.isHeating" type="boolean">false</variable>
			<variable name="Controller.isCooling" type="boolean">false</variable>
		</statevariables>
		<queue>
			<message arrival="20" deadline="infinity" sender="controller">updateOutput()</message>
		</queue>
		<now>20</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="sensor">
		<statevariables>
		</statevariables>
		<queue>
			<message arrival="22" deadline="infinity" sender="sensor">callSensor()</message>
		</queue>
		<now>20</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="hc_unit">
		<statevariables>
			<variable name="HC_Unit.heaterOn" type="boolean">false</variable>
			<variable name="HC_Unit.coolerOn" type="boolean">false</variable>
			<variable name="HC_Unit.currentRegulation" type="int">0</variable>
		</statevariables>
		<queue>
			<message arrival="25" deadline="infinity" sender="hc_unit">regulateTemp()</message>
		</queue>
		<now>20</now>
		<pc></pc>
		<res></res>
	</rebec>
</state>
<transition source="645_0" destination="687_0" executionTime="20" shift="0"> <messageserver sender="sensor" owner="controller" title="SETCURRENT"/></transition>
<transition source="679_0" destination="685_0" executionTime="20" shift="0"> <messageserver sender="controller" owner="hc_unit" title="SWITCHOFF"/></transition>
<transition source="673_0" destination="681_0" executionTime="20" shift="0"> <messageserver sender="hc_unit" owner="room" title="SETREGULATION"/></transition>
<transition source="671_0" destination="679_0" executionTime="20" shift="0"> <messageserver sender="controller" owner="controller" title="UPDATEOUTPUT"/></transition>
<state id="688_0" atomicpropositions="isHeating," >
	<rebec name="room">
		<statevariables>
			<variable name="Room.currentTemp" type="int">21</variable>
			<variable name="Room.currentRegulation" type="int">1</variable>
			<variable name="Room.outside_air" type="int">0</variable>
		</statevariables>
		<queue>
			<message arrival="30" deadline="infinity" sender="room">updateStatus()</message>
		</queue>
		<now>20</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="controller">
		<statevariables>
			<variable name="Controller.currentTemp" type="int">20</variable>
			<variable name="Controller.isHeating" type="boolean">true</variable>
			<variable name="Controller.isCooling" type="boolean">false</variable>
		</statevariables>
		<queue>
		</queue>
		<now>20</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="sensor">
		<statevariables>
		</statevariables>
		<queue>
			<message arrival="20" deadline="infinity" sender="sensor">callSensor()</message>
		</queue>
		<now>20</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="hc_unit">
		<statevariables>
			<variable name="HC_Unit.heaterOn" type="boolean">true</variable>
			<variable name="HC_Unit.coolerOn" type="boolean">false</variable>
			<variable name="HC_Unit.currentRegulation" type="int">1</variable>
		</statevariables>
		<queue>
			<message arrival="25" deadline="infinity" sender="hc_unit">regulateTemp()</message>
		</queue>
		<now>20</now>
		<pc></pc>
		<res></res>
	</rebec>
</state>
<transition source="617_0" destination="688_0" executionTime="20" shift="0"> <messageserver sender="hc_unit" owner="room" title="SETREGULATION"/></transition>
<transition source="617_0" destination="629_0" executionTime="20" shift="0"> <messageserver sender="sensor" owner="sensor" title="CALLSENSOR"/></transition>
<transition source="642_0" destination="648_0" executionTime="20" shift="0"> <messageserver sender="room" owner="room" title="UPDATESTATUS"/></transition>
<state id="689_0" atomicpropositions="isHeating," >
	<rebec name="room">
		<statevariables>
			<variable name="Room.currentTemp" type="int">21</variable>
			<variable name="Room.currentRegulation" type="int">1</variable>
			<variable name="Room.outside_air" type="int">0</variable>
		</statevariables>
		<queue>
			<message arrival="30" deadline="infinity" sender="room">updateStatus()</message>
		</queue>
		<now>20</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="controller">
		<statevariables>
			<variable name="Controller.currentTemp" type="int">20</variable>
			<variable name="Controller.isHeating" type="boolean">true</variable>
			<variable name="Controller.isCooling" type="boolean">false</variable>
		</statevariables>
		<queue>
		</queue>
		<now>20</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="sensor">
		<statevariables>
		</statevariables>
		<queue>
			<message arrival="20" deadline="infinity" sender="room">setCurrent(20)</message>
			<message arrival="22" deadline="infinity" sender="sensor">callSensor()</message>
		</queue>
		<now>20</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="hc_unit">
		<statevariables>
			<variable name="HC_Unit.heaterOn" type="boolean">true</variable>
			<variable name="HC_Unit.coolerOn" type="boolean">false</variable>
			<variable name="HC_Unit.currentRegulation" type="int">1</variable>
		</statevariables>
		<queue>
			<message arrival="25" deadline="infinity" sender="hc_unit">regulateTemp()</message>
		</queue>
		<now>20</now>
		<pc></pc>
		<res></res>
	</rebec>
</state>
<transition source="642_0" destination="689_0" executionTime="20" shift="0"> <messageserver sender="room" owner="room" title="UPDATESTATUS"/></transition>
<state id="690_0" atomicpropositions="isHeating," >
	<rebec name="room">
		<statevariables>
			<variable name="Room.currentTemp" type="int">22</variable>
			<variable name="Room.currentRegulation" type="int">1</variable>
			<variable name="Room.outside_air" type="int">-1</variable>
		</statevariables>
		<queue>
			<message arrival="30" deadline="infinity" sender="room">updateStatus()</message>
		</queue>
		<now>20</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="controller">
		<statevariables>
			<variable name="Controller.currentTemp" type="int">20</variable>
			<variable name="Controller.isHeating" type="boolean">true</variable>
			<variable name="Controller.isCooling" type="boolean">false</variable>
		</statevariables>
		<queue>
		</queue>
		<now>20</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="sensor">
		<statevariables>
		</statevariables>
		<queue>
			<message arrival="20" deadline="infinity" sender="room">setCurrent(20)</message>
			<message arrival="22" deadline="infinity" sender="sensor">callSensor()</message>
		</queue>
		<now>20</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="hc_unit">
		<statevariables>
			<variable name="HC_Unit.heaterOn" type="boolean">true</variable>
			<variable name="HC_Unit.coolerOn" type="boolean">false</variable>
			<variable name="HC_Unit.currentRegulation" type="int">1</variable>
		</statevariables>
		<queue>
			<message arrival="25" deadline="infinity" sender="hc_unit">regulateTemp()</message>
		</queue>
		<now>20</now>
		<pc></pc>
		<res></res>
	</rebec>
</state>
<transition source="642_0" destination="690_0" executionTime="20" shift="0"> <messageserver sender="room" owner="room" title="UPDATESTATUS"/></transition>
<transition source="642_0" destination="654_0" executionTime="20" shift="0"> <messageserver sender="room" owner="sensor" title="SETCURRENT"/></transition>
<transition source="687_0" destination="46_0" executionTime="20" shift="20"> <messageserver sender="room" owner="room" title="UPDATESTATUS"/></transition>
<transition source="687_0" destination="45_0" executionTime="20" shift="20"> <messageserver sender="room" owner="room" title="UPDATESTATUS"/></transition>
<transition source="687_0" destination="47_0" executionTime="20" shift="20"> <messageserver sender="room" owner="room" title="UPDATESTATUS"/></transition>
<transition source="687_0" destination="667_0" executionTime="20" shift="0"> <messageserver sender="hc_unit" owner="room" title="SETREGULATION"/></transition>
<state id="691_0" atomicpropositions="" >
	<rebec name="room">
		<statevariables>
			<variable name="Room.currentTemp" type="int">22</variable>
			<variable name="Room.currentRegulation" type="int">0</variable>
			<variable name="Room.outside_air" type="int">-1</variable>
		</statevariables>
		<queue>
			<message arrival="20" deadline="infinity" sender="room">updateStatus()</message>
			<message arrival="20" deadline="infinity" sender="hc_unit">setRegulation(0)</message>
		</queue>
		<now>20</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="controller">
		<statevariables>
			<variable name="Controller.currentTemp" type="int">22</variable>
			<variable name="Controller.isHeating" type="boolean">false</variable>
			<variable name="Controller.isCooling" type="boolean">false</variable>
		</statevariables>
		<queue>
		</queue>
		<now>20</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="sensor">
		<statevariables>
		</statevariables>
		<queue>
			<message arrival="22" deadline="infinity" sender="sensor">callSensor()</message>
		</queue>
		<now>20</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="hc_unit">
		<statevariables>
			<variable name="HC_Unit.heaterOn" type="boolean">false</variable>
			<variable name="HC_Unit.coolerOn" type="boolean">false</variable>
			<variable name="HC_Unit.currentRegulation" type="int">0</variable>
		</statevariables>
		<queue>
			<message arrival="25" deadline="infinity" sender="hc_unit">regulateTemp()</message>
		</queue>
		<now>20</now>
		<pc></pc>
		<res></res>
	</rebec>
</state>
<transition source="687_0" destination="691_0" executionTime="20" shift="0"> <messageserver sender="controller" owner="controller" title="UPDATEOUTPUT"/></transition>
<transition source="669_0" destination="375_0" executionTime="20" shift="10"> <messageserver sender="controller" owner="controller" title="UPDATEOUTPUT"/></transition>
<transition source="664_0" destination="678_0" executionTime="20" shift="0"> <messageserver sender="hc_unit" owner="room" title="SETREGULATION"/></transition>
<transition source="664_0" destination="674_0" executionTime="20" shift="0"> <messageserver sender="controller" owner="controller" title="UPDATEOUTPUT"/></transition>
<transition source="663_0" destination="677_0" executionTime="20" shift="0"> <messageserver sender="hc_unit" owner="room" title="SETREGULATION"/></transition>
<transition source="663_0" destination="673_0" executionTime="20" shift="0"> <messageserver sender="controller" owner="controller" title="UPDATEOUTPUT"/></transition>
<state id="692_0" atomicpropositions="isHeating," >
	<rebec name="room">
		<statevariables>
			<variable name="Room.currentTemp" type="int">21</variable>
			<variable name="Room.currentRegulation" type="int">1</variable>
			<variable name="Room.outside_air" type="int">0</variable>
		</statevariables>
		<queue>
			<message arrival="20" deadline="infinity" sender="sensor">getTemp()</message>
			<message arrival="30" deadline="infinity" sender="room">updateStatus()</message>
		</queue>
		<now>20</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="controller">
		<statevariables>
			<variable name="Controller.currentTemp" type="int">20</variable>
			<variable name="Controller.isHeating" type="boolean">true</variable>
			<variable name="Controller.isCooling" type="boolean">false</variable>
		</statevariables>
		<queue>
		</queue>
		<now>20</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="sensor">
		<statevariables>
		</statevariables>
		<queue>
			<message arrival="22" deadline="infinity" sender="sensor">callSensor()</message>
		</queue>
		<now>20</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="hc_unit">
		<statevariables>
			<variable name="HC_Unit.heaterOn" type="boolean">true</variable>
			<variable name="HC_Unit.coolerOn" type="boolean">false</variable>
			<variable name="HC_Unit.currentRegulation" type="int">1</variable>
		</statevariables>
		<queue>
			<message arrival="25" deadline="infinity" sender="hc_unit">regulateTemp()</message>
		</queue>
		<now>20</now>
		<pc></pc>
		<res></res>
	</rebec>
</state>
<transition source="688_0" destination="692_0" executionTime="20" shift="0"> <messageserver sender="sensor" owner="sensor" title="CALLSENSOR"/></transition>
<state id="693_0" atomicpropositions="isHeating," >
	<rebec name="room">
		<statevariables>
			<variable name="Room.currentTemp" type="int">22</variable>
			<variable name="Room.currentRegulation" type="int">1</variable>
			<variable name="Room.outside_air" type="int">-1</variable>
		</statevariables>
		<queue>
			<message arrival="30" deadline="infinity" sender="room">updateStatus()</message>
		</queue>
		<now>20</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="controller">
		<statevariables>
			<variable name="Controller.currentTemp" type="int">20</variable>
			<variable name="Controller.isHeating" type="boolean">true</variable>
			<variable name="Controller.isCooling" type="boolean">false</variable>
		</statevariables>
		<queue>
			<message arrival="20" deadline="infinity" sender="sensor">setCurrent(20)</message>
		</queue>
		<now>20</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="sensor">
		<statevariables>
		</statevariables>
		<queue>
			<message arrival="22" deadline="infinity" sender="sensor">callSensor()</message>
		</queue>
		<now>20</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="hc_unit">
		<statevariables>
			<variable name="HC_Unit.heaterOn" type="boolean">true</variable>
			<variable name="HC_Unit.coolerOn" type="boolean">false</variable>
			<variable name="HC_Unit.currentRegulation" type="int">1</variable>
		</statevariables>
		<queue>
			<message arrival="25" deadline="infinity" sender="hc_unit">regulateTemp()</message>
		</queue>
		<now>20</now>
		<pc></pc>
		<res></res>
	</rebec>
</state>
<transition source="690_0" destination="693_0" executionTime="20" shift="0"> <messageserver sender="room" owner="sensor" title="SETCURRENT"/></transition>
<transition source="691_0" destination="55_0" executionTime="20" shift="20"> <messageserver sender="room" owner="room" title="UPDATESTATUS"/></transition>
<transition source="691_0" destination="54_0" executionTime="20" shift="20"> <messageserver sender="room" owner="room" title="UPDATESTATUS"/></transition>
<transition source="691_0" destination="56_0" executionTime="20" shift="20"> <messageserver sender="room" owner="room" title="UPDATESTATUS"/></transition>
<transition source="691_0" destination="676_0" executionTime="20" shift="0"> <messageserver sender="hc_unit" owner="room" title="SETREGULATION"/></transition>
<state id="694_0" atomicpropositions="isHeating," >
	<rebec name="room">
		<statevariables>
			<variable name="Room.currentTemp" type="int">21</variable>
			<variable name="Room.currentRegulation" type="int">1</variable>
			<variable name="Room.outside_air" type="int">0</variable>
		</statevariables>
		<queue>
			<message arrival="30" deadline="infinity" sender="room">updateStatus()</message>
		</queue>
		<now>20</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="controller">
		<statevariables>
			<variable name="Controller.currentTemp" type="int">20</variable>
			<variable name="Controller.isHeating" type="boolean">true</variable>
			<variable name="Controller.isCooling" type="boolean">false</variable>
		</statevariables>
		<queue>
			<message arrival="20" deadline="infinity" sender="sensor">setCurrent(20)</message>
		</queue>
		<now>20</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="sensor">
		<statevariables>
		</statevariables>
		<queue>
			<message arrival="22" deadline="infinity" sender="sensor">callSensor()</message>
		</queue>
		<now>20</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="hc_unit">
		<statevariables>
			<variable name="HC_Unit.heaterOn" type="boolean">true</variable>
			<variable name="HC_Unit.coolerOn" type="boolean">false</variable>
			<variable name="HC_Unit.currentRegulation" type="int">1</variable>
		</statevariables>
		<queue>
			<message arrival="25" deadline="infinity" sender="hc_unit">regulateTemp()</message>
		</queue>
		<now>20</now>
		<pc></pc>
		<res></res>
	</rebec>
</state>
<transition source="689_0" destination="694_0" executionTime="20" shift="0"> <messageserver sender="room" owner="sensor" title="SETCURRENT"/></transition>
<transition source="661_0" destination="671_0" executionTime="20" shift="0"> <messageserver sender="sensor" owner="controller" title="SETCURRENT"/></transition>
<transition source="659_0" destination="669_0" executionTime="20" shift="0"> <messageserver sender="sensor" owner="controller" title="SETCURRENT"/></transition>
<state id="695_0" atomicpropositions="isHeating," >
	<rebec name="room">
		<statevariables>
			<variable name="Room.currentTemp" type="int">21</variable>
			<variable name="Room.currentRegulation" type="int">1</variable>
			<variable name="Room.outside_air" type="int">0</variable>
		</statevariables>
		<queue>
			<message arrival="30" deadline="infinity" sender="room">updateStatus()</message>
		</queue>
		<now>20</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="controller">
		<statevariables>
			<variable name="Controller.currentTemp" type="int">20</variable>
			<variable name="Controller.isHeating" type="boolean">true</variable>
			<variable name="Controller.isCooling" type="boolean">false</variable>
		</statevariables>
		<queue>
		</queue>
		<now>20</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="sensor">
		<statevariables>
		</statevariables>
		<queue>
			<message arrival="20" deadline="infinity" sender="room">setCurrent(21)</message>
			<message arrival="22" deadline="infinity" sender="sensor">callSensor()</message>
		</queue>
		<now>20</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="hc_unit">
		<statevariables>
			<variable name="HC_Unit.heaterOn" type="boolean">true</variable>
			<variable name="HC_Unit.coolerOn" type="boolean">false</variable>
			<variable name="HC_Unit.currentRegulation" type="int">1</variable>
		</statevariables>
		<queue>
			<message arrival="25" deadline="infinity" sender="hc_unit">regulateTemp()</message>
		</queue>
		<now>20</now>
		<pc></pc>
		<res></res>
	</rebec>
</state>
<transition source="692_0" destination="695_0" executionTime="20" shift="0"> <messageserver sender="sensor" owner="room" title="GETTEMP"/></transition>
<transition source="693_0" destination="678_0" executionTime="20" shift="0"> <messageserver sender="sensor" owner="controller" title="SETCURRENT"/></transition>
<transition source="654_0" destination="659_0" executionTime="20" shift="0"> <messageserver sender="room" owner="room" title="UPDATESTATUS"/></transition>
<transition source="654_0" destination="694_0" executionTime="20" shift="0"> <messageserver sender="room" owner="room" title="UPDATESTATUS"/></transition>
<transition source="654_0" destination="693_0" executionTime="20" shift="0"> <messageserver sender="room" owner="room" title="UPDATESTATUS"/></transition>
<transition source="654_0" destination="665_0" executionTime="20" shift="0"> <messageserver sender="sensor" owner="controller" title="SETCURRENT"/></transition>
<transition source="694_0" destination="677_0" executionTime="20" shift="0"> <messageserver sender="sensor" owner="controller" title="SETCURRENT"/></transition>
<transition source="653_0" destination="693_0" executionTime="20" shift="0"> <messageserver sender="hc_unit" owner="room" title="SETREGULATION"/></transition>
<transition source="653_0" destination="664_0" executionTime="20" shift="0"> <messageserver sender="sensor" owner="controller" title="SETCURRENT"/></transition>
<transition source="652_0" destination="694_0" executionTime="20" shift="0"> <messageserver sender="hc_unit" owner="room" title="SETREGULATION"/></transition>
<transition source="652_0" destination="663_0" executionTime="20" shift="0"> <messageserver sender="sensor" owner="controller" title="SETCURRENT"/></transition>
<state id="696_0" atomicpropositions="isHeating," >
	<rebec name="room">
		<statevariables>
			<variable name="Room.currentTemp" type="int">21</variable>
			<variable name="Room.currentRegulation" type="int">1</variable>
			<variable name="Room.outside_air" type="int">0</variable>
		</statevariables>
		<queue>
			<message arrival="30" deadline="infinity" sender="room">updateStatus()</message>
		</queue>
		<now>20</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="controller">
		<statevariables>
			<variable name="Controller.currentTemp" type="int">20</variable>
			<variable name="Controller.isHeating" type="boolean">true</variable>
			<variable name="Controller.isCooling" type="boolean">false</variable>
		</statevariables>
		<queue>
			<message arrival="20" deadline="infinity" sender="sensor">setCurrent(21)</message>
		</queue>
		<now>20</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="sensor">
		<statevariables>
		</statevariables>
		<queue>
			<message arrival="22" deadline="infinity" sender="sensor">callSensor()</message>
		</queue>
		<now>20</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="hc_unit">
		<statevariables>
			<variable name="HC_Unit.heaterOn" type="boolean">true</variable>
			<variable name="HC_Unit.coolerOn" type="boolean">false</variable>
			<variable name="HC_Unit.currentRegulation" type="int">1</variable>
		</statevariables>
		<queue>
			<message arrival="25" deadline="infinity" sender="hc_unit">regulateTemp()</message>
		</queue>
		<now>20</now>
		<pc></pc>
		<res></res>
	</rebec>
</state>
<transition source="695_0" destination="696_0" executionTime="20" shift="0"> <messageserver sender="room" owner="sensor" title="SETCURRENT"/></transition>
<transition source="650_0" destination="661_0" executionTime="20" shift="0"> <messageserver sender="room" owner="sensor" title="SETCURRENT"/></transition>
<transition source="648_0" destination="659_0" executionTime="20" shift="0"> <messageserver sender="room" owner="sensor" title="SETCURRENT"/></transition>
<transition source="641_0" destination="690_0" executionTime="20" shift="0"> <messageserver sender="hc_unit" owner="room" title="SETREGULATION"/></transition>
<transition source="641_0" destination="653_0" executionTime="20" shift="0"> <messageserver sender="room" owner="sensor" title="SETCURRENT"/></transition>
<state id="697_0" atomicpropositions="isHeating," >
	<rebec name="room">
		<statevariables>
			<variable name="Room.currentTemp" type="int">21</variable>
			<variable name="Room.currentRegulation" type="int">1</variable>
			<variable name="Room.outside_air" type="int">0</variable>
		</statevariables>
		<queue>
			<message arrival="30" deadline="infinity" sender="room">updateStatus()</message>
		</queue>
		<now>20</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="controller">
		<statevariables>
			<variable name="Controller.currentTemp" type="int">21</variable>
			<variable name="Controller.isHeating" type="boolean">true</variable>
			<variable name="Controller.isCooling" type="boolean">false</variable>
		</statevariables>
		<queue>
			<message arrival="20" deadline="infinity" sender="controller">updateOutput()</message>
		</queue>
		<now>20</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="sensor">
		<statevariables>
		</statevariables>
		<queue>
			<message arrival="22" deadline="infinity" sender="sensor">callSensor()</message>
		</queue>
		<now>20</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="hc_unit">
		<statevariables>
			<variable name="HC_Unit.heaterOn" type="boolean">true</variable>
			<variable name="HC_Unit.coolerOn" type="boolean">false</variable>
			<variable name="HC_Unit.currentRegulation" type="int">1</variable>
		</statevariables>
		<queue>
			<message arrival="25" deadline="infinity" sender="hc_unit">regulateTemp()</message>
		</queue>
		<now>20</now>
		<pc></pc>
		<res></res>
	</rebec>
</state>
<transition source="696_0" destination="697_0" executionTime="20" shift="0"> <messageserver sender="sensor" owner="controller" title="SETCURRENT"/></transition>
<transition source="605_0" destination="200_0" executionTime="20" shift="10"> <messageserver sender="room" owner="room" title="UPDATESTATUS"/></transition>
<transition source="605_0" destination="199_0" executionTime="20" shift="10"> <messageserver sender="room" owner="room" title="UPDATESTATUS"/></transition>
<transition source="605_0" destination="201_0" executionTime="20" shift="10"> <messageserver sender="room" owner="room" title="UPDATESTATUS"/></transition>
<state id="698_0" atomicpropositions="" >
	<rebec name="room">
		<statevariables>
			<variable name="Room.currentTemp" type="int">21</variable>
			<variable name="Room.currentRegulation" type="int">0</variable>
			<variable name="Room.outside_air" type="int">0</variable>
		</statevariables>
		<queue>
			<message arrival="20" deadline="infinity" sender="room">updateStatus()</message>
		</queue>
		<now>20</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="controller">
		<statevariables>
			<variable name="Controller.currentTemp" type="int">21</variable>
			<variable name="Controller.isHeating" type="boolean">false</variable>
			<variable name="Controller.isCooling" type="boolean">false</variable>
		</statevariables>
		<queue>
		</queue>
		<now>20</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="sensor">
		<statevariables>
		</statevariables>
		<queue>
			<message arrival="20" deadline="infinity" sender="sensor">callSensor()</message>
		</queue>
		<now>20</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="hc_unit">
		<statevariables>
			<variable name="HC_Unit.heaterOn" type="boolean">false</variable>
			<variable name="HC_Unit.coolerOn" type="boolean">false</variable>
			<variable name="HC_Unit.currentRegulation" type="int">0</variable>
		</statevariables>
		<queue>
			<message arrival="25" deadline="infinity" sender="hc_unit">regulateTemp()</message>
		</queue>
		<now>20</now>
		<pc></pc>
		<res></res>
	</rebec>
</state>
<transition source="605_0" destination="698_0" executionTime="20" shift="0"> <messageserver sender="hc_unit" owner="room" title="SETREGULATION"/></transition>
<transition source="605_0" destination="614_0" executionTime="20" shift="0"> <messageserver sender="sensor" owner="sensor" title="CALLSENSOR"/></transition>
<state id="699_0" atomicpropositions="isHeating," >
	<rebec name="room">
		<statevariables>
			<variable name="Room.currentTemp" type="int">20</variable>
			<variable name="Room.currentRegulation" type="int">1</variable>
			<variable name="Room.outside_air" type="int">1</variable>
		</statevariables>
		<queue>
			<message arrival="30" deadline="infinity" sender="room">updateStatus()</message>
		</queue>
		<now>20</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="controller">
		<statevariables>
			<variable name="Controller.currentTemp" type="int">20</variable>
			<variable name="Controller.isHeating" type="boolean">true</variable>
			<variable name="Controller.isCooling" type="boolean">false</variable>
		</statevariables>
		<queue>
		</queue>
		<now>20</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="sensor">
		<statevariables>
		</statevariables>
		<queue>
			<message arrival="20" deadline="infinity" sender="room">setCurrent(20)</message>
			<message arrival="22" deadline="infinity" sender="sensor">callSensor()</message>
		</queue>
		<now>20</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="hc_unit">
		<statevariables>
			<variable name="HC_Unit.heaterOn" type="boolean">true</variable>
			<variable name="HC_Unit.coolerOn" type="boolean">false</variable>
			<variable name="HC_Unit.currentRegulation" type="int">1</variable>
		</statevariables>
		<queue>
			<message arrival="20" deadline="infinity" sender="hc_unit">regulateTemp()</message>
		</queue>
		<now>20</now>
		<pc></pc>
		<res></res>
	</rebec>
</state>
<transition source="615_0" destination="699_0" executionTime="20" shift="0"> <messageserver sender="sensor" owner="room" title="GETTEMP"/></transition>
<transition source="615_0" destination="626_0" executionTime="20" shift="0"> <messageserver sender="hc_unit" owner="hc_unit" title="REGULATETEMP"/></transition>
<transition source="638_0" destination="650_0" executionTime="20" shift="0"> <messageserver sender="sensor" owner="room" title="GETTEMP"/></transition>
<transition source="640_0" destination="689_0" executionTime="20" shift="0"> <messageserver sender="hc_unit" owner="room" title="SETREGULATION"/></transition>
<transition source="640_0" destination="652_0" executionTime="20" shift="0"> <messageserver sender="room" owner="sensor" title="SETCURRENT"/></transition>
<state id="700_0" atomicpropositions="isHeating," >
	<rebec name="room">
		<statevariables>
			<variable name="Room.currentTemp" type="int">21</variable>
			<variable name="Room.currentRegulation" type="int">1</variable>
			<variable name="Room.outside_air" type="int">0</variable>
		</statevariables>
		<queue>
			<message arrival="30" deadline="infinity" sender="room">updateStatus()</message>
		</queue>
		<now>20</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="controller">
		<statevariables>
			<variable name="Controller.currentTemp" type="int">21</variable>
			<variable name="Controller.isHeating" type="boolean">false</variable>
			<variable name="Controller.isCooling" type="boolean">false</variable>
		</statevariables>
		<queue>
		</queue>
		<now>20</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="sensor">
		<statevariables>
		</statevariables>
		<queue>
			<message arrival="22" deadline="infinity" sender="sensor">callSensor()</message>
		</queue>
		<now>20</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="hc_unit">
		<statevariables>
			<variable name="HC_Unit.heaterOn" type="boolean">true</variable>
			<variable name="HC_Unit.coolerOn" type="boolean">false</variable>
			<variable name="HC_Unit.currentRegulation" type="int">1</variable>
		</statevariables>
		<queue>
			<message arrival="20" deadline="infinity" sender="controller">switchoff()</message>
			<message arrival="25" deadline="infinity" sender="hc_unit">regulateTemp()</message>
		</queue>
		<now>20</now>
		<pc></pc>
		<res></res>
	</rebec>
</state>
<transition source="697_0" destination="700_0" executionTime="20" shift="0"> <messageserver sender="controller" owner="controller" title="UPDATEOUTPUT"/></transition>
<transition source="698_0" destination="297_0" executionTime="20" shift="10"> <messageserver sender="room" owner="room" title="UPDATESTATUS"/></transition>
<transition source="698_0" destination="210_0" executionTime="20" shift="10"> <messageserver sender="room" owner="room" title="UPDATESTATUS"/></transition>
<transition source="698_0" destination="298_0" executionTime="20" shift="10"> <messageserver sender="room" owner="room" title="UPDATESTATUS"/></transition>
<transition source="698_0" destination="623_0" executionTime="20" shift="0"> <messageserver sender="sensor" owner="sensor" title="CALLSENSOR"/></transition>
<state id="701_0" atomicpropositions="isHeating," >
	<rebec name="room">
		<statevariables>
			<variable name="Room.currentTemp" type="int">20</variable>
			<variable name="Room.currentRegulation" type="int">1</variable>
			<variable name="Room.outside_air" type="int">1</variable>
		</statevariables>
		<queue>
			<message arrival="30" deadline="infinity" sender="room">updateStatus()</message>
		</queue>
		<now>20</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="controller">
		<statevariables>
			<variable name="Controller.currentTemp" type="int">20</variable>
			<variable name="Controller.isHeating" type="boolean">true</variable>
			<variable name="Controller.isCooling" type="boolean">false</variable>
		</statevariables>
		<queue>
			<message arrival="20" deadline="infinity" sender="sensor">setCurrent(20)</message>
		</queue>
		<now>20</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="sensor">
		<statevariables>
		</statevariables>
		<queue>
			<message arrival="22" deadline="infinity" sender="sensor">callSensor()</message>
		</queue>
		<now>20</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="hc_unit">
		<statevariables>
			<variable name="HC_Unit.heaterOn" type="boolean">true</variable>
			<variable name="HC_Unit.coolerOn" type="boolean">false</variable>
			<variable name="HC_Unit.currentRegulation" type="int">1</variable>
		</statevariables>
		<queue>
			<message arrival="20" deadline="infinity" sender="hc_unit">regulateTemp()</message>
		</queue>
		<now>20</now>
		<pc></pc>
		<res></res>
	</rebec>
</state>
<transition source="699_0" destination="701_0" executionTime="20" shift="0"> <messageserver sender="room" owner="sensor" title="SETCURRENT"/></transition>
<transition source="699_0" destination="637_0" executionTime="20" shift="0"> <messageserver sender="hc_unit" owner="hc_unit" title="REGULATETEMP"/></transition>
<transition source="636_0" destination="648_0" executionTime="20" shift="0"> <messageserver sender="sensor" owner="room" title="GETTEMP"/></transition>
<transition source="634_0" destination="292_0" executionTime="20" shift="10"> <messageserver sender="room" owner="room" title="UPDATESTATUS"/></transition>
<transition source="634_0" destination="237_0" executionTime="20" shift="10"> <messageserver sender="room" owner="room" title="UPDATESTATUS"/></transition>
<transition source="634_0" destination="293_0" executionTime="20" shift="10"> <messageserver sender="room" owner="room" title="UPDATESTATUS"/></transition>
<transition source="634_0" destination="646_0" executionTime="20" shift="0"> <messageserver sender="room" owner="sensor" title="SETCURRENT"/></transition>
<state id="702_0" atomicpropositions="" >
	<rebec name="room">
		<statevariables>
			<variable name="Room.currentTemp" type="int">21</variable>
			<variable name="Room.currentRegulation" type="int">1</variable>
			<variable name="Room.outside_air" type="int">0</variable>
		</statevariables>
		<queue>
			<message arrival="30" deadline="infinity" sender="room">updateStatus()</message>
		</queue>
		<now>20</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="controller">
		<statevariables>
			<variable name="Controller.currentTemp" type="int">21</variable>
			<variable name="Controller.isHeating" type="boolean">false</variable>
			<variable name="Controller.isCooling" type="boolean">false</variable>
		</statevariables>
		<queue>
		</queue>
		<now>20</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="sensor">
		<statevariables>
		</statevariables>
		<queue>
			<message arrival="22" deadline="infinity" sender="sensor">callSensor()</message>
		</queue>
		<now>20</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="hc_unit">
		<statevariables>
			<variable name="HC_Unit.heaterOn" type="boolean">false</variable>
			<variable name="HC_Unit.coolerOn" type="boolean">false</variable>
			<variable name="HC_Unit.currentRegulation" type="int">0</variable>
		</statevariables>
		<queue>
			<message arrival="25" deadline="infinity" sender="hc_unit">regulateTemp()</message>
		</queue>
		<now>20</now>
		<pc></pc>
		<res></res>
	</rebec>
</state>
<state id="703_0" atomicpropositions="" >
	<rebec name="room">
		<statevariables>
			<variable name="Room.currentTemp" type="int">21</variable>
			<variable name="Room.currentRegulation" type="int">1</variable>
			<variable name="Room.outside_air" type="int">0</variable>
		</statevariables>
		<queue>
			<message arrival="30" deadline="infinity" sender="room">updateStatus()</message>
		</queue>
		<now>22</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="controller">
		<statevariables>
			<variable name="Controller.currentTemp" type="int">21</variable>
			<variable name="Controller.isHeating" type="boolean">false</variable>
			<variable name="Controller.isCooling" type="boolean">false</variable>
		</statevariables>
		<queue>
		</queue>
		<now>22</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="sensor">
		<statevariables>
		</statevariables>
		<queue>
			<message arrival="22" deadline="infinity" sender="sensor">callSensor()</message>
		</queue>
		<now>22</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="hc_unit">
		<statevariables>
			<variable name="HC_Unit.heaterOn" type="boolean">false</variable>
			<variable name="HC_Unit.coolerOn" type="boolean">false</variable>
			<variable name="HC_Unit.currentRegulation" type="int">0</variable>
		</statevariables>
		<queue>
			<message arrival="25" deadline="infinity" sender="hc_unit">regulateTemp()</message>
		</queue>
		<now>22</now>
		<pc></pc>
		<res></res>
	</rebec>
</state>
<transition source="702_0" destination="703_0" executionTime="20" shift="0"> <time value="2"/></transition>
<transition source="700_0" destination="702_0" executionTime="20" shift="0"> <messageserver sender="controller" owner="hc_unit" title="SWITCHOFF"/></transition>
<transition source="632_0" destination="22_0" executionTime="20" shift="20"> <messageserver sender="room" owner="room" title="UPDATESTATUS"/></transition>
<transition source="632_0" destination="26_0" executionTime="20" shift="20"> <messageserver sender="room" owner="room" title="UPDATESTATUS"/></transition>
<transition source="632_0" destination="24_0" executionTime="20" shift="20"> <messageserver sender="room" owner="room" title="UPDATESTATUS"/></transition>
<transition source="632_0" destination="644_0" executionTime="20" shift="0"> <messageserver sender="sensor" owner="room" title="GETTEMP"/></transition>
<state id="704_0" atomicpropositions="isHeating," >
	<rebec name="room">
		<statevariables>
			<variable name="Room.currentTemp" type="int">20</variable>
			<variable name="Room.currentRegulation" type="int">1</variable>
			<variable name="Room.outside_air" type="int">1</variable>
		</statevariables>
		<queue>
			<message arrival="30" deadline="infinity" sender="room">updateStatus()</message>
		</queue>
		<now>20</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="controller">
		<statevariables>
			<variable name="Controller.currentTemp" type="int">20</variable>
			<variable name="Controller.isHeating" type="boolean">true</variable>
			<variable name="Controller.isCooling" type="boolean">false</variable>
		</statevariables>
		<queue>
			<message arrival="20" deadline="infinity" sender="controller">updateOutput()</message>
		</queue>
		<now>20</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="sensor">
		<statevariables>
		</statevariables>
		<queue>
			<message arrival="22" deadline="infinity" sender="sensor">callSensor()</message>
		</queue>
		<now>20</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="hc_unit">
		<statevariables>
			<variable name="HC_Unit.heaterOn" type="boolean">true</variable>
			<variable name="HC_Unit.coolerOn" type="boolean">false</variable>
			<variable name="HC_Unit.currentRegulation" type="int">1</variable>
		</statevariables>
		<queue>
			<message arrival="20" deadline="infinity" sender="hc_unit">regulateTemp()</message>
		</queue>
		<now>20</now>
		<pc></pc>
		<res></res>
	</rebec>
</state>
<transition source="701_0" destination="704_0" executionTime="20" shift="0"> <messageserver sender="sensor" owner="controller" title="SETCURRENT"/></transition>
<transition source="701_0" destination="649_0" executionTime="20" shift="0"> <messageserver sender="hc_unit" owner="hc_unit" title="REGULATETEMP"/></transition>
<transition source="630_0" destination="636_0" executionTime="20" shift="0"> <messageserver sender="room" owner="room" title="UPDATESTATUS"/></transition>
<transition source="630_0" destination="692_0" executionTime="20" shift="0"> <messageserver sender="room" owner="room" title="UPDATESTATUS"/></transition>
<transition source="630_0" destination="638_0" executionTime="20" shift="0"> <messageserver sender="room" owner="room" title="UPDATESTATUS"/></transition>
<transition source="630_0" destination="642_0" executionTime="20" shift="0"> <messageserver sender="sensor" owner="room" title="GETTEMP"/></transition>
<transition source="629_0" destination="692_0" executionTime="20" shift="0"> <messageserver sender="hc_unit" owner="room" title="SETREGULATION"/></transition>
<state id="705_0" atomicpropositions="isHeating," >
	<rebec name="room">
		<statevariables>
			<variable name="Room.currentTemp" type="int">21</variable>
			<variable name="Room.currentRegulation" type="int">1</variable>
			<variable name="Room.outside_air" type="int">0</variable>
		</statevariables>
		<queue>
			<message arrival="20" deadline="infinity" sender="hc_unit">setRegulation(1)</message>
			<message arrival="30" deadline="infinity" sender="room">updateStatus()</message>
		</queue>
		<now>20</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="controller">
		<statevariables>
			<variable name="Controller.currentTemp" type="int">20</variable>
			<variable name="Controller.isHeating" type="boolean">true</variable>
			<variable name="Controller.isCooling" type="boolean">false</variable>
		</statevariables>
		<queue>
		</queue>
		<now>20</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="sensor">
		<statevariables>
		</statevariables>
		<queue>
			<message arrival="20" deadline="infinity" sender="room">setCurrent(21)</message>
			<message arrival="22" deadline="infinity" sender="sensor">callSensor()</message>
		</queue>
		<now>20</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="hc_unit">
		<statevariables>
			<variable name="HC_Unit.heaterOn" type="boolean">true</variable>
			<variable name="HC_Unit.coolerOn" type="boolean">false</variable>
			<variable name="HC_Unit.currentRegulation" type="int">1</variable>
		</statevariables>
		<queue>
			<message arrival="25" deadline="infinity" sender="hc_unit">regulateTemp()</message>
		</queue>
		<now>20</now>
		<pc></pc>
		<res></res>
	</rebec>
</state>
<transition source="629_0" destination="705_0" executionTime="20" shift="0"> <messageserver sender="sensor" owner="room" title="GETTEMP"/></transition>
<transition source="613_0" destination="341_0" executionTime="20" shift="10"> <messageserver sender="room" owner="room" title="UPDATESTATUS"/></transition>
<transition source="613_0" destination="342_0" executionTime="20" shift="10"> <messageserver sender="room" owner="room" title="UPDATESTATUS"/></transition>
<transition source="613_0" destination="343_0" executionTime="20" shift="10"> <messageserver sender="room" owner="room" title="UPDATESTATUS"/></transition>
<state id="706_0" atomicpropositions="" >
	<rebec name="room">
		<statevariables>
			<variable name="Room.currentTemp" type="int">21</variable>
			<variable name="Room.currentRegulation" type="int">0</variable>
			<variable name="Room.outside_air" type="int">0</variable>
		</statevariables>
		<queue>
			<message arrival="20" deadline="infinity" sender="room">updateStatus()</message>
		</queue>
		<now>20</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="controller">
		<statevariables>
			<variable name="Controller.currentTemp" type="int">21</variable>
			<variable name="Controller.isHeating" type="boolean">false</variable>
			<variable name="Controller.isCooling" type="boolean">false</variable>
		</statevariables>
		<queue>
			<message arrival="20" deadline="infinity" sender="sensor">setCurrent(21)</message>
		</queue>
		<now>20</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="sensor">
		<statevariables>
		</statevariables>
		<queue>
			<message arrival="22" deadline="infinity" sender="sensor">callSensor()</message>
		</queue>
		<now>20</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="hc_unit">
		<statevariables>
			<variable name="HC_Unit.heaterOn" type="boolean">false</variable>
			<variable name="HC_Unit.coolerOn" type="boolean">false</variable>
			<variable name="HC_Unit.currentRegulation" type="int">0</variable>
		</statevariables>
		<queue>
			<message arrival="20" deadline="infinity" sender="hc_unit">regulateTemp()</message>
		</queue>
		<now>20</now>
		<pc></pc>
		<res></res>
	</rebec>
</state>
<transition source="613_0" destination="706_0" executionTime="20" shift="0"> <messageserver sender="room" owner="sensor" title="SETCURRENT"/></transition>
<transition source="613_0" destination="624_0" executionTime="20" shift="0"> <messageserver sender="hc_unit" owner="hc_unit" title="REGULATETEMP"/></transition>
<transition source="627_0" destination="638_0" executionTime="20" shift="0"> <messageserver sender="sensor" owner="sensor" title="CALLSENSOR"/></transition>
<state id="707_0" atomicpropositions="isHeating," >
	<rebec name="room">
		<statevariables>
			<variable name="Room.currentTemp" type="int">20</variable>
			<variable name="Room.currentRegulation" type="int">1</variable>
			<variable name="Room.outside_air" type="int">1</variable>
		</statevariables>
		<queue>
			<message arrival="30" deadline="infinity" sender="room">updateStatus()</message>
		</queue>
		<now>20</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="controller">
		<statevariables>
			<variable name="Controller.currentTemp" type="int">20</variable>
			<variable name="Controller.isHeating" type="boolean">true</variable>
			<variable name="Controller.isCooling" type="boolean">false</variable>
		</statevariables>
		<queue>
		</queue>
		<now>20</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="sensor">
		<statevariables>
		</statevariables>
		<queue>
			<message arrival="22" deadline="infinity" sender="sensor">callSensor()</message>
		</queue>
		<now>20</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="hc_unit">
		<statevariables>
			<variable name="HC_Unit.heaterOn" type="boolean">true</variable>
			<variable name="HC_Unit.coolerOn" type="boolean">false</variable>
			<variable name="HC_Unit.currentRegulation" type="int">1</variable>
		</statevariables>
		<queue>
			<message arrival="20" deadline="infinity" sender="hc_unit">regulateTemp()</message>
		</queue>
		<now>20</now>
		<pc></pc>
		<res></res>
	</rebec>
</state>
<transition source="704_0" destination="707_0" executionTime="20" shift="0"> <messageserver sender="controller" owner="controller" title="UPDATEOUTPUT"/></transition>
<transition source="704_0" destination="660_0" executionTime="20" shift="0"> <messageserver sender="hc_unit" owner="hc_unit" title="REGULATETEMP"/></transition>
<transition source="625_0" destination="636_0" executionTime="20" shift="0"> <messageserver sender="sensor" owner="sensor" title="CALLSENSOR"/></transition>
<transition source="705_0" destination="695_0" executionTime="20" shift="0"> <messageserver sender="hc_unit" owner="room" title="SETREGULATION"/></transition>
<state id="708_0" atomicpropositions="isHeating," >
	<rebec name="room">
		<statevariables>
			<variable name="Room.currentTemp" type="int">21</variable>
			<variable name="Room.currentRegulation" type="int">1</variable>
			<variable name="Room.outside_air" type="int">0</variable>
		</statevariables>
		<queue>
			<message arrival="20" deadline="infinity" sender="hc_unit">setRegulation(1)</message>
			<message arrival="30" deadline="infinity" sender="room">updateStatus()</message>
		</queue>
		<now>20</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="controller">
		<statevariables>
			<variable name="Controller.currentTemp" type="int">20</variable>
			<variable name="Controller.isHeating" type="boolean">true</variable>
			<variable name="Controller.isCooling" type="boolean">false</variable>
		</statevariables>
		<queue>
			<message arrival="20" deadline="infinity" sender="sensor">setCurrent(21)</message>
		</queue>
		<now>20</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="sensor">
		<statevariables>
		</statevariables>
		<queue>
			<message arrival="22" deadline="infinity" sender="sensor">callSensor()</message>
		</queue>
		<now>20</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="hc_unit">
		<statevariables>
			<variable name="HC_Unit.heaterOn" type="boolean">true</variable>
			<variable name="HC_Unit.coolerOn" type="boolean">false</variable>
			<variable name="HC_Unit.currentRegulation" type="int">1</variable>
		</statevariables>
		<queue>
			<message arrival="25" deadline="infinity" sender="hc_unit">regulateTemp()</message>
		</queue>
		<now>20</now>
		<pc></pc>
		<res></res>
	</rebec>
</state>
<transition source="705_0" destination="708_0" executionTime="20" shift="0"> <messageserver sender="room" owner="sensor" title="SETCURRENT"/></transition>
<transition source="706_0" destination="350_0" executionTime="20" shift="10"> <messageserver sender="room" owner="room" title="UPDATESTATUS"/></transition>
<transition source="706_0" destination="351_0" executionTime="20" shift="10"> <messageserver sender="room" owner="room" title="UPDATESTATUS"/></transition>
<transition source="706_0" destination="349_0" executionTime="20" shift="10"> <messageserver sender="room" owner="room" title="UPDATESTATUS"/></transition>
<state id="709_0" atomicpropositions="" >
	<rebec name="room">
		<statevariables>
			<variable name="Room.currentTemp" type="int">21</variable>
			<variable name="Room.currentRegulation" type="int">0</variable>
			<variable name="Room.outside_air" type="int">0</variable>
		</statevariables>
		<queue>
			<message arrival="20" deadline="infinity" sender="room">updateStatus()</message>
		</queue>
		<now>20</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="controller">
		<statevariables>
			<variable name="Controller.currentTemp" type="int">21</variable>
			<variable name="Controller.isHeating" type="boolean">false</variable>
			<variable name="Controller.isCooling" type="boolean">false</variable>
		</statevariables>
		<queue>
			<message arrival="20" deadline="infinity" sender="controller">updateOutput()</message>
		</queue>
		<now>20</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="sensor">
		<statevariables>
		</statevariables>
		<queue>
			<message arrival="22" deadline="infinity" sender="sensor">callSensor()</message>
		</queue>
		<now>20</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="hc_unit">
		<statevariables>
			<variable name="HC_Unit.heaterOn" type="boolean">false</variable>
			<variable name="HC_Unit.coolerOn" type="boolean">false</variable>
			<variable name="HC_Unit.currentRegulation" type="int">0</variable>
		</statevariables>
		<queue>
			<message arrival="20" deadline="infinity" sender="hc_unit">regulateTemp()</message>
		</queue>
		<now>20</now>
		<pc></pc>
		<res></res>
	</rebec>
</state>
<transition source="706_0" destination="709_0" executionTime="20" shift="0"> <messageserver sender="sensor" owner="controller" title="SETCURRENT"/></transition>
<transition source="706_0" destination="635_0" executionTime="20" shift="0"> <messageserver sender="hc_unit" owner="hc_unit" title="REGULATETEMP"/></transition>
<transition source="623_0" destination="303_0" executionTime="20" shift="10"> <messageserver sender="room" owner="room" title="UPDATESTATUS"/></transition>
<transition source="623_0" destination="223_0" executionTime="20" shift="10"> <messageserver sender="room" owner="room" title="UPDATESTATUS"/></transition>
<transition source="623_0" destination="299_0" executionTime="20" shift="10"> <messageserver sender="room" owner="room" title="UPDATESTATUS"/></transition>
<transition source="623_0" destination="634_0" executionTime="20" shift="0"> <messageserver sender="sensor" owner="room" title="GETTEMP"/></transition>
<transition source="707_0" destination="670_0" executionTime="20" shift="0"> <messageserver sender="hc_unit" owner="hc_unit" title="REGULATETEMP"/></transition>
<transition source="621_0" destination="14_0" executionTime="20" shift="20"> <messageserver sender="room" owner="room" title="UPDATESTATUS"/></transition>
<transition source="621_0" destination="18_0" executionTime="20" shift="20"> <messageserver sender="room" owner="room" title="UPDATESTATUS"/></transition>
<transition source="621_0" destination="70_0" executionTime="20" shift="20"> <messageserver sender="room" owner="room" title="UPDATESTATUS"/></transition>
<transition source="621_0" destination="632_0" executionTime="20" shift="0"> <messageserver sender="sensor" owner="sensor" title="CALLSENSOR"/></transition>
<transition source="708_0" destination="696_0" executionTime="20" shift="0"> <messageserver sender="hc_unit" owner="room" title="SETREGULATION"/></transition>
<state id="710_0" atomicpropositions="isHeating," >
	<rebec name="room">
		<statevariables>
			<variable name="Room.currentTemp" type="int">21</variable>
			<variable name="Room.currentRegulation" type="int">1</variable>
			<variable name="Room.outside_air" type="int">0</variable>
		</statevariables>
		<queue>
			<message arrival="20" deadline="infinity" sender="hc_unit">setRegulation(1)</message>
			<message arrival="30" deadline="infinity" sender="room">updateStatus()</message>
		</queue>
		<now>20</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="controller">
		<statevariables>
			<variable name="Controller.currentTemp" type="int">21</variable>
			<variable name="Controller.isHeating" type="boolean">true</variable>
			<variable name="Controller.isCooling" type="boolean">false</variable>
		</statevariables>
		<queue>
			<message arrival="20" deadline="infinity" sender="controller">updateOutput()</message>
		</queue>
		<now>20</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="sensor">
		<statevariables>
		</statevariables>
		<queue>
			<message arrival="22" deadline="infinity" sender="sensor">callSensor()</message>
		</queue>
		<now>20</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="hc_unit">
		<statevariables>
			<variable name="HC_Unit.heaterOn" type="boolean">true</variable>
			<variable name="HC_Unit.coolerOn" type="boolean">false</variable>
			<variable name="HC_Unit.currentRegulation" type="int">1</variable>
		</statevariables>
		<queue>
			<message arrival="25" deadline="infinity" sender="hc_unit">regulateTemp()</message>
		</queue>
		<now>20</now>
		<pc></pc>
		<res></res>
	</rebec>
</state>
<transition source="708_0" destination="710_0" executionTime="20" shift="0"> <messageserver sender="sensor" owner="controller" title="SETCURRENT"/></transition>
<transition source="709_0" destination="357_0" executionTime="20" shift="10"> <messageserver sender="room" owner="room" title="UPDATESTATUS"/></transition>
<transition source="709_0" destination="358_0" executionTime="20" shift="10"> <messageserver sender="room" owner="room" title="UPDATESTATUS"/></transition>
<transition source="709_0" destination="356_0" executionTime="20" shift="10"> <messageserver sender="room" owner="room" title="UPDATESTATUS"/></transition>
<state id="711_0" atomicpropositions="" >
	<rebec name="room">
		<statevariables>
			<variable name="Room.currentTemp" type="int">21</variable>
			<variable name="Room.currentRegulation" type="int">0</variable>
			<variable name="Room.outside_air" type="int">0</variable>
		</statevariables>
		<queue>
			<message arrival="20" deadline="infinity" sender="room">updateStatus()</message>
		</queue>
		<now>20</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="controller">
		<statevariables>
			<variable name="Controller.currentTemp" type="int">21</variable>
			<variable name="Controller.isHeating" type="boolean">false</variable>
			<variable name="Controller.isCooling" type="boolean">false</variable>
		</statevariables>
		<queue>
		</queue>
		<now>20</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="sensor">
		<statevariables>
		</statevariables>
		<queue>
			<message arrival="22" deadline="infinity" sender="sensor">callSensor()</message>
		</queue>
		<now>20</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="hc_unit">
		<statevariables>
			<variable name="HC_Unit.heaterOn" type="boolean">false</variable>
			<variable name="HC_Unit.coolerOn" type="boolean">false</variable>
			<variable name="HC_Unit.currentRegulation" type="int">0</variable>
		</statevariables>
		<queue>
			<message arrival="20" deadline="infinity" sender="hc_unit">regulateTemp()</message>
		</queue>
		<now>20</now>
		<pc></pc>
		<res></res>
	</rebec>
</state>
<transition source="709_0" destination="711_0" executionTime="20" shift="0"> <messageserver sender="controller" owner="controller" title="UPDATEOUTPUT"/></transition>
<transition source="709_0" destination="647_0" executionTime="20" shift="0"> <messageserver sender="hc_unit" owner="hc_unit" title="REGULATETEMP"/></transition>
<transition source="619_0" destination="625_0" executionTime="20" shift="0"> <messageserver sender="room" owner="room" title="UPDATESTATUS"/></transition>
<transition source="619_0" destination="688_0" executionTime="20" shift="0"> <messageserver sender="room" owner="room" title="UPDATESTATUS"/></transition>
<transition source="619_0" destination="627_0" executionTime="20" shift="0"> <messageserver sender="room" owner="room" title="UPDATESTATUS"/></transition>
<transition source="619_0" destination="630_0" executionTime="20" shift="0"> <messageserver sender="sensor" owner="sensor" title="CALLSENSOR"/></transition>
<transition source="710_0" destination="697_0" executionTime="20" shift="0"> <messageserver sender="hc_unit" owner="room" title="SETREGULATION"/></transition>
<state id="712_0" atomicpropositions="isHeating," >
	<rebec name="room">
		<statevariables>
			<variable name="Room.currentTemp" type="int">21</variable>
			<variable name="Room.currentRegulation" type="int">1</variable>
			<variable name="Room.outside_air" type="int">0</variable>
		</statevariables>
		<queue>
			<message arrival="20" deadline="infinity" sender="hc_unit">setRegulation(1)</message>
			<message arrival="30" deadline="infinity" sender="room">updateStatus()</message>
		</queue>
		<now>20</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="controller">
		<statevariables>
			<variable name="Controller.currentTemp" type="int">21</variable>
			<variable name="Controller.isHeating" type="boolean">false</variable>
			<variable name="Controller.isCooling" type="boolean">false</variable>
		</statevariables>
		<queue>
		</queue>
		<now>20</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="sensor">
		<statevariables>
		</statevariables>
		<queue>
			<message arrival="22" deadline="infinity" sender="sensor">callSensor()</message>
		</queue>
		<now>20</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="hc_unit">
		<statevariables>
			<variable name="HC_Unit.heaterOn" type="boolean">true</variable>
			<variable name="HC_Unit.coolerOn" type="boolean">false</variable>
			<variable name="HC_Unit.currentRegulation" type="int">1</variable>
		</statevariables>
		<queue>
			<message arrival="20" deadline="infinity" sender="controller">switchoff()</message>
			<message arrival="25" deadline="infinity" sender="hc_unit">regulateTemp()</message>
		</queue>
		<now>20</now>
		<pc></pc>
		<res></res>
	</rebec>
</state>
<transition source="710_0" destination="712_0" executionTime="20" shift="0"> <messageserver sender="controller" owner="controller" title="UPDATEOUTPUT"/></transition>
<transition source="711_0" destination="364_0" executionTime="20" shift="10"> <messageserver sender="room" owner="room" title="UPDATESTATUS"/></transition>
<transition source="711_0" destination="365_0" executionTime="20" shift="10"> <messageserver sender="room" owner="room" title="UPDATESTATUS"/></transition>
<transition source="711_0" destination="363_0" executionTime="20" shift="10"> <messageserver sender="room" owner="room" title="UPDATESTATUS"/></transition>
<transition source="711_0" destination="658_0" executionTime="20" shift="0"> <messageserver sender="hc_unit" owner="hc_unit" title="REGULATETEMP"/></transition>
<transition source="712_0" destination="700_0" executionTime="20" shift="0"> <messageserver sender="hc_unit" owner="room" title="SETREGULATION"/></transition>
<state id="713_0" atomicpropositions="" >
	<rebec name="room">
		<statevariables>
			<variable name="Room.currentTemp" type="int">21</variable>
			<variable name="Room.currentRegulation" type="int">1</variable>
			<variable name="Room.outside_air" type="int">0</variable>
		</statevariables>
		<queue>
			<message arrival="20" deadline="infinity" sender="hc_unit">setRegulation(1)</message>
			<message arrival="30" deadline="infinity" sender="room">updateStatus()</message>
		</queue>
		<now>20</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="controller">
		<statevariables>
			<variable name="Controller.currentTemp" type="int">21</variable>
			<variable name="Controller.isHeating" type="boolean">false</variable>
			<variable name="Controller.isCooling" type="boolean">false</variable>
		</statevariables>
		<queue>
		</queue>
		<now>20</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="sensor">
		<statevariables>
		</statevariables>
		<queue>
			<message arrival="22" deadline="infinity" sender="sensor">callSensor()</message>
		</queue>
		<now>20</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="hc_unit">
		<statevariables>
			<variable name="HC_Unit.heaterOn" type="boolean">false</variable>
			<variable name="HC_Unit.coolerOn" type="boolean">false</variable>
			<variable name="HC_Unit.currentRegulation" type="int">0</variable>
		</statevariables>
		<queue>
			<message arrival="25" deadline="infinity" sender="hc_unit">regulateTemp()</message>
		</queue>
		<now>20</now>
		<pc></pc>
		<res></res>
	</rebec>
</state>
<transition source="712_0" destination="713_0" executionTime="20" shift="0"> <messageserver sender="controller" owner="hc_unit" title="SWITCHOFF"/></transition>
<transition source="583_0" destination="2_0" executionTime="20" shift="20"> <messageserver sender="room" owner="room" title="UPDATESTATUS"/></transition>
<transition source="583_0" destination="3_0" executionTime="20" shift="20"> <messageserver sender="room" owner="room" title="UPDATESTATUS"/></transition>
<transition source="583_0" destination="4_0" executionTime="20" shift="20"> <messageserver sender="room" owner="room" title="UPDATESTATUS"/></transition>
<state id="714_0" atomicpropositions="" >
	<rebec name="room">
		<statevariables>
			<variable name="Room.currentTemp" type="int">22</variable>
			<variable name="Room.currentRegulation" type="int">0</variable>
			<variable name="Room.outside_air" type="int">1</variable>
		</statevariables>
		<queue>
			<message arrival="20" deadline="infinity" sender="room">updateStatus()</message>
			<message arrival="20" deadline="infinity" sender="sensor">getTemp()</message>
		</queue>
		<now>20</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="controller">
		<statevariables>
			<variable name="Controller.currentTemp" type="int">22</variable>
			<variable name="Controller.isHeating" type="boolean">false</variable>
			<variable name="Controller.isCooling" type="boolean">false</variable>
		</statevariables>
		<queue>
		</queue>
		<now>20</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="sensor">
		<statevariables>
		</statevariables>
		<queue>
			<message arrival="22" deadline="infinity" sender="sensor">callSensor()</message>
		</queue>
		<now>20</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="hc_unit">
		<statevariables>
			<variable name="HC_Unit.heaterOn" type="boolean">false</variable>
			<variable name="HC_Unit.coolerOn" type="boolean">false</variable>
			<variable name="HC_Unit.currentRegulation" type="int">0</variable>
		</statevariables>
		<queue>
			<message arrival="20" deadline="infinity" sender="hc_unit">regulateTemp()</message>
		</queue>
		<now>20</now>
		<pc></pc>
		<res></res>
	</rebec>
</state>
<transition source="583_0" destination="714_0" executionTime="20" shift="0"> <messageserver sender="sensor" owner="sensor" title="CALLSENSOR"/></transition>
<state id="715_0" atomicpropositions="" >
	<rebec name="room">
		<statevariables>
			<variable name="Room.currentTemp" type="int">22</variable>
			<variable name="Room.currentRegulation" type="int">0</variable>
			<variable name="Room.outside_air" type="int">1</variable>
		</statevariables>
		<queue>
			<message arrival="20" deadline="infinity" sender="room">updateStatus()</message>
			<message arrival="20" deadline="infinity" sender="hc_unit">setRegulation(0)</message>
		</queue>
		<now>20</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="controller">
		<statevariables>
			<variable name="Controller.currentTemp" type="int">22</variable>
			<variable name="Controller.isHeating" type="boolean">false</variable>
			<variable name="Controller.isCooling" type="boolean">false</variable>
		</statevariables>
		<queue>
		</queue>
		<now>20</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="sensor">
		<statevariables>
		</statevariables>
		<queue>
			<message arrival="20" deadline="infinity" sender="sensor">callSensor()</message>
		</queue>
		<now>20</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="hc_unit">
		<statevariables>
			<variable name="HC_Unit.heaterOn" type="boolean">false</variable>
			<variable name="HC_Unit.coolerOn" type="boolean">false</variable>
			<variable name="HC_Unit.currentRegulation" type="int">0</variable>
		</statevariables>
		<queue>
			<message arrival="25" deadline="infinity" sender="hc_unit">regulateTemp()</message>
		</queue>
		<now>20</now>
		<pc></pc>
		<res></res>
	</rebec>
</state>
<transition source="583_0" destination="715_0" executionTime="20" shift="0"> <messageserver sender="hc_unit" owner="hc_unit" title="REGULATETEMP"/></transition>
<transition source="713_0" destination="702_0" executionTime="20" shift="0"> <messageserver sender="hc_unit" owner="room" title="SETREGULATION"/></transition>
<transition source="714_0" destination="7_0" executionTime="20" shift="20"> <messageserver sender="room" owner="room" title="UPDATESTATUS"/></transition>
<transition source="714_0" destination="78_0" executionTime="20" shift="20"> <messageserver sender="room" owner="room" title="UPDATESTATUS"/></transition>
<transition source="714_0" destination="9_0" executionTime="20" shift="20"> <messageserver sender="room" owner="room" title="UPDATESTATUS"/></transition>
<state id="716_0" atomicpropositions="" >
	<rebec name="room">
		<statevariables>
			<variable name="Room.currentTemp" type="int">22</variable>
			<variable name="Room.currentRegulation" type="int">0</variable>
			<variable name="Room.outside_air" type="int">1</variable>
		</statevariables>
		<queue>
			<message arrival="20" deadline="infinity" sender="room">updateStatus()</message>
		</queue>
		<now>20</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="controller">
		<statevariables>
			<variable name="Controller.currentTemp" type="int">22</variable>
			<variable name="Controller.isHeating" type="boolean">false</variable>
			<variable name="Controller.isCooling" type="boolean">false</variable>
		</statevariables>
		<queue>
		</queue>
		<now>20</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="sensor">
		<statevariables>
		</statevariables>
		<queue>
			<message arrival="20" deadline="infinity" sender="room">setCurrent(22)</message>
			<message arrival="22" deadline="infinity" sender="sensor">callSensor()</message>
		</queue>
		<now>20</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="hc_unit">
		<statevariables>
			<variable name="HC_Unit.heaterOn" type="boolean">false</variable>
			<variable name="HC_Unit.coolerOn" type="boolean">false</variable>
			<variable name="HC_Unit.currentRegulation" type="int">0</variable>
		</statevariables>
		<queue>
			<message arrival="20" deadline="infinity" sender="hc_unit">regulateTemp()</message>
		</queue>
		<now>20</now>
		<pc></pc>
		<res></res>
	</rebec>
</state>
<transition source="714_0" destination="716_0" executionTime="20" shift="0"> <messageserver sender="sensor" owner="room" title="GETTEMP"/></transition>
<state id="717_0" atomicpropositions="" >
	<rebec name="room">
		<statevariables>
			<variable name="Room.currentTemp" type="int">22</variable>
			<variable name="Room.currentRegulation" type="int">0</variable>
			<variable name="Room.outside_air" type="int">1</variable>
		</statevariables>
		<queue>
			<message arrival="20" deadline="infinity" sender="room">updateStatus()</message>
			<message arrival="20" deadline="infinity" sender="hc_unit">setRegulation(0)</message>
			<message arrival="20" deadline="infinity" sender="sensor">getTemp()</message>
		</queue>
		<now>20</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="controller">
		<statevariables>
			<variable name="Controller.currentTemp" type="int">22</variable>
			<variable name="Controller.isHeating" type="boolean">false</variable>
			<variable name="Controller.isCooling" type="boolean">false</variable>
		</statevariables>
		<queue>
		</queue>
		<now>20</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="sensor">
		<statevariables>
		</statevariables>
		<queue>
			<message arrival="22" deadline="infinity" sender="sensor">callSensor()</message>
		</queue>
		<now>20</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="hc_unit">
		<statevariables>
			<variable name="HC_Unit.heaterOn" type="boolean">false</variable>
			<variable name="HC_Unit.coolerOn" type="boolean">false</variable>
			<variable name="HC_Unit.currentRegulation" type="int">0</variable>
		</statevariables>
		<queue>
			<message arrival="25" deadline="infinity" sender="hc_unit">regulateTemp()</message>
		</queue>
		<now>20</now>
		<pc></pc>
		<res></res>
	</rebec>
</state>
<transition source="714_0" destination="717_0" executionTime="20" shift="0"> <messageserver sender="hc_unit" owner="hc_unit" title="REGULATETEMP"/></transition>
<transition source="715_0" destination="8_0" executionTime="20" shift="20"> <messageserver sender="room" owner="room" title="UPDATESTATUS"/></transition>
<transition source="715_0" destination="11_0" executionTime="20" shift="20"> <messageserver sender="room" owner="room" title="UPDATESTATUS"/></transition>
<transition source="715_0" destination="10_0" executionTime="20" shift="20"> <messageserver sender="room" owner="room" title="UPDATESTATUS"/></transition>
<state id="718_0" atomicpropositions="" >
	<rebec name="room">
		<statevariables>
			<variable name="Room.currentTemp" type="int">22</variable>
			<variable name="Room.currentRegulation" type="int">0</variable>
			<variable name="Room.outside_air" type="int">1</variable>
		</statevariables>
		<queue>
			<message arrival="20" deadline="infinity" sender="room">updateStatus()</message>
		</queue>
		<now>20</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="controller">
		<statevariables>
			<variable name="Controller.currentTemp" type="int">22</variable>
			<variable name="Controller.isHeating" type="boolean">false</variable>
			<variable name="Controller.isCooling" type="boolean">false</variable>
		</statevariables>
		<queue>
		</queue>
		<now>20</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="sensor">
		<statevariables>
		</statevariables>
		<queue>
			<message arrival="20" deadline="infinity" sender="sensor">callSensor()</message>
		</queue>
		<now>20</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="hc_unit">
		<statevariables>
			<variable name="HC_Unit.heaterOn" type="boolean">false</variable>
			<variable name="HC_Unit.coolerOn" type="boolean">false</variable>
			<variable name="HC_Unit.currentRegulation" type="int">0</variable>
		</statevariables>
		<queue>
			<message arrival="25" deadline="infinity" sender="hc_unit">regulateTemp()</message>
		</queue>
		<now>20</now>
		<pc></pc>
		<res></res>
	</rebec>
</state>
<transition source="715_0" destination="718_0" executionTime="20" shift="0"> <messageserver sender="hc_unit" owner="room" title="SETREGULATION"/></transition>
<transition source="715_0" destination="717_0" executionTime="20" shift="0"> <messageserver sender="sensor" owner="sensor" title="CALLSENSOR"/></transition>
<transition source="716_0" destination="90_0" executionTime="20" shift="20"> <messageserver sender="room" owner="room" title="UPDATESTATUS"/></transition>
<transition source="716_0" destination="80_0" executionTime="20" shift="20"> <messageserver sender="room" owner="room" title="UPDATESTATUS"/></transition>
<transition source="716_0" destination="91_0" executionTime="20" shift="20"> <messageserver sender="room" owner="room" title="UPDATESTATUS"/></transition>
<state id="719_0" atomicpropositions="" >
	<rebec name="room">
		<statevariables>
			<variable name="Room.currentTemp" type="int">22</variable>
			<variable name="Room.currentRegulation" type="int">0</variable>
			<variable name="Room.outside_air" type="int">1</variable>
		</statevariables>
		<queue>
			<message arrival="20" deadline="infinity" sender="room">updateStatus()</message>
		</queue>
		<now>20</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="controller">
		<statevariables>
			<variable name="Controller.currentTemp" type="int">22</variable>
			<variable name="Controller.isHeating" type="boolean">false</variable>
			<variable name="Controller.isCooling" type="boolean">false</variable>
		</statevariables>
		<queue>
			<message arrival="20" deadline="infinity" sender="sensor">setCurrent(22)</message>
		</queue>
		<now>20</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="sensor">
		<statevariables>
		</statevariables>
		<queue>
			<message arrival="22" deadline="infinity" sender="sensor">callSensor()</message>
		</queue>
		<now>20</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="hc_unit">
		<statevariables>
			<variable name="HC_Unit.heaterOn" type="boolean">false</variable>
			<variable name="HC_Unit.coolerOn" type="boolean">false</variable>
			<variable name="HC_Unit.currentRegulation" type="int">0</variable>
		</statevariables>
		<queue>
			<message arrival="20" deadline="infinity" sender="hc_unit">regulateTemp()</message>
		</queue>
		<now>20</now>
		<pc></pc>
		<res></res>
	</rebec>
</state>
<transition source="716_0" destination="719_0" executionTime="20" shift="0"> <messageserver sender="room" owner="sensor" title="SETCURRENT"/></transition>
<state id="720_0" atomicpropositions="" >
	<rebec name="room">
		<statevariables>
			<variable name="Room.currentTemp" type="int">22</variable>
			<variable name="Room.currentRegulation" type="int">0</variable>
			<variable name="Room.outside_air" type="int">1</variable>
		</statevariables>
		<queue>
			<message arrival="20" deadline="infinity" sender="room">updateStatus()</message>
			<message arrival="20" deadline="infinity" sender="hc_unit">setRegulation(0)</message>
		</queue>
		<now>20</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="controller">
		<statevariables>
			<variable name="Controller.currentTemp" type="int">22</variable>
			<variable name="Controller.isHeating" type="boolean">false</variable>
			<variable name="Controller.isCooling" type="boolean">false</variable>
		</statevariables>
		<queue>
		</queue>
		<now>20</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="sensor">
		<statevariables>
		</statevariables>
		<queue>
			<message arrival="20" deadline="infinity" sender="room">setCurrent(22)</message>
			<message arrival="22" deadline="infinity" sender="sensor">callSensor()</message>
		</queue>
		<now>20</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="hc_unit">
		<statevariables>
			<variable name="HC_Unit.heaterOn" type="boolean">false</variable>
			<variable name="HC_Unit.coolerOn" type="boolean">false</variable>
			<variable name="HC_Unit.currentRegulation" type="int">0</variable>
		</statevariables>
		<queue>
			<message arrival="25" deadline="infinity" sender="hc_unit">regulateTemp()</message>
		</queue>
		<now>20</now>
		<pc></pc>
		<res></res>
	</rebec>
</state>
<transition source="716_0" destination="720_0" executionTime="20" shift="0"> <messageserver sender="hc_unit" owner="hc_unit" title="REGULATETEMP"/></transition>
<transition source="717_0" destination="15_0" executionTime="20" shift="20"> <messageserver sender="room" owner="room" title="UPDATESTATUS"/></transition>
<transition source="717_0" destination="19_0" executionTime="20" shift="20"> <messageserver sender="room" owner="room" title="UPDATESTATUS"/></transition>
<transition source="717_0" destination="17_0" executionTime="20" shift="20"> <messageserver sender="room" owner="room" title="UPDATESTATUS"/></transition>
<state id="721_0" atomicpropositions="" >
	<rebec name="room">
		<statevariables>
			<variable name="Room.currentTemp" type="int">22</variable>
			<variable name="Room.currentRegulation" type="int">0</variable>
			<variable name="Room.outside_air" type="int">1</variable>
		</statevariables>
		<queue>
			<message arrival="20" deadline="infinity" sender="room">updateStatus()</message>
			<message arrival="20" deadline="infinity" sender="sensor">getTemp()</message>
		</queue>
		<now>20</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="controller">
		<statevariables>
			<variable name="Controller.currentTemp" type="int">22</variable>
			<variable name="Controller.isHeating" type="boolean">false</variable>
			<variable name="Controller.isCooling" type="boolean">false</variable>
		</statevariables>
		<queue>
		</queue>
		<now>20</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="sensor">
		<statevariables>
		</statevariables>
		<queue>
			<message arrival="22" deadline="infinity" sender="sensor">callSensor()</message>
		</queue>
		<now>20</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="hc_unit">
		<statevariables>
			<variable name="HC_Unit.heaterOn" type="boolean">false</variable>
			<variable name="HC_Unit.coolerOn" type="boolean">false</variable>
			<variable name="HC_Unit.currentRegulation" type="int">0</variable>
		</statevariables>
		<queue>
			<message arrival="25" deadline="infinity" sender="hc_unit">regulateTemp()</message>
		</queue>
		<now>20</now>
		<pc></pc>
		<res></res>
	</rebec>
</state>
<transition source="717_0" destination="721_0" executionTime="20" shift="0"> <messageserver sender="hc_unit" owner="room" title="SETREGULATION"/></transition>
<transition source="717_0" destination="720_0" executionTime="20" shift="0"> <messageserver sender="sensor" owner="room" title="GETTEMP"/></transition>
<transition source="718_0" destination="14_0" executionTime="20" shift="20"> <messageserver sender="room" owner="room" title="UPDATESTATUS"/></transition>
<transition source="718_0" destination="18_0" executionTime="20" shift="20"> <messageserver sender="room" owner="room" title="UPDATESTATUS"/></transition>
<transition source="718_0" destination="70_0" executionTime="20" shift="20"> <messageserver sender="room" owner="room" title="UPDATESTATUS"/></transition>
<transition source="718_0" destination="721_0" executionTime="20" shift="0"> <messageserver sender="sensor" owner="sensor" title="CALLSENSOR"/></transition>
<transition source="720_0" destination="28_0" executionTime="20" shift="20"> <messageserver sender="room" owner="room" title="UPDATESTATUS"/></transition>
<transition source="720_0" destination="27_0" executionTime="20" shift="20"> <messageserver sender="room" owner="room" title="UPDATESTATUS"/></transition>
<transition source="720_0" destination="29_0" executionTime="20" shift="20"> <messageserver sender="room" owner="room" title="UPDATESTATUS"/></transition>
<state id="722_0" atomicpropositions="" >
	<rebec name="room">
		<statevariables>
			<variable name="Room.currentTemp" type="int">22</variable>
			<variable name="Room.currentRegulation" type="int">0</variable>
			<variable name="Room.outside_air" type="int">1</variable>
		</statevariables>
		<queue>
			<message arrival="20" deadline="infinity" sender="room">updateStatus()</message>
		</queue>
		<now>20</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="controller">
		<statevariables>
			<variable name="Controller.currentTemp" type="int">22</variable>
			<variable name="Controller.isHeating" type="boolean">false</variable>
			<variable name="Controller.isCooling" type="boolean">false</variable>
		</statevariables>
		<queue>
		</queue>
		<now>20</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="sensor">
		<statevariables>
		</statevariables>
		<queue>
			<message arrival="20" deadline="infinity" sender="room">setCurrent(22)</message>
			<message arrival="22" deadline="infinity" sender="sensor">callSensor()</message>
		</queue>
		<now>20</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="hc_unit">
		<statevariables>
			<variable name="HC_Unit.heaterOn" type="boolean">false</variable>
			<variable name="HC_Unit.coolerOn" type="boolean">false</variable>
			<variable name="HC_Unit.currentRegulation" type="int">0</variable>
		</statevariables>
		<queue>
			<message arrival="25" deadline="infinity" sender="hc_unit">regulateTemp()</message>
		</queue>
		<now>20</now>
		<pc></pc>
		<res></res>
	</rebec>
</state>
<transition source="720_0" destination="722_0" executionTime="20" shift="0"> <messageserver sender="hc_unit" owner="room" title="SETREGULATION"/></transition>
<state id="723_0" atomicpropositions="" >
	<rebec name="room">
		<statevariables>
			<variable name="Room.currentTemp" type="int">22</variable>
			<variable name="Room.currentRegulation" type="int">0</variable>
			<variable name="Room.outside_air" type="int">1</variable>
		</statevariables>
		<queue>
			<message arrival="20" deadline="infinity" sender="room">updateStatus()</message>
			<message arrival="20" deadline="infinity" sender="hc_unit">setRegulation(0)</message>
		</queue>
		<now>20</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="controller">
		<statevariables>
			<variable name="Controller.currentTemp" type="int">22</variable>
			<variable name="Controller.isHeating" type="boolean">false</variable>
			<variable name="Controller.isCooling" type="boolean">false</variable>
		</statevariables>
		<queue>
			<message arrival="20" deadline="infinity" sender="sensor">setCurrent(22)</message>
		</queue>
		<now>20</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="sensor">
		<statevariables>
		</statevariables>
		<queue>
			<message arrival="22" deadline="infinity" sender="sensor">callSensor()</message>
		</queue>
		<now>20</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="hc_unit">
		<statevariables>
			<variable name="HC_Unit.heaterOn" type="boolean">false</variable>
			<variable name="HC_Unit.coolerOn" type="boolean">false</variable>
			<variable name="HC_Unit.currentRegulation" type="int">0</variable>
		</statevariables>
		<queue>
			<message arrival="25" deadline="infinity" sender="hc_unit">regulateTemp()</message>
		</queue>
		<now>20</now>
		<pc></pc>
		<res></res>
	</rebec>
</state>
<transition source="720_0" destination="723_0" executionTime="20" shift="0"> <messageserver sender="room" owner="sensor" title="SETCURRENT"/></transition>
<transition source="721_0" destination="22_0" executionTime="20" shift="20"> <messageserver sender="room" owner="room" title="UPDATESTATUS"/></transition>
<transition source="721_0" destination="26_0" executionTime="20" shift="20"> <messageserver sender="room" owner="room" title="UPDATESTATUS"/></transition>
<transition source="721_0" destination="24_0" executionTime="20" shift="20"> <messageserver sender="room" owner="room" title="UPDATESTATUS"/></transition>
<transition source="721_0" destination="722_0" executionTime="20" shift="0"> <messageserver sender="sensor" owner="room" title="GETTEMP"/></transition>
<transition source="719_0" destination="94_0" executionTime="20" shift="20"> <messageserver sender="room" owner="room" title="UPDATESTATUS"/></transition>
<transition source="719_0" destination="82_0" executionTime="20" shift="20"> <messageserver sender="room" owner="room" title="UPDATESTATUS"/></transition>
<transition source="719_0" destination="95_0" executionTime="20" shift="20"> <messageserver sender="room" owner="room" title="UPDATESTATUS"/></transition>
<state id="724_0" atomicpropositions="" >
	<rebec name="room">
		<statevariables>
			<variable name="Room.currentTemp" type="int">22</variable>
			<variable name="Room.currentRegulation" type="int">0</variable>
			<variable name="Room.outside_air" type="int">1</variable>
		</statevariables>
		<queue>
			<message arrival="20" deadline="infinity" sender="room">updateStatus()</message>
		</queue>
		<now>20</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="controller">
		<statevariables>
			<variable name="Controller.currentTemp" type="int">22</variable>
			<variable name="Controller.isHeating" type="boolean">false</variable>
			<variable name="Controller.isCooling" type="boolean">false</variable>
		</statevariables>
		<queue>
			<message arrival="20" deadline="infinity" sender="controller">updateOutput()</message>
		</queue>
		<now>20</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="sensor">
		<statevariables>
		</statevariables>
		<queue>
			<message arrival="22" deadline="infinity" sender="sensor">callSensor()</message>
		</queue>
		<now>20</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="hc_unit">
		<statevariables>
			<variable name="HC_Unit.heaterOn" type="boolean">false</variable>
			<variable name="HC_Unit.coolerOn" type="boolean">false</variable>
			<variable name="HC_Unit.currentRegulation" type="int">0</variable>
		</statevariables>
		<queue>
			<message arrival="20" deadline="infinity" sender="hc_unit">regulateTemp()</message>
		</queue>
		<now>20</now>
		<pc></pc>
		<res></res>
	</rebec>
</state>
<transition source="719_0" destination="724_0" executionTime="20" shift="0"> <messageserver sender="sensor" owner="controller" title="SETCURRENT"/></transition>
<transition source="719_0" destination="723_0" executionTime="20" shift="0"> <messageserver sender="hc_unit" owner="hc_unit" title="REGULATETEMP"/></transition>
<transition source="723_0" destination="37_0" executionTime="20" shift="20"> <messageserver sender="room" owner="room" title="UPDATESTATUS"/></transition>
<transition source="723_0" destination="36_0" executionTime="20" shift="20"> <messageserver sender="room" owner="room" title="UPDATESTATUS"/></transition>
<transition source="723_0" destination="38_0" executionTime="20" shift="20"> <messageserver sender="room" owner="room" title="UPDATESTATUS"/></transition>
<state id="725_0" atomicpropositions="" >
	<rebec name="room">
		<statevariables>
			<variable name="Room.currentTemp" type="int">22</variable>
			<variable name="Room.currentRegulation" type="int">0</variable>
			<variable name="Room.outside_air" type="int">1</variable>
		</statevariables>
		<queue>
			<message arrival="20" deadline="infinity" sender="room">updateStatus()</message>
		</queue>
		<now>20</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="controller">
		<statevariables>
			<variable name="Controller.currentTemp" type="int">22</variable>
			<variable name="Controller.isHeating" type="boolean">false</variable>
			<variable name="Controller.isCooling" type="boolean">false</variable>
		</statevariables>
		<queue>
			<message arrival="20" deadline="infinity" sender="sensor">setCurrent(22)</message>
		</queue>
		<now>20</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="sensor">
		<statevariables>
		</statevariables>
		<queue>
			<message arrival="22" deadline="infinity" sender="sensor">callSensor()</message>
		</queue>
		<now>20</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="hc_unit">
		<statevariables>
			<variable name="HC_Unit.heaterOn" type="boolean">false</variable>
			<variable name="HC_Unit.coolerOn" type="boolean">false</variable>
			<variable name="HC_Unit.currentRegulation" type="int">0</variable>
		</statevariables>
		<queue>
			<message arrival="25" deadline="infinity" sender="hc_unit">regulateTemp()</message>
		</queue>
		<now>20</now>
		<pc></pc>
		<res></res>
	</rebec>
</state>
<transition source="723_0" destination="725_0" executionTime="20" shift="0"> <messageserver sender="hc_unit" owner="room" title="SETREGULATION"/></transition>
<state id="726_0" atomicpropositions="" >
	<rebec name="room">
		<statevariables>
			<variable name="Room.currentTemp" type="int">22</variable>
			<variable name="Room.currentRegulation" type="int">0</variable>
			<variable name="Room.outside_air" type="int">1</variable>
		</statevariables>
		<queue>
			<message arrival="20" deadline="infinity" sender="room">updateStatus()</message>
			<message arrival="20" deadline="infinity" sender="hc_unit">setRegulation(0)</message>
		</queue>
		<now>20</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="controller">
		<statevariables>
			<variable name="Controller.currentTemp" type="int">22</variable>
			<variable name="Controller.isHeating" type="boolean">false</variable>
			<variable name="Controller.isCooling" type="boolean">false</variable>
		</statevariables>
		<queue>
			<message arrival="20" deadline="infinity" sender="controller">updateOutput()</message>
		</queue>
		<now>20</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="sensor">
		<statevariables>
		</statevariables>
		<queue>
			<message arrival="22" deadline="infinity" sender="sensor">callSensor()</message>
		</queue>
		<now>20</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="hc_unit">
		<statevariables>
			<variable name="HC_Unit.heaterOn" type="boolean">false</variable>
			<variable name="HC_Unit.coolerOn" type="boolean">false</variable>
			<variable name="HC_Unit.currentRegulation" type="int">0</variable>
		</statevariables>
		<queue>
			<message arrival="25" deadline="infinity" sender="hc_unit">regulateTemp()</message>
		</queue>
		<now>20</now>
		<pc></pc>
		<res></res>
	</rebec>
</state>
<transition source="723_0" destination="726_0" executionTime="20" shift="0"> <messageserver sender="sensor" owner="controller" title="SETCURRENT"/></transition>
<transition source="722_0" destination="76_0" executionTime="20" shift="20"> <messageserver sender="room" owner="room" title="UPDATESTATUS"/></transition>
<transition source="722_0" destination="35_0" executionTime="20" shift="20"> <messageserver sender="room" owner="room" title="UPDATESTATUS"/></transition>
<transition source="722_0" destination="77_0" executionTime="20" shift="20"> <messageserver sender="room" owner="room" title="UPDATESTATUS"/></transition>
<transition source="722_0" destination="725_0" executionTime="20" shift="0"> <messageserver sender="room" owner="sensor" title="SETCURRENT"/></transition>
<transition source="724_0" destination="97_0" executionTime="20" shift="20"> <messageserver sender="room" owner="room" title="UPDATESTATUS"/></transition>
<transition source="724_0" destination="84_0" executionTime="20" shift="20"> <messageserver sender="room" owner="room" title="UPDATESTATUS"/></transition>
<transition source="724_0" destination="98_0" executionTime="20" shift="20"> <messageserver sender="room" owner="room" title="UPDATESTATUS"/></transition>
<state id="727_0" atomicpropositions="" >
	<rebec name="room">
		<statevariables>
			<variable name="Room.currentTemp" type="int">22</variable>
			<variable name="Room.currentRegulation" type="int">0</variable>
			<variable name="Room.outside_air" type="int">1</variable>
		</statevariables>
		<queue>
			<message arrival="20" deadline="infinity" sender="room">updateStatus()</message>
		</queue>
		<now>20</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="controller">
		<statevariables>
			<variable name="Controller.currentTemp" type="int">22</variable>
			<variable name="Controller.isHeating" type="boolean">false</variable>
			<variable name="Controller.isCooling" type="boolean">false</variable>
		</statevariables>
		<queue>
		</queue>
		<now>20</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="sensor">
		<statevariables>
		</statevariables>
		<queue>
			<message arrival="22" deadline="infinity" sender="sensor">callSensor()</message>
		</queue>
		<now>20</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="hc_unit">
		<statevariables>
			<variable name="HC_Unit.heaterOn" type="boolean">false</variable>
			<variable name="HC_Unit.coolerOn" type="boolean">false</variable>
			<variable name="HC_Unit.currentRegulation" type="int">0</variable>
		</statevariables>
		<queue>
			<message arrival="20" deadline="infinity" sender="hc_unit">regulateTemp()</message>
		</queue>
		<now>20</now>
		<pc></pc>
		<res></res>
	</rebec>
</state>
<transition source="724_0" destination="727_0" executionTime="20" shift="0"> <messageserver sender="controller" owner="controller" title="UPDATEOUTPUT"/></transition>
<transition source="724_0" destination="726_0" executionTime="20" shift="0"> <messageserver sender="hc_unit" owner="hc_unit" title="REGULATETEMP"/></transition>
<transition source="726_0" destination="46_0" executionTime="20" shift="20"> <messageserver sender="room" owner="room" title="UPDATESTATUS"/></transition>
<transition source="726_0" destination="45_0" executionTime="20" shift="20"> <messageserver sender="room" owner="room" title="UPDATESTATUS"/></transition>
<transition source="726_0" destination="47_0" executionTime="20" shift="20"> <messageserver sender="room" owner="room" title="UPDATESTATUS"/></transition>
<state id="728_0" atomicpropositions="" >
	<rebec name="room">
		<statevariables>
			<variable name="Room.currentTemp" type="int">22</variable>
			<variable name="Room.currentRegulation" type="int">0</variable>
			<variable name="Room.outside_air" type="int">1</variable>
		</statevariables>
		<queue>
			<message arrival="20" deadline="infinity" sender="room">updateStatus()</message>
		</queue>
		<now>20</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="controller">
		<statevariables>
			<variable name="Controller.currentTemp" type="int">22</variable>
			<variable name="Controller.isHeating" type="boolean">false</variable>
			<variable name="Controller.isCooling" type="boolean">false</variable>
		</statevariables>
		<queue>
			<message arrival="20" deadline="infinity" sender="controller">updateOutput()</message>
		</queue>
		<now>20</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="sensor">
		<statevariables>
		</statevariables>
		<queue>
			<message arrival="22" deadline="infinity" sender="sensor">callSensor()</message>
		</queue>
		<now>20</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="hc_unit">
		<statevariables>
			<variable name="HC_Unit.heaterOn" type="boolean">false</variable>
			<variable name="HC_Unit.coolerOn" type="boolean">false</variable>
			<variable name="HC_Unit.currentRegulation" type="int">0</variable>
		</statevariables>
		<queue>
			<message arrival="25" deadline="infinity" sender="hc_unit">regulateTemp()</message>
		</queue>
		<now>20</now>
		<pc></pc>
		<res></res>
	</rebec>
</state>
<transition source="726_0" destination="728_0" executionTime="20" shift="0"> <messageserver sender="hc_unit" owner="room" title="SETREGULATION"/></transition>
<state id="729_0" atomicpropositions="" >
	<rebec name="room">
		<statevariables>
			<variable name="Room.currentTemp" type="int">22</variable>
			<variable name="Room.currentRegulation" type="int">0</variable>
			<variable name="Room.outside_air" type="int">1</variable>
		</statevariables>
		<queue>
			<message arrival="20" deadline="infinity" sender="room">updateStatus()</message>
			<message arrival="20" deadline="infinity" sender="hc_unit">setRegulation(0)</message>
		</queue>
		<now>20</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="controller">
		<statevariables>
			<variable name="Controller.currentTemp" type="int">22</variable>
			<variable name="Controller.isHeating" type="boolean">false</variable>
			<variable name="Controller.isCooling" type="boolean">false</variable>
		</statevariables>
		<queue>
		</queue>
		<now>20</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="sensor">
		<statevariables>
		</statevariables>
		<queue>
			<message arrival="22" deadline="infinity" sender="sensor">callSensor()</message>
		</queue>
		<now>20</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="hc_unit">
		<statevariables>
			<variable name="HC_Unit.heaterOn" type="boolean">false</variable>
			<variable name="HC_Unit.coolerOn" type="boolean">false</variable>
			<variable name="HC_Unit.currentRegulation" type="int">0</variable>
		</statevariables>
		<queue>
			<message arrival="25" deadline="infinity" sender="hc_unit">regulateTemp()</message>
		</queue>
		<now>20</now>
		<pc></pc>
		<res></res>
	</rebec>
</state>
<transition source="726_0" destination="729_0" executionTime="20" shift="0"> <messageserver sender="controller" owner="controller" title="UPDATEOUTPUT"/></transition>
<transition source="725_0" destination="74_0" executionTime="20" shift="20"> <messageserver sender="room" owner="room" title="UPDATESTATUS"/></transition>
<transition source="725_0" destination="44_0" executionTime="20" shift="20"> <messageserver sender="room" owner="room" title="UPDATESTATUS"/></transition>
<transition source="725_0" destination="75_0" executionTime="20" shift="20"> <messageserver sender="room" owner="room" title="UPDATESTATUS"/></transition>
<transition source="725_0" destination="728_0" executionTime="20" shift="0"> <messageserver sender="sensor" owner="controller" title="SETCURRENT"/></transition>
<transition source="727_0" destination="100_0" executionTime="20" shift="20"> <messageserver sender="room" owner="room" title="UPDATESTATUS"/></transition>
<transition source="727_0" destination="86_0" executionTime="20" shift="20"> <messageserver sender="room" owner="room" title="UPDATESTATUS"/></transition>
<transition source="727_0" destination="101_0" executionTime="20" shift="20"> <messageserver sender="room" owner="room" title="UPDATESTATUS"/></transition>
<transition source="727_0" destination="729_0" executionTime="20" shift="0"> <messageserver sender="hc_unit" owner="hc_unit" title="REGULATETEMP"/></transition>
<transition source="729_0" destination="55_0" executionTime="20" shift="20"> <messageserver sender="room" owner="room" title="UPDATESTATUS"/></transition>
<transition source="729_0" destination="54_0" executionTime="20" shift="20"> <messageserver sender="room" owner="room" title="UPDATESTATUS"/></transition>
<transition source="729_0" destination="56_0" executionTime="20" shift="20"> <messageserver sender="room" owner="room" title="UPDATESTATUS"/></transition>
<state id="730_0" atomicpropositions="" >
	<rebec name="room">
		<statevariables>
			<variable name="Room.currentTemp" type="int">22</variable>
			<variable name="Room.currentRegulation" type="int">0</variable>
			<variable name="Room.outside_air" type="int">1</variable>
		</statevariables>
		<queue>
			<message arrival="20" deadline="infinity" sender="room">updateStatus()</message>
		</queue>
		<now>20</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="controller">
		<statevariables>
			<variable name="Controller.currentTemp" type="int">22</variable>
			<variable name="Controller.isHeating" type="boolean">false</variable>
			<variable name="Controller.isCooling" type="boolean">false</variable>
		</statevariables>
		<queue>
		</queue>
		<now>20</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="sensor">
		<statevariables>
		</statevariables>
		<queue>
			<message arrival="22" deadline="infinity" sender="sensor">callSensor()</message>
		</queue>
		<now>20</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="hc_unit">
		<statevariables>
			<variable name="HC_Unit.heaterOn" type="boolean">false</variable>
			<variable name="HC_Unit.coolerOn" type="boolean">false</variable>
			<variable name="HC_Unit.currentRegulation" type="int">0</variable>
		</statevariables>
		<queue>
			<message arrival="25" deadline="infinity" sender="hc_unit">regulateTemp()</message>
		</queue>
		<now>20</now>
		<pc></pc>
		<res></res>
	</rebec>
</state>
<transition source="729_0" destination="730_0" executionTime="20" shift="0"> <messageserver sender="hc_unit" owner="room" title="SETREGULATION"/></transition>
<transition source="728_0" destination="72_0" executionTime="20" shift="20"> <messageserver sender="room" owner="room" title="UPDATESTATUS"/></transition>
<transition source="728_0" destination="53_0" executionTime="20" shift="20"> <messageserver sender="room" owner="room" title="UPDATESTATUS"/></transition>
<transition source="728_0" destination="73_0" executionTime="20" shift="20"> <messageserver sender="room" owner="room" title="UPDATESTATUS"/></transition>
<transition source="728_0" destination="730_0" executionTime="20" shift="0"> <messageserver sender="controller" owner="controller" title="UPDATEOUTPUT"/></transition>
<transition source="730_0" destination="64_0" executionTime="20" shift="20"> <messageserver sender="room" owner="room" title="UPDATESTATUS"/></transition>
<transition source="730_0" destination="62_0" executionTime="20" shift="20"> <messageserver sender="room" owner="room" title="UPDATESTATUS"/></transition>
<transition source="730_0" destination="66_0" executionTime="20" shift="20"> <messageserver sender="room" owner="room" title="UPDATESTATUS"/></transition>
<transition source="595_0" destination="193_0" executionTime="20" shift="10"> <messageserver sender="room" owner="room" title="UPDATESTATUS"/></transition>
<transition source="595_0" destination="194_0" executionTime="20" shift="10"> <messageserver sender="room" owner="room" title="UPDATESTATUS"/></transition>
<transition source="595_0" destination="195_0" executionTime="20" shift="10"> <messageserver sender="room" owner="room" title="UPDATESTATUS"/></transition>
<state id="731_0" atomicpropositions="" >
	<rebec name="room">
		<statevariables>
			<variable name="Room.currentTemp" type="int">23</variable>
			<variable name="Room.currentRegulation" type="int">0</variable>
			<variable name="Room.outside_air" type="int">0</variable>
		</statevariables>
		<queue>
			<message arrival="20" deadline="infinity" sender="room">updateStatus()</message>
			<message arrival="20" deadline="infinity" sender="sensor">getTemp()</message>
		</queue>
		<now>20</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="controller">
		<statevariables>
			<variable name="Controller.currentTemp" type="int">23</variable>
			<variable name="Controller.isHeating" type="boolean">false</variable>
			<variable name="Controller.isCooling" type="boolean">false</variable>
		</statevariables>
		<queue>
		</queue>
		<now>20</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="sensor">
		<statevariables>
		</statevariables>
		<queue>
			<message arrival="22" deadline="infinity" sender="sensor">callSensor()</message>
		</queue>
		<now>20</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="hc_unit">
		<statevariables>
			<variable name="HC_Unit.heaterOn" type="boolean">false</variable>
			<variable name="HC_Unit.coolerOn" type="boolean">false</variable>
			<variable name="HC_Unit.currentRegulation" type="int">0</variable>
		</statevariables>
		<queue>
			<message arrival="20" deadline="infinity" sender="hc_unit">regulateTemp()</message>
		</queue>
		<now>20</now>
		<pc></pc>
		<res></res>
	</rebec>
</state>
<transition source="595_0" destination="731_0" executionTime="20" shift="0"> <messageserver sender="sensor" owner="sensor" title="CALLSENSOR"/></transition>
<state id="732_0" atomicpropositions="" >
	<rebec name="room">
		<statevariables>
			<variable name="Room.currentTemp" type="int">23</variable>
			<variable name="Room.currentRegulation" type="int">0</variable>
			<variable name="Room.outside_air" type="int">0</variable>
		</statevariables>
		<queue>
			<message arrival="20" deadline="infinity" sender="room">updateStatus()</message>
			<message arrival="20" deadline="infinity" sender="hc_unit">setRegulation(0)</message>
		</queue>
		<now>20</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="controller">
		<statevariables>
			<variable name="Controller.currentTemp" type="int">23</variable>
			<variable name="Controller.isHeating" type="boolean">false</variable>
			<variable name="Controller.isCooling" type="boolean">false</variable>
		</statevariables>
		<queue>
		</queue>
		<now>20</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="sensor">
		<statevariables>
		</statevariables>
		<queue>
			<message arrival="20" deadline="infinity" sender="sensor">callSensor()</message>
		</queue>
		<now>20</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="hc_unit">
		<statevariables>
			<variable name="HC_Unit.heaterOn" type="boolean">false</variable>
			<variable name="HC_Unit.coolerOn" type="boolean">false</variable>
			<variable name="HC_Unit.currentRegulation" type="int">0</variable>
		</statevariables>
		<queue>
			<message arrival="25" deadline="infinity" sender="hc_unit">regulateTemp()</message>
		</queue>
		<now>20</now>
		<pc></pc>
		<res></res>
	</rebec>
</state>
<transition source="595_0" destination="732_0" executionTime="20" shift="0"> <messageserver sender="hc_unit" owner="hc_unit" title="REGULATETEMP"/></transition>
<transition source="611_0" destination="7_0" executionTime="20" shift="20"> <messageserver sender="room" owner="room" title="UPDATESTATUS"/></transition>
<transition source="611_0" destination="78_0" executionTime="20" shift="20"> <messageserver sender="room" owner="room" title="UPDATESTATUS"/></transition>
<transition source="611_0" destination="9_0" executionTime="20" shift="20"> <messageserver sender="room" owner="room" title="UPDATESTATUS"/></transition>
<state id="733_0" atomicpropositions="" >
	<rebec name="room">
		<statevariables>
			<variable name="Room.currentTemp" type="int">22</variable>
			<variable name="Room.currentRegulation" type="int">0</variable>
			<variable name="Room.outside_air" type="int">-1</variable>
		</statevariables>
		<queue>
			<message arrival="20" deadline="infinity" sender="room">updateStatus()</message>
		</queue>
		<now>20</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="controller">
		<statevariables>
			<variable name="Controller.currentTemp" type="int">22</variable>
			<variable name="Controller.isHeating" type="boolean">false</variable>
			<variable name="Controller.isCooling" type="boolean">false</variable>
		</statevariables>
		<queue>
		</queue>
		<now>20</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="sensor">
		<statevariables>
		</statevariables>
		<queue>
			<message arrival="20" deadline="infinity" sender="room">setCurrent(22)</message>
			<message arrival="22" deadline="infinity" sender="sensor">callSensor()</message>
		</queue>
		<now>20</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="hc_unit">
		<statevariables>
			<variable name="HC_Unit.heaterOn" type="boolean">false</variable>
			<variable name="HC_Unit.coolerOn" type="boolean">false</variable>
			<variable name="HC_Unit.currentRegulation" type="int">0</variable>
		</statevariables>
		<queue>
			<message arrival="20" deadline="infinity" sender="hc_unit">regulateTemp()</message>
		</queue>
		<now>20</now>
		<pc></pc>
		<res></res>
	</rebec>
</state>
<transition source="611_0" destination="733_0" executionTime="20" shift="0"> <messageserver sender="sensor" owner="room" title="GETTEMP"/></transition>
<transition source="611_0" destination="622_0" executionTime="20" shift="0"> <messageserver sender="hc_unit" owner="hc_unit" title="REGULATETEMP"/></transition>
<transition source="609_0" destination="615_0" executionTime="20" shift="0"> <messageserver sender="room" owner="room" title="UPDATESTATUS"/></transition>
<state id="734_0" atomicpropositions="isHeating," >
	<rebec name="room">
		<statevariables>
			<variable name="Room.currentTemp" type="int">21</variable>
			<variable name="Room.currentRegulation" type="int">1</variable>
			<variable name="Room.outside_air" type="int">0</variable>
		</statevariables>
		<queue>
			<message arrival="20" deadline="infinity" sender="sensor">getTemp()</message>
			<message arrival="30" deadline="infinity" sender="room">updateStatus()</message>
		</queue>
		<now>20</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="controller">
		<statevariables>
			<variable name="Controller.currentTemp" type="int">20</variable>
			<variable name="Controller.isHeating" type="boolean">true</variable>
			<variable name="Controller.isCooling" type="boolean">false</variable>
		</statevariables>
		<queue>
		</queue>
		<now>20</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="sensor">
		<statevariables>
		</statevariables>
		<queue>
			<message arrival="22" deadline="infinity" sender="sensor">callSensor()</message>
		</queue>
		<now>20</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="hc_unit">
		<statevariables>
			<variable name="HC_Unit.heaterOn" type="boolean">true</variable>
			<variable name="HC_Unit.coolerOn" type="boolean">false</variable>
			<variable name="HC_Unit.currentRegulation" type="int">1</variable>
		</statevariables>
		<queue>
			<message arrival="20" deadline="infinity" sender="hc_unit">regulateTemp()</message>
		</queue>
		<now>20</now>
		<pc></pc>
		<res></res>
	</rebec>
</state>
<transition source="609_0" destination="734_0" executionTime="20" shift="0"> <messageserver sender="room" owner="room" title="UPDATESTATUS"/></transition>
<state id="735_0" atomicpropositions="isHeating," >
	<rebec name="room">
		<statevariables>
			<variable name="Room.currentTemp" type="int">22</variable>
			<variable name="Room.currentRegulation" type="int">1</variable>
			<variable name="Room.outside_air" type="int">-1</variable>
		</statevariables>
		<queue>
			<message arrival="20" deadline="infinity" sender="sensor">getTemp()</message>
			<message arrival="30" deadline="infinity" sender="room">updateStatus()</message>
		</queue>
		<now>20</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="controller">
		<statevariables>
			<variable name="Controller.currentTemp" type="int">20</variable>
			<variable name="Controller.isHeating" type="boolean">true</variable>
			<variable name="Controller.isCooling" type="boolean">false</variable>
		</statevariables>
		<queue>
		</queue>
		<now>20</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="sensor">
		<statevariables>
		</statevariables>
		<queue>
			<message arrival="22" deadline="infinity" sender="sensor">callSensor()</message>
		</queue>
		<now>20</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="hc_unit">
		<statevariables>
			<variable name="HC_Unit.heaterOn" type="boolean">true</variable>
			<variable name="HC_Unit.coolerOn" type="boolean">false</variable>
			<variable name="HC_Unit.currentRegulation" type="int">1</variable>
		</statevariables>
		<queue>
			<message arrival="20" deadline="infinity" sender="hc_unit">regulateTemp()</message>
		</queue>
		<now>20</now>
		<pc></pc>
		<res></res>
	</rebec>
</state>
<transition source="609_0" destination="735_0" executionTime="20" shift="0"> <messageserver sender="room" owner="room" title="UPDATESTATUS"/></transition>
<state id="736_0" atomicpropositions="isHeating," >
	<rebec name="room">
		<statevariables>
			<variable name="Room.currentTemp" type="int">20</variable>
			<variable name="Room.currentRegulation" type="int">1</variable>
			<variable name="Room.outside_air" type="int">1</variable>
		</statevariables>
		<queue>
			<message arrival="20" deadline="infinity" sender="room">updateStatus()</message>
		</queue>
		<now>20</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="controller">
		<statevariables>
			<variable name="Controller.currentTemp" type="int">20</variable>
			<variable name="Controller.isHeating" type="boolean">true</variable>
			<variable name="Controller.isCooling" type="boolean">false</variable>
		</statevariables>
		<queue>
		</queue>
		<now>20</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="sensor">
		<statevariables>
		</statevariables>
		<queue>
			<message arrival="20" deadline="infinity" sender="room">setCurrent(20)</message>
			<message arrival="22" deadline="infinity" sender="sensor">callSensor()</message>
		</queue>
		<now>20</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="hc_unit">
		<statevariables>
			<variable name="HC_Unit.heaterOn" type="boolean">true</variable>
			<variable name="HC_Unit.coolerOn" type="boolean">false</variable>
			<variable name="HC_Unit.currentRegulation" type="int">1</variable>
		</statevariables>
		<queue>
			<message arrival="20" deadline="infinity" sender="hc_unit">regulateTemp()</message>
		</queue>
		<now>20</now>
		<pc></pc>
		<res></res>
	</rebec>
</state>
<transition source="609_0" destination="736_0" executionTime="20" shift="0"> <messageserver sender="sensor" owner="room" title="GETTEMP"/></transition>
<transition source="609_0" destination="620_0" executionTime="20" shift="0"> <messageserver sender="hc_unit" owner="hc_unit" title="REGULATETEMP"/></transition>
<transition source="731_0" destination="296_0" executionTime="20" shift="10"> <messageserver sender="room" owner="room" title="UPDATESTATUS"/></transition>
<transition source="731_0" destination="204_0" executionTime="20" shift="10"> <messageserver sender="room" owner="room" title="UPDATESTATUS"/></transition>
<transition source="731_0" destination="378_0" executionTime="20" shift="10"> <messageserver sender="room" owner="room" title="UPDATESTATUS"/></transition>
<state id="737_0" atomicpropositions="" >
	<rebec name="room">
		<statevariables>
			<variable name="Room.currentTemp" type="int">23</variable>
			<variable name="Room.currentRegulation" type="int">0</variable>
			<variable name="Room.outside_air" type="int">0</variable>
		</statevariables>
		<queue>
			<message arrival="20" deadline="infinity" sender="room">updateStatus()</message>
		</queue>
		<now>20</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="controller">
		<statevariables>
			<variable name="Controller.currentTemp" type="int">23</variable>
			<variable name="Controller.isHeating" type="boolean">false</variable>
			<variable name="Controller.isCooling" type="boolean">false</variable>
		</statevariables>
		<queue>
		</queue>
		<now>20</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="sensor">
		<statevariables>
		</statevariables>
		<queue>
			<message arrival="20" deadline="infinity" sender="room">setCurrent(23)</message>
			<message arrival="22" deadline="infinity" sender="sensor">callSensor()</message>
		</queue>
		<now>20</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="hc_unit">
		<statevariables>
			<variable name="HC_Unit.heaterOn" type="boolean">false</variable>
			<variable name="HC_Unit.coolerOn" type="boolean">false</variable>
			<variable name="HC_Unit.currentRegulation" type="int">0</variable>
		</statevariables>
		<queue>
			<message arrival="20" deadline="infinity" sender="hc_unit">regulateTemp()</message>
		</queue>
		<now>20</now>
		<pc></pc>
		<res></res>
	</rebec>
</state>
<transition source="731_0" destination="737_0" executionTime="20" shift="0"> <messageserver sender="sensor" owner="room" title="GETTEMP"/></transition>
<state id="738_0" atomicpropositions="" >
	<rebec name="room">
		<statevariables>
			<variable name="Room.currentTemp" type="int">23</variable>
			<variable name="Room.currentRegulation" type="int">0</variable>
			<variable name="Room.outside_air" type="int">0</variable>
		</statevariables>
		<queue>
			<message arrival="20" deadline="infinity" sender="room">updateStatus()</message>
			<message arrival="20" deadline="infinity" sender="hc_unit">setRegulation(0)</message>
			<message arrival="20" deadline="infinity" sender="sensor">getTemp()</message>
		</queue>
		<now>20</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="controller">
		<statevariables>
			<variable name="Controller.currentTemp" type="int">23</variable>
			<variable name="Controller.isHeating" type="boolean">false</variable>
			<variable name="Controller.isCooling" type="boolean">false</variable>
		</statevariables>
		<queue>
		</queue>
		<now>20</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="sensor">
		<statevariables>
		</statevariables>
		<queue>
			<message arrival="22" deadline="infinity" sender="sensor">callSensor()</message>
		</queue>
		<now>20</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="hc_unit">
		<statevariables>
			<variable name="HC_Unit.heaterOn" type="boolean">false</variable>
			<variable name="HC_Unit.coolerOn" type="boolean">false</variable>
			<variable name="HC_Unit.currentRegulation" type="int">0</variable>
		</statevariables>
		<queue>
			<message arrival="25" deadline="infinity" sender="hc_unit">regulateTemp()</message>
		</queue>
		<now>20</now>
		<pc></pc>
		<res></res>
	</rebec>
</state>
<transition source="731_0" destination="738_0" executionTime="20" shift="0"> <messageserver sender="hc_unit" owner="hc_unit" title="REGULATETEMP"/></transition>
<state id="739_0" atomicpropositions="isHeating," >
	<rebec name="room">
		<statevariables>
			<variable name="Room.currentTemp" type="int">22</variable>
			<variable name="Room.currentRegulation" type="int">1</variable>
			<variable name="Room.outside_air" type="int">-1</variable>
		</statevariables>
		<queue>
			<message arrival="30" deadline="infinity" sender="room">updateStatus()</message>
		</queue>
		<now>20</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="controller">
		<statevariables>
			<variable name="Controller.currentTemp" type="int">20</variable>
			<variable name="Controller.isHeating" type="boolean">true</variable>
			<variable name="Controller.isCooling" type="boolean">false</variable>
		</statevariables>
		<queue>
		</queue>
		<now>20</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="sensor">
		<statevariables>
		</statevariables>
		<queue>
			<message arrival="20" deadline="infinity" sender="room">setCurrent(22)</message>
			<message arrival="22" deadline="infinity" sender="sensor">callSensor()</message>
		</queue>
		<now>20</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="hc_unit">
		<statevariables>
			<variable name="HC_Unit.heaterOn" type="boolean">true</variable>
			<variable name="HC_Unit.coolerOn" type="boolean">false</variable>
			<variable name="HC_Unit.currentRegulation" type="int">1</variable>
		</statevariables>
		<queue>
			<message arrival="20" deadline="infinity" sender="hc_unit">regulateTemp()</message>
		</queue>
		<now>20</now>
		<pc></pc>
		<res></res>
	</rebec>
</state>
<transition source="735_0" destination="739_0" executionTime="20" shift="0"> <messageserver sender="sensor" owner="room" title="GETTEMP"/></transition>
<transition source="735_0" destination="628_0" executionTime="20" shift="0"> <messageserver sender="hc_unit" owner="hc_unit" title="REGULATETEMP"/></transition>
<transition source="736_0" destination="699_0" executionTime="20" shift="0"> <messageserver sender="room" owner="room" title="UPDATESTATUS"/></transition>
<state id="740_0" atomicpropositions="isHeating," >
	<rebec name="room">
		<statevariables>
			<variable name="Room.currentTemp" type="int">21</variable>
			<variable name="Room.currentRegulation" type="int">1</variable>
			<variable name="Room.outside_air" type="int">0</variable>
		</statevariables>
		<queue>
			<message arrival="30" deadline="infinity" sender="room">updateStatus()</message>
		</queue>
		<now>20</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="controller">
		<statevariables>
			<variable name="Controller.currentTemp" type="int">20</variable>
			<variable name="Controller.isHeating" type="boolean">true</variable>
			<variable name="Controller.isCooling" type="boolean">false</variable>
		</statevariables>
		<queue>
		</queue>
		<now>20</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="sensor">
		<statevariables>
		</statevariables>
		<queue>
			<message arrival="20" deadline="infinity" sender="room">setCurrent(20)</message>
			<message arrival="22" deadline="infinity" sender="sensor">callSensor()</message>
		</queue>
		<now>20</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="hc_unit">
		<statevariables>
			<variable name="HC_Unit.heaterOn" type="boolean">true</variable>
			<variable name="HC_Unit.coolerOn" type="boolean">false</variable>
			<variable name="HC_Unit.currentRegulation" type="int">1</variable>
		</statevariables>
		<queue>
			<message arrival="20" deadline="infinity" sender="hc_unit">regulateTemp()</message>
		</queue>
		<now>20</now>
		<pc></pc>
		<res></res>
	</rebec>
</state>
<transition source="736_0" destination="740_0" executionTime="20" shift="0"> <messageserver sender="room" owner="room" title="UPDATESTATUS"/></transition>
<state id="741_0" atomicpropositions="isHeating," >
	<rebec name="room">
		<statevariables>
			<variable name="Room.currentTemp" type="int">22</variable>
			<variable name="Room.currentRegulation" type="int">1</variable>
			<variable name="Room.outside_air" type="int">-1</variable>
		</statevariables>
		<queue>
			<message arrival="30" deadline="infinity" sender="room">updateStatus()</message>
		</queue>
		<now>20</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="controller">
		<statevariables>
			<variable name="Controller.currentTemp" type="int">20</variable>
			<variable name="Controller.isHeating" type="boolean">true</variable>
			<variable name="Controller.isCooling" type="boolean">false</variable>
		</statevariables>
		<queue>
		</queue>
		<now>20</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="sensor">
		<statevariables>
		</statevariables>
		<queue>
			<message arrival="20" deadline="infinity" sender="room">setCurrent(20)</message>
			<message arrival="22" deadline="infinity" sender="sensor">callSensor()</message>
		</queue>
		<now>20</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="hc_unit">
		<statevariables>
			<variable name="HC_Unit.heaterOn" type="boolean">true</variable>
			<variable name="HC_Unit.coolerOn" type="boolean">false</variable>
			<variable name="HC_Unit.currentRegulation" type="int">1</variable>
		</statevariables>
		<queue>
			<message arrival="20" deadline="infinity" sender="hc_unit">regulateTemp()</message>
		</queue>
		<now>20</now>
		<pc></pc>
		<res></res>
	</rebec>
</state>
<transition source="736_0" destination="741_0" executionTime="20" shift="0"> <messageserver sender="room" owner="room" title="UPDATESTATUS"/></transition>
<state id="742_0" atomicpropositions="isHeating," >
	<rebec name="room">
		<statevariables>
			<variable name="Room.currentTemp" type="int">20</variable>
			<variable name="Room.currentRegulation" type="int">1</variable>
			<variable name="Room.outside_air" type="int">1</variable>
		</statevariables>
		<queue>
			<message arrival="20" deadline="infinity" sender="room">updateStatus()</message>
		</queue>
		<now>20</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="controller">
		<statevariables>
			<variable name="Controller.currentTemp" type="int">20</variable>
			<variable name="Controller.isHeating" type="boolean">true</variable>
			<variable name="Controller.isCooling" type="boolean">false</variable>
		</statevariables>
		<queue>
			<message arrival="20" deadline="infinity" sender="sensor">setCurrent(20)</message>
		</queue>
		<now>20</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="sensor">
		<statevariables>
		</statevariables>
		<queue>
			<message arrival="22" deadline="infinity" sender="sensor">callSensor()</message>
		</queue>
		<now>20</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="hc_unit">
		<statevariables>
			<variable name="HC_Unit.heaterOn" type="boolean">true</variable>
			<variable name="HC_Unit.coolerOn" type="boolean">false</variable>
			<variable name="HC_Unit.currentRegulation" type="int">1</variable>
		</statevariables>
		<queue>
			<message arrival="20" deadline="infinity" sender="hc_unit">regulateTemp()</message>
		</queue>
		<now>20</now>
		<pc></pc>
		<res></res>
	</rebec>
</state>
<transition source="736_0" destination="742_0" executionTime="20" shift="0"> <messageserver sender="room" owner="sensor" title="SETCURRENT"/></transition>
<transition source="736_0" destination="631_0" executionTime="20" shift="0"> <messageserver sender="hc_unit" owner="hc_unit" title="REGULATETEMP"/></transition>
<transition source="738_0" destination="219_0" executionTime="20" shift="10"> <messageserver sender="room" owner="room" title="UPDATESTATUS"/></transition>
<transition source="738_0" destination="217_0" executionTime="20" shift="10"> <messageserver sender="room" owner="room" title="UPDATESTATUS"/></transition>
<transition source="738_0" destination="220_0" executionTime="20" shift="10"> <messageserver sender="room" owner="room" title="UPDATESTATUS"/></transition>
<state id="743_0" atomicpropositions="" >
	<rebec name="room">
		<statevariables>
			<variable name="Room.currentTemp" type="int">23</variable>
			<variable name="Room.currentRegulation" type="int">0</variable>
			<variable name="Room.outside_air" type="int">0</variable>
		</statevariables>
		<queue>
			<message arrival="20" deadline="infinity" sender="room">updateStatus()</message>
			<message arrival="20" deadline="infinity" sender="sensor">getTemp()</message>
		</queue>
		<now>20</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="controller">
		<statevariables>
			<variable name="Controller.currentTemp" type="int">23</variable>
			<variable name="Controller.isHeating" type="boolean">false</variable>
			<variable name="Controller.isCooling" type="boolean">false</variable>
		</statevariables>
		<queue>
		</queue>
		<now>20</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="sensor">
		<statevariables>
		</statevariables>
		<queue>
			<message arrival="22" deadline="infinity" sender="sensor">callSensor()</message>
		</queue>
		<now>20</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="hc_unit">
		<statevariables>
			<variable name="HC_Unit.heaterOn" type="boolean">false</variable>
			<variable name="HC_Unit.coolerOn" type="boolean">false</variable>
			<variable name="HC_Unit.currentRegulation" type="int">0</variable>
		</statevariables>
		<queue>
			<message arrival="25" deadline="infinity" sender="hc_unit">regulateTemp()</message>
		</queue>
		<now>20</now>
		<pc></pc>
		<res></res>
	</rebec>
</state>
<transition source="738_0" destination="743_0" executionTime="20" shift="0"> <messageserver sender="hc_unit" owner="room" title="SETREGULATION"/></transition>
<state id="744_0" atomicpropositions="" >
	<rebec name="room">
		<statevariables>
			<variable name="Room.currentTemp" type="int">23</variable>
			<variable name="Room.currentRegulation" type="int">0</variable>
			<variable name="Room.outside_air" type="int">0</variable>
		</statevariables>
		<queue>
			<message arrival="20" deadline="infinity" sender="room">updateStatus()</message>
			<message arrival="20" deadline="infinity" sender="hc_unit">setRegulation(0)</message>
		</queue>
		<now>20</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="controller">
		<statevariables>
			<variable name="Controller.currentTemp" type="int">23</variable>
			<variable name="Controller.isHeating" type="boolean">false</variable>
			<variable name="Controller.isCooling" type="boolean">false</variable>
		</statevariables>
		<queue>
		</queue>
		<now>20</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="sensor">
		<statevariables>
		</statevariables>
		<queue>
			<message arrival="20" deadline="infinity" sender="room">setCurrent(23)</message>
			<message arrival="22" deadline="infinity" sender="sensor">callSensor()</message>
		</queue>
		<now>20</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="hc_unit">
		<statevariables>
			<variable name="HC_Unit.heaterOn" type="boolean">false</variable>
			<variable name="HC_Unit.coolerOn" type="boolean">false</variable>
			<variable name="HC_Unit.currentRegulation" type="int">0</variable>
		</statevariables>
		<queue>
			<message arrival="25" deadline="infinity" sender="hc_unit">regulateTemp()</message>
		</queue>
		<now>20</now>
		<pc></pc>
		<res></res>
	</rebec>
</state>
<transition source="738_0" destination="744_0" executionTime="20" shift="0"> <messageserver sender="sensor" owner="room" title="GETTEMP"/></transition>
<state id="745_0" atomicpropositions="isHeating," >
	<rebec name="room">
		<statevariables>
			<variable name="Room.currentTemp" type="int">22</variable>
			<variable name="Room.currentRegulation" type="int">1</variable>
			<variable name="Room.outside_air" type="int">-1</variable>
		</statevariables>
		<queue>
			<message arrival="30" deadline="infinity" sender="room">updateStatus()</message>
		</queue>
		<now>20</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="controller">
		<statevariables>
			<variable name="Controller.currentTemp" type="int">20</variable>
			<variable name="Controller.isHeating" type="boolean">true</variable>
			<variable name="Controller.isCooling" type="boolean">false</variable>
		</statevariables>
		<queue>
			<message arrival="20" deadline="infinity" sender="sensor">setCurrent(22)</message>
		</queue>
		<now>20</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="sensor">
		<statevariables>
		</statevariables>
		<queue>
			<message arrival="22" deadline="infinity" sender="sensor">callSensor()</message>
		</queue>
		<now>20</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="hc_unit">
		<statevariables>
			<variable name="HC_Unit.heaterOn" type="boolean">true</variable>
			<variable name="HC_Unit.coolerOn" type="boolean">false</variable>
			<variable name="HC_Unit.currentRegulation" type="int">1</variable>
		</statevariables>
		<queue>
			<message arrival="20" deadline="infinity" sender="hc_unit">regulateTemp()</message>
		</queue>
		<now>20</now>
		<pc></pc>
		<res></res>
	</rebec>
</state>
<transition source="739_0" destination="745_0" executionTime="20" shift="0"> <messageserver sender="room" owner="sensor" title="SETCURRENT"/></transition>
<transition source="739_0" destination="639_0" executionTime="20" shift="0"> <messageserver sender="hc_unit" owner="hc_unit" title="REGULATETEMP"/></transition>
<state id="746_0" atomicpropositions="isHeating," >
	<rebec name="room">
		<statevariables>
			<variable name="Room.currentTemp" type="int">21</variable>
			<variable name="Room.currentRegulation" type="int">1</variable>
			<variable name="Room.outside_air" type="int">0</variable>
		</statevariables>
		<queue>
			<message arrival="30" deadline="infinity" sender="room">updateStatus()</message>
		</queue>
		<now>20</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="controller">
		<statevariables>
			<variable name="Controller.currentTemp" type="int">20</variable>
			<variable name="Controller.isHeating" type="boolean">true</variable>
			<variable name="Controller.isCooling" type="boolean">false</variable>
		</statevariables>
		<queue>
			<message arrival="20" deadline="infinity" sender="sensor">setCurrent(20)</message>
		</queue>
		<now>20</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="sensor">
		<statevariables>
		</statevariables>
		<queue>
			<message arrival="22" deadline="infinity" sender="sensor">callSensor()</message>
		</queue>
		<now>20</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="hc_unit">
		<statevariables>
			<variable name="HC_Unit.heaterOn" type="boolean">true</variable>
			<variable name="HC_Unit.coolerOn" type="boolean">false</variable>
			<variable name="HC_Unit.currentRegulation" type="int">1</variable>
		</statevariables>
		<queue>
			<message arrival="20" deadline="infinity" sender="hc_unit">regulateTemp()</message>
		</queue>
		<now>20</now>
		<pc></pc>
		<res></res>
	</rebec>
</state>
<transition source="740_0" destination="746_0" executionTime="20" shift="0"> <messageserver sender="room" owner="sensor" title="SETCURRENT"/></transition>
<transition source="740_0" destination="640_0" executionTime="20" shift="0"> <messageserver sender="hc_unit" owner="hc_unit" title="REGULATETEMP"/></transition>
<state id="747_0" atomicpropositions="isHeating," >
	<rebec name="room">
		<statevariables>
			<variable name="Room.currentTemp" type="int">22</variable>
			<variable name="Room.currentRegulation" type="int">1</variable>
			<variable name="Room.outside_air" type="int">-1</variable>
		</statevariables>
		<queue>
			<message arrival="30" deadline="infinity" sender="room">updateStatus()</message>
		</queue>
		<now>20</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="controller">
		<statevariables>
			<variable name="Controller.currentTemp" type="int">20</variable>
			<variable name="Controller.isHeating" type="boolean">true</variable>
			<variable name="Controller.isCooling" type="boolean">false</variable>
		</statevariables>
		<queue>
			<message arrival="20" deadline="infinity" sender="sensor">setCurrent(20)</message>
		</queue>
		<now>20</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="sensor">
		<statevariables>
		</statevariables>
		<queue>
			<message arrival="22" deadline="infinity" sender="sensor">callSensor()</message>
		</queue>
		<now>20</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="hc_unit">
		<statevariables>
			<variable name="HC_Unit.heaterOn" type="boolean">true</variable>
			<variable name="HC_Unit.coolerOn" type="boolean">false</variable>
			<variable name="HC_Unit.currentRegulation" type="int">1</variable>
		</statevariables>
		<queue>
			<message arrival="20" deadline="infinity" sender="hc_unit">regulateTemp()</message>
		</queue>
		<now>20</now>
		<pc></pc>
		<res></res>
	</rebec>
</state>
<transition source="741_0" destination="747_0" executionTime="20" shift="0"> <messageserver sender="room" owner="sensor" title="SETCURRENT"/></transition>
<transition source="741_0" destination="641_0" executionTime="20" shift="0"> <messageserver sender="hc_unit" owner="hc_unit" title="REGULATETEMP"/></transition>
<transition source="742_0" destination="701_0" executionTime="20" shift="0"> <messageserver sender="room" owner="room" title="UPDATESTATUS"/></transition>
<transition source="742_0" destination="746_0" executionTime="20" shift="0"> <messageserver sender="room" owner="room" title="UPDATESTATUS"/></transition>
<transition source="742_0" destination="747_0" executionTime="20" shift="0"> <messageserver sender="room" owner="room" title="UPDATESTATUS"/></transition>
<state id="748_0" atomicpropositions="isHeating," >
	<rebec name="room">
		<statevariables>
			<variable name="Room.currentTemp" type="int">20</variable>
			<variable name="Room.currentRegulation" type="int">1</variable>
			<variable name="Room.outside_air" type="int">1</variable>
		</statevariables>
		<queue>
			<message arrival="20" deadline="infinity" sender="room">updateStatus()</message>
		</queue>
		<now>20</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="controller">
		<statevariables>
			<variable name="Controller.currentTemp" type="int">20</variable>
			<variable name="Controller.isHeating" type="boolean">true</variable>
			<variable name="Controller.isCooling" type="boolean">false</variable>
		</statevariables>
		<queue>
			<message arrival="20" deadline="infinity" sender="controller">updateOutput()</message>
		</queue>
		<now>20</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="sensor">
		<statevariables>
		</statevariables>
		<queue>
			<message arrival="22" deadline="infinity" sender="sensor">callSensor()</message>
		</queue>
		<now>20</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="hc_unit">
		<statevariables>
			<variable name="HC_Unit.heaterOn" type="boolean">true</variable>
			<variable name="HC_Unit.coolerOn" type="boolean">false</variable>
			<variable name="HC_Unit.currentRegulation" type="int">1</variable>
		</statevariables>
		<queue>
			<message arrival="20" deadline="infinity" sender="hc_unit">regulateTemp()</message>
		</queue>
		<now>20</now>
		<pc></pc>
		<res></res>
	</rebec>
</state>
<transition source="742_0" destination="748_0" executionTime="20" shift="0"> <messageserver sender="sensor" owner="controller" title="SETCURRENT"/></transition>
<transition source="742_0" destination="643_0" executionTime="20" shift="0"> <messageserver sender="hc_unit" owner="hc_unit" title="REGULATETEMP"/></transition>
<transition source="744_0" destination="233_0" executionTime="20" shift="10"> <messageserver sender="room" owner="room" title="UPDATESTATUS"/></transition>
<transition source="744_0" destination="230_0" executionTime="20" shift="10"> <messageserver sender="room" owner="room" title="UPDATESTATUS"/></transition>
<transition source="744_0" destination="234_0" executionTime="20" shift="10"> <messageserver sender="room" owner="room" title="UPDATESTATUS"/></transition>
<state id="749_0" atomicpropositions="" >
	<rebec name="room">
		<statevariables>
			<variable name="Room.currentTemp" type="int">23</variable>
			<variable name="Room.currentRegulation" type="int">0</variable>
			<variable name="Room.outside_air" type="int">0</variable>
		</statevariables>
		<queue>
			<message arrival="20" deadline="infinity" sender="room">updateStatus()</message>
		</queue>
		<now>20</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="controller">
		<statevariables>
			<variable name="Controller.currentTemp" type="int">23</variable>
			<variable name="Controller.isHeating" type="boolean">false</variable>
			<variable name="Controller.isCooling" type="boolean">false</variable>
		</statevariables>
		<queue>
		</queue>
		<now>20</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="sensor">
		<statevariables>
		</statevariables>
		<queue>
			<message arrival="20" deadline="infinity" sender="room">setCurrent(23)</message>
			<message arrival="22" deadline="infinity" sender="sensor">callSensor()</message>
		</queue>
		<now>20</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="hc_unit">
		<statevariables>
			<variable name="HC_Unit.heaterOn" type="boolean">false</variable>
			<variable name="HC_Unit.coolerOn" type="boolean">false</variable>
			<variable name="HC_Unit.currentRegulation" type="int">0</variable>
		</statevariables>
		<queue>
			<message arrival="25" deadline="infinity" sender="hc_unit">regulateTemp()</message>
		</queue>
		<now>20</now>
		<pc></pc>
		<res></res>
	</rebec>
</state>
<transition source="744_0" destination="749_0" executionTime="20" shift="0"> <messageserver sender="hc_unit" owner="room" title="SETREGULATION"/></transition>
<state id="750_0" atomicpropositions="" >
	<rebec name="room">
		<statevariables>
			<variable name="Room.currentTemp" type="int">23</variable>
			<variable name="Room.currentRegulation" type="int">0</variable>
			<variable name="Room.outside_air" type="int">0</variable>
		</statevariables>
		<queue>
			<message arrival="20" deadline="infinity" sender="room">updateStatus()</message>
			<message arrival="20" deadline="infinity" sender="hc_unit">setRegulation(0)</message>
		</queue>
		<now>20</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="controller">
		<statevariables>
			<variable name="Controller.currentTemp" type="int">23</variable>
			<variable name="Controller.isHeating" type="boolean">false</variable>
			<variable name="Controller.isCooling" type="boolean">false</variable>
		</statevariables>
		<queue>
			<message arrival="20" deadline="infinity" sender="sensor">setCurrent(23)</message>
		</queue>
		<now>20</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="sensor">
		<statevariables>
		</statevariables>
		<queue>
			<message arrival="22" deadline="infinity" sender="sensor">callSensor()</message>
		</queue>
		<now>20</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="hc_unit">
		<statevariables>
			<variable name="HC_Unit.heaterOn" type="boolean">false</variable>
			<variable name="HC_Unit.coolerOn" type="boolean">false</variable>
			<variable name="HC_Unit.currentRegulation" type="int">0</variable>
		</statevariables>
		<queue>
			<message arrival="25" deadline="infinity" sender="hc_unit">regulateTemp()</message>
		</queue>
		<now>20</now>
		<pc></pc>
		<res></res>
	</rebec>
</state>
<transition source="744_0" destination="750_0" executionTime="20" shift="0"> <messageserver sender="room" owner="sensor" title="SETCURRENT"/></transition>
<state id="751_0" atomicpropositions="isHeating," >
	<rebec name="room">
		<statevariables>
			<variable name="Room.currentTemp" type="int">22</variable>
			<variable name="Room.currentRegulation" type="int">1</variable>
			<variable name="Room.outside_air" type="int">-1</variable>
		</statevariables>
		<queue>
			<message arrival="30" deadline="infinity" sender="room">updateStatus()</message>
		</queue>
		<now>20</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="controller">
		<statevariables>
			<variable name="Controller.currentTemp" type="int">22</variable>
			<variable name="Controller.isHeating" type="boolean">true</variable>
			<variable name="Controller.isCooling" type="boolean">false</variable>
		</statevariables>
		<queue>
			<message arrival="20" deadline="infinity" sender="controller">updateOutput()</message>
		</queue>
		<now>20</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="sensor">
		<statevariables>
		</statevariables>
		<queue>
			<message arrival="22" deadline="infinity" sender="sensor">callSensor()</message>
		</queue>
		<now>20</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="hc_unit">
		<statevariables>
			<variable name="HC_Unit.heaterOn" type="boolean">true</variable>
			<variable name="HC_Unit.coolerOn" type="boolean">false</variable>
			<variable name="HC_Unit.currentRegulation" type="int">1</variable>
		</statevariables>
		<queue>
			<message arrival="20" deadline="infinity" sender="hc_unit">regulateTemp()</message>
		</queue>
		<now>20</now>
		<pc></pc>
		<res></res>
	</rebec>
</state>
<transition source="745_0" destination="751_0" executionTime="20" shift="0"> <messageserver sender="sensor" owner="controller" title="SETCURRENT"/></transition>
<transition source="745_0" destination="651_0" executionTime="20" shift="0"> <messageserver sender="hc_unit" owner="hc_unit" title="REGULATETEMP"/></transition>
<state id="752_0" atomicpropositions="isHeating," >
	<rebec name="room">
		<statevariables>
			<variable name="Room.currentTemp" type="int">21</variable>
			<variable name="Room.currentRegulation" type="int">1</variable>
			<variable name="Room.outside_air" type="int">0</variable>
		</statevariables>
		<queue>
			<message arrival="30" deadline="infinity" sender="room">updateStatus()</message>
		</queue>
		<now>20</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="controller">
		<statevariables>
			<variable name="Controller.currentTemp" type="int">20</variable>
			<variable name="Controller.isHeating" type="boolean">true</variable>
			<variable name="Controller.isCooling" type="boolean">false</variable>
		</statevariables>
		<queue>
			<message arrival="20" deadline="infinity" sender="controller">updateOutput()</message>
		</queue>
		<now>20</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="sensor">
		<statevariables>
		</statevariables>
		<queue>
			<message arrival="22" deadline="infinity" sender="sensor">callSensor()</message>
		</queue>
		<now>20</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="hc_unit">
		<statevariables>
			<variable name="HC_Unit.heaterOn" type="boolean">true</variable>
			<variable name="HC_Unit.coolerOn" type="boolean">false</variable>
			<variable name="HC_Unit.currentRegulation" type="int">1</variable>
		</statevariables>
		<queue>
			<message arrival="20" deadline="infinity" sender="hc_unit">regulateTemp()</message>
		</queue>
		<now>20</now>
		<pc></pc>
		<res></res>
	</rebec>
</state>
<transition source="746_0" destination="752_0" executionTime="20" shift="0"> <messageserver sender="sensor" owner="controller" title="SETCURRENT"/></transition>
<transition source="746_0" destination="652_0" executionTime="20" shift="0"> <messageserver sender="hc_unit" owner="hc_unit" title="REGULATETEMP"/></transition>
<state id="753_0" atomicpropositions="isHeating," >
	<rebec name="room">
		<statevariables>
			<variable name="Room.currentTemp" type="int">22</variable>
			<variable name="Room.currentRegulation" type="int">1</variable>
			<variable name="Room.outside_air" type="int">-1</variable>
		</statevariables>
		<queue>
			<message arrival="30" deadline="infinity" sender="room">updateStatus()</message>
		</queue>
		<now>20</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="controller">
		<statevariables>
			<variable name="Controller.currentTemp" type="int">20</variable>
			<variable name="Controller.isHeating" type="boolean">true</variable>
			<variable name="Controller.isCooling" type="boolean">false</variable>
		</statevariables>
		<queue>
			<message arrival="20" deadline="infinity" sender="controller">updateOutput()</message>
		</queue>
		<now>20</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="sensor">
		<statevariables>
		</statevariables>
		<queue>
			<message arrival="22" deadline="infinity" sender="sensor">callSensor()</message>
		</queue>
		<now>20</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="hc_unit">
		<statevariables>
			<variable name="HC_Unit.heaterOn" type="boolean">true</variable>
			<variable name="HC_Unit.coolerOn" type="boolean">false</variable>
			<variable name="HC_Unit.currentRegulation" type="int">1</variable>
		</statevariables>
		<queue>
			<message arrival="20" deadline="infinity" sender="hc_unit">regulateTemp()</message>
		</queue>
		<now>20</now>
		<pc></pc>
		<res></res>
	</rebec>
</state>
<transition source="747_0" destination="753_0" executionTime="20" shift="0"> <messageserver sender="sensor" owner="controller" title="SETCURRENT"/></transition>
<transition source="747_0" destination="653_0" executionTime="20" shift="0"> <messageserver sender="hc_unit" owner="hc_unit" title="REGULATETEMP"/></transition>
<transition source="748_0" destination="704_0" executionTime="20" shift="0"> <messageserver sender="room" owner="room" title="UPDATESTATUS"/></transition>
<transition source="748_0" destination="752_0" executionTime="20" shift="0"> <messageserver sender="room" owner="room" title="UPDATESTATUS"/></transition>
<transition source="748_0" destination="753_0" executionTime="20" shift="0"> <messageserver sender="room" owner="room" title="UPDATESTATUS"/></transition>
<state id="754_0" atomicpropositions="isHeating," >
	<rebec name="room">
		<statevariables>
			<variable name="Room.currentTemp" type="int">20</variable>
			<variable name="Room.currentRegulation" type="int">1</variable>
			<variable name="Room.outside_air" type="int">1</variable>
		</statevariables>
		<queue>
			<message arrival="20" deadline="infinity" sender="room">updateStatus()</message>
		</queue>
		<now>20</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="controller">
		<statevariables>
			<variable name="Controller.currentTemp" type="int">20</variable>
			<variable name="Controller.isHeating" type="boolean">true</variable>
			<variable name="Controller.isCooling" type="boolean">false</variable>
		</statevariables>
		<queue>
		</queue>
		<now>20</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="sensor">
		<statevariables>
		</statevariables>
		<queue>
			<message arrival="22" deadline="infinity" sender="sensor">callSensor()</message>
		</queue>
		<now>20</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="hc_unit">
		<statevariables>
			<variable name="HC_Unit.heaterOn" type="boolean">true</variable>
			<variable name="HC_Unit.coolerOn" type="boolean">false</variable>
			<variable name="HC_Unit.currentRegulation" type="int">1</variable>
		</statevariables>
		<queue>
			<message arrival="20" deadline="infinity" sender="hc_unit">regulateTemp()</message>
		</queue>
		<now>20</now>
		<pc></pc>
		<res></res>
	</rebec>
</state>
<transition source="748_0" destination="754_0" executionTime="20" shift="0"> <messageserver sender="controller" owner="controller" title="UPDATEOUTPUT"/></transition>
<transition source="748_0" destination="655_0" executionTime="20" shift="0"> <messageserver sender="hc_unit" owner="hc_unit" title="REGULATETEMP"/></transition>
<transition source="750_0" destination="246_0" executionTime="20" shift="10"> <messageserver sender="room" owner="room" title="UPDATESTATUS"/></transition>
<transition source="750_0" destination="247_0" executionTime="20" shift="10"> <messageserver sender="room" owner="room" title="UPDATESTATUS"/></transition>
<transition source="750_0" destination="248_0" executionTime="20" shift="10"> <messageserver sender="room" owner="room" title="UPDATESTATUS"/></transition>
<state id="755_0" atomicpropositions="" >
	<rebec name="room">
		<statevariables>
			<variable name="Room.currentTemp" type="int">23</variable>
			<variable name="Room.currentRegulation" type="int">0</variable>
			<variable name="Room.outside_air" type="int">0</variable>
		</statevariables>
		<queue>
			<message arrival="20" deadline="infinity" sender="room">updateStatus()</message>
		</queue>
		<now>20</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="controller">
		<statevariables>
			<variable name="Controller.currentTemp" type="int">23</variable>
			<variable name="Controller.isHeating" type="boolean">false</variable>
			<variable name="Controller.isCooling" type="boolean">false</variable>
		</statevariables>
		<queue>
			<message arrival="20" deadline="infinity" sender="sensor">setCurrent(23)</message>
		</queue>
		<now>20</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="sensor">
		<statevariables>
		</statevariables>
		<queue>
			<message arrival="22" deadline="infinity" sender="sensor">callSensor()</message>
		</queue>
		<now>20</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="hc_unit">
		<statevariables>
			<variable name="HC_Unit.heaterOn" type="boolean">false</variable>
			<variable name="HC_Unit.coolerOn" type="boolean">false</variable>
			<variable name="HC_Unit.currentRegulation" type="int">0</variable>
		</statevariables>
		<queue>
			<message arrival="25" deadline="infinity" sender="hc_unit">regulateTemp()</message>
		</queue>
		<now>20</now>
		<pc></pc>
		<res></res>
	</rebec>
</state>
<transition source="750_0" destination="755_0" executionTime="20" shift="0"> <messageserver sender="hc_unit" owner="room" title="SETREGULATION"/></transition>
<state id="756_0" atomicpropositions="" >
	<rebec name="room">
		<statevariables>
			<variable name="Room.currentTemp" type="int">23</variable>
			<variable name="Room.currentRegulation" type="int">0</variable>
			<variable name="Room.outside_air" type="int">0</variable>
		</statevariables>
		<queue>
			<message arrival="20" deadline="infinity" sender="room">updateStatus()</message>
			<message arrival="20" deadline="infinity" sender="hc_unit">setRegulation(0)</message>
		</queue>
		<now>20</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="controller">
		<statevariables>
			<variable name="Controller.currentTemp" type="int">23</variable>
			<variable name="Controller.isHeating" type="boolean">false</variable>
			<variable name="Controller.isCooling" type="boolean">false</variable>
		</statevariables>
		<queue>
			<message arrival="20" deadline="infinity" sender="controller">updateOutput()</message>
		</queue>
		<now>20</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="sensor">
		<statevariables>
		</statevariables>
		<queue>
			<message arrival="22" deadline="infinity" sender="sensor">callSensor()</message>
		</queue>
		<now>20</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="hc_unit">
		<statevariables>
			<variable name="HC_Unit.heaterOn" type="boolean">false</variable>
			<variable name="HC_Unit.coolerOn" type="boolean">false</variable>
			<variable name="HC_Unit.currentRegulation" type="int">0</variable>
		</statevariables>
		<queue>
			<message arrival="25" deadline="infinity" sender="hc_unit">regulateTemp()</message>
		</queue>
		<now>20</now>
		<pc></pc>
		<res></res>
	</rebec>
</state>
<transition source="750_0" destination="756_0" executionTime="20" shift="0"> <messageserver sender="sensor" owner="controller" title="SETCURRENT"/></transition>
<state id="757_0" atomicpropositions="isHeating," >
	<rebec name="room">
		<statevariables>
			<variable name="Room.currentTemp" type="int">22</variable>
			<variable name="Room.currentRegulation" type="int">1</variable>
			<variable name="Room.outside_air" type="int">-1</variable>
		</statevariables>
		<queue>
			<message arrival="30" deadline="infinity" sender="room">updateStatus()</message>
		</queue>
		<now>20</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="controller">
		<statevariables>
			<variable name="Controller.currentTemp" type="int">22</variable>
			<variable name="Controller.isHeating" type="boolean">false</variable>
			<variable name="Controller.isCooling" type="boolean">false</variable>
		</statevariables>
		<queue>
		</queue>
		<now>20</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="sensor">
		<statevariables>
		</statevariables>
		<queue>
			<message arrival="22" deadline="infinity" sender="sensor">callSensor()</message>
		</queue>
		<now>20</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="hc_unit">
		<statevariables>
			<variable name="HC_Unit.heaterOn" type="boolean">true</variable>
			<variable name="HC_Unit.coolerOn" type="boolean">false</variable>
			<variable name="HC_Unit.currentRegulation" type="int">1</variable>
		</statevariables>
		<queue>
			<message arrival="20" deadline="infinity" sender="controller">switchoff()</message>
			<message arrival="20" deadline="infinity" sender="hc_unit">regulateTemp()</message>
		</queue>
		<now>20</now>
		<pc></pc>
		<res></res>
	</rebec>
</state>
<transition source="751_0" destination="757_0" executionTime="20" shift="0"> <messageserver sender="controller" owner="controller" title="UPDATEOUTPUT"/></transition>
<transition source="751_0" destination="662_0" executionTime="20" shift="0"> <messageserver sender="hc_unit" owner="hc_unit" title="REGULATETEMP"/></transition>
<state id="758_0" atomicpropositions="isHeating," >
	<rebec name="room">
		<statevariables>
			<variable name="Room.currentTemp" type="int">21</variable>
			<variable name="Room.currentRegulation" type="int">1</variable>
			<variable name="Room.outside_air" type="int">0</variable>
		</statevariables>
		<queue>
			<message arrival="30" deadline="infinity" sender="room">updateStatus()</message>
		</queue>
		<now>20</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="controller">
		<statevariables>
			<variable name="Controller.currentTemp" type="int">20</variable>
			<variable name="Controller.isHeating" type="boolean">true</variable>
			<variable name="Controller.isCooling" type="boolean">false</variable>
		</statevariables>
		<queue>
		</queue>
		<now>20</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="sensor">
		<statevariables>
		</statevariables>
		<queue>
			<message arrival="22" deadline="infinity" sender="sensor">callSensor()</message>
		</queue>
		<now>20</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="hc_unit">
		<statevariables>
			<variable name="HC_Unit.heaterOn" type="boolean">true</variable>
			<variable name="HC_Unit.coolerOn" type="boolean">false</variable>
			<variable name="HC_Unit.currentRegulation" type="int">1</variable>
		</statevariables>
		<queue>
			<message arrival="20" deadline="infinity" sender="hc_unit">regulateTemp()</message>
		</queue>
		<now>20</now>
		<pc></pc>
		<res></res>
	</rebec>
</state>
<transition source="752_0" destination="758_0" executionTime="20" shift="0"> <messageserver sender="controller" owner="controller" title="UPDATEOUTPUT"/></transition>
<transition source="752_0" destination="663_0" executionTime="20" shift="0"> <messageserver sender="hc_unit" owner="hc_unit" title="REGULATETEMP"/></transition>
<state id="759_0" atomicpropositions="isHeating," >
	<rebec name="room">
		<statevariables>
			<variable name="Room.currentTemp" type="int">22</variable>
			<variable name="Room.currentRegulation" type="int">1</variable>
			<variable name="Room.outside_air" type="int">-1</variable>
		</statevariables>
		<queue>
			<message arrival="30" deadline="infinity" sender="room">updateStatus()</message>
		</queue>
		<now>20</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="controller">
		<statevariables>
			<variable name="Controller.currentTemp" type="int">20</variable>
			<variable name="Controller.isHeating" type="boolean">true</variable>
			<variable name="Controller.isCooling" type="boolean">false</variable>
		</statevariables>
		<queue>
		</queue>
		<now>20</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="sensor">
		<statevariables>
		</statevariables>
		<queue>
			<message arrival="22" deadline="infinity" sender="sensor">callSensor()</message>
		</queue>
		<now>20</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="hc_unit">
		<statevariables>
			<variable name="HC_Unit.heaterOn" type="boolean">true</variable>
			<variable name="HC_Unit.coolerOn" type="boolean">false</variable>
			<variable name="HC_Unit.currentRegulation" type="int">1</variable>
		</statevariables>
		<queue>
			<message arrival="20" deadline="infinity" sender="hc_unit">regulateTemp()</message>
		</queue>
		<now>20</now>
		<pc></pc>
		<res></res>
	</rebec>
</state>
<transition source="753_0" destination="759_0" executionTime="20" shift="0"> <messageserver sender="controller" owner="controller" title="UPDATEOUTPUT"/></transition>
<transition source="753_0" destination="664_0" executionTime="20" shift="0"> <messageserver sender="hc_unit" owner="hc_unit" title="REGULATETEMP"/></transition>
<transition source="754_0" destination="707_0" executionTime="20" shift="0"> <messageserver sender="room" owner="room" title="UPDATESTATUS"/></transition>
<transition source="754_0" destination="758_0" executionTime="20" shift="0"> <messageserver sender="room" owner="room" title="UPDATESTATUS"/></transition>
<transition source="754_0" destination="759_0" executionTime="20" shift="0"> <messageserver sender="room" owner="room" title="UPDATESTATUS"/></transition>
<transition source="754_0" destination="666_0" executionTime="20" shift="0"> <messageserver sender="hc_unit" owner="hc_unit" title="REGULATETEMP"/></transition>
<transition source="756_0" destination="260_0" executionTime="20" shift="10"> <messageserver sender="room" owner="room" title="UPDATESTATUS"/></transition>
<transition source="756_0" destination="261_0" executionTime="20" shift="10"> <messageserver sender="room" owner="room" title="UPDATESTATUS"/></transition>
<transition source="756_0" destination="262_0" executionTime="20" shift="10"> <messageserver sender="room" owner="room" title="UPDATESTATUS"/></transition>
<state id="760_0" atomicpropositions="" >
	<rebec name="room">
		<statevariables>
			<variable name="Room.currentTemp" type="int">23</variable>
			<variable name="Room.currentRegulation" type="int">0</variable>
			<variable name="Room.outside_air" type="int">0</variable>
		</statevariables>
		<queue>
			<message arrival="20" deadline="infinity" sender="room">updateStatus()</message>
		</queue>
		<now>20</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="controller">
		<statevariables>
			<variable name="Controller.currentTemp" type="int">23</variable>
			<variable name="Controller.isHeating" type="boolean">false</variable>
			<variable name="Controller.isCooling" type="boolean">false</variable>
		</statevariables>
		<queue>
			<message arrival="20" deadline="infinity" sender="controller">updateOutput()</message>
		</queue>
		<now>20</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="sensor">
		<statevariables>
		</statevariables>
		<queue>
			<message arrival="22" deadline="infinity" sender="sensor">callSensor()</message>
		</queue>
		<now>20</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="hc_unit">
		<statevariables>
			<variable name="HC_Unit.heaterOn" type="boolean">false</variable>
			<variable name="HC_Unit.coolerOn" type="boolean">false</variable>
			<variable name="HC_Unit.currentRegulation" type="int">0</variable>
		</statevariables>
		<queue>
			<message arrival="25" deadline="infinity" sender="hc_unit">regulateTemp()</message>
		</queue>
		<now>20</now>
		<pc></pc>
		<res></res>
	</rebec>
</state>
<transition source="756_0" destination="760_0" executionTime="20" shift="0"> <messageserver sender="hc_unit" owner="room" title="SETREGULATION"/></transition>
<state id="761_0" atomicpropositions="" >
	<rebec name="room">
		<statevariables>
			<variable name="Room.currentTemp" type="int">23</variable>
			<variable name="Room.currentRegulation" type="int">0</variable>
			<variable name="Room.outside_air" type="int">0</variable>
		</statevariables>
		<queue>
			<message arrival="20" deadline="infinity" sender="room">updateStatus()</message>
			<message arrival="20" deadline="infinity" sender="hc_unit">setRegulation(0)</message>
		</queue>
		<now>20</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="controller">
		<statevariables>
			<variable name="Controller.currentTemp" type="int">23</variable>
			<variable name="Controller.isHeating" type="boolean">false</variable>
			<variable name="Controller.isCooling" type="boolean">false</variable>
		</statevariables>
		<queue>
		</queue>
		<now>20</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="sensor">
		<statevariables>
		</statevariables>
		<queue>
			<message arrival="22" deadline="infinity" sender="sensor">callSensor()</message>
		</queue>
		<now>20</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="hc_unit">
		<statevariables>
			<variable name="HC_Unit.heaterOn" type="boolean">false</variable>
			<variable name="HC_Unit.coolerOn" type="boolean">false</variable>
			<variable name="HC_Unit.currentRegulation" type="int">0</variable>
		</statevariables>
		<queue>
			<message arrival="25" deadline="infinity" sender="hc_unit">regulateTemp()</message>
		</queue>
		<now>20</now>
		<pc></pc>
		<res></res>
	</rebec>
</state>
<transition source="756_0" destination="761_0" executionTime="20" shift="0"> <messageserver sender="controller" owner="controller" title="UPDATEOUTPUT"/></transition>
<state id="762_0" atomicpropositions="" >
	<rebec name="room">
		<statevariables>
			<variable name="Room.currentTemp" type="int">22</variable>
			<variable name="Room.currentRegulation" type="int">1</variable>
			<variable name="Room.outside_air" type="int">-1</variable>
		</statevariables>
		<queue>
			<message arrival="30" deadline="infinity" sender="room">updateStatus()</message>
		</queue>
		<now>20</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="controller">
		<statevariables>
			<variable name="Controller.currentTemp" type="int">22</variable>
			<variable name="Controller.isHeating" type="boolean">false</variable>
			<variable name="Controller.isCooling" type="boolean">false</variable>
		</statevariables>
		<queue>
		</queue>
		<now>20</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="sensor">
		<statevariables>
		</statevariables>
		<queue>
			<message arrival="22" deadline="infinity" sender="sensor">callSensor()</message>
		</queue>
		<now>20</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="hc_unit">
		<statevariables>
			<variable name="HC_Unit.heaterOn" type="boolean">false</variable>
			<variable name="HC_Unit.coolerOn" type="boolean">false</variable>
			<variable name="HC_Unit.currentRegulation" type="int">0</variable>
		</statevariables>
		<queue>
			<message arrival="20" deadline="infinity" sender="hc_unit">regulateTemp()</message>
		</queue>
		<now>20</now>
		<pc></pc>
		<res></res>
	</rebec>
</state>
<transition source="757_0" destination="762_0" executionTime="20" shift="0"> <messageserver sender="controller" owner="hc_unit" title="SWITCHOFF"/></transition>
<transition source="757_0" destination="672_0" executionTime="20" shift="0"> <messageserver sender="hc_unit" owner="hc_unit" title="REGULATETEMP"/></transition>
<transition source="758_0" destination="673_0" executionTime="20" shift="0"> <messageserver sender="hc_unit" owner="hc_unit" title="REGULATETEMP"/></transition>
<transition source="759_0" destination="674_0" executionTime="20" shift="0"> <messageserver sender="hc_unit" owner="hc_unit" title="REGULATETEMP"/></transition>
<transition source="755_0" destination="318_0" executionTime="20" shift="10"> <messageserver sender="room" owner="room" title="UPDATESTATUS"/></transition>
<transition source="755_0" destination="257_0" executionTime="20" shift="10"> <messageserver sender="room" owner="room" title="UPDATESTATUS"/></transition>
<transition source="755_0" destination="319_0" executionTime="20" shift="10"> <messageserver sender="room" owner="room" title="UPDATESTATUS"/></transition>
<transition source="755_0" destination="760_0" executionTime="20" shift="0"> <messageserver sender="sensor" owner="controller" title="SETCURRENT"/></transition>
<transition source="761_0" destination="273_0" executionTime="20" shift="10"> <messageserver sender="room" owner="room" title="UPDATESTATUS"/></transition>
<transition source="761_0" destination="274_0" executionTime="20" shift="10"> <messageserver sender="room" owner="room" title="UPDATESTATUS"/></transition>
<transition source="761_0" destination="275_0" executionTime="20" shift="10"> <messageserver sender="room" owner="room" title="UPDATESTATUS"/></transition>
<state id="763_0" atomicpropositions="" >
	<rebec name="room">
		<statevariables>
			<variable name="Room.currentTemp" type="int">23</variable>
			<variable name="Room.currentRegulation" type="int">0</variable>
			<variable name="Room.outside_air" type="int">0</variable>
		</statevariables>
		<queue>
			<message arrival="20" deadline="infinity" sender="room">updateStatus()</message>
		</queue>
		<now>20</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="controller">
		<statevariables>
			<variable name="Controller.currentTemp" type="int">23</variable>
			<variable name="Controller.isHeating" type="boolean">false</variable>
			<variable name="Controller.isCooling" type="boolean">false</variable>
		</statevariables>
		<queue>
		</queue>
		<now>20</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="sensor">
		<statevariables>
		</statevariables>
		<queue>
			<message arrival="22" deadline="infinity" sender="sensor">callSensor()</message>
		</queue>
		<now>20</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="hc_unit">
		<statevariables>
			<variable name="HC_Unit.heaterOn" type="boolean">false</variable>
			<variable name="HC_Unit.coolerOn" type="boolean">false</variable>
			<variable name="HC_Unit.currentRegulation" type="int">0</variable>
		</statevariables>
		<queue>
			<message arrival="25" deadline="infinity" sender="hc_unit">regulateTemp()</message>
		</queue>
		<now>20</now>
		<pc></pc>
		<res></res>
	</rebec>
</state>
<transition source="761_0" destination="763_0" executionTime="20" shift="0"> <messageserver sender="hc_unit" owner="room" title="SETREGULATION"/></transition>
<state id="764_0" atomicpropositions="" >
	<rebec name="room">
		<statevariables>
			<variable name="Room.currentTemp" type="int">22</variable>
			<variable name="Room.currentRegulation" type="int">1</variable>
			<variable name="Room.outside_air" type="int">-1</variable>
		</statevariables>
		<queue>
			<message arrival="20" deadline="infinity" sender="hc_unit">setRegulation(0)</message>
			<message arrival="30" deadline="infinity" sender="room">updateStatus()</message>
		</queue>
		<now>20</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="controller">
		<statevariables>
			<variable name="Controller.currentTemp" type="int">22</variable>
			<variable name="Controller.isHeating" type="boolean">false</variable>
			<variable name="Controller.isCooling" type="boolean">false</variable>
		</statevariables>
		<queue>
		</queue>
		<now>20</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="sensor">
		<statevariables>
		</statevariables>
		<queue>
			<message arrival="22" deadline="infinity" sender="sensor">callSensor()</message>
		</queue>
		<now>20</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="hc_unit">
		<statevariables>
			<variable name="HC_Unit.heaterOn" type="boolean">false</variable>
			<variable name="HC_Unit.coolerOn" type="boolean">false</variable>
			<variable name="HC_Unit.currentRegulation" type="int">0</variable>
		</statevariables>
		<queue>
			<message arrival="25" deadline="infinity" sender="hc_unit">regulateTemp()</message>
		</queue>
		<now>20</now>
		<pc></pc>
		<res></res>
	</rebec>
</state>
<transition source="762_0" destination="764_0" executionTime="20" shift="0"> <messageserver sender="hc_unit" owner="hc_unit" title="REGULATETEMP"/></transition>
<transition source="760_0" destination="308_0" executionTime="20" shift="10"> <messageserver sender="room" owner="room" title="UPDATESTATUS"/></transition>
<transition source="760_0" destination="270_0" executionTime="20" shift="10"> <messageserver sender="room" owner="room" title="UPDATESTATUS"/></transition>
<transition source="760_0" destination="309_0" executionTime="20" shift="10"> <messageserver sender="room" owner="room" title="UPDATESTATUS"/></transition>
<transition source="760_0" destination="763_0" executionTime="20" shift="0"> <messageserver sender="controller" owner="controller" title="UPDATEOUTPUT"/></transition>
<transition source="749_0" destination="322_0" executionTime="20" shift="10"> <messageserver sender="room" owner="room" title="UPDATESTATUS"/></transition>
<transition source="749_0" destination="243_0" executionTime="20" shift="10"> <messageserver sender="room" owner="room" title="UPDATESTATUS"/></transition>
<transition source="749_0" destination="323_0" executionTime="20" shift="10"> <messageserver sender="room" owner="room" title="UPDATESTATUS"/></transition>
<transition source="749_0" destination="755_0" executionTime="20" shift="0"> <messageserver sender="room" owner="sensor" title="SETCURRENT"/></transition>
<transition source="743_0" destination="231_0" executionTime="20" shift="10"> <messageserver sender="room" owner="room" title="UPDATESTATUS"/></transition>
<transition source="743_0" destination="229_0" executionTime="20" shift="10"> <messageserver sender="room" owner="room" title="UPDATESTATUS"/></transition>
<transition source="743_0" destination="324_0" executionTime="20" shift="10"> <messageserver sender="room" owner="room" title="UPDATESTATUS"/></transition>
<transition source="743_0" destination="749_0" executionTime="20" shift="0"> <messageserver sender="sensor" owner="room" title="GETTEMP"/></transition>
<transition source="763_0" destination="287_0" executionTime="20" shift="10"> <messageserver sender="room" owner="room" title="UPDATESTATUS"/></transition>
<transition source="763_0" destination="283_0" executionTime="20" shift="10"> <messageserver sender="room" owner="room" title="UPDATESTATUS"/></transition>
<transition source="763_0" destination="289_0" executionTime="20" shift="10"> <messageserver sender="room" owner="room" title="UPDATESTATUS"/></transition>
<transition source="764_0" destination="315_0" executionTime="20" shift="10"> <messageserver sender="hc_unit" owner="room" title="SETREGULATION"/></transition>
<transition source="737_0" destination="381_0" executionTime="20" shift="10"> <messageserver sender="room" owner="room" title="UPDATESTATUS"/></transition>
<transition source="737_0" destination="216_0" executionTime="20" shift="10"> <messageserver sender="room" owner="room" title="UPDATESTATUS"/></transition>
<transition source="737_0" destination="382_0" executionTime="20" shift="10"> <messageserver sender="room" owner="room" title="UPDATESTATUS"/></transition>
<state id="765_0" atomicpropositions="" >
	<rebec name="room">
		<statevariables>
			<variable name="Room.currentTemp" type="int">23</variable>
			<variable name="Room.currentRegulation" type="int">0</variable>
			<variable name="Room.outside_air" type="int">0</variable>
		</statevariables>
		<queue>
			<message arrival="20" deadline="infinity" sender="room">updateStatus()</message>
		</queue>
		<now>20</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="controller">
		<statevariables>
			<variable name="Controller.currentTemp" type="int">23</variable>
			<variable name="Controller.isHeating" type="boolean">false</variable>
			<variable name="Controller.isCooling" type="boolean">false</variable>
		</statevariables>
		<queue>
			<message arrival="20" deadline="infinity" sender="sensor">setCurrent(23)</message>
		</queue>
		<now>20</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="sensor">
		<statevariables>
		</statevariables>
		<queue>
			<message arrival="22" deadline="infinity" sender="sensor">callSensor()</message>
		</queue>
		<now>20</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="hc_unit">
		<statevariables>
			<variable name="HC_Unit.heaterOn" type="boolean">false</variable>
			<variable name="HC_Unit.coolerOn" type="boolean">false</variable>
			<variable name="HC_Unit.currentRegulation" type="int">0</variable>
		</statevariables>
		<queue>
			<message arrival="20" deadline="infinity" sender="hc_unit">regulateTemp()</message>
		</queue>
		<now>20</now>
		<pc></pc>
		<res></res>
	</rebec>
</state>
<transition source="737_0" destination="765_0" executionTime="20" shift="0"> <messageserver sender="room" owner="sensor" title="SETCURRENT"/></transition>
<transition source="737_0" destination="744_0" executionTime="20" shift="0"> <messageserver sender="hc_unit" owner="hc_unit" title="REGULATETEMP"/></transition>
<transition source="732_0" destination="206_0" executionTime="20" shift="10"> <messageserver sender="room" owner="room" title="UPDATESTATUS"/></transition>
<transition source="732_0" destination="205_0" executionTime="20" shift="10"> <messageserver sender="room" owner="room" title="UPDATESTATUS"/></transition>
<transition source="732_0" destination="207_0" executionTime="20" shift="10"> <messageserver sender="room" owner="room" title="UPDATESTATUS"/></transition>
<state id="766_0" atomicpropositions="" >
	<rebec name="room">
		<statevariables>
			<variable name="Room.currentTemp" type="int">23</variable>
			<variable name="Room.currentRegulation" type="int">0</variable>
			<variable name="Room.outside_air" type="int">0</variable>
		</statevariables>
		<queue>
			<message arrival="20" deadline="infinity" sender="room">updateStatus()</message>
		</queue>
		<now>20</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="controller">
		<statevariables>
			<variable name="Controller.currentTemp" type="int">23</variable>
			<variable name="Controller.isHeating" type="boolean">false</variable>
			<variable name="Controller.isCooling" type="boolean">false</variable>
		</statevariables>
		<queue>
		</queue>
		<now>20</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="sensor">
		<statevariables>
		</statevariables>
		<queue>
			<message arrival="20" deadline="infinity" sender="sensor">callSensor()</message>
		</queue>
		<now>20</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="hc_unit">
		<statevariables>
			<variable name="HC_Unit.heaterOn" type="boolean">false</variable>
			<variable name="HC_Unit.coolerOn" type="boolean">false</variable>
			<variable name="HC_Unit.currentRegulation" type="int">0</variable>
		</statevariables>
		<queue>
			<message arrival="25" deadline="infinity" sender="hc_unit">regulateTemp()</message>
		</queue>
		<now>20</now>
		<pc></pc>
		<res></res>
	</rebec>
</state>
<transition source="732_0" destination="766_0" executionTime="20" shift="0"> <messageserver sender="hc_unit" owner="room" title="SETREGULATION"/></transition>
<transition source="732_0" destination="738_0" executionTime="20" shift="0"> <messageserver sender="sensor" owner="sensor" title="CALLSENSOR"/></transition>
<transition source="733_0" destination="90_0" executionTime="20" shift="20"> <messageserver sender="room" owner="room" title="UPDATESTATUS"/></transition>
<transition source="733_0" destination="80_0" executionTime="20" shift="20"> <messageserver sender="room" owner="room" title="UPDATESTATUS"/></transition>
<transition source="733_0" destination="91_0" executionTime="20" shift="20"> <messageserver sender="room" owner="room" title="UPDATESTATUS"/></transition>
<state id="767_0" atomicpropositions="" >
	<rebec name="room">
		<statevariables>
			<variable name="Room.currentTemp" type="int">22</variable>
			<variable name="Room.currentRegulation" type="int">0</variable>
			<variable name="Room.outside_air" type="int">-1</variable>
		</statevariables>
		<queue>
			<message arrival="20" deadline="infinity" sender="room">updateStatus()</message>
		</queue>
		<now>20</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="controller">
		<statevariables>
			<variable name="Controller.currentTemp" type="int">22</variable>
			<variable name="Controller.isHeating" type="boolean">false</variable>
			<variable name="Controller.isCooling" type="boolean">false</variable>
		</statevariables>
		<queue>
			<message arrival="20" deadline="infinity" sender="sensor">setCurrent(22)</message>
		</queue>
		<now>20</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="sensor">
		<statevariables>
		</statevariables>
		<queue>
			<message arrival="22" deadline="infinity" sender="sensor">callSensor()</message>
		</queue>
		<now>20</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="hc_unit">
		<statevariables>
			<variable name="HC_Unit.heaterOn" type="boolean">false</variable>
			<variable name="HC_Unit.coolerOn" type="boolean">false</variable>
			<variable name="HC_Unit.currentRegulation" type="int">0</variable>
		</statevariables>
		<queue>
			<message arrival="20" deadline="infinity" sender="hc_unit">regulateTemp()</message>
		</queue>
		<now>20</now>
		<pc></pc>
		<res></res>
	</rebec>
</state>
<transition source="733_0" destination="767_0" executionTime="20" shift="0"> <messageserver sender="room" owner="sensor" title="SETCURRENT"/></transition>
<transition source="733_0" destination="633_0" executionTime="20" shift="0"> <messageserver sender="hc_unit" owner="hc_unit" title="REGULATETEMP"/></transition>
<state id="768_0" atomicpropositions="isHeating," >
	<rebec name="room">
		<statevariables>
			<variable name="Room.currentTemp" type="int">21</variable>
			<variable name="Room.currentRegulation" type="int">1</variable>
			<variable name="Room.outside_air" type="int">0</variable>
		</statevariables>
		<queue>
			<message arrival="30" deadline="infinity" sender="room">updateStatus()</message>
		</queue>
		<now>20</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="controller">
		<statevariables>
			<variable name="Controller.currentTemp" type="int">20</variable>
			<variable name="Controller.isHeating" type="boolean">true</variable>
			<variable name="Controller.isCooling" type="boolean">false</variable>
		</statevariables>
		<queue>
		</queue>
		<now>20</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="sensor">
		<statevariables>
		</statevariables>
		<queue>
			<message arrival="20" deadline="infinity" sender="room">setCurrent(21)</message>
			<message arrival="22" deadline="infinity" sender="sensor">callSensor()</message>
		</queue>
		<now>20</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="hc_unit">
		<statevariables>
			<variable name="HC_Unit.heaterOn" type="boolean">true</variable>
			<variable name="HC_Unit.coolerOn" type="boolean">false</variable>
			<variable name="HC_Unit.currentRegulation" type="int">1</variable>
		</statevariables>
		<queue>
			<message arrival="20" deadline="infinity" sender="hc_unit">regulateTemp()</message>
		</queue>
		<now>20</now>
		<pc></pc>
		<res></res>
	</rebec>
</state>
<transition source="734_0" destination="768_0" executionTime="20" shift="0"> <messageserver sender="sensor" owner="room" title="GETTEMP"/></transition>
<transition source="734_0" destination="629_0" executionTime="20" shift="0"> <messageserver sender="hc_unit" owner="hc_unit" title="REGULATETEMP"/></transition>
<transition source="765_0" destination="385_0" executionTime="20" shift="10"> <messageserver sender="room" owner="room" title="UPDATESTATUS"/></transition>
<transition source="765_0" destination="372_0" executionTime="20" shift="10"> <messageserver sender="room" owner="room" title="UPDATESTATUS"/></transition>
<transition source="765_0" destination="386_0" executionTime="20" shift="10"> <messageserver sender="room" owner="room" title="UPDATESTATUS"/></transition>
<state id="769_0" atomicpropositions="" >
	<rebec name="room">
		<statevariables>
			<variable name="Room.currentTemp" type="int">23</variable>
			<variable name="Room.currentRegulation" type="int">0</variable>
			<variable name="Room.outside_air" type="int">0</variable>
		</statevariables>
		<queue>
			<message arrival="20" deadline="infinity" sender="room">updateStatus()</message>
		</queue>
		<now>20</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="controller">
		<statevariables>
			<variable name="Controller.currentTemp" type="int">23</variable>
			<variable name="Controller.isHeating" type="boolean">false</variable>
			<variable name="Controller.isCooling" type="boolean">false</variable>
		</statevariables>
		<queue>
			<message arrival="20" deadline="infinity" sender="controller">updateOutput()</message>
		</queue>
		<now>20</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="sensor">
		<statevariables>
		</statevariables>
		<queue>
			<message arrival="22" deadline="infinity" sender="sensor">callSensor()</message>
		</queue>
		<now>20</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="hc_unit">
		<statevariables>
			<variable name="HC_Unit.heaterOn" type="boolean">false</variable>
			<variable name="HC_Unit.coolerOn" type="boolean">false</variable>
			<variable name="HC_Unit.currentRegulation" type="int">0</variable>
		</statevariables>
		<queue>
			<message arrival="20" deadline="infinity" sender="hc_unit">regulateTemp()</message>
		</queue>
		<now>20</now>
		<pc></pc>
		<res></res>
	</rebec>
</state>
<transition source="765_0" destination="769_0" executionTime="20" shift="0"> <messageserver sender="sensor" owner="controller" title="SETCURRENT"/></transition>
<transition source="765_0" destination="750_0" executionTime="20" shift="0"> <messageserver sender="hc_unit" owner="hc_unit" title="REGULATETEMP"/></transition>
<transition source="766_0" destination="218_0" executionTime="20" shift="10"> <messageserver sender="room" owner="room" title="UPDATESTATUS"/></transition>
<transition source="766_0" destination="291_0" executionTime="20" shift="10"> <messageserver sender="room" owner="room" title="UPDATESTATUS"/></transition>
<transition source="766_0" destination="384_0" executionTime="20" shift="10"> <messageserver sender="room" owner="room" title="UPDATESTATUS"/></transition>
<transition source="766_0" destination="743_0" executionTime="20" shift="0"> <messageserver sender="sensor" owner="sensor" title="CALLSENSOR"/></transition>
<transition source="767_0" destination="94_0" executionTime="20" shift="20"> <messageserver sender="room" owner="room" title="UPDATESTATUS"/></transition>
<transition source="767_0" destination="82_0" executionTime="20" shift="20"> <messageserver sender="room" owner="room" title="UPDATESTATUS"/></transition>
<transition source="767_0" destination="95_0" executionTime="20" shift="20"> <messageserver sender="room" owner="room" title="UPDATESTATUS"/></transition>
<state id="770_0" atomicpropositions="" >
	<rebec name="room">
		<statevariables>
			<variable name="Room.currentTemp" type="int">22</variable>
			<variable name="Room.currentRegulation" type="int">0</variable>
			<variable name="Room.outside_air" type="int">-1</variable>
		</statevariables>
		<queue>
			<message arrival="20" deadline="infinity" sender="room">updateStatus()</message>
		</queue>
		<now>20</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="controller">
		<statevariables>
			<variable name="Controller.currentTemp" type="int">22</variable>
			<variable name="Controller.isHeating" type="boolean">false</variable>
			<variable name="Controller.isCooling" type="boolean">false</variable>
		</statevariables>
		<queue>
			<message arrival="20" deadline="infinity" sender="controller">updateOutput()</message>
		</queue>
		<now>20</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="sensor">
		<statevariables>
		</statevariables>
		<queue>
			<message arrival="22" deadline="infinity" sender="sensor">callSensor()</message>
		</queue>
		<now>20</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="hc_unit">
		<statevariables>
			<variable name="HC_Unit.heaterOn" type="boolean">false</variable>
			<variable name="HC_Unit.coolerOn" type="boolean">false</variable>
			<variable name="HC_Unit.currentRegulation" type="int">0</variable>
		</statevariables>
		<queue>
			<message arrival="20" deadline="infinity" sender="hc_unit">regulateTemp()</message>
		</queue>
		<now>20</now>
		<pc></pc>
		<res></res>
	</rebec>
</state>
<transition source="767_0" destination="770_0" executionTime="20" shift="0"> <messageserver sender="sensor" owner="controller" title="SETCURRENT"/></transition>
<transition source="767_0" destination="645_0" executionTime="20" shift="0"> <messageserver sender="hc_unit" owner="hc_unit" title="REGULATETEMP"/></transition>
<state id="771_0" atomicpropositions="isHeating," >
	<rebec name="room">
		<statevariables>
			<variable name="Room.currentTemp" type="int">21</variable>
			<variable name="Room.currentRegulation" type="int">1</variable>
			<variable name="Room.outside_air" type="int">0</variable>
		</statevariables>
		<queue>
			<message arrival="30" deadline="infinity" sender="room">updateStatus()</message>
		</queue>
		<now>20</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="controller">
		<statevariables>
			<variable name="Controller.currentTemp" type="int">20</variable>
			<variable name="Controller.isHeating" type="boolean">true</variable>
			<variable name="Controller.isCooling" type="boolean">false</variable>
		</statevariables>
		<queue>
			<message arrival="20" deadline="infinity" sender="sensor">setCurrent(21)</message>
		</queue>
		<now>20</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="sensor">
		<statevariables>
		</statevariables>
		<queue>
			<message arrival="22" deadline="infinity" sender="sensor">callSensor()</message>
		</queue>
		<now>20</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="hc_unit">
		<statevariables>
			<variable name="HC_Unit.heaterOn" type="boolean">true</variable>
			<variable name="HC_Unit.coolerOn" type="boolean">false</variable>
			<variable name="HC_Unit.currentRegulation" type="int">1</variable>
		</statevariables>
		<queue>
			<message arrival="20" deadline="infinity" sender="hc_unit">regulateTemp()</message>
		</queue>
		<now>20</now>
		<pc></pc>
		<res></res>
	</rebec>
</state>
<transition source="768_0" destination="771_0" executionTime="20" shift="0"> <messageserver sender="room" owner="sensor" title="SETCURRENT"/></transition>
<transition source="768_0" destination="705_0" executionTime="20" shift="0"> <messageserver sender="hc_unit" owner="hc_unit" title="REGULATETEMP"/></transition>
<transition source="769_0" destination="389_0" executionTime="20" shift="10"> <messageserver sender="room" owner="room" title="UPDATESTATUS"/></transition>
<transition source="769_0" destination="374_0" executionTime="20" shift="10"> <messageserver sender="room" owner="room" title="UPDATESTATUS"/></transition>
<transition source="769_0" destination="390_0" executionTime="20" shift="10"> <messageserver sender="room" owner="room" title="UPDATESTATUS"/></transition>
<state id="772_0" atomicpropositions="" >
	<rebec name="room">
		<statevariables>
			<variable name="Room.currentTemp" type="int">23</variable>
			<variable name="Room.currentRegulation" type="int">0</variable>
			<variable name="Room.outside_air" type="int">0</variable>
		</statevariables>
		<queue>
			<message arrival="20" deadline="infinity" sender="room">updateStatus()</message>
		</queue>
		<now>20</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="controller">
		<statevariables>
			<variable name="Controller.currentTemp" type="int">23</variable>
			<variable name="Controller.isHeating" type="boolean">false</variable>
			<variable name="Controller.isCooling" type="boolean">false</variable>
		</statevariables>
		<queue>
		</queue>
		<now>20</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="sensor">
		<statevariables>
		</statevariables>
		<queue>
			<message arrival="22" deadline="infinity" sender="sensor">callSensor()</message>
		</queue>
		<now>20</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="hc_unit">
		<statevariables>
			<variable name="HC_Unit.heaterOn" type="boolean">false</variable>
			<variable name="HC_Unit.coolerOn" type="boolean">false</variable>
			<variable name="HC_Unit.currentRegulation" type="int">0</variable>
		</statevariables>
		<queue>
			<message arrival="20" deadline="infinity" sender="hc_unit">regulateTemp()</message>
		</queue>
		<now>20</now>
		<pc></pc>
		<res></res>
	</rebec>
</state>
<transition source="769_0" destination="772_0" executionTime="20" shift="0"> <messageserver sender="controller" owner="controller" title="UPDATEOUTPUT"/></transition>
<transition source="769_0" destination="756_0" executionTime="20" shift="0"> <messageserver sender="hc_unit" owner="hc_unit" title="REGULATETEMP"/></transition>
<transition source="770_0" destination="97_0" executionTime="20" shift="20"> <messageserver sender="room" owner="room" title="UPDATESTATUS"/></transition>
<transition source="770_0" destination="84_0" executionTime="20" shift="20"> <messageserver sender="room" owner="room" title="UPDATESTATUS"/></transition>
<transition source="770_0" destination="98_0" executionTime="20" shift="20"> <messageserver sender="room" owner="room" title="UPDATESTATUS"/></transition>
<state id="773_0" atomicpropositions="" >
	<rebec name="room">
		<statevariables>
			<variable name="Room.currentTemp" type="int">22</variable>
			<variable name="Room.currentRegulation" type="int">0</variable>
			<variable name="Room.outside_air" type="int">-1</variable>
		</statevariables>
		<queue>
			<message arrival="20" deadline="infinity" sender="room">updateStatus()</message>
		</queue>
		<now>20</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="controller">
		<statevariables>
			<variable name="Controller.currentTemp" type="int">22</variable>
			<variable name="Controller.isHeating" type="boolean">false</variable>
			<variable name="Controller.isCooling" type="boolean">false</variable>
		</statevariables>
		<queue>
		</queue>
		<now>20</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="sensor">
		<statevariables>
		</statevariables>
		<queue>
			<message arrival="22" deadline="infinity" sender="sensor">callSensor()</message>
		</queue>
		<now>20</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="hc_unit">
		<statevariables>
			<variable name="HC_Unit.heaterOn" type="boolean">false</variable>
			<variable name="HC_Unit.coolerOn" type="boolean">false</variable>
			<variable name="HC_Unit.currentRegulation" type="int">0</variable>
		</statevariables>
		<queue>
			<message arrival="20" deadline="infinity" sender="hc_unit">regulateTemp()</message>
		</queue>
		<now>20</now>
		<pc></pc>
		<res></res>
	</rebec>
</state>
<transition source="770_0" destination="773_0" executionTime="20" shift="0"> <messageserver sender="controller" owner="controller" title="UPDATEOUTPUT"/></transition>
<transition source="770_0" destination="687_0" executionTime="20" shift="0"> <messageserver sender="hc_unit" owner="hc_unit" title="REGULATETEMP"/></transition>
<state id="774_0" atomicpropositions="isHeating," >
	<rebec name="room">
		<statevariables>
			<variable name="Room.currentTemp" type="int">21</variable>
			<variable name="Room.currentRegulation" type="int">1</variable>
			<variable name="Room.outside_air" type="int">0</variable>
		</statevariables>
		<queue>
			<message arrival="30" deadline="infinity" sender="room">updateStatus()</message>
		</queue>
		<now>20</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="controller">
		<statevariables>
			<variable name="Controller.currentTemp" type="int">21</variable>
			<variable name="Controller.isHeating" type="boolean">true</variable>
			<variable name="Controller.isCooling" type="boolean">false</variable>
		</statevariables>
		<queue>
			<message arrival="20" deadline="infinity" sender="controller">updateOutput()</message>
		</queue>
		<now>20</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="sensor">
		<statevariables>
		</statevariables>
		<queue>
			<message arrival="22" deadline="infinity" sender="sensor">callSensor()</message>
		</queue>
		<now>20</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="hc_unit">
		<statevariables>
			<variable name="HC_Unit.heaterOn" type="boolean">true</variable>
			<variable name="HC_Unit.coolerOn" type="boolean">false</variable>
			<variable name="HC_Unit.currentRegulation" type="int">1</variable>
		</statevariables>
		<queue>
			<message arrival="20" deadline="infinity" sender="hc_unit">regulateTemp()</message>
		</queue>
		<now>20</now>
		<pc></pc>
		<res></res>
	</rebec>
</state>
<transition source="771_0" destination="774_0" executionTime="20" shift="0"> <messageserver sender="sensor" owner="controller" title="SETCURRENT"/></transition>
<transition source="771_0" destination="708_0" executionTime="20" shift="0"> <messageserver sender="hc_unit" owner="hc_unit" title="REGULATETEMP"/></transition>
<transition source="772_0" destination="393_0" executionTime="20" shift="10"> <messageserver sender="room" owner="room" title="UPDATESTATUS"/></transition>
<transition source="772_0" destination="377_0" executionTime="20" shift="10"> <messageserver sender="room" owner="room" title="UPDATESTATUS"/></transition>
<transition source="772_0" destination="394_0" executionTime="20" shift="10"> <messageserver sender="room" owner="room" title="UPDATESTATUS"/></transition>
<transition source="772_0" destination="761_0" executionTime="20" shift="0"> <messageserver sender="hc_unit" owner="hc_unit" title="REGULATETEMP"/></transition>
<transition source="773_0" destination="100_0" executionTime="20" shift="20"> <messageserver sender="room" owner="room" title="UPDATESTATUS"/></transition>
<transition source="773_0" destination="86_0" executionTime="20" shift="20"> <messageserver sender="room" owner="room" title="UPDATESTATUS"/></transition>
<transition source="773_0" destination="101_0" executionTime="20" shift="20"> <messageserver sender="room" owner="room" title="UPDATESTATUS"/></transition>
<transition source="773_0" destination="691_0" executionTime="20" shift="0"> <messageserver sender="hc_unit" owner="hc_unit" title="REGULATETEMP"/></transition>
<state id="775_0" atomicpropositions="isHeating," >
	<rebec name="room">
		<statevariables>
			<variable name="Room.currentTemp" type="int">21</variable>
			<variable name="Room.currentRegulation" type="int">1</variable>
			<variable name="Room.outside_air" type="int">0</variable>
		</statevariables>
		<queue>
			<message arrival="30" deadline="infinity" sender="room">updateStatus()</message>
		</queue>
		<now>20</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="controller">
		<statevariables>
			<variable name="Controller.currentTemp" type="int">21</variable>
			<variable name="Controller.isHeating" type="boolean">false</variable>
			<variable name="Controller.isCooling" type="boolean">false</variable>
		</statevariables>
		<queue>
		</queue>
		<now>20</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="sensor">
		<statevariables>
		</statevariables>
		<queue>
			<message arrival="22" deadline="infinity" sender="sensor">callSensor()</message>
		</queue>
		<now>20</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="hc_unit">
		<statevariables>
			<variable name="HC_Unit.heaterOn" type="boolean">true</variable>
			<variable name="HC_Unit.coolerOn" type="boolean">false</variable>
			<variable name="HC_Unit.currentRegulation" type="int">1</variable>
		</statevariables>
		<queue>
			<message arrival="20" deadline="infinity" sender="controller">switchoff()</message>
			<message arrival="20" deadline="infinity" sender="hc_unit">regulateTemp()</message>
		</queue>
		<now>20</now>
		<pc></pc>
		<res></res>
	</rebec>
</state>
<transition source="774_0" destination="775_0" executionTime="20" shift="0"> <messageserver sender="controller" owner="controller" title="UPDATEOUTPUT"/></transition>
<transition source="774_0" destination="710_0" executionTime="20" shift="0"> <messageserver sender="hc_unit" owner="hc_unit" title="REGULATETEMP"/></transition>
<state id="776_0" atomicpropositions="isCooling," >
	<rebec name="room">
		<statevariables>
			<variable name="Room.currentTemp" type="int">22</variable>
			<variable name="Room.currentRegulation" type="int">-1</variable>
			<variable name="Room.outside_air" type="int">1</variable>
		</statevariables>
		<queue>
			<message arrival="30" deadline="infinity" sender="room">updateStatus()</message>
		</queue>
		<now>20</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="controller">
		<statevariables>
			<variable name="Controller.currentTemp" type="int">24</variable>
			<variable name="Controller.isHeating" type="boolean">false</variable>
			<variable name="Controller.isCooling" type="boolean">true</variable>
		</statevariables>
		<queue>
		</queue>
		<now>20</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="sensor">
		<statevariables>
		</statevariables>
		<queue>
			<message arrival="20" deadline="infinity" sender="sensor">callSensor()</message>
		</queue>
		<now>20</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="hc_unit">
		<statevariables>
			<variable name="HC_Unit.heaterOn" type="boolean">false</variable>
			<variable name="HC_Unit.coolerOn" type="boolean">true</variable>
			<variable name="HC_Unit.currentRegulation" type="int">-1</variable>
		</statevariables>
		<queue>
			<message arrival="20" deadline="infinity" sender="hc_unit">regulateTemp()</message>
		</queue>
		<now>20</now>
		<pc></pc>
		<res></res>
	</rebec>
</state>
<transition source="585_0" destination="776_0" executionTime="20" shift="0"> <messageserver sender="room" owner="room" title="UPDATESTATUS"/></transition>
<state id="777_0" atomicpropositions="isCooling," >
	<rebec name="room">
		<statevariables>
			<variable name="Room.currentTemp" type="int">23</variable>
			<variable name="Room.currentRegulation" type="int">-1</variable>
			<variable name="Room.outside_air" type="int">0</variable>
		</statevariables>
		<queue>
			<message arrival="30" deadline="infinity" sender="room">updateStatus()</message>
		</queue>
		<now>20</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="controller">
		<statevariables>
			<variable name="Controller.currentTemp" type="int">24</variable>
			<variable name="Controller.isHeating" type="boolean">false</variable>
			<variable name="Controller.isCooling" type="boolean">true</variable>
		</statevariables>
		<queue>
		</queue>
		<now>20</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="sensor">
		<statevariables>
		</statevariables>
		<queue>
			<message arrival="20" deadline="infinity" sender="sensor">callSensor()</message>
		</queue>
		<now>20</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="hc_unit">
		<statevariables>
			<variable name="HC_Unit.heaterOn" type="boolean">false</variable>
			<variable name="HC_Unit.coolerOn" type="boolean">true</variable>
			<variable name="HC_Unit.currentRegulation" type="int">-1</variable>
		</statevariables>
		<queue>
			<message arrival="20" deadline="infinity" sender="hc_unit">regulateTemp()</message>
		</queue>
		<now>20</now>
		<pc></pc>
		<res></res>
	</rebec>
</state>
<transition source="585_0" destination="777_0" executionTime="20" shift="0"> <messageserver sender="room" owner="room" title="UPDATESTATUS"/></transition>
<state id="778_0" atomicpropositions="isCooling," >
	<rebec name="room">
		<statevariables>
			<variable name="Room.currentTemp" type="int">24</variable>
			<variable name="Room.currentRegulation" type="int">-1</variable>
			<variable name="Room.outside_air" type="int">-1</variable>
		</statevariables>
		<queue>
			<message arrival="30" deadline="infinity" sender="room">updateStatus()</message>
		</queue>
		<now>20</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="controller">
		<statevariables>
			<variable name="Controller.currentTemp" type="int">24</variable>
			<variable name="Controller.isHeating" type="boolean">false</variable>
			<variable name="Controller.isCooling" type="boolean">true</variable>
		</statevariables>
		<queue>
		</queue>
		<now>20</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="sensor">
		<statevariables>
		</statevariables>
		<queue>
			<message arrival="20" deadline="infinity" sender="sensor">callSensor()</message>
		</queue>
		<now>20</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="hc_unit">
		<statevariables>
			<variable name="HC_Unit.heaterOn" type="boolean">false</variable>
			<variable name="HC_Unit.coolerOn" type="boolean">true</variable>
			<variable name="HC_Unit.currentRegulation" type="int">-1</variable>
		</statevariables>
		<queue>
			<message arrival="20" deadline="infinity" sender="hc_unit">regulateTemp()</message>
		</queue>
		<now>20</now>
		<pc></pc>
		<res></res>
	</rebec>
</state>
<transition source="585_0" destination="778_0" executionTime="20" shift="0"> <messageserver sender="room" owner="room" title="UPDATESTATUS"/></transition>
<state id="779_0" atomicpropositions="isCooling," >
	<rebec name="room">
		<statevariables>
			<variable name="Room.currentTemp" type="int">24</variable>
			<variable name="Room.currentRegulation" type="int">-1</variable>
			<variable name="Room.outside_air" type="int">-1</variable>
		</statevariables>
		<queue>
			<message arrival="20" deadline="infinity" sender="room">updateStatus()</message>
			<message arrival="20" deadline="infinity" sender="sensor">getTemp()</message>
		</queue>
		<now>20</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="controller">
		<statevariables>
			<variable name="Controller.currentTemp" type="int">24</variable>
			<variable name="Controller.isHeating" type="boolean">false</variable>
			<variable name="Controller.isCooling" type="boolean">true</variable>
		</statevariables>
		<queue>
		</queue>
		<now>20</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="sensor">
		<statevariables>
		</statevariables>
		<queue>
			<message arrival="22" deadline="infinity" sender="sensor">callSensor()</message>
		</queue>
		<now>20</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="hc_unit">
		<statevariables>
			<variable name="HC_Unit.heaterOn" type="boolean">false</variable>
			<variable name="HC_Unit.coolerOn" type="boolean">true</variable>
			<variable name="HC_Unit.currentRegulation" type="int">-1</variable>
		</statevariables>
		<queue>
			<message arrival="20" deadline="infinity" sender="hc_unit">regulateTemp()</message>
		</queue>
		<now>20</now>
		<pc></pc>
		<res></res>
	</rebec>
</state>
<transition source="585_0" destination="779_0" executionTime="20" shift="0"> <messageserver sender="sensor" owner="sensor" title="CALLSENSOR"/></transition>
<state id="780_0" atomicpropositions="isCooling," >
	<rebec name="room">
		<statevariables>
			<variable name="Room.currentTemp" type="int">24</variable>
			<variable name="Room.currentRegulation" type="int">-1</variable>
			<variable name="Room.outside_air" type="int">-1</variable>
		</statevariables>
		<queue>
			<message arrival="20" deadline="infinity" sender="room">updateStatus()</message>
			<message arrival="20" deadline="infinity" sender="hc_unit">setRegulation(-1)</message>
		</queue>
		<now>20</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="controller">
		<statevariables>
			<variable name="Controller.currentTemp" type="int">24</variable>
			<variable name="Controller.isHeating" type="boolean">false</variable>
			<variable name="Controller.isCooling" type="boolean">true</variable>
		</statevariables>
		<queue>
		</queue>
		<now>20</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="sensor">
		<statevariables>
		</statevariables>
		<queue>
			<message arrival="20" deadline="infinity" sender="sensor">callSensor()</message>
		</queue>
		<now>20</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="hc_unit">
		<statevariables>
			<variable name="HC_Unit.heaterOn" type="boolean">false</variable>
			<variable name="HC_Unit.coolerOn" type="boolean">true</variable>
			<variable name="HC_Unit.currentRegulation" type="int">-1</variable>
		</statevariables>
		<queue>
			<message arrival="25" deadline="infinity" sender="hc_unit">regulateTemp()</message>
		</queue>
		<now>20</now>
		<pc></pc>
		<res></res>
	</rebec>
</state>
<transition source="585_0" destination="780_0" executionTime="20" shift="0"> <messageserver sender="hc_unit" owner="hc_unit" title="REGULATETEMP"/></transition>
<transition source="607_0" destination="734_0" executionTime="20" shift="0"> <messageserver sender="sensor" owner="sensor" title="CALLSENSOR"/></transition>
<transition source="607_0" destination="617_0" executionTime="20" shift="0"> <messageserver sender="hc_unit" owner="hc_unit" title="REGULATETEMP"/></transition>
<state id="781_0" atomicpropositions="isCooling," >
	<rebec name="room">
		<statevariables>
			<variable name="Room.currentTemp" type="int">22</variable>
			<variable name="Room.currentRegulation" type="int">-1</variable>
			<variable name="Room.outside_air" type="int">1</variable>
		</statevariables>
		<queue>
			<message arrival="20" deadline="infinity" sender="hc_unit">setRegulation(-1)</message>
			<message arrival="30" deadline="infinity" sender="room">updateStatus()</message>
		</queue>
		<now>20</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="controller">
		<statevariables>
			<variable name="Controller.currentTemp" type="int">24</variable>
			<variable name="Controller.isHeating" type="boolean">false</variable>
			<variable name="Controller.isCooling" type="boolean">true</variable>
		</statevariables>
		<queue>
		</queue>
		<now>20</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="sensor">
		<statevariables>
		</statevariables>
		<queue>
			<message arrival="20" deadline="infinity" sender="sensor">callSensor()</message>
		</queue>
		<now>20</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="hc_unit">
		<statevariables>
			<variable name="HC_Unit.heaterOn" type="boolean">false</variable>
			<variable name="HC_Unit.coolerOn" type="boolean">true</variable>
			<variable name="HC_Unit.currentRegulation" type="int">-1</variable>
		</statevariables>
		<queue>
			<message arrival="25" deadline="infinity" sender="hc_unit">regulateTemp()</message>
		</queue>
		<now>20</now>
		<pc></pc>
		<res></res>
	</rebec>
</state>
<transition source="780_0" destination="781_0" executionTime="20" shift="0"> <messageserver sender="room" owner="room" title="UPDATESTATUS"/></transition>
<state id="782_0" atomicpropositions="isCooling," >
	<rebec name="room">
		<statevariables>
			<variable name="Room.currentTemp" type="int">23</variable>
			<variable name="Room.currentRegulation" type="int">-1</variable>
			<variable name="Room.outside_air" type="int">0</variable>
		</statevariables>
		<queue>
			<message arrival="20" deadline="infinity" sender="hc_unit">setRegulation(-1)</message>
			<message arrival="30" deadline="infinity" sender="room">updateStatus()</message>
		</queue>
		<now>20</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="controller">
		<statevariables>
			<variable name="Controller.currentTemp" type="int">24</variable>
			<variable name="Controller.isHeating" type="boolean">false</variable>
			<variable name="Controller.isCooling" type="boolean">true</variable>
		</statevariables>
		<queue>
		</queue>
		<now>20</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="sensor">
		<statevariables>
		</statevariables>
		<queue>
			<message arrival="20" deadline="infinity" sender="sensor">callSensor()</message>
		</queue>
		<now>20</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="hc_unit">
		<statevariables>
			<variable name="HC_Unit.heaterOn" type="boolean">false</variable>
			<variable name="HC_Unit.coolerOn" type="boolean">true</variable>
			<variable name="HC_Unit.currentRegulation" type="int">-1</variable>
		</statevariables>
		<queue>
			<message arrival="25" deadline="infinity" sender="hc_unit">regulateTemp()</message>
		</queue>
		<now>20</now>
		<pc></pc>
		<res></res>
	</rebec>
</state>
<transition source="780_0" destination="782_0" executionTime="20" shift="0"> <messageserver sender="room" owner="room" title="UPDATESTATUS"/></transition>
<state id="783_0" atomicpropositions="isCooling," >
	<rebec name="room">
		<statevariables>
			<variable name="Room.currentTemp" type="int">24</variable>
			<variable name="Room.currentRegulation" type="int">-1</variable>
			<variable name="Room.outside_air" type="int">-1</variable>
		</statevariables>
		<queue>
			<message arrival="20" deadline="infinity" sender="hc_unit">setRegulation(-1)</message>
			<message arrival="30" deadline="infinity" sender="room">updateStatus()</message>
		</queue>
		<now>20</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="controller">
		<statevariables>
			<variable name="Controller.currentTemp" type="int">24</variable>
			<variable name="Controller.isHeating" type="boolean">false</variable>
			<variable name="Controller.isCooling" type="boolean">true</variable>
		</statevariables>
		<queue>
		</queue>
		<now>20</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="sensor">
		<statevariables>
		</statevariables>
		<queue>
			<message arrival="20" deadline="infinity" sender="sensor">callSensor()</message>
		</queue>
		<now>20</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="hc_unit">
		<statevariables>
			<variable name="HC_Unit.heaterOn" type="boolean">false</variable>
			<variable name="HC_Unit.coolerOn" type="boolean">true</variable>
			<variable name="HC_Unit.currentRegulation" type="int">-1</variable>
		</statevariables>
		<queue>
			<message arrival="25" deadline="infinity" sender="hc_unit">regulateTemp()</message>
		</queue>
		<now>20</now>
		<pc></pc>
		<res></res>
	</rebec>
</state>
<transition source="780_0" destination="783_0" executionTime="20" shift="0"> <messageserver sender="room" owner="room" title="UPDATESTATUS"/></transition>
<state id="784_0" atomicpropositions="isCooling," >
	<rebec name="room">
		<statevariables>
			<variable name="Room.currentTemp" type="int">24</variable>
			<variable name="Room.currentRegulation" type="int">-1</variable>
			<variable name="Room.outside_air" type="int">-1</variable>
		</statevariables>
		<queue>
			<message arrival="20" deadline="infinity" sender="room">updateStatus()</message>
		</queue>
		<now>20</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="controller">
		<statevariables>
			<variable name="Controller.currentTemp" type="int">24</variable>
			<variable name="Controller.isHeating" type="boolean">false</variable>
			<variable name="Controller.isCooling" type="boolean">true</variable>
		</statevariables>
		<queue>
		</queue>
		<now>20</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="sensor">
		<statevariables>
		</statevariables>
		<queue>
			<message arrival="20" deadline="infinity" sender="sensor">callSensor()</message>
		</queue>
		<now>20</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="hc_unit">
		<statevariables>
			<variable name="HC_Unit.heaterOn" type="boolean">false</variable>
			<variable name="HC_Unit.coolerOn" type="boolean">true</variable>
			<variable name="HC_Unit.currentRegulation" type="int">-1</variable>
		</statevariables>
		<queue>
			<message arrival="25" deadline="infinity" sender="hc_unit">regulateTemp()</message>
		</queue>
		<now>20</now>
		<pc></pc>
		<res></res>
	</rebec>
</state>
<transition source="780_0" destination="784_0" executionTime="20" shift="0"> <messageserver sender="hc_unit" owner="room" title="SETREGULATION"/></transition>
<state id="785_0" atomicpropositions="isCooling," >
	<rebec name="room">
		<statevariables>
			<variable name="Room.currentTemp" type="int">24</variable>
			<variable name="Room.currentRegulation" type="int">-1</variable>
			<variable name="Room.outside_air" type="int">-1</variable>
		</statevariables>
		<queue>
			<message arrival="20" deadline="infinity" sender="room">updateStatus()</message>
			<message arrival="20" deadline="infinity" sender="hc_unit">setRegulation(-1)</message>
			<message arrival="20" deadline="infinity" sender="sensor">getTemp()</message>
		</queue>
		<now>20</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="controller">
		<statevariables>
			<variable name="Controller.currentTemp" type="int">24</variable>
			<variable name="Controller.isHeating" type="boolean">false</variable>
			<variable name="Controller.isCooling" type="boolean">true</variable>
		</statevariables>
		<queue>
		</queue>
		<now>20</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="sensor">
		<statevariables>
		</statevariables>
		<queue>
			<message arrival="22" deadline="infinity" sender="sensor">callSensor()</message>
		</queue>
		<now>20</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="hc_unit">
		<statevariables>
			<variable name="HC_Unit.heaterOn" type="boolean">false</variable>
			<variable name="HC_Unit.coolerOn" type="boolean">true</variable>
			<variable name="HC_Unit.currentRegulation" type="int">-1</variable>
		</statevariables>
		<queue>
			<message arrival="25" deadline="infinity" sender="hc_unit">regulateTemp()</message>
		</queue>
		<now>20</now>
		<pc></pc>
		<res></res>
	</rebec>
</state>
<transition source="780_0" destination="785_0" executionTime="20" shift="0"> <messageserver sender="sensor" owner="sensor" title="CALLSENSOR"/></transition>
<transition source="608_0" destination="735_0" executionTime="20" shift="0"> <messageserver sender="sensor" owner="sensor" title="CALLSENSOR"/></transition>
<transition source="608_0" destination="618_0" executionTime="20" shift="0"> <messageserver sender="hc_unit" owner="hc_unit" title="REGULATETEMP"/></transition>
<state id="786_0" atomicpropositions="isCooling," >
	<rebec name="room">
		<statevariables>
			<variable name="Room.currentTemp" type="int">23</variable>
			<variable name="Room.currentRegulation" type="int">-1</variable>
			<variable name="Room.outside_air" type="int">0</variable>
		</statevariables>
		<queue>
			<message arrival="30" deadline="infinity" sender="room">updateStatus()</message>
		</queue>
		<now>20</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="controller">
		<statevariables>
			<variable name="Controller.currentTemp" type="int">24</variable>
			<variable name="Controller.isHeating" type="boolean">false</variable>
			<variable name="Controller.isCooling" type="boolean">true</variable>
		</statevariables>
		<queue>
		</queue>
		<now>20</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="sensor">
		<statevariables>
		</statevariables>
		<queue>
			<message arrival="20" deadline="infinity" sender="sensor">callSensor()</message>
		</queue>
		<now>20</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="hc_unit">
		<statevariables>
			<variable name="HC_Unit.heaterOn" type="boolean">false</variable>
			<variable name="HC_Unit.coolerOn" type="boolean">true</variable>
			<variable name="HC_Unit.currentRegulation" type="int">-1</variable>
		</statevariables>
		<queue>
			<message arrival="25" deadline="infinity" sender="hc_unit">regulateTemp()</message>
		</queue>
		<now>20</now>
		<pc></pc>
		<res></res>
	</rebec>
</state>
<transition source="782_0" destination="786_0" executionTime="20" shift="0"> <messageserver sender="hc_unit" owner="room" title="SETREGULATION"/></transition>
<state id="787_0" atomicpropositions="isCooling," >
	<rebec name="room">
		<statevariables>
			<variable name="Room.currentTemp" type="int">23</variable>
			<variable name="Room.currentRegulation" type="int">-1</variable>
			<variable name="Room.outside_air" type="int">0</variable>
		</statevariables>
		<queue>
			<message arrival="20" deadline="infinity" sender="hc_unit">setRegulation(-1)</message>
			<message arrival="20" deadline="infinity" sender="sensor">getTemp()</message>
			<message arrival="30" deadline="infinity" sender="room">updateStatus()</message>
		</queue>
		<now>20</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="controller">
		<statevariables>
			<variable name="Controller.currentTemp" type="int">24</variable>
			<variable name="Controller.isHeating" type="boolean">false</variable>
			<variable name="Controller.isCooling" type="boolean">true</variable>
		</statevariables>
		<queue>
		</queue>
		<now>20</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="sensor">
		<statevariables>
		</statevariables>
		<queue>
			<message arrival="22" deadline="infinity" sender="sensor">callSensor()</message>
		</queue>
		<now>20</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="hc_unit">
		<statevariables>
			<variable name="HC_Unit.heaterOn" type="boolean">false</variable>
			<variable name="HC_Unit.coolerOn" type="boolean">true</variable>
			<variable name="HC_Unit.currentRegulation" type="int">-1</variable>
		</statevariables>
		<queue>
			<message arrival="25" deadline="infinity" sender="hc_unit">regulateTemp()</message>
		</queue>
		<now>20</now>
		<pc></pc>
		<res></res>
	</rebec>
</state>
<transition source="782_0" destination="787_0" executionTime="20" shift="0"> <messageserver sender="sensor" owner="sensor" title="CALLSENSOR"/></transition>
<state id="788_0" atomicpropositions="isCooling," >
	<rebec name="room">
		<statevariables>
			<variable name="Room.currentTemp" type="int">22</variable>
			<variable name="Room.currentRegulation" type="int">-1</variable>
			<variable name="Room.outside_air" type="int">1</variable>
		</statevariables>
		<queue>
			<message arrival="30" deadline="infinity" sender="room">updateStatus()</message>
		</queue>
		<now>20</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="controller">
		<statevariables>
			<variable name="Controller.currentTemp" type="int">24</variable>
			<variable name="Controller.isHeating" type="boolean">false</variable>
			<variable name="Controller.isCooling" type="boolean">true</variable>
		</statevariables>
		<queue>
		</queue>
		<now>20</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="sensor">
		<statevariables>
		</statevariables>
		<queue>
			<message arrival="20" deadline="infinity" sender="sensor">callSensor()</message>
		</queue>
		<now>20</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="hc_unit">
		<statevariables>
			<variable name="HC_Unit.heaterOn" type="boolean">false</variable>
			<variable name="HC_Unit.coolerOn" type="boolean">true</variable>
			<variable name="HC_Unit.currentRegulation" type="int">-1</variable>
		</statevariables>
		<queue>
			<message arrival="25" deadline="infinity" sender="hc_unit">regulateTemp()</message>
		</queue>
		<now>20</now>
		<pc></pc>
		<res></res>
	</rebec>
</state>
<transition source="784_0" destination="788_0" executionTime="20" shift="0"> <messageserver sender="room" owner="room" title="UPDATESTATUS"/></transition>
<transition source="784_0" destination="786_0" executionTime="20" shift="0"> <messageserver sender="room" owner="room" title="UPDATESTATUS"/></transition>
<state id="789_0" atomicpropositions="isCooling," >
	<rebec name="room">
		<statevariables>
			<variable name="Room.currentTemp" type="int">24</variable>
			<variable name="Room.currentRegulation" type="int">-1</variable>
			<variable name="Room.outside_air" type="int">-1</variable>
		</statevariables>
		<queue>
			<message arrival="30" deadline="infinity" sender="room">updateStatus()</message>
		</queue>
		<now>20</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="controller">
		<statevariables>
			<variable name="Controller.currentTemp" type="int">24</variable>
			<variable name="Controller.isHeating" type="boolean">false</variable>
			<variable name="Controller.isCooling" type="boolean">true</variable>
		</statevariables>
		<queue>
		</queue>
		<now>20</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="sensor">
		<statevariables>
		</statevariables>
		<queue>
			<message arrival="20" deadline="infinity" sender="sensor">callSensor()</message>
		</queue>
		<now>20</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="hc_unit">
		<statevariables>
			<variable name="HC_Unit.heaterOn" type="boolean">false</variable>
			<variable name="HC_Unit.coolerOn" type="boolean">true</variable>
			<variable name="HC_Unit.currentRegulation" type="int">-1</variable>
		</statevariables>
		<queue>
			<message arrival="25" deadline="infinity" sender="hc_unit">regulateTemp()</message>
		</queue>
		<now>20</now>
		<pc></pc>
		<res></res>
	</rebec>
</state>
<transition source="784_0" destination="789_0" executionTime="20" shift="0"> <messageserver sender="room" owner="room" title="UPDATESTATUS"/></transition>
<state id="790_0" atomicpropositions="isCooling," >
	<rebec name="room">
		<statevariables>
			<variable name="Room.currentTemp" type="int">24</variable>
			<variable name="Room.currentRegulation" type="int">-1</variable>
			<variable name="Room.outside_air" type="int">-1</variable>
		</statevariables>
		<queue>
			<message arrival="20" deadline="infinity" sender="room">updateStatus()</message>
			<message arrival="20" deadline="infinity" sender="sensor">getTemp()</message>
		</queue>
		<now>20</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="controller">
		<statevariables>
			<variable name="Controller.currentTemp" type="int">24</variable>
			<variable name="Controller.isHeating" type="boolean">false</variable>
			<variable name="Controller.isCooling" type="boolean">true</variable>
		</statevariables>
		<queue>
		</queue>
		<now>20</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="sensor">
		<statevariables>
		</statevariables>
		<queue>
			<message arrival="22" deadline="infinity" sender="sensor">callSensor()</message>
		</queue>
		<now>20</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="hc_unit">
		<statevariables>
			<variable name="HC_Unit.heaterOn" type="boolean">false</variable>
			<variable name="HC_Unit.coolerOn" type="boolean">true</variable>
			<variable name="HC_Unit.currentRegulation" type="int">-1</variable>
		</statevariables>
		<queue>
			<message arrival="25" deadline="infinity" sender="hc_unit">regulateTemp()</message>
		</queue>
		<now>20</now>
		<pc></pc>
		<res></res>
	</rebec>
</state>
<transition source="784_0" destination="790_0" executionTime="20" shift="0"> <messageserver sender="sensor" owner="sensor" title="CALLSENSOR"/></transition>
<state id="791_0" atomicpropositions="isCooling," >
	<rebec name="room">
		<statevariables>
			<variable name="Room.currentTemp" type="int">22</variable>
			<variable name="Room.currentRegulation" type="int">-1</variable>
			<variable name="Room.outside_air" type="int">1</variable>
		</statevariables>
		<queue>
			<message arrival="20" deadline="infinity" sender="hc_unit">setRegulation(-1)</message>
			<message arrival="20" deadline="infinity" sender="sensor">getTemp()</message>
			<message arrival="30" deadline="infinity" sender="room">updateStatus()</message>
		</queue>
		<now>20</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="controller">
		<statevariables>
			<variable name="Controller.currentTemp" type="int">24</variable>
			<variable name="Controller.isHeating" type="boolean">false</variable>
			<variable name="Controller.isCooling" type="boolean">true</variable>
		</statevariables>
		<queue>
		</queue>
		<now>20</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="sensor">
		<statevariables>
		</statevariables>
		<queue>
			<message arrival="22" deadline="infinity" sender="sensor">callSensor()</message>
		</queue>
		<now>20</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="hc_unit">
		<statevariables>
			<variable name="HC_Unit.heaterOn" type="boolean">false</variable>
			<variable name="HC_Unit.coolerOn" type="boolean">true</variable>
			<variable name="HC_Unit.currentRegulation" type="int">-1</variable>
		</statevariables>
		<queue>
			<message arrival="25" deadline="infinity" sender="hc_unit">regulateTemp()</message>
		</queue>
		<now>20</now>
		<pc></pc>
		<res></res>
	</rebec>
</state>
<transition source="785_0" destination="791_0" executionTime="20" shift="0"> <messageserver sender="room" owner="room" title="UPDATESTATUS"/></transition>
<transition source="785_0" destination="787_0" executionTime="20" shift="0"> <messageserver sender="room" owner="room" title="UPDATESTATUS"/></transition>
<state id="792_0" atomicpropositions="isCooling," >
	<rebec name="room">
		<statevariables>
			<variable name="Room.currentTemp" type="int">24</variable>
			<variable name="Room.currentRegulation" type="int">-1</variable>
			<variable name="Room.outside_air" type="int">-1</variable>
		</statevariables>
		<queue>
			<message arrival="20" deadline="infinity" sender="hc_unit">setRegulation(-1)</message>
			<message arrival="20" deadline="infinity" sender="sensor">getTemp()</message>
			<message arrival="30" deadline="infinity" sender="room">updateStatus()</message>
		</queue>
		<now>20</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="controller">
		<statevariables>
			<variable name="Controller.currentTemp" type="int">24</variable>
			<variable name="Controller.isHeating" type="boolean">false</variable>
			<variable name="Controller.isCooling" type="boolean">true</variable>
		</statevariables>
		<queue>
		</queue>
		<now>20</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="sensor">
		<statevariables>
		</statevariables>
		<queue>
			<message arrival="22" deadline="infinity" sender="sensor">callSensor()</message>
		</queue>
		<now>20</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="hc_unit">
		<statevariables>
			<variable name="HC_Unit.heaterOn" type="boolean">false</variable>
			<variable name="HC_Unit.coolerOn" type="boolean">true</variable>
			<variable name="HC_Unit.currentRegulation" type="int">-1</variable>
		</statevariables>
		<queue>
			<message arrival="25" deadline="infinity" sender="hc_unit">regulateTemp()</message>
		</queue>
		<now>20</now>
		<pc></pc>
		<res></res>
	</rebec>
</state>
<transition source="785_0" destination="792_0" executionTime="20" shift="0"> <messageserver sender="room" owner="room" title="UPDATESTATUS"/></transition>
<transition source="785_0" destination="790_0" executionTime="20" shift="0"> <messageserver sender="hc_unit" owner="room" title="SETREGULATION"/></transition>
<state id="793_0" atomicpropositions="isCooling," >
	<rebec name="room">
		<statevariables>
			<variable name="Room.currentTemp" type="int">24</variable>
			<variable name="Room.currentRegulation" type="int">-1</variable>
			<variable name="Room.outside_air" type="int">-1</variable>
		</statevariables>
		<queue>
			<message arrival="20" deadline="infinity" sender="room">updateStatus()</message>
			<message arrival="20" deadline="infinity" sender="hc_unit">setRegulation(-1)</message>
		</queue>
		<now>20</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="controller">
		<statevariables>
			<variable name="Controller.currentTemp" type="int">24</variable>
			<variable name="Controller.isHeating" type="boolean">false</variable>
			<variable name="Controller.isCooling" type="boolean">true</variable>
		</statevariables>
		<queue>
		</queue>
		<now>20</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="sensor">
		<statevariables>
		</statevariables>
		<queue>
			<message arrival="20" deadline="infinity" sender="room">setCurrent(24)</message>
			<message arrival="22" deadline="infinity" sender="sensor">callSensor()</message>
		</queue>
		<now>20</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="hc_unit">
		<statevariables>
			<variable name="HC_Unit.heaterOn" type="boolean">false</variable>
			<variable name="HC_Unit.coolerOn" type="boolean">true</variable>
			<variable name="HC_Unit.currentRegulation" type="int">-1</variable>
		</statevariables>
		<queue>
			<message arrival="25" deadline="infinity" sender="hc_unit">regulateTemp()</message>
		</queue>
		<now>20</now>
		<pc></pc>
		<res></res>
	</rebec>
</state>
<transition source="785_0" destination="793_0" executionTime="20" shift="0"> <messageserver sender="sensor" owner="room" title="GETTEMP"/></transition>
<state id="794_0" atomicpropositions="isCooling," >
	<rebec name="room">
		<statevariables>
			<variable name="Room.currentTemp" type="int">23</variable>
			<variable name="Room.currentRegulation" type="int">-1</variable>
			<variable name="Room.outside_air" type="int">0</variable>
		</statevariables>
		<queue>
			<message arrival="20" deadline="infinity" sender="sensor">getTemp()</message>
			<message arrival="30" deadline="infinity" sender="room">updateStatus()</message>
		</queue>
		<now>20</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="controller">
		<statevariables>
			<variable name="Controller.currentTemp" type="int">24</variable>
			<variable name="Controller.isHeating" type="boolean">false</variable>
			<variable name="Controller.isCooling" type="boolean">true</variable>
		</statevariables>
		<queue>
		</queue>
		<now>20</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="sensor">
		<statevariables>
		</statevariables>
		<queue>
			<message arrival="22" deadline="infinity" sender="sensor">callSensor()</message>
		</queue>
		<now>20</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="hc_unit">
		<statevariables>
			<variable name="HC_Unit.heaterOn" type="boolean">false</variable>
			<variable name="HC_Unit.coolerOn" type="boolean">true</variable>
			<variable name="HC_Unit.currentRegulation" type="int">-1</variable>
		</statevariables>
		<queue>
			<message arrival="25" deadline="infinity" sender="hc_unit">regulateTemp()</message>
		</queue>
		<now>20</now>
		<pc></pc>
		<res></res>
	</rebec>
</state>
<transition source="786_0" destination="794_0" executionTime="20" shift="0"> <messageserver sender="sensor" owner="sensor" title="CALLSENSOR"/></transition>
<transition source="787_0" destination="794_0" executionTime="20" shift="0"> <messageserver sender="hc_unit" owner="room" title="SETREGULATION"/></transition>
<state id="795_0" atomicpropositions="isCooling," >
	<rebec name="room">
		<statevariables>
			<variable name="Room.currentTemp" type="int">23</variable>
			<variable name="Room.currentRegulation" type="int">-1</variable>
			<variable name="Room.outside_air" type="int">0</variable>
		</statevariables>
		<queue>
			<message arrival="20" deadline="infinity" sender="hc_unit">setRegulation(-1)</message>
			<message arrival="30" deadline="infinity" sender="room">updateStatus()</message>
		</queue>
		<now>20</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="controller">
		<statevariables>
			<variable name="Controller.currentTemp" type="int">24</variable>
			<variable name="Controller.isHeating" type="boolean">false</variable>
			<variable name="Controller.isCooling" type="boolean">true</variable>
		</statevariables>
		<queue>
		</queue>
		<now>20</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="sensor">
		<statevariables>
		</statevariables>
		<queue>
			<message arrival="20" deadline="infinity" sender="room">setCurrent(23)</message>
			<message arrival="22" deadline="infinity" sender="sensor">callSensor()</message>
		</queue>
		<now>20</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="hc_unit">
		<statevariables>
			<variable name="HC_Unit.heaterOn" type="boolean">false</variable>
			<variable name="HC_Unit.coolerOn" type="boolean">true</variable>
			<variable name="HC_Unit.currentRegulation" type="int">-1</variable>
		</statevariables>
		<queue>
			<message arrival="25" deadline="infinity" sender="hc_unit">regulateTemp()</message>
		</queue>
		<now>20</now>
		<pc></pc>
		<res></res>
	</rebec>
</state>
<transition source="787_0" destination="795_0" executionTime="20" shift="0"> <messageserver sender="sensor" owner="room" title="GETTEMP"/></transition>
<state id="796_0" atomicpropositions="isCooling," >
	<rebec name="room">
		<statevariables>
			<variable name="Room.currentTemp" type="int">22</variable>
			<variable name="Room.currentRegulation" type="int">-1</variable>
			<variable name="Room.outside_air" type="int">1</variable>
		</statevariables>
		<queue>
			<message arrival="20" deadline="infinity" sender="sensor">getTemp()</message>
			<message arrival="30" deadline="infinity" sender="room">updateStatus()</message>
		</queue>
		<now>20</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="controller">
		<statevariables>
			<variable name="Controller.currentTemp" type="int">24</variable>
			<variable name="Controller.isHeating" type="boolean">false</variable>
			<variable name="Controller.isCooling" type="boolean">true</variable>
		</statevariables>
		<queue>
		</queue>
		<now>20</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="sensor">
		<statevariables>
		</statevariables>
		<queue>
			<message arrival="22" deadline="infinity" sender="sensor">callSensor()</message>
		</queue>
		<now>20</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="hc_unit">
		<statevariables>
			<variable name="HC_Unit.heaterOn" type="boolean">false</variable>
			<variable name="HC_Unit.coolerOn" type="boolean">true</variable>
			<variable name="HC_Unit.currentRegulation" type="int">-1</variable>
		</statevariables>
		<queue>
			<message arrival="25" deadline="infinity" sender="hc_unit">regulateTemp()</message>
		</queue>
		<now>20</now>
		<pc></pc>
		<res></res>
	</rebec>
</state>
<transition source="788_0" destination="796_0" executionTime="20" shift="0"> <messageserver sender="sensor" owner="sensor" title="CALLSENSOR"/></transition>
<transition source="790_0" destination="796_0" executionTime="20" shift="0"> <messageserver sender="room" owner="room" title="UPDATESTATUS"/></transition>
<transition source="790_0" destination="794_0" executionTime="20" shift="0"> <messageserver sender="room" owner="room" title="UPDATESTATUS"/></transition>
<state id="797_0" atomicpropositions="isCooling," >
	<rebec name="room">
		<statevariables>
			<variable name="Room.currentTemp" type="int">24</variable>
			<variable name="Room.currentRegulation" type="int">-1</variable>
			<variable name="Room.outside_air" type="int">-1</variable>
		</statevariables>
		<queue>
			<message arrival="20" deadline="infinity" sender="sensor">getTemp()</message>
			<message arrival="30" deadline="infinity" sender="room">updateStatus()</message>
		</queue>
		<now>20</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="controller">
		<statevariables>
			<variable name="Controller.currentTemp" type="int">24</variable>
			<variable name="Controller.isHeating" type="boolean">false</variable>
			<variable name="Controller.isCooling" type="boolean">true</variable>
		</statevariables>
		<queue>
		</queue>
		<now>20</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="sensor">
		<statevariables>
		</statevariables>
		<queue>
			<message arrival="22" deadline="infinity" sender="sensor">callSensor()</message>
		</queue>
		<now>20</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="hc_unit">
		<statevariables>
			<variable name="HC_Unit.heaterOn" type="boolean">false</variable>
			<variable name="HC_Unit.coolerOn" type="boolean">true</variable>
			<variable name="HC_Unit.currentRegulation" type="int">-1</variable>
		</statevariables>
		<queue>
			<message arrival="25" deadline="infinity" sender="hc_unit">regulateTemp()</message>
		</queue>
		<now>20</now>
		<pc></pc>
		<res></res>
	</rebec>
</state>
<transition source="790_0" destination="797_0" executionTime="20" shift="0"> <messageserver sender="room" owner="room" title="UPDATESTATUS"/></transition>
<state id="798_0" atomicpropositions="isCooling," >
	<rebec name="room">
		<statevariables>
			<variable name="Room.currentTemp" type="int">24</variable>
			<variable name="Room.currentRegulation" type="int">-1</variable>
			<variable name="Room.outside_air" type="int">-1</variable>
		</statevariables>
		<queue>
			<message arrival="20" deadline="infinity" sender="room">updateStatus()</message>
		</queue>
		<now>20</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="controller">
		<statevariables>
			<variable name="Controller.currentTemp" type="int">24</variable>
			<variable name="Controller.isHeating" type="boolean">false</variable>
			<variable name="Controller.isCooling" type="boolean">true</variable>
		</statevariables>
		<queue>
		</queue>
		<now>20</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="sensor">
		<statevariables>
		</statevariables>
		<queue>
			<message arrival="20" deadline="infinity" sender="room">setCurrent(24)</message>
			<message arrival="22" deadline="infinity" sender="sensor">callSensor()</message>
		</queue>
		<now>20</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="hc_unit">
		<statevariables>
			<variable name="HC_Unit.heaterOn" type="boolean">false</variable>
			<variable name="HC_Unit.coolerOn" type="boolean">true</variable>
			<variable name="HC_Unit.currentRegulation" type="int">-1</variable>
		</statevariables>
		<queue>
			<message arrival="25" deadline="infinity" sender="hc_unit">regulateTemp()</message>
		</queue>
		<now>20</now>
		<pc></pc>
		<res></res>
	</rebec>
</state>
<transition source="790_0" destination="798_0" executionTime="20" shift="0"> <messageserver sender="sensor" owner="room" title="GETTEMP"/></transition>
<state id="799_0" atomicpropositions="isCooling," >
	<rebec name="room">
		<statevariables>
			<variable name="Room.currentTemp" type="int">22</variable>
			<variable name="Room.currentRegulation" type="int">-1</variable>
			<variable name="Room.outside_air" type="int">1</variable>
		</statevariables>
		<queue>
			<message arrival="20" deadline="infinity" sender="hc_unit">setRegulation(-1)</message>
			<message arrival="30" deadline="infinity" sender="room">updateStatus()</message>
		</queue>
		<now>20</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="controller">
		<statevariables>
			<variable name="Controller.currentTemp" type="int">24</variable>
			<variable name="Controller.isHeating" type="boolean">false</variable>
			<variable name="Controller.isCooling" type="boolean">true</variable>
		</statevariables>
		<queue>
		</queue>
		<now>20</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="sensor">
		<statevariables>
		</statevariables>
		<queue>
			<message arrival="20" deadline="infinity" sender="room">setCurrent(24)</message>
			<message arrival="22" deadline="infinity" sender="sensor">callSensor()</message>
		</queue>
		<now>20</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="hc_unit">
		<statevariables>
			<variable name="HC_Unit.heaterOn" type="boolean">false</variable>
			<variable name="HC_Unit.coolerOn" type="boolean">true</variable>
			<variable name="HC_Unit.currentRegulation" type="int">-1</variable>
		</statevariables>
		<queue>
			<message arrival="25" deadline="infinity" sender="hc_unit">regulateTemp()</message>
		</queue>
		<now>20</now>
		<pc></pc>
		<res></res>
	</rebec>
</state>
<transition source="793_0" destination="799_0" executionTime="20" shift="0"> <messageserver sender="room" owner="room" title="UPDATESTATUS"/></transition>
<state id="800_0" atomicpropositions="isCooling," >
	<rebec name="room">
		<statevariables>
			<variable name="Room.currentTemp" type="int">23</variable>
			<variable name="Room.currentRegulation" type="int">-1</variable>
			<variable name="Room.outside_air" type="int">0</variable>
		</statevariables>
		<queue>
			<message arrival="20" deadline="infinity" sender="hc_unit">setRegulation(-1)</message>
			<message arrival="30" deadline="infinity" sender="room">updateStatus()</message>
		</queue>
		<now>20</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="controller">
		<statevariables>
			<variable name="Controller.currentTemp" type="int">24</variable>
			<variable name="Controller.isHeating" type="boolean">false</variable>
			<variable name="Controller.isCooling" type="boolean">true</variable>
		</statevariables>
		<queue>
		</queue>
		<now>20</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="sensor">
		<statevariables>
		</statevariables>
		<queue>
			<message arrival="20" deadline="infinity" sender="room">setCurrent(24)</message>
			<message arrival="22" deadline="infinity" sender="sensor">callSensor()</message>
		</queue>
		<now>20</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="hc_unit">
		<statevariables>
			<variable name="HC_Unit.heaterOn" type="boolean">false</variable>
			<variable name="HC_Unit.coolerOn" type="boolean">true</variable>
			<variable name="HC_Unit.currentRegulation" type="int">-1</variable>
		</statevariables>
		<queue>
			<message arrival="25" deadline="infinity" sender="hc_unit">regulateTemp()</message>
		</queue>
		<now>20</now>
		<pc></pc>
		<res></res>
	</rebec>
</state>
<transition source="793_0" destination="800_0" executionTime="20" shift="0"> <messageserver sender="room" owner="room" title="UPDATESTATUS"/></transition>
<state id="801_0" atomicpropositions="isCooling," >
	<rebec name="room">
		<statevariables>
			<variable name="Room.currentTemp" type="int">24</variable>
			<variable name="Room.currentRegulation" type="int">-1</variable>
			<variable name="Room.outside_air" type="int">-1</variable>
		</statevariables>
		<queue>
			<message arrival="20" deadline="infinity" sender="hc_unit">setRegulation(-1)</message>
			<message arrival="30" deadline="infinity" sender="room">updateStatus()</message>
		</queue>
		<now>20</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="controller">
		<statevariables>
			<variable name="Controller.currentTemp" type="int">24</variable>
			<variable name="Controller.isHeating" type="boolean">false</variable>
			<variable name="Controller.isCooling" type="boolean">true</variable>
		</statevariables>
		<queue>
		</queue>
		<now>20</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="sensor">
		<statevariables>
		</statevariables>
		<queue>
			<message arrival="20" deadline="infinity" sender="room">setCurrent(24)</message>
			<message arrival="22" deadline="infinity" sender="sensor">callSensor()</message>
		</queue>
		<now>20</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="hc_unit">
		<statevariables>
			<variable name="HC_Unit.heaterOn" type="boolean">false</variable>
			<variable name="HC_Unit.coolerOn" type="boolean">true</variable>
			<variable name="HC_Unit.currentRegulation" type="int">-1</variable>
		</statevariables>
		<queue>
			<message arrival="25" deadline="infinity" sender="hc_unit">regulateTemp()</message>
		</queue>
		<now>20</now>
		<pc></pc>
		<res></res>
	</rebec>
</state>
<transition source="793_0" destination="801_0" executionTime="20" shift="0"> <messageserver sender="room" owner="room" title="UPDATESTATUS"/></transition>
<transition source="793_0" destination="798_0" executionTime="20" shift="0"> <messageserver sender="hc_unit" owner="room" title="SETREGULATION"/></transition>
<state id="802_0" atomicpropositions="isCooling," >
	<rebec name="room">
		<statevariables>
			<variable name="Room.currentTemp" type="int">24</variable>
			<variable name="Room.currentRegulation" type="int">-1</variable>
			<variable name="Room.outside_air" type="int">-1</variable>
		</statevariables>
		<queue>
			<message arrival="20" deadline="infinity" sender="room">updateStatus()</message>
			<message arrival="20" deadline="infinity" sender="hc_unit">setRegulation(-1)</message>
		</queue>
		<now>20</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="controller">
		<statevariables>
			<variable name="Controller.currentTemp" type="int">24</variable>
			<variable name="Controller.isHeating" type="boolean">false</variable>
			<variable name="Controller.isCooling" type="boolean">true</variable>
		</statevariables>
		<queue>
			<message arrival="20" deadline="infinity" sender="sensor">setCurrent(24)</message>
		</queue>
		<now>20</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="sensor">
		<statevariables>
		</statevariables>
		<queue>
			<message arrival="22" deadline="infinity" sender="sensor">callSensor()</message>
		</queue>
		<now>20</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="hc_unit">
		<statevariables>
			<variable name="HC_Unit.heaterOn" type="boolean">false</variable>
			<variable name="HC_Unit.coolerOn" type="boolean">true</variable>
			<variable name="HC_Unit.currentRegulation" type="int">-1</variable>
		</statevariables>
		<queue>
			<message arrival="25" deadline="infinity" sender="hc_unit">regulateTemp()</message>
		</queue>
		<now>20</now>
		<pc></pc>
		<res></res>
	</rebec>
</state>
<transition source="793_0" destination="802_0" executionTime="20" shift="0"> <messageserver sender="room" owner="sensor" title="SETCURRENT"/></transition>
<state id="803_0" atomicpropositions="isCooling," >
	<rebec name="room">
		<statevariables>
			<variable name="Room.currentTemp" type="int">23</variable>
			<variable name="Room.currentRegulation" type="int">-1</variable>
			<variable name="Room.outside_air" type="int">0</variable>
		</statevariables>
		<queue>
			<message arrival="30" deadline="infinity" sender="room">updateStatus()</message>
		</queue>
		<now>20</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="controller">
		<statevariables>
			<variable name="Controller.currentTemp" type="int">24</variable>
			<variable name="Controller.isHeating" type="boolean">false</variable>
			<variable name="Controller.isCooling" type="boolean">true</variable>
		</statevariables>
		<queue>
		</queue>
		<now>20</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="sensor">
		<statevariables>
		</statevariables>
		<queue>
			<message arrival="20" deadline="infinity" sender="room">setCurrent(23)</message>
			<message arrival="22" deadline="infinity" sender="sensor">callSensor()</message>
		</queue>
		<now>20</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="hc_unit">
		<statevariables>
			<variable name="HC_Unit.heaterOn" type="boolean">false</variable>
			<variable name="HC_Unit.coolerOn" type="boolean">true</variable>
			<variable name="HC_Unit.currentRegulation" type="int">-1</variable>
		</statevariables>
		<queue>
			<message arrival="25" deadline="infinity" sender="hc_unit">regulateTemp()</message>
		</queue>
		<now>20</now>
		<pc></pc>
		<res></res>
	</rebec>
</state>
<transition source="794_0" destination="803_0" executionTime="20" shift="0"> <messageserver sender="sensor" owner="room" title="GETTEMP"/></transition>
<transition source="795_0" destination="803_0" executionTime="20" shift="0"> <messageserver sender="hc_unit" owner="room" title="SETREGULATION"/></transition>
<state id="804_0" atomicpropositions="isCooling," >
	<rebec name="room">
		<statevariables>
			<variable name="Room.currentTemp" type="int">23</variable>
			<variable name="Room.currentRegulation" type="int">-1</variable>
			<variable name="Room.outside_air" type="int">0</variable>
		</statevariables>
		<queue>
			<message arrival="20" deadline="infinity" sender="hc_unit">setRegulation(-1)</message>
			<message arrival="30" deadline="infinity" sender="room">updateStatus()</message>
		</queue>
		<now>20</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="controller">
		<statevariables>
			<variable name="Controller.currentTemp" type="int">24</variable>
			<variable name="Controller.isHeating" type="boolean">false</variable>
			<variable name="Controller.isCooling" type="boolean">true</variable>
		</statevariables>
		<queue>
			<message arrival="20" deadline="infinity" sender="sensor">setCurrent(23)</message>
		</queue>
		<now>20</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="sensor">
		<statevariables>
		</statevariables>
		<queue>
			<message arrival="22" deadline="infinity" sender="sensor">callSensor()</message>
		</queue>
		<now>20</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="hc_unit">
		<statevariables>
			<variable name="HC_Unit.heaterOn" type="boolean">false</variable>
			<variable name="HC_Unit.coolerOn" type="boolean">true</variable>
			<variable name="HC_Unit.currentRegulation" type="int">-1</variable>
		</statevariables>
		<queue>
			<message arrival="25" deadline="infinity" sender="hc_unit">regulateTemp()</message>
		</queue>
		<now>20</now>
		<pc></pc>
		<res></res>
	</rebec>
</state>
<transition source="795_0" destination="804_0" executionTime="20" shift="0"> <messageserver sender="room" owner="sensor" title="SETCURRENT"/></transition>
<state id="805_0" atomicpropositions="isCooling," >
	<rebec name="room">
		<statevariables>
			<variable name="Room.currentTemp" type="int">22</variable>
			<variable name="Room.currentRegulation" type="int">-1</variable>
			<variable name="Room.outside_air" type="int">1</variable>
		</statevariables>
		<queue>
			<message arrival="30" deadline="infinity" sender="room">updateStatus()</message>
		</queue>
		<now>20</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="controller">
		<statevariables>
			<variable name="Controller.currentTemp" type="int">24</variable>
			<variable name="Controller.isHeating" type="boolean">false</variable>
			<variable name="Controller.isCooling" type="boolean">true</variable>
		</statevariables>
		<queue>
		</queue>
		<now>20</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="sensor">
		<statevariables>
		</statevariables>
		<queue>
			<message arrival="20" deadline="infinity" sender="room">setCurrent(22)</message>
			<message arrival="22" deadline="infinity" sender="sensor">callSensor()</message>
		</queue>
		<now>20</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="hc_unit">
		<statevariables>
			<variable name="HC_Unit.heaterOn" type="boolean">false</variable>
			<variable name="HC_Unit.coolerOn" type="boolean">true</variable>
			<variable name="HC_Unit.currentRegulation" type="int">-1</variable>
		</statevariables>
		<queue>
			<message arrival="25" deadline="infinity" sender="hc_unit">regulateTemp()</message>
		</queue>
		<now>20</now>
		<pc></pc>
		<res></res>
	</rebec>
</state>
<transition source="796_0" destination="805_0" executionTime="20" shift="0"> <messageserver sender="sensor" owner="room" title="GETTEMP"/></transition>
<state id="806_0" atomicpropositions="isCooling," >
	<rebec name="room">
		<statevariables>
			<variable name="Room.currentTemp" type="int">22</variable>
			<variable name="Room.currentRegulation" type="int">-1</variable>
			<variable name="Room.outside_air" type="int">1</variable>
		</statevariables>
		<queue>
			<message arrival="20" deadline="infinity" sender="hc_unit">setRegulation(-1)</message>
			<message arrival="30" deadline="infinity" sender="room">updateStatus()</message>
		</queue>
		<now>20</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="controller">
		<statevariables>
			<variable name="Controller.currentTemp" type="int">24</variable>
			<variable name="Controller.isHeating" type="boolean">false</variable>
			<variable name="Controller.isCooling" type="boolean">true</variable>
		</statevariables>
		<queue>
			<message arrival="20" deadline="infinity" sender="sensor">setCurrent(24)</message>
		</queue>
		<now>20</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="sensor">
		<statevariables>
		</statevariables>
		<queue>
			<message arrival="22" deadline="infinity" sender="sensor">callSensor()</message>
		</queue>
		<now>20</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="hc_unit">
		<statevariables>
			<variable name="HC_Unit.heaterOn" type="boolean">false</variable>
			<variable name="HC_Unit.coolerOn" type="boolean">true</variable>
			<variable name="HC_Unit.currentRegulation" type="int">-1</variable>
		</statevariables>
		<queue>
			<message arrival="25" deadline="infinity" sender="hc_unit">regulateTemp()</message>
		</queue>
		<now>20</now>
		<pc></pc>
		<res></res>
	</rebec>
</state>
<transition source="802_0" destination="806_0" executionTime="20" shift="0"> <messageserver sender="room" owner="room" title="UPDATESTATUS"/></transition>
<state id="807_0" atomicpropositions="isCooling," >
	<rebec name="room">
		<statevariables>
			<variable name="Room.currentTemp" type="int">23</variable>
			<variable name="Room.currentRegulation" type="int">-1</variable>
			<variable name="Room.outside_air" type="int">0</variable>
		</statevariables>
		<queue>
			<message arrival="20" deadline="infinity" sender="hc_unit">setRegulation(-1)</message>
			<message arrival="30" deadline="infinity" sender="room">updateStatus()</message>
		</queue>
		<now>20</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="controller">
		<statevariables>
			<variable name="Controller.currentTemp" type="int">24</variable>
			<variable name="Controller.isHeating" type="boolean">false</variable>
			<variable name="Controller.isCooling" type="boolean">true</variable>
		</statevariables>
		<queue>
			<message arrival="20" deadline="infinity" sender="sensor">setCurrent(24)</message>
		</queue>
		<now>20</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="sensor">
		<statevariables>
		</statevariables>
		<queue>
			<message arrival="22" deadline="infinity" sender="sensor">callSensor()</message>
		</queue>
		<now>20</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="hc_unit">
		<statevariables>
			<variable name="HC_Unit.heaterOn" type="boolean">false</variable>
			<variable name="HC_Unit.coolerOn" type="boolean">true</variable>
			<variable name="HC_Unit.currentRegulation" type="int">-1</variable>
		</statevariables>
		<queue>
			<message arrival="25" deadline="infinity" sender="hc_unit">regulateTemp()</message>
		</queue>
		<now>20</now>
		<pc></pc>
		<res></res>
	</rebec>
</state>
<transition source="802_0" destination="807_0" executionTime="20" shift="0"> <messageserver sender="room" owner="room" title="UPDATESTATUS"/></transition>
<state id="808_0" atomicpropositions="isCooling," >
	<rebec name="room">
		<statevariables>
			<variable name="Room.currentTemp" type="int">24</variable>
			<variable name="Room.currentRegulation" type="int">-1</variable>
			<variable name="Room.outside_air" type="int">-1</variable>
		</statevariables>
		<queue>
			<message arrival="20" deadline="infinity" sender="hc_unit">setRegulation(-1)</message>
			<message arrival="30" deadline="infinity" sender="room">updateStatus()</message>
		</queue>
		<now>20</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="controller">
		<statevariables>
			<variable name="Controller.currentTemp" type="int">24</variable>
			<variable name="Controller.isHeating" type="boolean">false</variable>
			<variable name="Controller.isCooling" type="boolean">true</variable>
		</statevariables>
		<queue>
			<message arrival="20" deadline="infinity" sender="sensor">setCurrent(24)</message>
		</queue>
		<now>20</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="sensor">
		<statevariables>
		</statevariables>
		<queue>
			<message arrival="22" deadline="infinity" sender="sensor">callSensor()</message>
		</queue>
		<now>20</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="hc_unit">
		<statevariables>
			<variable name="HC_Unit.heaterOn" type="boolean">false</variable>
			<variable name="HC_Unit.coolerOn" type="boolean">true</variable>
			<variable name="HC_Unit.currentRegulation" type="int">-1</variable>
		</statevariables>
		<queue>
			<message arrival="25" deadline="infinity" sender="hc_unit">regulateTemp()</message>
		</queue>
		<now>20</now>
		<pc></pc>
		<res></res>
	</rebec>
</state>
<transition source="802_0" destination="808_0" executionTime="20" shift="0"> <messageserver sender="room" owner="room" title="UPDATESTATUS"/></transition>
<state id="809_0" atomicpropositions="isCooling," >
	<rebec name="room">
		<statevariables>
			<variable name="Room.currentTemp" type="int">24</variable>
			<variable name="Room.currentRegulation" type="int">-1</variable>
			<variable name="Room.outside_air" type="int">-1</variable>
		</statevariables>
		<queue>
			<message arrival="20" deadline="infinity" sender="room">updateStatus()</message>
		</queue>
		<now>20</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="controller">
		<statevariables>
			<variable name="Controller.currentTemp" type="int">24</variable>
			<variable name="Controller.isHeating" type="boolean">false</variable>
			<variable name="Controller.isCooling" type="boolean">true</variable>
		</statevariables>
		<queue>
			<message arrival="20" deadline="infinity" sender="sensor">setCurrent(24)</message>
		</queue>
		<now>20</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="sensor">
		<statevariables>
		</statevariables>
		<queue>
			<message arrival="22" deadline="infinity" sender="sensor">callSensor()</message>
		</queue>
		<now>20</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="hc_unit">
		<statevariables>
			<variable name="HC_Unit.heaterOn" type="boolean">false</variable>
			<variable name="HC_Unit.coolerOn" type="boolean">true</variable>
			<variable name="HC_Unit.currentRegulation" type="int">-1</variable>
		</statevariables>
		<queue>
			<message arrival="25" deadline="infinity" sender="hc_unit">regulateTemp()</message>
		</queue>
		<now>20</now>
		<pc></pc>
		<res></res>
	</rebec>
</state>
<transition source="802_0" destination="809_0" executionTime="20" shift="0"> <messageserver sender="hc_unit" owner="room" title="SETREGULATION"/></transition>
<state id="810_0" atomicpropositions="isCooling," >
	<rebec name="room">
		<statevariables>
			<variable name="Room.currentTemp" type="int">24</variable>
			<variable name="Room.currentRegulation" type="int">-1</variable>
			<variable name="Room.outside_air" type="int">-1</variable>
		</statevariables>
		<queue>
			<message arrival="20" deadline="infinity" sender="room">updateStatus()</message>
			<message arrival="20" deadline="infinity" sender="hc_unit">setRegulation(-1)</message>
		</queue>
		<now>20</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="controller">
		<statevariables>
			<variable name="Controller.currentTemp" type="int">24</variable>
			<variable name="Controller.isHeating" type="boolean">false</variable>
			<variable name="Controller.isCooling" type="boolean">true</variable>
		</statevariables>
		<queue>
			<message arrival="20" deadline="infinity" sender="controller">updateOutput()</message>
		</queue>
		<now>20</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="sensor">
		<statevariables>
		</statevariables>
		<queue>
			<message arrival="22" deadline="infinity" sender="sensor">callSensor()</message>
		</queue>
		<now>20</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="hc_unit">
		<statevariables>
			<variable name="HC_Unit.heaterOn" type="boolean">false</variable>
			<variable name="HC_Unit.coolerOn" type="boolean">true</variable>
			<variable name="HC_Unit.currentRegulation" type="int">-1</variable>
		</statevariables>
		<queue>
			<message arrival="25" deadline="infinity" sender="hc_unit">regulateTemp()</message>
		</queue>
		<now>20</now>
		<pc></pc>
		<res></res>
	</rebec>
</state>
<transition source="802_0" destination="810_0" executionTime="20" shift="0"> <messageserver sender="sensor" owner="controller" title="SETCURRENT"/></transition>
<state id="811_0" atomicpropositions="isCooling," >
	<rebec name="room">
		<statevariables>
			<variable name="Room.currentTemp" type="int">23</variable>
			<variable name="Room.currentRegulation" type="int">-1</variable>
			<variable name="Room.outside_air" type="int">0</variable>
		</statevariables>
		<queue>
			<message arrival="30" deadline="infinity" sender="room">updateStatus()</message>
		</queue>
		<now>20</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="controller">
		<statevariables>
			<variable name="Controller.currentTemp" type="int">24</variable>
			<variable name="Controller.isHeating" type="boolean">false</variable>
			<variable name="Controller.isCooling" type="boolean">true</variable>
		</statevariables>
		<queue>
			<message arrival="20" deadline="infinity" sender="sensor">setCurrent(23)</message>
		</queue>
		<now>20</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="sensor">
		<statevariables>
		</statevariables>
		<queue>
			<message arrival="22" deadline="infinity" sender="sensor">callSensor()</message>
		</queue>
		<now>20</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="hc_unit">
		<statevariables>
			<variable name="HC_Unit.heaterOn" type="boolean">false</variable>
			<variable name="HC_Unit.coolerOn" type="boolean">true</variable>
			<variable name="HC_Unit.currentRegulation" type="int">-1</variable>
		</statevariables>
		<queue>
			<message arrival="25" deadline="infinity" sender="hc_unit">regulateTemp()</message>
		</queue>
		<now>20</now>
		<pc></pc>
		<res></res>
	</rebec>
</state>
<transition source="803_0" destination="811_0" executionTime="20" shift="0"> <messageserver sender="room" owner="sensor" title="SETCURRENT"/></transition>
<transition source="804_0" destination="811_0" executionTime="20" shift="0"> <messageserver sender="hc_unit" owner="room" title="SETREGULATION"/></transition>
<state id="812_0" atomicpropositions="isCooling," >
	<rebec name="room">
		<statevariables>
			<variable name="Room.currentTemp" type="int">23</variable>
			<variable name="Room.currentRegulation" type="int">-1</variable>
			<variable name="Room.outside_air" type="int">0</variable>
		</statevariables>
		<queue>
			<message arrival="20" deadline="infinity" sender="hc_unit">setRegulation(-1)</message>
			<message arrival="30" deadline="infinity" sender="room">updateStatus()</message>
		</queue>
		<now>20</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="controller">
		<statevariables>
			<variable name="Controller.currentTemp" type="int">23</variable>
			<variable name="Controller.isHeating" type="boolean">false</variable>
			<variable name="Controller.isCooling" type="boolean">true</variable>
		</statevariables>
		<queue>
			<message arrival="20" deadline="infinity" sender="controller">updateOutput()</message>
		</queue>
		<now>20</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="sensor">
		<statevariables>
		</statevariables>
		<queue>
			<message arrival="22" deadline="infinity" sender="sensor">callSensor()</message>
		</queue>
		<now>20</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="hc_unit">
		<statevariables>
			<variable name="HC_Unit.heaterOn" type="boolean">false</variable>
			<variable name="HC_Unit.coolerOn" type="boolean">true</variable>
			<variable name="HC_Unit.currentRegulation" type="int">-1</variable>
		</statevariables>
		<queue>
			<message arrival="25" deadline="infinity" sender="hc_unit">regulateTemp()</message>
		</queue>
		<now>20</now>
		<pc></pc>
		<res></res>
	</rebec>
</state>
<transition source="804_0" destination="812_0" executionTime="20" shift="0"> <messageserver sender="sensor" owner="controller" title="SETCURRENT"/></transition>
<state id="813_0" atomicpropositions="isCooling," >
	<rebec name="room">
		<statevariables>
			<variable name="Room.currentTemp" type="int">22</variable>
			<variable name="Room.currentRegulation" type="int">-1</variable>
			<variable name="Room.outside_air" type="int">1</variable>
		</statevariables>
		<queue>
			<message arrival="30" deadline="infinity" sender="room">updateStatus()</message>
		</queue>
		<now>20</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="controller">
		<statevariables>
			<variable name="Controller.currentTemp" type="int">24</variable>
			<variable name="Controller.isHeating" type="boolean">false</variable>
			<variable name="Controller.isCooling" type="boolean">true</variable>
		</statevariables>
		<queue>
			<message arrival="20" deadline="infinity" sender="sensor">setCurrent(22)</message>
		</queue>
		<now>20</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="sensor">
		<statevariables>
		</statevariables>
		<queue>
			<message arrival="22" deadline="infinity" sender="sensor">callSensor()</message>
		</queue>
		<now>20</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="hc_unit">
		<statevariables>
			<variable name="HC_Unit.heaterOn" type="boolean">false</variable>
			<variable name="HC_Unit.coolerOn" type="boolean">true</variable>
			<variable name="HC_Unit.currentRegulation" type="int">-1</variable>
		</statevariables>
		<queue>
			<message arrival="25" deadline="infinity" sender="hc_unit">regulateTemp()</message>
		</queue>
		<now>20</now>
		<pc></pc>
		<res></res>
	</rebec>
</state>
<transition source="805_0" destination="813_0" executionTime="20" shift="0"> <messageserver sender="room" owner="sensor" title="SETCURRENT"/></transition>
<state id="814_0" atomicpropositions="isCooling," >
	<rebec name="room">
		<statevariables>
			<variable name="Room.currentTemp" type="int">22</variable>
			<variable name="Room.currentRegulation" type="int">-1</variable>
			<variable name="Room.outside_air" type="int">1</variable>
		</statevariables>
		<queue>
			<message arrival="20" deadline="infinity" sender="hc_unit">setRegulation(-1)</message>
			<message arrival="30" deadline="infinity" sender="room">updateStatus()</message>
		</queue>
		<now>20</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="controller">
		<statevariables>
			<variable name="Controller.currentTemp" type="int">24</variable>
			<variable name="Controller.isHeating" type="boolean">false</variable>
			<variable name="Controller.isCooling" type="boolean">true</variable>
		</statevariables>
		<queue>
			<message arrival="20" deadline="infinity" sender="controller">updateOutput()</message>
		</queue>
		<now>20</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="sensor">
		<statevariables>
		</statevariables>
		<queue>
			<message arrival="22" deadline="infinity" sender="sensor">callSensor()</message>
		</queue>
		<now>20</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="hc_unit">
		<statevariables>
			<variable name="HC_Unit.heaterOn" type="boolean">false</variable>
			<variable name="HC_Unit.coolerOn" type="boolean">true</variable>
			<variable name="HC_Unit.currentRegulation" type="int">-1</variable>
		</statevariables>
		<queue>
			<message arrival="25" deadline="infinity" sender="hc_unit">regulateTemp()</message>
		</queue>
		<now>20</now>
		<pc></pc>
		<res></res>
	</rebec>
</state>
<transition source="810_0" destination="814_0" executionTime="20" shift="0"> <messageserver sender="room" owner="room" title="UPDATESTATUS"/></transition>
<state id="815_0" atomicpropositions="isCooling," >
	<rebec name="room">
		<statevariables>
			<variable name="Room.currentTemp" type="int">23</variable>
			<variable name="Room.currentRegulation" type="int">-1</variable>
			<variable name="Room.outside_air" type="int">0</variable>
		</statevariables>
		<queue>
			<message arrival="20" deadline="infinity" sender="hc_unit">setRegulation(-1)</message>
			<message arrival="30" deadline="infinity" sender="room">updateStatus()</message>
		</queue>
		<now>20</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="controller">
		<statevariables>
			<variable name="Controller.currentTemp" type="int">24</variable>
			<variable name="Controller.isHeating" type="boolean">false</variable>
			<variable name="Controller.isCooling" type="boolean">true</variable>
		</statevariables>
		<queue>
			<message arrival="20" deadline="infinity" sender="controller">updateOutput()</message>
		</queue>
		<now>20</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="sensor">
		<statevariables>
		</statevariables>
		<queue>
			<message arrival="22" deadline="infinity" sender="sensor">callSensor()</message>
		</queue>
		<now>20</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="hc_unit">
		<statevariables>
			<variable name="HC_Unit.heaterOn" type="boolean">false</variable>
			<variable name="HC_Unit.coolerOn" type="boolean">true</variable>
			<variable name="HC_Unit.currentRegulation" type="int">-1</variable>
		</statevariables>
		<queue>
			<message arrival="25" deadline="infinity" sender="hc_unit">regulateTemp()</message>
		</queue>
		<now>20</now>
		<pc></pc>
		<res></res>
	</rebec>
</state>
<transition source="810_0" destination="815_0" executionTime="20" shift="0"> <messageserver sender="room" owner="room" title="UPDATESTATUS"/></transition>
<state id="816_0" atomicpropositions="isCooling," >
	<rebec name="room">
		<statevariables>
			<variable name="Room.currentTemp" type="int">24</variable>
			<variable name="Room.currentRegulation" type="int">-1</variable>
			<variable name="Room.outside_air" type="int">-1</variable>
		</statevariables>
		<queue>
			<message arrival="20" deadline="infinity" sender="hc_unit">setRegulation(-1)</message>
			<message arrival="30" deadline="infinity" sender="room">updateStatus()</message>
		</queue>
		<now>20</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="controller">
		<statevariables>
			<variable name="Controller.currentTemp" type="int">24</variable>
			<variable name="Controller.isHeating" type="boolean">false</variable>
			<variable name="Controller.isCooling" type="boolean">true</variable>
		</statevariables>
		<queue>
			<message arrival="20" deadline="infinity" sender="controller">updateOutput()</message>
		</queue>
		<now>20</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="sensor">
		<statevariables>
		</statevariables>
		<queue>
			<message arrival="22" deadline="infinity" sender="sensor">callSensor()</message>
		</queue>
		<now>20</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="hc_unit">
		<statevariables>
			<variable name="HC_Unit.heaterOn" type="boolean">false</variable>
			<variable name="HC_Unit.coolerOn" type="boolean">true</variable>
			<variable name="HC_Unit.currentRegulation" type="int">-1</variable>
		</statevariables>
		<queue>
			<message arrival="25" deadline="infinity" sender="hc_unit">regulateTemp()</message>
		</queue>
		<now>20</now>
		<pc></pc>
		<res></res>
	</rebec>
</state>
<transition source="810_0" destination="816_0" executionTime="20" shift="0"> <messageserver sender="room" owner="room" title="UPDATESTATUS"/></transition>
<state id="817_0" atomicpropositions="isCooling," >
	<rebec name="room">
		<statevariables>
			<variable name="Room.currentTemp" type="int">24</variable>
			<variable name="Room.currentRegulation" type="int">-1</variable>
			<variable name="Room.outside_air" type="int">-1</variable>
		</statevariables>
		<queue>
			<message arrival="20" deadline="infinity" sender="room">updateStatus()</message>
		</queue>
		<now>20</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="controller">
		<statevariables>
			<variable name="Controller.currentTemp" type="int">24</variable>
			<variable name="Controller.isHeating" type="boolean">false</variable>
			<variable name="Controller.isCooling" type="boolean">true</variable>
		</statevariables>
		<queue>
			<message arrival="20" deadline="infinity" sender="controller">updateOutput()</message>
		</queue>
		<now>20</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="sensor">
		<statevariables>
		</statevariables>
		<queue>
			<message arrival="22" deadline="infinity" sender="sensor">callSensor()</message>
		</queue>
		<now>20</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="hc_unit">
		<statevariables>
			<variable name="HC_Unit.heaterOn" type="boolean">false</variable>
			<variable name="HC_Unit.coolerOn" type="boolean">true</variable>
			<variable name="HC_Unit.currentRegulation" type="int">-1</variable>
		</statevariables>
		<queue>
			<message arrival="25" deadline="infinity" sender="hc_unit">regulateTemp()</message>
		</queue>
		<now>20</now>
		<pc></pc>
		<res></res>
	</rebec>
</state>
<transition source="810_0" destination="817_0" executionTime="20" shift="0"> <messageserver sender="hc_unit" owner="room" title="SETREGULATION"/></transition>
<state id="818_0" atomicpropositions="isCooling," >
	<rebec name="room">
		<statevariables>
			<variable name="Room.currentTemp" type="int">24</variable>
			<variable name="Room.currentRegulation" type="int">-1</variable>
			<variable name="Room.outside_air" type="int">-1</variable>
		</statevariables>
		<queue>
			<message arrival="20" deadline="infinity" sender="room">updateStatus()</message>
			<message arrival="20" deadline="infinity" sender="hc_unit">setRegulation(-1)</message>
		</queue>
		<now>20</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="controller">
		<statevariables>
			<variable name="Controller.currentTemp" type="int">24</variable>
			<variable name="Controller.isHeating" type="boolean">false</variable>
			<variable name="Controller.isCooling" type="boolean">true</variable>
		</statevariables>
		<queue>
		</queue>
		<now>20</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="sensor">
		<statevariables>
		</statevariables>
		<queue>
			<message arrival="22" deadline="infinity" sender="sensor">callSensor()</message>
		</queue>
		<now>20</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="hc_unit">
		<statevariables>
			<variable name="HC_Unit.heaterOn" type="boolean">false</variable>
			<variable name="HC_Unit.coolerOn" type="boolean">true</variable>
			<variable name="HC_Unit.currentRegulation" type="int">-1</variable>
		</statevariables>
		<queue>
			<message arrival="25" deadline="infinity" sender="hc_unit">regulateTemp()</message>
		</queue>
		<now>20</now>
		<pc></pc>
		<res></res>
	</rebec>
</state>
<transition source="810_0" destination="818_0" executionTime="20" shift="0"> <messageserver sender="controller" owner="controller" title="UPDATEOUTPUT"/></transition>
<state id="819_0" atomicpropositions="isCooling," >
	<rebec name="room">
		<statevariables>
			<variable name="Room.currentTemp" type="int">23</variable>
			<variable name="Room.currentRegulation" type="int">-1</variable>
			<variable name="Room.outside_air" type="int">0</variable>
		</statevariables>
		<queue>
			<message arrival="30" deadline="infinity" sender="room">updateStatus()</message>
		</queue>
		<now>20</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="controller">
		<statevariables>
			<variable name="Controller.currentTemp" type="int">23</variable>
			<variable name="Controller.isHeating" type="boolean">false</variable>
			<variable name="Controller.isCooling" type="boolean">true</variable>
		</statevariables>
		<queue>
			<message arrival="20" deadline="infinity" sender="controller">updateOutput()</message>
		</queue>
		<now>20</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="sensor">
		<statevariables>
		</statevariables>
		<queue>
			<message arrival="22" deadline="infinity" sender="sensor">callSensor()</message>
		</queue>
		<now>20</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="hc_unit">
		<statevariables>
			<variable name="HC_Unit.heaterOn" type="boolean">false</variable>
			<variable name="HC_Unit.coolerOn" type="boolean">true</variable>
			<variable name="HC_Unit.currentRegulation" type="int">-1</variable>
		</statevariables>
		<queue>
			<message arrival="25" deadline="infinity" sender="hc_unit">regulateTemp()</message>
		</queue>
		<now>20</now>
		<pc></pc>
		<res></res>
	</rebec>
</state>
<transition source="811_0" destination="819_0" executionTime="20" shift="0"> <messageserver sender="sensor" owner="controller" title="SETCURRENT"/></transition>
<transition source="812_0" destination="819_0" executionTime="20" shift="0"> <messageserver sender="hc_unit" owner="room" title="SETREGULATION"/></transition>
<state id="820_0" atomicpropositions="isCooling," >
	<rebec name="room">
		<statevariables>
			<variable name="Room.currentTemp" type="int">23</variable>
			<variable name="Room.currentRegulation" type="int">-1</variable>
			<variable name="Room.outside_air" type="int">0</variable>
		</statevariables>
		<queue>
			<message arrival="20" deadline="infinity" sender="hc_unit">setRegulation(-1)</message>
			<message arrival="30" deadline="infinity" sender="room">updateStatus()</message>
		</queue>
		<now>20</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="controller">
		<statevariables>
			<variable name="Controller.currentTemp" type="int">23</variable>
			<variable name="Controller.isHeating" type="boolean">false</variable>
			<variable name="Controller.isCooling" type="boolean">false</variable>
		</statevariables>
		<queue>
		</queue>
		<now>20</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="sensor">
		<statevariables>
		</statevariables>
		<queue>
			<message arrival="22" deadline="infinity" sender="sensor">callSensor()</message>
		</queue>
		<now>20</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="hc_unit">
		<statevariables>
			<variable name="HC_Unit.heaterOn" type="boolean">false</variable>
			<variable name="HC_Unit.coolerOn" type="boolean">true</variable>
			<variable name="HC_Unit.currentRegulation" type="int">-1</variable>
		</statevariables>
		<queue>
			<message arrival="20" deadline="infinity" sender="controller">switchoff()</message>
			<message arrival="25" deadline="infinity" sender="hc_unit">regulateTemp()</message>
		</queue>
		<now>20</now>
		<pc></pc>
		<res></res>
	</rebec>
</state>
<transition source="812_0" destination="820_0" executionTime="20" shift="0"> <messageserver sender="controller" owner="controller" title="UPDATEOUTPUT"/></transition>
<state id="821_0" atomicpropositions="isCooling," >
	<rebec name="room">
		<statevariables>
			<variable name="Room.currentTemp" type="int">22</variable>
			<variable name="Room.currentRegulation" type="int">-1</variable>
			<variable name="Room.outside_air" type="int">1</variable>
		</statevariables>
		<queue>
			<message arrival="30" deadline="infinity" sender="room">updateStatus()</message>
		</queue>
		<now>20</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="controller">
		<statevariables>
			<variable name="Controller.currentTemp" type="int">22</variable>
			<variable name="Controller.isHeating" type="boolean">false</variable>
			<variable name="Controller.isCooling" type="boolean">true</variable>
		</statevariables>
		<queue>
			<message arrival="20" deadline="infinity" sender="controller">updateOutput()</message>
		</queue>
		<now>20</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="sensor">
		<statevariables>
		</statevariables>
		<queue>
			<message arrival="22" deadline="infinity" sender="sensor">callSensor()</message>
		</queue>
		<now>20</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="hc_unit">
		<statevariables>
			<variable name="HC_Unit.heaterOn" type="boolean">false</variable>
			<variable name="HC_Unit.coolerOn" type="boolean">true</variable>
			<variable name="HC_Unit.currentRegulation" type="int">-1</variable>
		</statevariables>
		<queue>
			<message arrival="25" deadline="infinity" sender="hc_unit">regulateTemp()</message>
		</queue>
		<now>20</now>
		<pc></pc>
		<res></res>
	</rebec>
</state>
<transition source="813_0" destination="821_0" executionTime="20" shift="0"> <messageserver sender="sensor" owner="controller" title="SETCURRENT"/></transition>
<state id="822_0" atomicpropositions="isCooling," >
	<rebec name="room">
		<statevariables>
			<variable name="Room.currentTemp" type="int">22</variable>
			<variable name="Room.currentRegulation" type="int">-1</variable>
			<variable name="Room.outside_air" type="int">1</variable>
		</statevariables>
		<queue>
			<message arrival="30" deadline="infinity" sender="room">updateStatus()</message>
		</queue>
		<now>20</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="controller">
		<statevariables>
			<variable name="Controller.currentTemp" type="int">24</variable>
			<variable name="Controller.isHeating" type="boolean">false</variable>
			<variable name="Controller.isCooling" type="boolean">true</variable>
		</statevariables>
		<queue>
			<message arrival="20" deadline="infinity" sender="controller">updateOutput()</message>
		</queue>
		<now>20</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="sensor">
		<statevariables>
		</statevariables>
		<queue>
			<message arrival="22" deadline="infinity" sender="sensor">callSensor()</message>
		</queue>
		<now>20</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="hc_unit">
		<statevariables>
			<variable name="HC_Unit.heaterOn" type="boolean">false</variable>
			<variable name="HC_Unit.coolerOn" type="boolean">true</variable>
			<variable name="HC_Unit.currentRegulation" type="int">-1</variable>
		</statevariables>
		<queue>
			<message arrival="25" deadline="infinity" sender="hc_unit">regulateTemp()</message>
		</queue>
		<now>20</now>
		<pc></pc>
		<res></res>
	</rebec>
</state>
<transition source="817_0" destination="822_0" executionTime="20" shift="0"> <messageserver sender="room" owner="room" title="UPDATESTATUS"/></transition>
<state id="823_0" atomicpropositions="isCooling," >
	<rebec name="room">
		<statevariables>
			<variable name="Room.currentTemp" type="int">23</variable>
			<variable name="Room.currentRegulation" type="int">-1</variable>
			<variable name="Room.outside_air" type="int">0</variable>
		</statevariables>
		<queue>
			<message arrival="30" deadline="infinity" sender="room">updateStatus()</message>
		</queue>
		<now>20</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="controller">
		<statevariables>
			<variable name="Controller.currentTemp" type="int">24</variable>
			<variable name="Controller.isHeating" type="boolean">false</variable>
			<variable name="Controller.isCooling" type="boolean">true</variable>
		</statevariables>
		<queue>
			<message arrival="20" deadline="infinity" sender="controller">updateOutput()</message>
		</queue>
		<now>20</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="sensor">
		<statevariables>
		</statevariables>
		<queue>
			<message arrival="22" deadline="infinity" sender="sensor">callSensor()</message>
		</queue>
		<now>20</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="hc_unit">
		<statevariables>
			<variable name="HC_Unit.heaterOn" type="boolean">false</variable>
			<variable name="HC_Unit.coolerOn" type="boolean">true</variable>
			<variable name="HC_Unit.currentRegulation" type="int">-1</variable>
		</statevariables>
		<queue>
			<message arrival="25" deadline="infinity" sender="hc_unit">regulateTemp()</message>
		</queue>
		<now>20</now>
		<pc></pc>
		<res></res>
	</rebec>
</state>
<transition source="817_0" destination="823_0" executionTime="20" shift="0"> <messageserver sender="room" owner="room" title="UPDATESTATUS"/></transition>
<state id="824_0" atomicpropositions="isCooling," >
	<rebec name="room">
		<statevariables>
			<variable name="Room.currentTemp" type="int">24</variable>
			<variable name="Room.currentRegulation" type="int">-1</variable>
			<variable name="Room.outside_air" type="int">-1</variable>
		</statevariables>
		<queue>
			<message arrival="30" deadline="infinity" sender="room">updateStatus()</message>
		</queue>
		<now>20</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="controller">
		<statevariables>
			<variable name="Controller.currentTemp" type="int">24</variable>
			<variable name="Controller.isHeating" type="boolean">false</variable>
			<variable name="Controller.isCooling" type="boolean">true</variable>
		</statevariables>
		<queue>
			<message arrival="20" deadline="infinity" sender="controller">updateOutput()</message>
		</queue>
		<now>20</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="sensor">
		<statevariables>
		</statevariables>
		<queue>
			<message arrival="22" deadline="infinity" sender="sensor">callSensor()</message>
		</queue>
		<now>20</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="hc_unit">
		<statevariables>
			<variable name="HC_Unit.heaterOn" type="boolean">false</variable>
			<variable name="HC_Unit.coolerOn" type="boolean">true</variable>
			<variable name="HC_Unit.currentRegulation" type="int">-1</variable>
		</statevariables>
		<queue>
			<message arrival="25" deadline="infinity" sender="hc_unit">regulateTemp()</message>
		</queue>
		<now>20</now>
		<pc></pc>
		<res></res>
	</rebec>
</state>
<transition source="817_0" destination="824_0" executionTime="20" shift="0"> <messageserver sender="room" owner="room" title="UPDATESTATUS"/></transition>
<state id="825_0" atomicpropositions="isCooling," >
	<rebec name="room">
		<statevariables>
			<variable name="Room.currentTemp" type="int">24</variable>
			<variable name="Room.currentRegulation" type="int">-1</variable>
			<variable name="Room.outside_air" type="int">-1</variable>
		</statevariables>
		<queue>
			<message arrival="20" deadline="infinity" sender="room">updateStatus()</message>
		</queue>
		<now>20</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="controller">
		<statevariables>
			<variable name="Controller.currentTemp" type="int">24</variable>
			<variable name="Controller.isHeating" type="boolean">false</variable>
			<variable name="Controller.isCooling" type="boolean">true</variable>
		</statevariables>
		<queue>
		</queue>
		<now>20</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="sensor">
		<statevariables>
		</statevariables>
		<queue>
			<message arrival="22" deadline="infinity" sender="sensor">callSensor()</message>
		</queue>
		<now>20</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="hc_unit">
		<statevariables>
			<variable name="HC_Unit.heaterOn" type="boolean">false</variable>
			<variable name="HC_Unit.coolerOn" type="boolean">true</variable>
			<variable name="HC_Unit.currentRegulation" type="int">-1</variable>
		</statevariables>
		<queue>
			<message arrival="25" deadline="infinity" sender="hc_unit">regulateTemp()</message>
		</queue>
		<now>20</now>
		<pc></pc>
		<res></res>
	</rebec>
</state>
<transition source="817_0" destination="825_0" executionTime="20" shift="0"> <messageserver sender="controller" owner="controller" title="UPDATEOUTPUT"/></transition>
<state id="826_0" atomicpropositions="isCooling," >
	<rebec name="room">
		<statevariables>
			<variable name="Room.currentTemp" type="int">22</variable>
			<variable name="Room.currentRegulation" type="int">-1</variable>
			<variable name="Room.outside_air" type="int">1</variable>
		</statevariables>
		<queue>
			<message arrival="20" deadline="infinity" sender="hc_unit">setRegulation(-1)</message>
			<message arrival="30" deadline="infinity" sender="room">updateStatus()</message>
		</queue>
		<now>20</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="controller">
		<statevariables>
			<variable name="Controller.currentTemp" type="int">24</variable>
			<variable name="Controller.isHeating" type="boolean">false</variable>
			<variable name="Controller.isCooling" type="boolean">true</variable>
		</statevariables>
		<queue>
		</queue>
		<now>20</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="sensor">
		<statevariables>
		</statevariables>
		<queue>
			<message arrival="22" deadline="infinity" sender="sensor">callSensor()</message>
		</queue>
		<now>20</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="hc_unit">
		<statevariables>
			<variable name="HC_Unit.heaterOn" type="boolean">false</variable>
			<variable name="HC_Unit.coolerOn" type="boolean">true</variable>
			<variable name="HC_Unit.currentRegulation" type="int">-1</variable>
		</statevariables>
		<queue>
			<message arrival="25" deadline="infinity" sender="hc_unit">regulateTemp()</message>
		</queue>
		<now>20</now>
		<pc></pc>
		<res></res>
	</rebec>
</state>
<transition source="818_0" destination="826_0" executionTime="20" shift="0"> <messageserver sender="room" owner="room" title="UPDATESTATUS"/></transition>
<state id="827_0" atomicpropositions="isCooling," >
	<rebec name="room">
		<statevariables>
			<variable name="Room.currentTemp" type="int">23</variable>
			<variable name="Room.currentRegulation" type="int">-1</variable>
			<variable name="Room.outside_air" type="int">0</variable>
		</statevariables>
		<queue>
			<message arrival="20" deadline="infinity" sender="hc_unit">setRegulation(-1)</message>
			<message arrival="30" deadline="infinity" sender="room">updateStatus()</message>
		</queue>
		<now>20</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="controller">
		<statevariables>
			<variable name="Controller.currentTemp" type="int">24</variable>
			<variable name="Controller.isHeating" type="boolean">false</variable>
			<variable name="Controller.isCooling" type="boolean">true</variable>
		</statevariables>
		<queue>
		</queue>
		<now>20</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="sensor">
		<statevariables>
		</statevariables>
		<queue>
			<message arrival="22" deadline="infinity" sender="sensor">callSensor()</message>
		</queue>
		<now>20</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="hc_unit">
		<statevariables>
			<variable name="HC_Unit.heaterOn" type="boolean">false</variable>
			<variable name="HC_Unit.coolerOn" type="boolean">true</variable>
			<variable name="HC_Unit.currentRegulation" type="int">-1</variable>
		</statevariables>
		<queue>
			<message arrival="25" deadline="infinity" sender="hc_unit">regulateTemp()</message>
		</queue>
		<now>20</now>
		<pc></pc>
		<res></res>
	</rebec>
</state>
<transition source="818_0" destination="827_0" executionTime="20" shift="0"> <messageserver sender="room" owner="room" title="UPDATESTATUS"/></transition>
<state id="828_0" atomicpropositions="isCooling," >
	<rebec name="room">
		<statevariables>
			<variable name="Room.currentTemp" type="int">24</variable>
			<variable name="Room.currentRegulation" type="int">-1</variable>
			<variable name="Room.outside_air" type="int">-1</variable>
		</statevariables>
		<queue>
			<message arrival="20" deadline="infinity" sender="hc_unit">setRegulation(-1)</message>
			<message arrival="30" deadline="infinity" sender="room">updateStatus()</message>
		</queue>
		<now>20</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="controller">
		<statevariables>
			<variable name="Controller.currentTemp" type="int">24</variable>
			<variable name="Controller.isHeating" type="boolean">false</variable>
			<variable name="Controller.isCooling" type="boolean">true</variable>
		</statevariables>
		<queue>
		</queue>
		<now>20</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="sensor">
		<statevariables>
		</statevariables>
		<queue>
			<message arrival="22" deadline="infinity" sender="sensor">callSensor()</message>
		</queue>
		<now>20</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="hc_unit">
		<statevariables>
			<variable name="HC_Unit.heaterOn" type="boolean">false</variable>
			<variable name="HC_Unit.coolerOn" type="boolean">true</variable>
			<variable name="HC_Unit.currentRegulation" type="int">-1</variable>
		</statevariables>
		<queue>
			<message arrival="25" deadline="infinity" sender="hc_unit">regulateTemp()</message>
		</queue>
		<now>20</now>
		<pc></pc>
		<res></res>
	</rebec>
</state>
<transition source="818_0" destination="828_0" executionTime="20" shift="0"> <messageserver sender="room" owner="room" title="UPDATESTATUS"/></transition>
<transition source="818_0" destination="825_0" executionTime="20" shift="0"> <messageserver sender="hc_unit" owner="room" title="SETREGULATION"/></transition>
<state id="829_0" atomicpropositions="isCooling," >
	<rebec name="room">
		<statevariables>
			<variable name="Room.currentTemp" type="int">23</variable>
			<variable name="Room.currentRegulation" type="int">-1</variable>
			<variable name="Room.outside_air" type="int">0</variable>
		</statevariables>
		<queue>
			<message arrival="30" deadline="infinity" sender="room">updateStatus()</message>
		</queue>
		<now>20</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="controller">
		<statevariables>
			<variable name="Controller.currentTemp" type="int">23</variable>
			<variable name="Controller.isHeating" type="boolean">false</variable>
			<variable name="Controller.isCooling" type="boolean">false</variable>
		</statevariables>
		<queue>
		</queue>
		<now>20</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="sensor">
		<statevariables>
		</statevariables>
		<queue>
			<message arrival="22" deadline="infinity" sender="sensor">callSensor()</message>
		</queue>
		<now>20</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="hc_unit">
		<statevariables>
			<variable name="HC_Unit.heaterOn" type="boolean">false</variable>
			<variable name="HC_Unit.coolerOn" type="boolean">true</variable>
			<variable name="HC_Unit.currentRegulation" type="int">-1</variable>
		</statevariables>
		<queue>
			<message arrival="20" deadline="infinity" sender="controller">switchoff()</message>
			<message arrival="25" deadline="infinity" sender="hc_unit">regulateTemp()</message>
		</queue>
		<now>20</now>
		<pc></pc>
		<res></res>
	</rebec>
</state>
<transition source="819_0" destination="829_0" executionTime="20" shift="0"> <messageserver sender="controller" owner="controller" title="UPDATEOUTPUT"/></transition>
<transition source="820_0" destination="829_0" executionTime="20" shift="0"> <messageserver sender="hc_unit" owner="room" title="SETREGULATION"/></transition>
<state id="830_0" atomicpropositions="" >
	<rebec name="room">
		<statevariables>
			<variable name="Room.currentTemp" type="int">23</variable>
			<variable name="Room.currentRegulation" type="int">-1</variable>
			<variable name="Room.outside_air" type="int">0</variable>
		</statevariables>
		<queue>
			<message arrival="20" deadline="infinity" sender="hc_unit">setRegulation(-1)</message>
			<message arrival="30" deadline="infinity" sender="room">updateStatus()</message>
		</queue>
		<now>20</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="controller">
		<statevariables>
			<variable name="Controller.currentTemp" type="int">23</variable>
			<variable name="Controller.isHeating" type="boolean">false</variable>
			<variable name="Controller.isCooling" type="boolean">false</variable>
		</statevariables>
		<queue>
		</queue>
		<now>20</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="sensor">
		<statevariables>
		</statevariables>
		<queue>
			<message arrival="22" deadline="infinity" sender="sensor">callSensor()</message>
		</queue>
		<now>20</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="hc_unit">
		<statevariables>
			<variable name="HC_Unit.heaterOn" type="boolean">false</variable>
			<variable name="HC_Unit.coolerOn" type="boolean">false</variable>
			<variable name="HC_Unit.currentRegulation" type="int">0</variable>
		</statevariables>
		<queue>
			<message arrival="25" deadline="infinity" sender="hc_unit">regulateTemp()</message>
		</queue>
		<now>20</now>
		<pc></pc>
		<res></res>
	</rebec>
</state>
<transition source="820_0" destination="830_0" executionTime="20" shift="0"> <messageserver sender="controller" owner="hc_unit" title="SWITCHOFF"/></transition>
<state id="831_0" atomicpropositions="isCooling," >
	<rebec name="room">
		<statevariables>
			<variable name="Room.currentTemp" type="int">22</variable>
			<variable name="Room.currentRegulation" type="int">-1</variable>
			<variable name="Room.outside_air" type="int">1</variable>
		</statevariables>
		<queue>
			<message arrival="30" deadline="infinity" sender="room">updateStatus()</message>
		</queue>
		<now>20</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="controller">
		<statevariables>
			<variable name="Controller.currentTemp" type="int">22</variable>
			<variable name="Controller.isHeating" type="boolean">false</variable>
			<variable name="Controller.isCooling" type="boolean">false</variable>
		</statevariables>
		<queue>
		</queue>
		<now>20</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="sensor">
		<statevariables>
		</statevariables>
		<queue>
			<message arrival="22" deadline="infinity" sender="sensor">callSensor()</message>
		</queue>
		<now>20</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="hc_unit">
		<statevariables>
			<variable name="HC_Unit.heaterOn" type="boolean">false</variable>
			<variable name="HC_Unit.coolerOn" type="boolean">true</variable>
			<variable name="HC_Unit.currentRegulation" type="int">-1</variable>
		</statevariables>
		<queue>
			<message arrival="20" deadline="infinity" sender="controller">switchoff()</message>
			<message arrival="25" deadline="infinity" sender="hc_unit">regulateTemp()</message>
		</queue>
		<now>20</now>
		<pc></pc>
		<res></res>
	</rebec>
</state>
<transition source="821_0" destination="831_0" executionTime="20" shift="0"> <messageserver sender="controller" owner="controller" title="UPDATEOUTPUT"/></transition>
<state id="832_0" atomicpropositions="isCooling," >
	<rebec name="room">
		<statevariables>
			<variable name="Room.currentTemp" type="int">22</variable>
			<variable name="Room.currentRegulation" type="int">-1</variable>
			<variable name="Room.outside_air" type="int">1</variable>
		</statevariables>
		<queue>
			<message arrival="30" deadline="infinity" sender="room">updateStatus()</message>
		</queue>
		<now>20</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="controller">
		<statevariables>
			<variable name="Controller.currentTemp" type="int">24</variable>
			<variable name="Controller.isHeating" type="boolean">false</variable>
			<variable name="Controller.isCooling" type="boolean">true</variable>
		</statevariables>
		<queue>
		</queue>
		<now>20</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="sensor">
		<statevariables>
		</statevariables>
		<queue>
			<message arrival="22" deadline="infinity" sender="sensor">callSensor()</message>
		</queue>
		<now>20</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="hc_unit">
		<statevariables>
			<variable name="HC_Unit.heaterOn" type="boolean">false</variable>
			<variable name="HC_Unit.coolerOn" type="boolean">true</variable>
			<variable name="HC_Unit.currentRegulation" type="int">-1</variable>
		</statevariables>
		<queue>
			<message arrival="25" deadline="infinity" sender="hc_unit">regulateTemp()</message>
		</queue>
		<now>20</now>
		<pc></pc>
		<res></res>
	</rebec>
</state>
<state id="833_0" atomicpropositions="isCooling," >
	<rebec name="room">
		<statevariables>
			<variable name="Room.currentTemp" type="int">22</variable>
			<variable name="Room.currentRegulation" type="int">-1</variable>
			<variable name="Room.outside_air" type="int">1</variable>
		</statevariables>
		<queue>
			<message arrival="30" deadline="infinity" sender="room">updateStatus()</message>
		</queue>
		<now>22</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="controller">
		<statevariables>
			<variable name="Controller.currentTemp" type="int">24</variable>
			<variable name="Controller.isHeating" type="boolean">false</variable>
			<variable name="Controller.isCooling" type="boolean">true</variable>
		</statevariables>
		<queue>
		</queue>
		<now>22</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="sensor">
		<statevariables>
		</statevariables>
		<queue>
			<message arrival="22" deadline="infinity" sender="sensor">callSensor()</message>
		</queue>
		<now>22</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="hc_unit">
		<statevariables>
			<variable name="HC_Unit.heaterOn" type="boolean">false</variable>
			<variable name="HC_Unit.coolerOn" type="boolean">true</variable>
			<variable name="HC_Unit.currentRegulation" type="int">-1</variable>
		</statevariables>
		<queue>
			<message arrival="25" deadline="infinity" sender="hc_unit">regulateTemp()</message>
		</queue>
		<now>22</now>
		<pc></pc>
		<res></res>
	</rebec>
</state>
<transition source="832_0" destination="833_0" executionTime="20" shift="0"> <time value="2"/></transition>
<transition source="822_0" destination="832_0" executionTime="20" shift="0"> <messageserver sender="controller" owner="controller" title="UPDATEOUTPUT"/></transition>
<transition source="825_0" destination="832_0" executionTime="20" shift="0"> <messageserver sender="room" owner="room" title="UPDATESTATUS"/></transition>
<state id="834_0" atomicpropositions="isCooling," >
	<rebec name="room">
		<statevariables>
			<variable name="Room.currentTemp" type="int">23</variable>
			<variable name="Room.currentRegulation" type="int">-1</variable>
			<variable name="Room.outside_air" type="int">0</variable>
		</statevariables>
		<queue>
			<message arrival="30" deadline="infinity" sender="room">updateStatus()</message>
		</queue>
		<now>20</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="controller">
		<statevariables>
			<variable name="Controller.currentTemp" type="int">24</variable>
			<variable name="Controller.isHeating" type="boolean">false</variable>
			<variable name="Controller.isCooling" type="boolean">true</variable>
		</statevariables>
		<queue>
		</queue>
		<now>20</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="sensor">
		<statevariables>
		</statevariables>
		<queue>
			<message arrival="22" deadline="infinity" sender="sensor">callSensor()</message>
		</queue>
		<now>20</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="hc_unit">
		<statevariables>
			<variable name="HC_Unit.heaterOn" type="boolean">false</variable>
			<variable name="HC_Unit.coolerOn" type="boolean">true</variable>
			<variable name="HC_Unit.currentRegulation" type="int">-1</variable>
		</statevariables>
		<queue>
			<message arrival="25" deadline="infinity" sender="hc_unit">regulateTemp()</message>
		</queue>
		<now>20</now>
		<pc></pc>
		<res></res>
	</rebec>
</state>
<state id="835_0" atomicpropositions="isCooling," >
	<rebec name="room">
		<statevariables>
			<variable name="Room.currentTemp" type="int">23</variable>
			<variable name="Room.currentRegulation" type="int">-1</variable>
			<variable name="Room.outside_air" type="int">0</variable>
		</statevariables>
		<queue>
			<message arrival="30" deadline="infinity" sender="room">updateStatus()</message>
		</queue>
		<now>22</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="controller">
		<statevariables>
			<variable name="Controller.currentTemp" type="int">24</variable>
			<variable name="Controller.isHeating" type="boolean">false</variable>
			<variable name="Controller.isCooling" type="boolean">true</variable>
		</statevariables>
		<queue>
		</queue>
		<now>22</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="sensor">
		<statevariables>
		</statevariables>
		<queue>
			<message arrival="22" deadline="infinity" sender="sensor">callSensor()</message>
		</queue>
		<now>22</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="hc_unit">
		<statevariables>
			<variable name="HC_Unit.heaterOn" type="boolean">false</variable>
			<variable name="HC_Unit.coolerOn" type="boolean">true</variable>
			<variable name="HC_Unit.currentRegulation" type="int">-1</variable>
		</statevariables>
		<queue>
			<message arrival="25" deadline="infinity" sender="hc_unit">regulateTemp()</message>
		</queue>
		<now>22</now>
		<pc></pc>
		<res></res>
	</rebec>
</state>
<transition source="834_0" destination="835_0" executionTime="20" shift="0"> <time value="2"/></transition>
<transition source="825_0" destination="834_0" executionTime="20" shift="0"> <messageserver sender="room" owner="room" title="UPDATESTATUS"/></transition>
<transition source="825_0" destination="398_0" executionTime="20" shift="10"> <messageserver sender="room" owner="room" title="UPDATESTATUS"/></transition>
<transition source="828_0" destination="398_0" executionTime="20" shift="10"> <messageserver sender="hc_unit" owner="room" title="SETREGULATION"/></transition>
<state id="836_0" atomicpropositions="" >
	<rebec name="room">
		<statevariables>
			<variable name="Room.currentTemp" type="int">23</variable>
			<variable name="Room.currentRegulation" type="int">-1</variable>
			<variable name="Room.outside_air" type="int">0</variable>
		</statevariables>
		<queue>
			<message arrival="30" deadline="infinity" sender="room">updateStatus()</message>
		</queue>
		<now>20</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="controller">
		<statevariables>
			<variable name="Controller.currentTemp" type="int">23</variable>
			<variable name="Controller.isHeating" type="boolean">false</variable>
			<variable name="Controller.isCooling" type="boolean">false</variable>
		</statevariables>
		<queue>
		</queue>
		<now>20</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="sensor">
		<statevariables>
		</statevariables>
		<queue>
			<message arrival="22" deadline="infinity" sender="sensor">callSensor()</message>
		</queue>
		<now>20</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="hc_unit">
		<statevariables>
			<variable name="HC_Unit.heaterOn" type="boolean">false</variable>
			<variable name="HC_Unit.coolerOn" type="boolean">false</variable>
			<variable name="HC_Unit.currentRegulation" type="int">0</variable>
		</statevariables>
		<queue>
			<message arrival="25" deadline="infinity" sender="hc_unit">regulateTemp()</message>
		</queue>
		<now>20</now>
		<pc></pc>
		<res></res>
	</rebec>
</state>
<state id="837_0" atomicpropositions="" >
	<rebec name="room">
		<statevariables>
			<variable name="Room.currentTemp" type="int">23</variable>
			<variable name="Room.currentRegulation" type="int">-1</variable>
			<variable name="Room.outside_air" type="int">0</variable>
		</statevariables>
		<queue>
			<message arrival="30" deadline="infinity" sender="room">updateStatus()</message>
		</queue>
		<now>22</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="controller">
		<statevariables>
			<variable name="Controller.currentTemp" type="int">23</variable>
			<variable name="Controller.isHeating" type="boolean">false</variable>
			<variable name="Controller.isCooling" type="boolean">false</variable>
		</statevariables>
		<queue>
		</queue>
		<now>22</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="sensor">
		<statevariables>
		</statevariables>
		<queue>
			<message arrival="22" deadline="infinity" sender="sensor">callSensor()</message>
		</queue>
		<now>22</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="hc_unit">
		<statevariables>
			<variable name="HC_Unit.heaterOn" type="boolean">false</variable>
			<variable name="HC_Unit.coolerOn" type="boolean">false</variable>
			<variable name="HC_Unit.currentRegulation" type="int">0</variable>
		</statevariables>
		<queue>
			<message arrival="25" deadline="infinity" sender="hc_unit">regulateTemp()</message>
		</queue>
		<now>22</now>
		<pc></pc>
		<res></res>
	</rebec>
</state>
<transition source="836_0" destination="837_0" executionTime="20" shift="0"> <time value="2"/></transition>
<transition source="829_0" destination="836_0" executionTime="20" shift="0"> <messageserver sender="controller" owner="hc_unit" title="SWITCHOFF"/></transition>
<transition source="830_0" destination="836_0" executionTime="20" shift="0"> <messageserver sender="hc_unit" owner="room" title="SETREGULATION"/></transition>
<state id="838_0" atomicpropositions="" >
	<rebec name="room">
		<statevariables>
			<variable name="Room.currentTemp" type="int">22</variable>
			<variable name="Room.currentRegulation" type="int">-1</variable>
			<variable name="Room.outside_air" type="int">1</variable>
		</statevariables>
		<queue>
			<message arrival="30" deadline="infinity" sender="room">updateStatus()</message>
		</queue>
		<now>20</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="controller">
		<statevariables>
			<variable name="Controller.currentTemp" type="int">22</variable>
			<variable name="Controller.isHeating" type="boolean">false</variable>
			<variable name="Controller.isCooling" type="boolean">false</variable>
		</statevariables>
		<queue>
		</queue>
		<now>20</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="sensor">
		<statevariables>
		</statevariables>
		<queue>
			<message arrival="22" deadline="infinity" sender="sensor">callSensor()</message>
		</queue>
		<now>20</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="hc_unit">
		<statevariables>
			<variable name="HC_Unit.heaterOn" type="boolean">false</variable>
			<variable name="HC_Unit.coolerOn" type="boolean">false</variable>
			<variable name="HC_Unit.currentRegulation" type="int">0</variable>
		</statevariables>
		<queue>
			<message arrival="25" deadline="infinity" sender="hc_unit">regulateTemp()</message>
		</queue>
		<now>20</now>
		<pc></pc>
		<res></res>
	</rebec>
</state>
<state id="839_0" atomicpropositions="" >
	<rebec name="room">
		<statevariables>
			<variable name="Room.currentTemp" type="int">22</variable>
			<variable name="Room.currentRegulation" type="int">-1</variable>
			<variable name="Room.outside_air" type="int">1</variable>
		</statevariables>
		<queue>
			<message arrival="30" deadline="infinity" sender="room">updateStatus()</message>
		</queue>
		<now>22</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="controller">
		<statevariables>
			<variable name="Controller.currentTemp" type="int">22</variable>
			<variable name="Controller.isHeating" type="boolean">false</variable>
			<variable name="Controller.isCooling" type="boolean">false</variable>
		</statevariables>
		<queue>
		</queue>
		<now>22</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="sensor">
		<statevariables>
		</statevariables>
		<queue>
			<message arrival="22" deadline="infinity" sender="sensor">callSensor()</message>
		</queue>
		<now>22</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="hc_unit">
		<statevariables>
			<variable name="HC_Unit.heaterOn" type="boolean">false</variable>
			<variable name="HC_Unit.coolerOn" type="boolean">false</variable>
			<variable name="HC_Unit.currentRegulation" type="int">0</variable>
		</statevariables>
		<queue>
			<message arrival="25" deadline="infinity" sender="hc_unit">regulateTemp()</message>
		</queue>
		<now>22</now>
		<pc></pc>
		<res></res>
	</rebec>
</state>
<transition source="838_0" destination="839_0" executionTime="20" shift="0"> <time value="2"/></transition>
<transition source="831_0" destination="838_0" executionTime="20" shift="0"> <messageserver sender="controller" owner="hc_unit" title="SWITCHOFF"/></transition>
<transition source="815_0" destination="823_0" executionTime="20" shift="0"> <messageserver sender="hc_unit" owner="room" title="SETREGULATION"/></transition>
<transition source="815_0" destination="827_0" executionTime="20" shift="0"> <messageserver sender="controller" owner="controller" title="UPDATEOUTPUT"/></transition>
<transition source="816_0" destination="824_0" executionTime="20" shift="0"> <messageserver sender="hc_unit" owner="room" title="SETREGULATION"/></transition>
<transition source="816_0" destination="828_0" executionTime="20" shift="0"> <messageserver sender="controller" owner="controller" title="UPDATEOUTPUT"/></transition>
<transition source="827_0" destination="834_0" executionTime="20" shift="0"> <messageserver sender="hc_unit" owner="room" title="SETREGULATION"/></transition>
<transition source="826_0" destination="832_0" executionTime="20" shift="0"> <messageserver sender="hc_unit" owner="room" title="SETREGULATION"/></transition>
<transition source="824_0" destination="398_0" executionTime="20" shift="10"> <messageserver sender="controller" owner="controller" title="UPDATEOUTPUT"/></transition>
<transition source="823_0" destination="834_0" executionTime="20" shift="0"> <messageserver sender="controller" owner="controller" title="UPDATEOUTPUT"/></transition>
<transition source="783_0" destination="789_0" executionTime="20" shift="0"> <messageserver sender="hc_unit" owner="room" title="SETREGULATION"/></transition>
<transition source="783_0" destination="792_0" executionTime="20" shift="0"> <messageserver sender="sensor" owner="sensor" title="CALLSENSOR"/></transition>
<state id="840_0" atomicpropositions="isCooling," >
	<rebec name="room">
		<statevariables>
			<variable name="Room.currentTemp" type="int">22</variable>
			<variable name="Room.currentRegulation" type="int">-1</variable>
			<variable name="Room.outside_air" type="int">1</variable>
		</statevariables>
		<queue>
			<message arrival="30" deadline="infinity" sender="room">updateStatus()</message>
		</queue>
		<now>20</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="controller">
		<statevariables>
			<variable name="Controller.currentTemp" type="int">24</variable>
			<variable name="Controller.isHeating" type="boolean">false</variable>
			<variable name="Controller.isCooling" type="boolean">true</variable>
		</statevariables>
		<queue>
			<message arrival="20" deadline="infinity" sender="sensor">setCurrent(24)</message>
		</queue>
		<now>20</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="sensor">
		<statevariables>
		</statevariables>
		<queue>
			<message arrival="22" deadline="infinity" sender="sensor">callSensor()</message>
		</queue>
		<now>20</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="hc_unit">
		<statevariables>
			<variable name="HC_Unit.heaterOn" type="boolean">false</variable>
			<variable name="HC_Unit.coolerOn" type="boolean">true</variable>
			<variable name="HC_Unit.currentRegulation" type="int">-1</variable>
		</statevariables>
		<queue>
			<message arrival="25" deadline="infinity" sender="hc_unit">regulateTemp()</message>
		</queue>
		<now>20</now>
		<pc></pc>
		<res></res>
	</rebec>
</state>
<transition source="809_0" destination="840_0" executionTime="20" shift="0"> <messageserver sender="room" owner="room" title="UPDATESTATUS"/></transition>
<state id="841_0" atomicpropositions="isCooling," >
	<rebec name="room">
		<statevariables>
			<variable name="Room.currentTemp" type="int">23</variable>
			<variable name="Room.currentRegulation" type="int">-1</variable>
			<variable name="Room.outside_air" type="int">0</variable>
		</statevariables>
		<queue>
			<message arrival="30" deadline="infinity" sender="room">updateStatus()</message>
		</queue>
		<now>20</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="controller">
		<statevariables>
			<variable name="Controller.currentTemp" type="int">24</variable>
			<variable name="Controller.isHeating" type="boolean">false</variable>
			<variable name="Controller.isCooling" type="boolean">true</variable>
		</statevariables>
		<queue>
			<message arrival="20" deadline="infinity" sender="sensor">setCurrent(24)</message>
		</queue>
		<now>20</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="sensor">
		<statevariables>
		</statevariables>
		<queue>
			<message arrival="22" deadline="infinity" sender="sensor">callSensor()</message>
		</queue>
		<now>20</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="hc_unit">
		<statevariables>
			<variable name="HC_Unit.heaterOn" type="boolean">false</variable>
			<variable name="HC_Unit.coolerOn" type="boolean">true</variable>
			<variable name="HC_Unit.currentRegulation" type="int">-1</variable>
		</statevariables>
		<queue>
			<message arrival="25" deadline="infinity" sender="hc_unit">regulateTemp()</message>
		</queue>
		<now>20</now>
		<pc></pc>
		<res></res>
	</rebec>
</state>
<transition source="809_0" destination="841_0" executionTime="20" shift="0"> <messageserver sender="room" owner="room" title="UPDATESTATUS"/></transition>
<state id="842_0" atomicpropositions="isCooling," >
	<rebec name="room">
		<statevariables>
			<variable name="Room.currentTemp" type="int">24</variable>
			<variable name="Room.currentRegulation" type="int">-1</variable>
			<variable name="Room.outside_air" type="int">-1</variable>
		</statevariables>
		<queue>
			<message arrival="30" deadline="infinity" sender="room">updateStatus()</message>
		</queue>
		<now>20</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="controller">
		<statevariables>
			<variable name="Controller.currentTemp" type="int">24</variable>
			<variable name="Controller.isHeating" type="boolean">false</variable>
			<variable name="Controller.isCooling" type="boolean">true</variable>
		</statevariables>
		<queue>
			<message arrival="20" deadline="infinity" sender="sensor">setCurrent(24)</message>
		</queue>
		<now>20</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="sensor">
		<statevariables>
		</statevariables>
		<queue>
			<message arrival="22" deadline="infinity" sender="sensor">callSensor()</message>
		</queue>
		<now>20</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="hc_unit">
		<statevariables>
			<variable name="HC_Unit.heaterOn" type="boolean">false</variable>
			<variable name="HC_Unit.coolerOn" type="boolean">true</variable>
			<variable name="HC_Unit.currentRegulation" type="int">-1</variable>
		</statevariables>
		<queue>
			<message arrival="25" deadline="infinity" sender="hc_unit">regulateTemp()</message>
		</queue>
		<now>20</now>
		<pc></pc>
		<res></res>
	</rebec>
</state>
<transition source="809_0" destination="842_0" executionTime="20" shift="0"> <messageserver sender="room" owner="room" title="UPDATESTATUS"/></transition>
<transition source="809_0" destination="817_0" executionTime="20" shift="0"> <messageserver sender="sensor" owner="controller" title="SETCURRENT"/></transition>
<transition source="814_0" destination="822_0" executionTime="20" shift="0"> <messageserver sender="hc_unit" owner="room" title="SETREGULATION"/></transition>
<transition source="814_0" destination="826_0" executionTime="20" shift="0"> <messageserver sender="controller" owner="controller" title="UPDATEOUTPUT"/></transition>
<transition source="807_0" destination="841_0" executionTime="20" shift="0"> <messageserver sender="hc_unit" owner="room" title="SETREGULATION"/></transition>
<transition source="807_0" destination="815_0" executionTime="20" shift="0"> <messageserver sender="sensor" owner="controller" title="SETCURRENT"/></transition>
<transition source="841_0" destination="823_0" executionTime="20" shift="0"> <messageserver sender="sensor" owner="controller" title="SETCURRENT"/></transition>
<transition source="842_0" destination="824_0" executionTime="20" shift="0"> <messageserver sender="sensor" owner="controller" title="SETCURRENT"/></transition>
<transition source="808_0" destination="842_0" executionTime="20" shift="0"> <messageserver sender="hc_unit" owner="room" title="SETREGULATION"/></transition>
<transition source="808_0" destination="816_0" executionTime="20" shift="0"> <messageserver sender="sensor" owner="controller" title="SETCURRENT"/></transition>
<transition source="840_0" destination="822_0" executionTime="20" shift="0"> <messageserver sender="sensor" owner="controller" title="SETCURRENT"/></transition>
<state id="843_0" atomicpropositions="isCooling," >
	<rebec name="room">
		<statevariables>
			<variable name="Room.currentTemp" type="int">24</variable>
			<variable name="Room.currentRegulation" type="int">-1</variable>
			<variable name="Room.outside_air" type="int">-1</variable>
		</statevariables>
		<queue>
			<message arrival="20" deadline="infinity" sender="sensor">getTemp()</message>
			<message arrival="30" deadline="infinity" sender="room">updateStatus()</message>
		</queue>
		<now>20</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="controller">
		<statevariables>
			<variable name="Controller.currentTemp" type="int">24</variable>
			<variable name="Controller.isHeating" type="boolean">false</variable>
			<variable name="Controller.isCooling" type="boolean">true</variable>
		</statevariables>
		<queue>
		</queue>
		<now>20</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="sensor">
		<statevariables>
		</statevariables>
		<queue>
			<message arrival="22" deadline="infinity" sender="sensor">callSensor()</message>
		</queue>
		<now>20</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="hc_unit">
		<statevariables>
			<variable name="HC_Unit.heaterOn" type="boolean">false</variable>
			<variable name="HC_Unit.coolerOn" type="boolean">true</variable>
			<variable name="HC_Unit.currentRegulation" type="int">-1</variable>
		</statevariables>
		<queue>
			<message arrival="20" deadline="infinity" sender="hc_unit">regulateTemp()</message>
		</queue>
		<now>20</now>
		<pc></pc>
		<res></res>
	</rebec>
</state>
<transition source="778_0" destination="843_0" executionTime="20" shift="0"> <messageserver sender="sensor" owner="sensor" title="CALLSENSOR"/></transition>
<transition source="778_0" destination="783_0" executionTime="20" shift="0"> <messageserver sender="hc_unit" owner="hc_unit" title="REGULATETEMP"/></transition>
<state id="844_0" atomicpropositions="isCooling," >
	<rebec name="room">
		<statevariables>
			<variable name="Room.currentTemp" type="int">22</variable>
			<variable name="Room.currentRegulation" type="int">-1</variable>
			<variable name="Room.outside_air" type="int">1</variable>
		</statevariables>
		<queue>
			<message arrival="20" deadline="infinity" sender="sensor">getTemp()</message>
			<message arrival="30" deadline="infinity" sender="room">updateStatus()</message>
		</queue>
		<now>20</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="controller">
		<statevariables>
			<variable name="Controller.currentTemp" type="int">24</variable>
			<variable name="Controller.isHeating" type="boolean">false</variable>
			<variable name="Controller.isCooling" type="boolean">true</variable>
		</statevariables>
		<queue>
		</queue>
		<now>20</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="sensor">
		<statevariables>
		</statevariables>
		<queue>
			<message arrival="22" deadline="infinity" sender="sensor">callSensor()</message>
		</queue>
		<now>20</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="hc_unit">
		<statevariables>
			<variable name="HC_Unit.heaterOn" type="boolean">false</variable>
			<variable name="HC_Unit.coolerOn" type="boolean">true</variable>
			<variable name="HC_Unit.currentRegulation" type="int">-1</variable>
		</statevariables>
		<queue>
			<message arrival="20" deadline="infinity" sender="hc_unit">regulateTemp()</message>
		</queue>
		<now>20</now>
		<pc></pc>
		<res></res>
	</rebec>
</state>
<transition source="779_0" destination="844_0" executionTime="20" shift="0"> <messageserver sender="room" owner="room" title="UPDATESTATUS"/></transition>
<state id="845_0" atomicpropositions="isCooling," >
	<rebec name="room">
		<statevariables>
			<variable name="Room.currentTemp" type="int">23</variable>
			<variable name="Room.currentRegulation" type="int">-1</variable>
			<variable name="Room.outside_air" type="int">0</variable>
		</statevariables>
		<queue>
			<message arrival="20" deadline="infinity" sender="sensor">getTemp()</message>
			<message arrival="30" deadline="infinity" sender="room">updateStatus()</message>
		</queue>
		<now>20</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="controller">
		<statevariables>
			<variable name="Controller.currentTemp" type="int">24</variable>
			<variable name="Controller.isHeating" type="boolean">false</variable>
			<variable name="Controller.isCooling" type="boolean">true</variable>
		</statevariables>
		<queue>
		</queue>
		<now>20</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="sensor">
		<statevariables>
		</statevariables>
		<queue>
			<message arrival="22" deadline="infinity" sender="sensor">callSensor()</message>
		</queue>
		<now>20</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="hc_unit">
		<statevariables>
			<variable name="HC_Unit.heaterOn" type="boolean">false</variable>
			<variable name="HC_Unit.coolerOn" type="boolean">true</variable>
			<variable name="HC_Unit.currentRegulation" type="int">-1</variable>
		</statevariables>
		<queue>
			<message arrival="20" deadline="infinity" sender="hc_unit">regulateTemp()</message>
		</queue>
		<now>20</now>
		<pc></pc>
		<res></res>
	</rebec>
</state>
<transition source="779_0" destination="845_0" executionTime="20" shift="0"> <messageserver sender="room" owner="room" title="UPDATESTATUS"/></transition>
<transition source="779_0" destination="843_0" executionTime="20" shift="0"> <messageserver sender="room" owner="room" title="UPDATESTATUS"/></transition>
<state id="846_0" atomicpropositions="isCooling," >
	<rebec name="room">
		<statevariables>
			<variable name="Room.currentTemp" type="int">24</variable>
			<variable name="Room.currentRegulation" type="int">-1</variable>
			<variable name="Room.outside_air" type="int">-1</variable>
		</statevariables>
		<queue>
			<message arrival="20" deadline="infinity" sender="room">updateStatus()</message>
		</queue>
		<now>20</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="controller">
		<statevariables>
			<variable name="Controller.currentTemp" type="int">24</variable>
			<variable name="Controller.isHeating" type="boolean">false</variable>
			<variable name="Controller.isCooling" type="boolean">true</variable>
		</statevariables>
		<queue>
		</queue>
		<now>20</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="sensor">
		<statevariables>
		</statevariables>
		<queue>
			<message arrival="20" deadline="infinity" sender="room">setCurrent(24)</message>
			<message arrival="22" deadline="infinity" sender="sensor">callSensor()</message>
		</queue>
		<now>20</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="hc_unit">
		<statevariables>
			<variable name="HC_Unit.heaterOn" type="boolean">false</variable>
			<variable name="HC_Unit.coolerOn" type="boolean">true</variable>
			<variable name="HC_Unit.currentRegulation" type="int">-1</variable>
		</statevariables>
		<queue>
			<message arrival="20" deadline="infinity" sender="hc_unit">regulateTemp()</message>
		</queue>
		<now>20</now>
		<pc></pc>
		<res></res>
	</rebec>
</state>
<transition source="779_0" destination="846_0" executionTime="20" shift="0"> <messageserver sender="sensor" owner="room" title="GETTEMP"/></transition>
<transition source="779_0" destination="785_0" executionTime="20" shift="0"> <messageserver sender="hc_unit" owner="hc_unit" title="REGULATETEMP"/></transition>
<transition source="781_0" destination="788_0" executionTime="20" shift="0"> <messageserver sender="hc_unit" owner="room" title="SETREGULATION"/></transition>
<transition source="781_0" destination="791_0" executionTime="20" shift="0"> <messageserver sender="sensor" owner="sensor" title="CALLSENSOR"/></transition>
<state id="847_0" atomicpropositions="isCooling," >
	<rebec name="room">
		<statevariables>
			<variable name="Room.currentTemp" type="int">23</variable>
			<variable name="Room.currentRegulation" type="int">-1</variable>
			<variable name="Room.outside_air" type="int">0</variable>
		</statevariables>
		<queue>
			<message arrival="30" deadline="infinity" sender="room">updateStatus()</message>
		</queue>
		<now>20</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="controller">
		<statevariables>
			<variable name="Controller.currentTemp" type="int">24</variable>
			<variable name="Controller.isHeating" type="boolean">false</variable>
			<variable name="Controller.isCooling" type="boolean">true</variable>
		</statevariables>
		<queue>
		</queue>
		<now>20</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="sensor">
		<statevariables>
		</statevariables>
		<queue>
			<message arrival="20" deadline="infinity" sender="room">setCurrent(23)</message>
			<message arrival="22" deadline="infinity" sender="sensor">callSensor()</message>
		</queue>
		<now>20</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="hc_unit">
		<statevariables>
			<variable name="HC_Unit.heaterOn" type="boolean">false</variable>
			<variable name="HC_Unit.coolerOn" type="boolean">true</variable>
			<variable name="HC_Unit.currentRegulation" type="int">-1</variable>
		</statevariables>
		<queue>
			<message arrival="20" deadline="infinity" sender="hc_unit">regulateTemp()</message>
		</queue>
		<now>20</now>
		<pc></pc>
		<res></res>
	</rebec>
</state>
<transition source="845_0" destination="847_0" executionTime="20" shift="0"> <messageserver sender="sensor" owner="room" title="GETTEMP"/></transition>
<transition source="845_0" destination="787_0" executionTime="20" shift="0"> <messageserver sender="hc_unit" owner="hc_unit" title="REGULATETEMP"/></transition>
<state id="848_0" atomicpropositions="isCooling," >
	<rebec name="room">
		<statevariables>
			<variable name="Room.currentTemp" type="int">22</variable>
			<variable name="Room.currentRegulation" type="int">-1</variable>
			<variable name="Room.outside_air" type="int">1</variable>
		</statevariables>
		<queue>
			<message arrival="30" deadline="infinity" sender="room">updateStatus()</message>
		</queue>
		<now>20</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="controller">
		<statevariables>
			<variable name="Controller.currentTemp" type="int">24</variable>
			<variable name="Controller.isHeating" type="boolean">false</variable>
			<variable name="Controller.isCooling" type="boolean">true</variable>
		</statevariables>
		<queue>
		</queue>
		<now>20</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="sensor">
		<statevariables>
		</statevariables>
		<queue>
			<message arrival="20" deadline="infinity" sender="room">setCurrent(24)</message>
			<message arrival="22" deadline="infinity" sender="sensor">callSensor()</message>
		</queue>
		<now>20</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="hc_unit">
		<statevariables>
			<variable name="HC_Unit.heaterOn" type="boolean">false</variable>
			<variable name="HC_Unit.coolerOn" type="boolean">true</variable>
			<variable name="HC_Unit.currentRegulation" type="int">-1</variable>
		</statevariables>
		<queue>
			<message arrival="20" deadline="infinity" sender="hc_unit">regulateTemp()</message>
		</queue>
		<now>20</now>
		<pc></pc>
		<res></res>
	</rebec>
</state>
<transition source="846_0" destination="848_0" executionTime="20" shift="0"> <messageserver sender="room" owner="room" title="UPDATESTATUS"/></transition>
<state id="849_0" atomicpropositions="isCooling," >
	<rebec name="room">
		<statevariables>
			<variable name="Room.currentTemp" type="int">23</variable>
			<variable name="Room.currentRegulation" type="int">-1</variable>
			<variable name="Room.outside_air" type="int">0</variable>
		</statevariables>
		<queue>
			<message arrival="30" deadline="infinity" sender="room">updateStatus()</message>
		</queue>
		<now>20</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="controller">
		<statevariables>
			<variable name="Controller.currentTemp" type="int">24</variable>
			<variable name="Controller.isHeating" type="boolean">false</variable>
			<variable name="Controller.isCooling" type="boolean">true</variable>
		</statevariables>
		<queue>
		</queue>
		<now>20</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="sensor">
		<statevariables>
		</statevariables>
		<queue>
			<message arrival="20" deadline="infinity" sender="room">setCurrent(24)</message>
			<message arrival="22" deadline="infinity" sender="sensor">callSensor()</message>
		</queue>
		<now>20</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="hc_unit">
		<statevariables>
			<variable name="HC_Unit.heaterOn" type="boolean">false</variable>
			<variable name="HC_Unit.coolerOn" type="boolean">true</variable>
			<variable name="HC_Unit.currentRegulation" type="int">-1</variable>
		</statevariables>
		<queue>
			<message arrival="20" deadline="infinity" sender="hc_unit">regulateTemp()</message>
		</queue>
		<now>20</now>
		<pc></pc>
		<res></res>
	</rebec>
</state>
<transition source="846_0" destination="849_0" executionTime="20" shift="0"> <messageserver sender="room" owner="room" title="UPDATESTATUS"/></transition>
<state id="850_0" atomicpropositions="isCooling," >
	<rebec name="room">
		<statevariables>
			<variable name="Room.currentTemp" type="int">24</variable>
			<variable name="Room.currentRegulation" type="int">-1</variable>
			<variable name="Room.outside_air" type="int">-1</variable>
		</statevariables>
		<queue>
			<message arrival="30" deadline="infinity" sender="room">updateStatus()</message>
		</queue>
		<now>20</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="controller">
		<statevariables>
			<variable name="Controller.currentTemp" type="int">24</variable>
			<variable name="Controller.isHeating" type="boolean">false</variable>
			<variable name="Controller.isCooling" type="boolean">true</variable>
		</statevariables>
		<queue>
		</queue>
		<now>20</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="sensor">
		<statevariables>
		</statevariables>
		<queue>
			<message arrival="20" deadline="infinity" sender="room">setCurrent(24)</message>
			<message arrival="22" deadline="infinity" sender="sensor">callSensor()</message>
		</queue>
		<now>20</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="hc_unit">
		<statevariables>
			<variable name="HC_Unit.heaterOn" type="boolean">false</variable>
			<variable name="HC_Unit.coolerOn" type="boolean">true</variable>
			<variable name="HC_Unit.currentRegulation" type="int">-1</variable>
		</statevariables>
		<queue>
			<message arrival="20" deadline="infinity" sender="hc_unit">regulateTemp()</message>
		</queue>
		<now>20</now>
		<pc></pc>
		<res></res>
	</rebec>
</state>
<transition source="846_0" destination="850_0" executionTime="20" shift="0"> <messageserver sender="room" owner="room" title="UPDATESTATUS"/></transition>
<state id="851_0" atomicpropositions="isCooling," >
	<rebec name="room">
		<statevariables>
			<variable name="Room.currentTemp" type="int">24</variable>
			<variable name="Room.currentRegulation" type="int">-1</variable>
			<variable name="Room.outside_air" type="int">-1</variable>
		</statevariables>
		<queue>
			<message arrival="20" deadline="infinity" sender="room">updateStatus()</message>
		</queue>
		<now>20</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="controller">
		<statevariables>
			<variable name="Controller.currentTemp" type="int">24</variable>
			<variable name="Controller.isHeating" type="boolean">false</variable>
			<variable name="Controller.isCooling" type="boolean">true</variable>
		</statevariables>
		<queue>
			<message arrival="20" deadline="infinity" sender="sensor">setCurrent(24)</message>
		</queue>
		<now>20</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="sensor">
		<statevariables>
		</statevariables>
		<queue>
			<message arrival="22" deadline="infinity" sender="sensor">callSensor()</message>
		</queue>
		<now>20</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="hc_unit">
		<statevariables>
			<variable name="HC_Unit.heaterOn" type="boolean">false</variable>
			<variable name="HC_Unit.coolerOn" type="boolean">true</variable>
			<variable name="HC_Unit.currentRegulation" type="int">-1</variable>
		</statevariables>
		<queue>
			<message arrival="20" deadline="infinity" sender="hc_unit">regulateTemp()</message>
		</queue>
		<now>20</now>
		<pc></pc>
		<res></res>
	</rebec>
</state>
<transition source="846_0" destination="851_0" executionTime="20" shift="0"> <messageserver sender="room" owner="sensor" title="SETCURRENT"/></transition>
<transition source="846_0" destination="793_0" executionTime="20" shift="0"> <messageserver sender="hc_unit" owner="hc_unit" title="REGULATETEMP"/></transition>
<state id="852_0" atomicpropositions="isCooling," >
	<rebec name="room">
		<statevariables>
			<variable name="Room.currentTemp" type="int">23</variable>
			<variable name="Room.currentRegulation" type="int">-1</variable>
			<variable name="Room.outside_air" type="int">0</variable>
		</statevariables>
		<queue>
			<message arrival="30" deadline="infinity" sender="room">updateStatus()</message>
		</queue>
		<now>20</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="controller">
		<statevariables>
			<variable name="Controller.currentTemp" type="int">24</variable>
			<variable name="Controller.isHeating" type="boolean">false</variable>
			<variable name="Controller.isCooling" type="boolean">true</variable>
		</statevariables>
		<queue>
			<message arrival="20" deadline="infinity" sender="sensor">setCurrent(23)</message>
		</queue>
		<now>20</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="sensor">
		<statevariables>
		</statevariables>
		<queue>
			<message arrival="22" deadline="infinity" sender="sensor">callSensor()</message>
		</queue>
		<now>20</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="hc_unit">
		<statevariables>
			<variable name="HC_Unit.heaterOn" type="boolean">false</variable>
			<variable name="HC_Unit.coolerOn" type="boolean">true</variable>
			<variable name="HC_Unit.currentRegulation" type="int">-1</variable>
		</statevariables>
		<queue>
			<message arrival="20" deadline="infinity" sender="hc_unit">regulateTemp()</message>
		</queue>
		<now>20</now>
		<pc></pc>
		<res></res>
	</rebec>
</state>
<transition source="847_0" destination="852_0" executionTime="20" shift="0"> <messageserver sender="room" owner="sensor" title="SETCURRENT"/></transition>
<transition source="847_0" destination="795_0" executionTime="20" shift="0"> <messageserver sender="hc_unit" owner="hc_unit" title="REGULATETEMP"/></transition>
<state id="853_0" atomicpropositions="isCooling," >
	<rebec name="room">
		<statevariables>
			<variable name="Room.currentTemp" type="int">22</variable>
			<variable name="Room.currentRegulation" type="int">-1</variable>
			<variable name="Room.outside_air" type="int">1</variable>
		</statevariables>
		<queue>
			<message arrival="30" deadline="infinity" sender="room">updateStatus()</message>
		</queue>
		<now>20</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="controller">
		<statevariables>
			<variable name="Controller.currentTemp" type="int">24</variable>
			<variable name="Controller.isHeating" type="boolean">false</variable>
			<variable name="Controller.isCooling" type="boolean">true</variable>
		</statevariables>
		<queue>
			<message arrival="20" deadline="infinity" sender="sensor">setCurrent(24)</message>
		</queue>
		<now>20</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="sensor">
		<statevariables>
		</statevariables>
		<queue>
			<message arrival="22" deadline="infinity" sender="sensor">callSensor()</message>
		</queue>
		<now>20</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="hc_unit">
		<statevariables>
			<variable name="HC_Unit.heaterOn" type="boolean">false</variable>
			<variable name="HC_Unit.coolerOn" type="boolean">true</variable>
			<variable name="HC_Unit.currentRegulation" type="int">-1</variable>
		</statevariables>
		<queue>
			<message arrival="20" deadline="infinity" sender="hc_unit">regulateTemp()</message>
		</queue>
		<now>20</now>
		<pc></pc>
		<res></res>
	</rebec>
</state>
<transition source="848_0" destination="853_0" executionTime="20" shift="0"> <messageserver sender="room" owner="sensor" title="SETCURRENT"/></transition>
<transition source="848_0" destination="799_0" executionTime="20" shift="0"> <messageserver sender="hc_unit" owner="hc_unit" title="REGULATETEMP"/></transition>
<state id="854_0" atomicpropositions="isCooling," >
	<rebec name="room">
		<statevariables>
			<variable name="Room.currentTemp" type="int">23</variable>
			<variable name="Room.currentRegulation" type="int">-1</variable>
			<variable name="Room.outside_air" type="int">0</variable>
		</statevariables>
		<queue>
			<message arrival="30" deadline="infinity" sender="room">updateStatus()</message>
		</queue>
		<now>20</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="controller">
		<statevariables>
			<variable name="Controller.currentTemp" type="int">24</variable>
			<variable name="Controller.isHeating" type="boolean">false</variable>
			<variable name="Controller.isCooling" type="boolean">true</variable>
		</statevariables>
		<queue>
			<message arrival="20" deadline="infinity" sender="sensor">setCurrent(24)</message>
		</queue>
		<now>20</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="sensor">
		<statevariables>
		</statevariables>
		<queue>
			<message arrival="22" deadline="infinity" sender="sensor">callSensor()</message>
		</queue>
		<now>20</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="hc_unit">
		<statevariables>
			<variable name="HC_Unit.heaterOn" type="boolean">false</variable>
			<variable name="HC_Unit.coolerOn" type="boolean">true</variable>
			<variable name="HC_Unit.currentRegulation" type="int">-1</variable>
		</statevariables>
		<queue>
			<message arrival="20" deadline="infinity" sender="hc_unit">regulateTemp()</message>
		</queue>
		<now>20</now>
		<pc></pc>
		<res></res>
	</rebec>
</state>
<transition source="849_0" destination="854_0" executionTime="20" shift="0"> <messageserver sender="room" owner="sensor" title="SETCURRENT"/></transition>
<transition source="849_0" destination="800_0" executionTime="20" shift="0"> <messageserver sender="hc_unit" owner="hc_unit" title="REGULATETEMP"/></transition>
<state id="855_0" atomicpropositions="isCooling," >
	<rebec name="room">
		<statevariables>
			<variable name="Room.currentTemp" type="int">24</variable>
			<variable name="Room.currentRegulation" type="int">-1</variable>
			<variable name="Room.outside_air" type="int">-1</variable>
		</statevariables>
		<queue>
			<message arrival="30" deadline="infinity" sender="room">updateStatus()</message>
		</queue>
		<now>20</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="controller">
		<statevariables>
			<variable name="Controller.currentTemp" type="int">24</variable>
			<variable name="Controller.isHeating" type="boolean">false</variable>
			<variable name="Controller.isCooling" type="boolean">true</variable>
		</statevariables>
		<queue>
			<message arrival="20" deadline="infinity" sender="sensor">setCurrent(24)</message>
		</queue>
		<now>20</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="sensor">
		<statevariables>
		</statevariables>
		<queue>
			<message arrival="22" deadline="infinity" sender="sensor">callSensor()</message>
		</queue>
		<now>20</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="hc_unit">
		<statevariables>
			<variable name="HC_Unit.heaterOn" type="boolean">false</variable>
			<variable name="HC_Unit.coolerOn" type="boolean">true</variable>
			<variable name="HC_Unit.currentRegulation" type="int">-1</variable>
		</statevariables>
		<queue>
			<message arrival="20" deadline="infinity" sender="hc_unit">regulateTemp()</message>
		</queue>
		<now>20</now>
		<pc></pc>
		<res></res>
	</rebec>
</state>
<transition source="850_0" destination="855_0" executionTime="20" shift="0"> <messageserver sender="room" owner="sensor" title="SETCURRENT"/></transition>
<transition source="850_0" destination="801_0" executionTime="20" shift="0"> <messageserver sender="hc_unit" owner="hc_unit" title="REGULATETEMP"/></transition>
<transition source="851_0" destination="853_0" executionTime="20" shift="0"> <messageserver sender="room" owner="room" title="UPDATESTATUS"/></transition>
<transition source="851_0" destination="854_0" executionTime="20" shift="0"> <messageserver sender="room" owner="room" title="UPDATESTATUS"/></transition>
<transition source="851_0" destination="855_0" executionTime="20" shift="0"> <messageserver sender="room" owner="room" title="UPDATESTATUS"/></transition>
<state id="856_0" atomicpropositions="isCooling," >
	<rebec name="room">
		<statevariables>
			<variable name="Room.currentTemp" type="int">24</variable>
			<variable name="Room.currentRegulation" type="int">-1</variable>
			<variable name="Room.outside_air" type="int">-1</variable>
		</statevariables>
		<queue>
			<message arrival="20" deadline="infinity" sender="room">updateStatus()</message>
		</queue>
		<now>20</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="controller">
		<statevariables>
			<variable name="Controller.currentTemp" type="int">24</variable>
			<variable name="Controller.isHeating" type="boolean">false</variable>
			<variable name="Controller.isCooling" type="boolean">true</variable>
		</statevariables>
		<queue>
			<message arrival="20" deadline="infinity" sender="controller">updateOutput()</message>
		</queue>
		<now>20</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="sensor">
		<statevariables>
		</statevariables>
		<queue>
			<message arrival="22" deadline="infinity" sender="sensor">callSensor()</message>
		</queue>
		<now>20</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="hc_unit">
		<statevariables>
			<variable name="HC_Unit.heaterOn" type="boolean">false</variable>
			<variable name="HC_Unit.coolerOn" type="boolean">true</variable>
			<variable name="HC_Unit.currentRegulation" type="int">-1</variable>
		</statevariables>
		<queue>
			<message arrival="20" deadline="infinity" sender="hc_unit">regulateTemp()</message>
		</queue>
		<now>20</now>
		<pc></pc>
		<res></res>
	</rebec>
</state>
<transition source="851_0" destination="856_0" executionTime="20" shift="0"> <messageserver sender="sensor" owner="controller" title="SETCURRENT"/></transition>
<transition source="851_0" destination="802_0" executionTime="20" shift="0"> <messageserver sender="hc_unit" owner="hc_unit" title="REGULATETEMP"/></transition>
<state id="857_0" atomicpropositions="isCooling," >
	<rebec name="room">
		<statevariables>
			<variable name="Room.currentTemp" type="int">23</variable>
			<variable name="Room.currentRegulation" type="int">-1</variable>
			<variable name="Room.outside_air" type="int">0</variable>
		</statevariables>
		<queue>
			<message arrival="30" deadline="infinity" sender="room">updateStatus()</message>
		</queue>
		<now>20</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="controller">
		<statevariables>
			<variable name="Controller.currentTemp" type="int">23</variable>
			<variable name="Controller.isHeating" type="boolean">false</variable>
			<variable name="Controller.isCooling" type="boolean">true</variable>
		</statevariables>
		<queue>
			<message arrival="20" deadline="infinity" sender="controller">updateOutput()</message>
		</queue>
		<now>20</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="sensor">
		<statevariables>
		</statevariables>
		<queue>
			<message arrival="22" deadline="infinity" sender="sensor">callSensor()</message>
		</queue>
		<now>20</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="hc_unit">
		<statevariables>
			<variable name="HC_Unit.heaterOn" type="boolean">false</variable>
			<variable name="HC_Unit.coolerOn" type="boolean">true</variable>
			<variable name="HC_Unit.currentRegulation" type="int">-1</variable>
		</statevariables>
		<queue>
			<message arrival="20" deadline="infinity" sender="hc_unit">regulateTemp()</message>
		</queue>
		<now>20</now>
		<pc></pc>
		<res></res>
	</rebec>
</state>
<transition source="852_0" destination="857_0" executionTime="20" shift="0"> <messageserver sender="sensor" owner="controller" title="SETCURRENT"/></transition>
<transition source="852_0" destination="804_0" executionTime="20" shift="0"> <messageserver sender="hc_unit" owner="hc_unit" title="REGULATETEMP"/></transition>
<state id="858_0" atomicpropositions="isCooling," >
	<rebec name="room">
		<statevariables>
			<variable name="Room.currentTemp" type="int">22</variable>
			<variable name="Room.currentRegulation" type="int">-1</variable>
			<variable name="Room.outside_air" type="int">1</variable>
		</statevariables>
		<queue>
			<message arrival="30" deadline="infinity" sender="room">updateStatus()</message>
		</queue>
		<now>20</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="controller">
		<statevariables>
			<variable name="Controller.currentTemp" type="int">24</variable>
			<variable name="Controller.isHeating" type="boolean">false</variable>
			<variable name="Controller.isCooling" type="boolean">true</variable>
		</statevariables>
		<queue>
			<message arrival="20" deadline="infinity" sender="controller">updateOutput()</message>
		</queue>
		<now>20</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="sensor">
		<statevariables>
		</statevariables>
		<queue>
			<message arrival="22" deadline="infinity" sender="sensor">callSensor()</message>
		</queue>
		<now>20</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="hc_unit">
		<statevariables>
			<variable name="HC_Unit.heaterOn" type="boolean">false</variable>
			<variable name="HC_Unit.coolerOn" type="boolean">true</variable>
			<variable name="HC_Unit.currentRegulation" type="int">-1</variable>
		</statevariables>
		<queue>
			<message arrival="20" deadline="infinity" sender="hc_unit">regulateTemp()</message>
		</queue>
		<now>20</now>
		<pc></pc>
		<res></res>
	</rebec>
</state>
<transition source="853_0" destination="858_0" executionTime="20" shift="0"> <messageserver sender="sensor" owner="controller" title="SETCURRENT"/></transition>
<transition source="853_0" destination="806_0" executionTime="20" shift="0"> <messageserver sender="hc_unit" owner="hc_unit" title="REGULATETEMP"/></transition>
<state id="859_0" atomicpropositions="isCooling," >
	<rebec name="room">
		<statevariables>
			<variable name="Room.currentTemp" type="int">23</variable>
			<variable name="Room.currentRegulation" type="int">-1</variable>
			<variable name="Room.outside_air" type="int">0</variable>
		</statevariables>
		<queue>
			<message arrival="30" deadline="infinity" sender="room">updateStatus()</message>
		</queue>
		<now>20</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="controller">
		<statevariables>
			<variable name="Controller.currentTemp" type="int">24</variable>
			<variable name="Controller.isHeating" type="boolean">false</variable>
			<variable name="Controller.isCooling" type="boolean">true</variable>
		</statevariables>
		<queue>
			<message arrival="20" deadline="infinity" sender="controller">updateOutput()</message>
		</queue>
		<now>20</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="sensor">
		<statevariables>
		</statevariables>
		<queue>
			<message arrival="22" deadline="infinity" sender="sensor">callSensor()</message>
		</queue>
		<now>20</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="hc_unit">
		<statevariables>
			<variable name="HC_Unit.heaterOn" type="boolean">false</variable>
			<variable name="HC_Unit.coolerOn" type="boolean">true</variable>
			<variable name="HC_Unit.currentRegulation" type="int">-1</variable>
		</statevariables>
		<queue>
			<message arrival="20" deadline="infinity" sender="hc_unit">regulateTemp()</message>
		</queue>
		<now>20</now>
		<pc></pc>
		<res></res>
	</rebec>
</state>
<transition source="854_0" destination="859_0" executionTime="20" shift="0"> <messageserver sender="sensor" owner="controller" title="SETCURRENT"/></transition>
<transition source="854_0" destination="807_0" executionTime="20" shift="0"> <messageserver sender="hc_unit" owner="hc_unit" title="REGULATETEMP"/></transition>
<state id="860_0" atomicpropositions="isCooling," >
	<rebec name="room">
		<statevariables>
			<variable name="Room.currentTemp" type="int">24</variable>
			<variable name="Room.currentRegulation" type="int">-1</variable>
			<variable name="Room.outside_air" type="int">-1</variable>
		</statevariables>
		<queue>
			<message arrival="30" deadline="infinity" sender="room">updateStatus()</message>
		</queue>
		<now>20</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="controller">
		<statevariables>
			<variable name="Controller.currentTemp" type="int">24</variable>
			<variable name="Controller.isHeating" type="boolean">false</variable>
			<variable name="Controller.isCooling" type="boolean">true</variable>
		</statevariables>
		<queue>
			<message arrival="20" deadline="infinity" sender="controller">updateOutput()</message>
		</queue>
		<now>20</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="sensor">
		<statevariables>
		</statevariables>
		<queue>
			<message arrival="22" deadline="infinity" sender="sensor">callSensor()</message>
		</queue>
		<now>20</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="hc_unit">
		<statevariables>
			<variable name="HC_Unit.heaterOn" type="boolean">false</variable>
			<variable name="HC_Unit.coolerOn" type="boolean">true</variable>
			<variable name="HC_Unit.currentRegulation" type="int">-1</variable>
		</statevariables>
		<queue>
			<message arrival="20" deadline="infinity" sender="hc_unit">regulateTemp()</message>
		</queue>
		<now>20</now>
		<pc></pc>
		<res></res>
	</rebec>
</state>
<transition source="855_0" destination="860_0" executionTime="20" shift="0"> <messageserver sender="sensor" owner="controller" title="SETCURRENT"/></transition>
<transition source="855_0" destination="808_0" executionTime="20" shift="0"> <messageserver sender="hc_unit" owner="hc_unit" title="REGULATETEMP"/></transition>
<transition source="856_0" destination="858_0" executionTime="20" shift="0"> <messageserver sender="room" owner="room" title="UPDATESTATUS"/></transition>
<transition source="856_0" destination="859_0" executionTime="20" shift="0"> <messageserver sender="room" owner="room" title="UPDATESTATUS"/></transition>
<transition source="856_0" destination="860_0" executionTime="20" shift="0"> <messageserver sender="room" owner="room" title="UPDATESTATUS"/></transition>
<state id="861_0" atomicpropositions="isCooling," >
	<rebec name="room">
		<statevariables>
			<variable name="Room.currentTemp" type="int">24</variable>
			<variable name="Room.currentRegulation" type="int">-1</variable>
			<variable name="Room.outside_air" type="int">-1</variable>
		</statevariables>
		<queue>
			<message arrival="20" deadline="infinity" sender="room">updateStatus()</message>
		</queue>
		<now>20</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="controller">
		<statevariables>
			<variable name="Controller.currentTemp" type="int">24</variable>
			<variable name="Controller.isHeating" type="boolean">false</variable>
			<variable name="Controller.isCooling" type="boolean">true</variable>
		</statevariables>
		<queue>
		</queue>
		<now>20</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="sensor">
		<statevariables>
		</statevariables>
		<queue>
			<message arrival="22" deadline="infinity" sender="sensor">callSensor()</message>
		</queue>
		<now>20</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="hc_unit">
		<statevariables>
			<variable name="HC_Unit.heaterOn" type="boolean">false</variable>
			<variable name="HC_Unit.coolerOn" type="boolean">true</variable>
			<variable name="HC_Unit.currentRegulation" type="int">-1</variable>
		</statevariables>
		<queue>
			<message arrival="20" deadline="infinity" sender="hc_unit">regulateTemp()</message>
		</queue>
		<now>20</now>
		<pc></pc>
		<res></res>
	</rebec>
</state>
<transition source="856_0" destination="861_0" executionTime="20" shift="0"> <messageserver sender="controller" owner="controller" title="UPDATEOUTPUT"/></transition>
<transition source="856_0" destination="810_0" executionTime="20" shift="0"> <messageserver sender="hc_unit" owner="hc_unit" title="REGULATETEMP"/></transition>
<state id="862_0" atomicpropositions="isCooling," >
	<rebec name="room">
		<statevariables>
			<variable name="Room.currentTemp" type="int">23</variable>
			<variable name="Room.currentRegulation" type="int">-1</variable>
			<variable name="Room.outside_air" type="int">0</variable>
		</statevariables>
		<queue>
			<message arrival="30" deadline="infinity" sender="room">updateStatus()</message>
		</queue>
		<now>20</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="controller">
		<statevariables>
			<variable name="Controller.currentTemp" type="int">23</variable>
			<variable name="Controller.isHeating" type="boolean">false</variable>
			<variable name="Controller.isCooling" type="boolean">false</variable>
		</statevariables>
		<queue>
		</queue>
		<now>20</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="sensor">
		<statevariables>
		</statevariables>
		<queue>
			<message arrival="22" deadline="infinity" sender="sensor">callSensor()</message>
		</queue>
		<now>20</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="hc_unit">
		<statevariables>
			<variable name="HC_Unit.heaterOn" type="boolean">false</variable>
			<variable name="HC_Unit.coolerOn" type="boolean">true</variable>
			<variable name="HC_Unit.currentRegulation" type="int">-1</variable>
		</statevariables>
		<queue>
			<message arrival="20" deadline="infinity" sender="controller">switchoff()</message>
			<message arrival="20" deadline="infinity" sender="hc_unit">regulateTemp()</message>
		</queue>
		<now>20</now>
		<pc></pc>
		<res></res>
	</rebec>
</state>
<transition source="857_0" destination="862_0" executionTime="20" shift="0"> <messageserver sender="controller" owner="controller" title="UPDATEOUTPUT"/></transition>
<transition source="857_0" destination="812_0" executionTime="20" shift="0"> <messageserver sender="hc_unit" owner="hc_unit" title="REGULATETEMP"/></transition>
<state id="863_0" atomicpropositions="isCooling," >
	<rebec name="room">
		<statevariables>
			<variable name="Room.currentTemp" type="int">22</variable>
			<variable name="Room.currentRegulation" type="int">-1</variable>
			<variable name="Room.outside_air" type="int">1</variable>
		</statevariables>
		<queue>
			<message arrival="30" deadline="infinity" sender="room">updateStatus()</message>
		</queue>
		<now>20</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="controller">
		<statevariables>
			<variable name="Controller.currentTemp" type="int">24</variable>
			<variable name="Controller.isHeating" type="boolean">false</variable>
			<variable name="Controller.isCooling" type="boolean">true</variable>
		</statevariables>
		<queue>
		</queue>
		<now>20</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="sensor">
		<statevariables>
		</statevariables>
		<queue>
			<message arrival="22" deadline="infinity" sender="sensor">callSensor()</message>
		</queue>
		<now>20</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="hc_unit">
		<statevariables>
			<variable name="HC_Unit.heaterOn" type="boolean">false</variable>
			<variable name="HC_Unit.coolerOn" type="boolean">true</variable>
			<variable name="HC_Unit.currentRegulation" type="int">-1</variable>
		</statevariables>
		<queue>
			<message arrival="20" deadline="infinity" sender="hc_unit">regulateTemp()</message>
		</queue>
		<now>20</now>
		<pc></pc>
		<res></res>
	</rebec>
</state>
<transition source="858_0" destination="863_0" executionTime="20" shift="0"> <messageserver sender="controller" owner="controller" title="UPDATEOUTPUT"/></transition>
<transition source="858_0" destination="814_0" executionTime="20" shift="0"> <messageserver sender="hc_unit" owner="hc_unit" title="REGULATETEMP"/></transition>
<state id="864_0" atomicpropositions="isCooling," >
	<rebec name="room">
		<statevariables>
			<variable name="Room.currentTemp" type="int">23</variable>
			<variable name="Room.currentRegulation" type="int">-1</variable>
			<variable name="Room.outside_air" type="int">0</variable>
		</statevariables>
		<queue>
			<message arrival="30" deadline="infinity" sender="room">updateStatus()</message>
		</queue>
		<now>20</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="controller">
		<statevariables>
			<variable name="Controller.currentTemp" type="int">24</variable>
			<variable name="Controller.isHeating" type="boolean">false</variable>
			<variable name="Controller.isCooling" type="boolean">true</variable>
		</statevariables>
		<queue>
		</queue>
		<now>20</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="sensor">
		<statevariables>
		</statevariables>
		<queue>
			<message arrival="22" deadline="infinity" sender="sensor">callSensor()</message>
		</queue>
		<now>20</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="hc_unit">
		<statevariables>
			<variable name="HC_Unit.heaterOn" type="boolean">false</variable>
			<variable name="HC_Unit.coolerOn" type="boolean">true</variable>
			<variable name="HC_Unit.currentRegulation" type="int">-1</variable>
		</statevariables>
		<queue>
			<message arrival="20" deadline="infinity" sender="hc_unit">regulateTemp()</message>
		</queue>
		<now>20</now>
		<pc></pc>
		<res></res>
	</rebec>
</state>
<transition source="859_0" destination="864_0" executionTime="20" shift="0"> <messageserver sender="controller" owner="controller" title="UPDATEOUTPUT"/></transition>
<transition source="859_0" destination="815_0" executionTime="20" shift="0"> <messageserver sender="hc_unit" owner="hc_unit" title="REGULATETEMP"/></transition>
<state id="865_0" atomicpropositions="isCooling," >
	<rebec name="room">
		<statevariables>
			<variable name="Room.currentTemp" type="int">24</variable>
			<variable name="Room.currentRegulation" type="int">-1</variable>
			<variable name="Room.outside_air" type="int">-1</variable>
		</statevariables>
		<queue>
			<message arrival="30" deadline="infinity" sender="room">updateStatus()</message>
		</queue>
		<now>20</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="controller">
		<statevariables>
			<variable name="Controller.currentTemp" type="int">24</variable>
			<variable name="Controller.isHeating" type="boolean">false</variable>
			<variable name="Controller.isCooling" type="boolean">true</variable>
		</statevariables>
		<queue>
		</queue>
		<now>20</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="sensor">
		<statevariables>
		</statevariables>
		<queue>
			<message arrival="22" deadline="infinity" sender="sensor">callSensor()</message>
		</queue>
		<now>20</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="hc_unit">
		<statevariables>
			<variable name="HC_Unit.heaterOn" type="boolean">false</variable>
			<variable name="HC_Unit.coolerOn" type="boolean">true</variable>
			<variable name="HC_Unit.currentRegulation" type="int">-1</variable>
		</statevariables>
		<queue>
			<message arrival="20" deadline="infinity" sender="hc_unit">regulateTemp()</message>
		</queue>
		<now>20</now>
		<pc></pc>
		<res></res>
	</rebec>
</state>
<transition source="860_0" destination="865_0" executionTime="20" shift="0"> <messageserver sender="controller" owner="controller" title="UPDATEOUTPUT"/></transition>
<transition source="860_0" destination="816_0" executionTime="20" shift="0"> <messageserver sender="hc_unit" owner="hc_unit" title="REGULATETEMP"/></transition>
<transition source="861_0" destination="863_0" executionTime="20" shift="0"> <messageserver sender="room" owner="room" title="UPDATESTATUS"/></transition>
<transition source="861_0" destination="864_0" executionTime="20" shift="0"> <messageserver sender="room" owner="room" title="UPDATESTATUS"/></transition>
<transition source="861_0" destination="865_0" executionTime="20" shift="0"> <messageserver sender="room" owner="room" title="UPDATESTATUS"/></transition>
<transition source="861_0" destination="818_0" executionTime="20" shift="0"> <messageserver sender="hc_unit" owner="hc_unit" title="REGULATETEMP"/></transition>
<state id="866_0" atomicpropositions="" >
	<rebec name="room">
		<statevariables>
			<variable name="Room.currentTemp" type="int">23</variable>
			<variable name="Room.currentRegulation" type="int">-1</variable>
			<variable name="Room.outside_air" type="int">0</variable>
		</statevariables>
		<queue>
			<message arrival="30" deadline="infinity" sender="room">updateStatus()</message>
		</queue>
		<now>20</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="controller">
		<statevariables>
			<variable name="Controller.currentTemp" type="int">23</variable>
			<variable name="Controller.isHeating" type="boolean">false</variable>
			<variable name="Controller.isCooling" type="boolean">false</variable>
		</statevariables>
		<queue>
		</queue>
		<now>20</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="sensor">
		<statevariables>
		</statevariables>
		<queue>
			<message arrival="22" deadline="infinity" sender="sensor">callSensor()</message>
		</queue>
		<now>20</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="hc_unit">
		<statevariables>
			<variable name="HC_Unit.heaterOn" type="boolean">false</variable>
			<variable name="HC_Unit.coolerOn" type="boolean">false</variable>
			<variable name="HC_Unit.currentRegulation" type="int">0</variable>
		</statevariables>
		<queue>
			<message arrival="20" deadline="infinity" sender="hc_unit">regulateTemp()</message>
		</queue>
		<now>20</now>
		<pc></pc>
		<res></res>
	</rebec>
</state>
<transition source="862_0" destination="866_0" executionTime="20" shift="0"> <messageserver sender="controller" owner="hc_unit" title="SWITCHOFF"/></transition>
<transition source="862_0" destination="820_0" executionTime="20" shift="0"> <messageserver sender="hc_unit" owner="hc_unit" title="REGULATETEMP"/></transition>
<transition source="863_0" destination="826_0" executionTime="20" shift="0"> <messageserver sender="hc_unit" owner="hc_unit" title="REGULATETEMP"/></transition>
<transition source="864_0" destination="827_0" executionTime="20" shift="0"> <messageserver sender="hc_unit" owner="hc_unit" title="REGULATETEMP"/></transition>
<transition source="865_0" destination="828_0" executionTime="20" shift="0"> <messageserver sender="hc_unit" owner="hc_unit" title="REGULATETEMP"/></transition>
<state id="867_0" atomicpropositions="" >
	<rebec name="room">
		<statevariables>
			<variable name="Room.currentTemp" type="int">23</variable>
			<variable name="Room.currentRegulation" type="int">-1</variable>
			<variable name="Room.outside_air" type="int">0</variable>
		</statevariables>
		<queue>
			<message arrival="20" deadline="infinity" sender="hc_unit">setRegulation(0)</message>
			<message arrival="30" deadline="infinity" sender="room">updateStatus()</message>
		</queue>
		<now>20</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="controller">
		<statevariables>
			<variable name="Controller.currentTemp" type="int">23</variable>
			<variable name="Controller.isHeating" type="boolean">false</variable>
			<variable name="Controller.isCooling" type="boolean">false</variable>
		</statevariables>
		<queue>
		</queue>
		<now>20</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="sensor">
		<statevariables>
		</statevariables>
		<queue>
			<message arrival="22" deadline="infinity" sender="sensor">callSensor()</message>
		</queue>
		<now>20</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="hc_unit">
		<statevariables>
			<variable name="HC_Unit.heaterOn" type="boolean">false</variable>
			<variable name="HC_Unit.coolerOn" type="boolean">false</variable>
			<variable name="HC_Unit.currentRegulation" type="int">0</variable>
		</statevariables>
		<queue>
			<message arrival="25" deadline="infinity" sender="hc_unit">regulateTemp()</message>
		</queue>
		<now>20</now>
		<pc></pc>
		<res></res>
	</rebec>
</state>
<transition source="866_0" destination="867_0" executionTime="20" shift="0"> <messageserver sender="hc_unit" owner="hc_unit" title="REGULATETEMP"/></transition>
<transition source="806_0" destination="840_0" executionTime="20" shift="0"> <messageserver sender="hc_unit" owner="room" title="SETREGULATION"/></transition>
<transition source="806_0" destination="814_0" executionTime="20" shift="0"> <messageserver sender="sensor" owner="controller" title="SETCURRENT"/></transition>
<state id="868_0" atomicpropositions="isCooling," >
	<rebec name="room">
		<statevariables>
			<variable name="Room.currentTemp" type="int">24</variable>
			<variable name="Room.currentRegulation" type="int">-1</variable>
			<variable name="Room.outside_air" type="int">-1</variable>
		</statevariables>
		<queue>
			<message arrival="30" deadline="infinity" sender="room">updateStatus()</message>
		</queue>
		<now>20</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="controller">
		<statevariables>
			<variable name="Controller.currentTemp" type="int">24</variable>
			<variable name="Controller.isHeating" type="boolean">false</variable>
			<variable name="Controller.isCooling" type="boolean">true</variable>
		</statevariables>
		<queue>
		</queue>
		<now>20</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="sensor">
		<statevariables>
		</statevariables>
		<queue>
			<message arrival="20" deadline="infinity" sender="room">setCurrent(24)</message>
			<message arrival="22" deadline="infinity" sender="sensor">callSensor()</message>
		</queue>
		<now>20</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="hc_unit">
		<statevariables>
			<variable name="HC_Unit.heaterOn" type="boolean">false</variable>
			<variable name="HC_Unit.coolerOn" type="boolean">true</variable>
			<variable name="HC_Unit.currentRegulation" type="int">-1</variable>
		</statevariables>
		<queue>
			<message arrival="25" deadline="infinity" sender="hc_unit">regulateTemp()</message>
		</queue>
		<now>20</now>
		<pc></pc>
		<res></res>
	</rebec>
</state>
<transition source="801_0" destination="868_0" executionTime="20" shift="0"> <messageserver sender="hc_unit" owner="room" title="SETREGULATION"/></transition>
<transition source="801_0" destination="808_0" executionTime="20" shift="0"> <messageserver sender="room" owner="sensor" title="SETCURRENT"/></transition>
<transition source="843_0" destination="850_0" executionTime="20" shift="0"> <messageserver sender="sensor" owner="room" title="GETTEMP"/></transition>
<transition source="843_0" destination="792_0" executionTime="20" shift="0"> <messageserver sender="hc_unit" owner="hc_unit" title="REGULATETEMP"/></transition>
<state id="869_0" atomicpropositions="isCooling," >
	<rebec name="room">
		<statevariables>
			<variable name="Room.currentTemp" type="int">22</variable>
			<variable name="Room.currentRegulation" type="int">-1</variable>
			<variable name="Room.outside_air" type="int">1</variable>
		</statevariables>
		<queue>
			<message arrival="30" deadline="infinity" sender="room">updateStatus()</message>
		</queue>
		<now>20</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="controller">
		<statevariables>
			<variable name="Controller.currentTemp" type="int">24</variable>
			<variable name="Controller.isHeating" type="boolean">false</variable>
			<variable name="Controller.isCooling" type="boolean">true</variable>
		</statevariables>
		<queue>
		</queue>
		<now>20</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="sensor">
		<statevariables>
		</statevariables>
		<queue>
			<message arrival="20" deadline="infinity" sender="room">setCurrent(22)</message>
			<message arrival="22" deadline="infinity" sender="sensor">callSensor()</message>
		</queue>
		<now>20</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="hc_unit">
		<statevariables>
			<variable name="HC_Unit.heaterOn" type="boolean">false</variable>
			<variable name="HC_Unit.coolerOn" type="boolean">true</variable>
			<variable name="HC_Unit.currentRegulation" type="int">-1</variable>
		</statevariables>
		<queue>
			<message arrival="20" deadline="infinity" sender="hc_unit">regulateTemp()</message>
		</queue>
		<now>20</now>
		<pc></pc>
		<res></res>
	</rebec>
</state>
<transition source="844_0" destination="869_0" executionTime="20" shift="0"> <messageserver sender="sensor" owner="room" title="GETTEMP"/></transition>
<transition source="844_0" destination="791_0" executionTime="20" shift="0"> <messageserver sender="hc_unit" owner="hc_unit" title="REGULATETEMP"/></transition>
<transition source="867_0" destination="283_0" executionTime="20" shift="10"> <messageserver sender="hc_unit" owner="room" title="SETREGULATION"/></transition>
<transition source="868_0" destination="842_0" executionTime="20" shift="0"> <messageserver sender="room" owner="sensor" title="SETCURRENT"/></transition>
<state id="870_0" atomicpropositions="isCooling," >
	<rebec name="room">
		<statevariables>
			<variable name="Room.currentTemp" type="int">22</variable>
			<variable name="Room.currentRegulation" type="int">-1</variable>
			<variable name="Room.outside_air" type="int">1</variable>
		</statevariables>
		<queue>
			<message arrival="30" deadline="infinity" sender="room">updateStatus()</message>
		</queue>
		<now>20</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="controller">
		<statevariables>
			<variable name="Controller.currentTemp" type="int">24</variable>
			<variable name="Controller.isHeating" type="boolean">false</variable>
			<variable name="Controller.isCooling" type="boolean">true</variable>
		</statevariables>
		<queue>
		</queue>
		<now>20</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="sensor">
		<statevariables>
		</statevariables>
		<queue>
			<message arrival="20" deadline="infinity" sender="room">setCurrent(24)</message>
			<message arrival="22" deadline="infinity" sender="sensor">callSensor()</message>
		</queue>
		<now>20</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="hc_unit">
		<statevariables>
			<variable name="HC_Unit.heaterOn" type="boolean">false</variable>
			<variable name="HC_Unit.coolerOn" type="boolean">true</variable>
			<variable name="HC_Unit.currentRegulation" type="int">-1</variable>
		</statevariables>
		<queue>
			<message arrival="25" deadline="infinity" sender="hc_unit">regulateTemp()</message>
		</queue>
		<now>20</now>
		<pc></pc>
		<res></res>
	</rebec>
</state>
<transition source="798_0" destination="870_0" executionTime="20" shift="0"> <messageserver sender="room" owner="room" title="UPDATESTATUS"/></transition>
<state id="871_0" atomicpropositions="isCooling," >
	<rebec name="room">
		<statevariables>
			<variable name="Room.currentTemp" type="int">23</variable>
			<variable name="Room.currentRegulation" type="int">-1</variable>
			<variable name="Room.outside_air" type="int">0</variable>
		</statevariables>
		<queue>
			<message arrival="30" deadline="infinity" sender="room">updateStatus()</message>
		</queue>
		<now>20</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="controller">
		<statevariables>
			<variable name="Controller.currentTemp" type="int">24</variable>
			<variable name="Controller.isHeating" type="boolean">false</variable>
			<variable name="Controller.isCooling" type="boolean">true</variable>
		</statevariables>
		<queue>
		</queue>
		<now>20</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="sensor">
		<statevariables>
		</statevariables>
		<queue>
			<message arrival="20" deadline="infinity" sender="room">setCurrent(24)</message>
			<message arrival="22" deadline="infinity" sender="sensor">callSensor()</message>
		</queue>
		<now>20</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="hc_unit">
		<statevariables>
			<variable name="HC_Unit.heaterOn" type="boolean">false</variable>
			<variable name="HC_Unit.coolerOn" type="boolean">true</variable>
			<variable name="HC_Unit.currentRegulation" type="int">-1</variable>
		</statevariables>
		<queue>
			<message arrival="25" deadline="infinity" sender="hc_unit">regulateTemp()</message>
		</queue>
		<now>20</now>
		<pc></pc>
		<res></res>
	</rebec>
</state>
<transition source="798_0" destination="871_0" executionTime="20" shift="0"> <messageserver sender="room" owner="room" title="UPDATESTATUS"/></transition>
<transition source="798_0" destination="868_0" executionTime="20" shift="0"> <messageserver sender="room" owner="room" title="UPDATESTATUS"/></transition>
<transition source="798_0" destination="809_0" executionTime="20" shift="0"> <messageserver sender="room" owner="sensor" title="SETCURRENT"/></transition>
<transition source="799_0" destination="870_0" executionTime="20" shift="0"> <messageserver sender="hc_unit" owner="room" title="SETREGULATION"/></transition>
<transition source="799_0" destination="806_0" executionTime="20" shift="0"> <messageserver sender="room" owner="sensor" title="SETCURRENT"/></transition>
<transition source="800_0" destination="871_0" executionTime="20" shift="0"> <messageserver sender="hc_unit" owner="room" title="SETREGULATION"/></transition>
<transition source="800_0" destination="807_0" executionTime="20" shift="0"> <messageserver sender="room" owner="sensor" title="SETCURRENT"/></transition>
<state id="872_0" atomicpropositions="isCooling," >
	<rebec name="room">
		<statevariables>
			<variable name="Room.currentTemp" type="int">22</variable>
			<variable name="Room.currentRegulation" type="int">-1</variable>
			<variable name="Room.outside_air" type="int">1</variable>
		</statevariables>
		<queue>
			<message arrival="30" deadline="infinity" sender="room">updateStatus()</message>
		</queue>
		<now>20</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="controller">
		<statevariables>
			<variable name="Controller.currentTemp" type="int">24</variable>
			<variable name="Controller.isHeating" type="boolean">false</variable>
			<variable name="Controller.isCooling" type="boolean">true</variable>
		</statevariables>
		<queue>
			<message arrival="20" deadline="infinity" sender="sensor">setCurrent(22)</message>
		</queue>
		<now>20</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="sensor">
		<statevariables>
		</statevariables>
		<queue>
			<message arrival="22" deadline="infinity" sender="sensor">callSensor()</message>
		</queue>
		<now>20</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="hc_unit">
		<statevariables>
			<variable name="HC_Unit.heaterOn" type="boolean">false</variable>
			<variable name="HC_Unit.coolerOn" type="boolean">true</variable>
			<variable name="HC_Unit.currentRegulation" type="int">-1</variable>
		</statevariables>
		<queue>
			<message arrival="20" deadline="infinity" sender="hc_unit">regulateTemp()</message>
		</queue>
		<now>20</now>
		<pc></pc>
		<res></res>
	</rebec>
</state>
<transition source="869_0" destination="872_0" executionTime="20" shift="0"> <messageserver sender="room" owner="sensor" title="SETCURRENT"/></transition>
<state id="873_0" atomicpropositions="isCooling," >
	<rebec name="room">
		<statevariables>
			<variable name="Room.currentTemp" type="int">22</variable>
			<variable name="Room.currentRegulation" type="int">-1</variable>
			<variable name="Room.outside_air" type="int">1</variable>
		</statevariables>
		<queue>
			<message arrival="20" deadline="infinity" sender="hc_unit">setRegulation(-1)</message>
			<message arrival="30" deadline="infinity" sender="room">updateStatus()</message>
		</queue>
		<now>20</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="controller">
		<statevariables>
			<variable name="Controller.currentTemp" type="int">24</variable>
			<variable name="Controller.isHeating" type="boolean">false</variable>
			<variable name="Controller.isCooling" type="boolean">true</variable>
		</statevariables>
		<queue>
		</queue>
		<now>20</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="sensor">
		<statevariables>
		</statevariables>
		<queue>
			<message arrival="20" deadline="infinity" sender="room">setCurrent(22)</message>
			<message arrival="22" deadline="infinity" sender="sensor">callSensor()</message>
		</queue>
		<now>20</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="hc_unit">
		<statevariables>
			<variable name="HC_Unit.heaterOn" type="boolean">false</variable>
			<variable name="HC_Unit.coolerOn" type="boolean">true</variable>
			<variable name="HC_Unit.currentRegulation" type="int">-1</variable>
		</statevariables>
		<queue>
			<message arrival="25" deadline="infinity" sender="hc_unit">regulateTemp()</message>
		</queue>
		<now>20</now>
		<pc></pc>
		<res></res>
	</rebec>
</state>
<transition source="869_0" destination="873_0" executionTime="20" shift="0"> <messageserver sender="hc_unit" owner="hc_unit" title="REGULATETEMP"/></transition>
<transition source="797_0" destination="868_0" executionTime="20" shift="0"> <messageserver sender="sensor" owner="room" title="GETTEMP"/></transition>
<transition source="871_0" destination="841_0" executionTime="20" shift="0"> <messageserver sender="room" owner="sensor" title="SETCURRENT"/></transition>
<transition source="870_0" destination="840_0" executionTime="20" shift="0"> <messageserver sender="room" owner="sensor" title="SETCURRENT"/></transition>
<transition source="792_0" destination="797_0" executionTime="20" shift="0"> <messageserver sender="hc_unit" owner="room" title="SETREGULATION"/></transition>
<transition source="792_0" destination="801_0" executionTime="20" shift="0"> <messageserver sender="sensor" owner="room" title="GETTEMP"/></transition>
<transition source="873_0" destination="805_0" executionTime="20" shift="0"> <messageserver sender="hc_unit" owner="room" title="SETREGULATION"/></transition>
<state id="874_0" atomicpropositions="isCooling," >
	<rebec name="room">
		<statevariables>
			<variable name="Room.currentTemp" type="int">22</variable>
			<variable name="Room.currentRegulation" type="int">-1</variable>
			<variable name="Room.outside_air" type="int">1</variable>
		</statevariables>
		<queue>
			<message arrival="20" deadline="infinity" sender="hc_unit">setRegulation(-1)</message>
			<message arrival="30" deadline="infinity" sender="room">updateStatus()</message>
		</queue>
		<now>20</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="controller">
		<statevariables>
			<variable name="Controller.currentTemp" type="int">24</variable>
			<variable name="Controller.isHeating" type="boolean">false</variable>
			<variable name="Controller.isCooling" type="boolean">true</variable>
		</statevariables>
		<queue>
			<message arrival="20" deadline="infinity" sender="sensor">setCurrent(22)</message>
		</queue>
		<now>20</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="sensor">
		<statevariables>
		</statevariables>
		<queue>
			<message arrival="22" deadline="infinity" sender="sensor">callSensor()</message>
		</queue>
		<now>20</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="hc_unit">
		<statevariables>
			<variable name="HC_Unit.heaterOn" type="boolean">false</variable>
			<variable name="HC_Unit.coolerOn" type="boolean">true</variable>
			<variable name="HC_Unit.currentRegulation" type="int">-1</variable>
		</statevariables>
		<queue>
			<message arrival="25" deadline="infinity" sender="hc_unit">regulateTemp()</message>
		</queue>
		<now>20</now>
		<pc></pc>
		<res></res>
	</rebec>
</state>
<transition source="873_0" destination="874_0" executionTime="20" shift="0"> <messageserver sender="room" owner="sensor" title="SETCURRENT"/></transition>
<state id="875_0" atomicpropositions="isCooling," >
	<rebec name="room">
		<statevariables>
			<variable name="Room.currentTemp" type="int">22</variable>
			<variable name="Room.currentRegulation" type="int">-1</variable>
			<variable name="Room.outside_air" type="int">1</variable>
		</statevariables>
		<queue>
			<message arrival="30" deadline="infinity" sender="room">updateStatus()</message>
		</queue>
		<now>20</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="controller">
		<statevariables>
			<variable name="Controller.currentTemp" type="int">22</variable>
			<variable name="Controller.isHeating" type="boolean">false</variable>
			<variable name="Controller.isCooling" type="boolean">true</variable>
		</statevariables>
		<queue>
			<message arrival="20" deadline="infinity" sender="controller">updateOutput()</message>
		</queue>
		<now>20</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="sensor">
		<statevariables>
		</statevariables>
		<queue>
			<message arrival="22" deadline="infinity" sender="sensor">callSensor()</message>
		</queue>
		<now>20</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="hc_unit">
		<statevariables>
			<variable name="HC_Unit.heaterOn" type="boolean">false</variable>
			<variable name="HC_Unit.coolerOn" type="boolean">true</variable>
			<variable name="HC_Unit.currentRegulation" type="int">-1</variable>
		</statevariables>
		<queue>
			<message arrival="20" deadline="infinity" sender="hc_unit">regulateTemp()</message>
		</queue>
		<now>20</now>
		<pc></pc>
		<res></res>
	</rebec>
</state>
<transition source="872_0" destination="875_0" executionTime="20" shift="0"> <messageserver sender="sensor" owner="controller" title="SETCURRENT"/></transition>
<transition source="872_0" destination="874_0" executionTime="20" shift="0"> <messageserver sender="hc_unit" owner="hc_unit" title="REGULATETEMP"/></transition>
<transition source="874_0" destination="813_0" executionTime="20" shift="0"> <messageserver sender="hc_unit" owner="room" title="SETREGULATION"/></transition>
<state id="876_0" atomicpropositions="isCooling," >
	<rebec name="room">
		<statevariables>
			<variable name="Room.currentTemp" type="int">22</variable>
			<variable name="Room.currentRegulation" type="int">-1</variable>
			<variable name="Room.outside_air" type="int">1</variable>
		</statevariables>
		<queue>
			<message arrival="20" deadline="infinity" sender="hc_unit">setRegulation(-1)</message>
			<message arrival="30" deadline="infinity" sender="room">updateStatus()</message>
		</queue>
		<now>20</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="controller">
		<statevariables>
			<variable name="Controller.currentTemp" type="int">22</variable>
			<variable name="Controller.isHeating" type="boolean">false</variable>
			<variable name="Controller.isCooling" type="boolean">true</variable>
		</statevariables>
		<queue>
			<message arrival="20" deadline="infinity" sender="controller">updateOutput()</message>
		</queue>
		<now>20</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="sensor">
		<statevariables>
		</statevariables>
		<queue>
			<message arrival="22" deadline="infinity" sender="sensor">callSensor()</message>
		</queue>
		<now>20</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="hc_unit">
		<statevariables>
			<variable name="HC_Unit.heaterOn" type="boolean">false</variable>
			<variable name="HC_Unit.coolerOn" type="boolean">true</variable>
			<variable name="HC_Unit.currentRegulation" type="int">-1</variable>
		</statevariables>
		<queue>
			<message arrival="25" deadline="infinity" sender="hc_unit">regulateTemp()</message>
		</queue>
		<now>20</now>
		<pc></pc>
		<res></res>
	</rebec>
</state>
<transition source="874_0" destination="876_0" executionTime="20" shift="0"> <messageserver sender="sensor" owner="controller" title="SETCURRENT"/></transition>
<state id="877_0" atomicpropositions="isCooling," >
	<rebec name="room">
		<statevariables>
			<variable name="Room.currentTemp" type="int">22</variable>
			<variable name="Room.currentRegulation" type="int">-1</variable>
			<variable name="Room.outside_air" type="int">1</variable>
		</statevariables>
		<queue>
			<message arrival="30" deadline="infinity" sender="room">updateStatus()</message>
		</queue>
		<now>20</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="controller">
		<statevariables>
			<variable name="Controller.currentTemp" type="int">22</variable>
			<variable name="Controller.isHeating" type="boolean">false</variable>
			<variable name="Controller.isCooling" type="boolean">false</variable>
		</statevariables>
		<queue>
		</queue>
		<now>20</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="sensor">
		<statevariables>
		</statevariables>
		<queue>
			<message arrival="22" deadline="infinity" sender="sensor">callSensor()</message>
		</queue>
		<now>20</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="hc_unit">
		<statevariables>
			<variable name="HC_Unit.heaterOn" type="boolean">false</variable>
			<variable name="HC_Unit.coolerOn" type="boolean">true</variable>
			<variable name="HC_Unit.currentRegulation" type="int">-1</variable>
		</statevariables>
		<queue>
			<message arrival="20" deadline="infinity" sender="controller">switchoff()</message>
			<message arrival="20" deadline="infinity" sender="hc_unit">regulateTemp()</message>
		</queue>
		<now>20</now>
		<pc></pc>
		<res></res>
	</rebec>
</state>
<transition source="875_0" destination="877_0" executionTime="20" shift="0"> <messageserver sender="controller" owner="controller" title="UPDATEOUTPUT"/></transition>
<transition source="875_0" destination="876_0" executionTime="20" shift="0"> <messageserver sender="hc_unit" owner="hc_unit" title="REGULATETEMP"/></transition>
<transition source="876_0" destination="821_0" executionTime="20" shift="0"> <messageserver sender="hc_unit" owner="room" title="SETREGULATION"/></transition>
<state id="878_0" atomicpropositions="isCooling," >
	<rebec name="room">
		<statevariables>
			<variable name="Room.currentTemp" type="int">22</variable>
			<variable name="Room.currentRegulation" type="int">-1</variable>
			<variable name="Room.outside_air" type="int">1</variable>
		</statevariables>
		<queue>
			<message arrival="20" deadline="infinity" sender="hc_unit">setRegulation(-1)</message>
			<message arrival="30" deadline="infinity" sender="room">updateStatus()</message>
		</queue>
		<now>20</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="controller">
		<statevariables>
			<variable name="Controller.currentTemp" type="int">22</variable>
			<variable name="Controller.isHeating" type="boolean">false</variable>
			<variable name="Controller.isCooling" type="boolean">false</variable>
		</statevariables>
		<queue>
		</queue>
		<now>20</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="sensor">
		<statevariables>
		</statevariables>
		<queue>
			<message arrival="22" deadline="infinity" sender="sensor">callSensor()</message>
		</queue>
		<now>20</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="hc_unit">
		<statevariables>
			<variable name="HC_Unit.heaterOn" type="boolean">false</variable>
			<variable name="HC_Unit.coolerOn" type="boolean">true</variable>
			<variable name="HC_Unit.currentRegulation" type="int">-1</variable>
		</statevariables>
		<queue>
			<message arrival="20" deadline="infinity" sender="controller">switchoff()</message>
			<message arrival="25" deadline="infinity" sender="hc_unit">regulateTemp()</message>
		</queue>
		<now>20</now>
		<pc></pc>
		<res></res>
	</rebec>
</state>
<transition source="876_0" destination="878_0" executionTime="20" shift="0"> <messageserver sender="controller" owner="controller" title="UPDATEOUTPUT"/></transition>
<state id="879_0" atomicpropositions="" >
	<rebec name="room">
		<statevariables>
			<variable name="Room.currentTemp" type="int">22</variable>
			<variable name="Room.currentRegulation" type="int">-1</variable>
			<variable name="Room.outside_air" type="int">1</variable>
		</statevariables>
		<queue>
			<message arrival="30" deadline="infinity" sender="room">updateStatus()</message>
		</queue>
		<now>20</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="controller">
		<statevariables>
			<variable name="Controller.currentTemp" type="int">22</variable>
			<variable name="Controller.isHeating" type="boolean">false</variable>
			<variable name="Controller.isCooling" type="boolean">false</variable>
		</statevariables>
		<queue>
		</queue>
		<now>20</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="sensor">
		<statevariables>
		</statevariables>
		<queue>
			<message arrival="22" deadline="infinity" sender="sensor">callSensor()</message>
		</queue>
		<now>20</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="hc_unit">
		<statevariables>
			<variable name="HC_Unit.heaterOn" type="boolean">false</variable>
			<variable name="HC_Unit.coolerOn" type="boolean">false</variable>
			<variable name="HC_Unit.currentRegulation" type="int">0</variable>
		</statevariables>
		<queue>
			<message arrival="20" deadline="infinity" sender="hc_unit">regulateTemp()</message>
		</queue>
		<now>20</now>
		<pc></pc>
		<res></res>
	</rebec>
</state>
<transition source="877_0" destination="879_0" executionTime="20" shift="0"> <messageserver sender="controller" owner="hc_unit" title="SWITCHOFF"/></transition>
<transition source="877_0" destination="878_0" executionTime="20" shift="0"> <messageserver sender="hc_unit" owner="hc_unit" title="REGULATETEMP"/></transition>
<transition source="878_0" destination="831_0" executionTime="20" shift="0"> <messageserver sender="hc_unit" owner="room" title="SETREGULATION"/></transition>
<state id="880_0" atomicpropositions="" >
	<rebec name="room">
		<statevariables>
			<variable name="Room.currentTemp" type="int">22</variable>
			<variable name="Room.currentRegulation" type="int">-1</variable>
			<variable name="Room.outside_air" type="int">1</variable>
		</statevariables>
		<queue>
			<message arrival="20" deadline="infinity" sender="hc_unit">setRegulation(-1)</message>
			<message arrival="30" deadline="infinity" sender="room">updateStatus()</message>
		</queue>
		<now>20</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="controller">
		<statevariables>
			<variable name="Controller.currentTemp" type="int">22</variable>
			<variable name="Controller.isHeating" type="boolean">false</variable>
			<variable name="Controller.isCooling" type="boolean">false</variable>
		</statevariables>
		<queue>
		</queue>
		<now>20</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="sensor">
		<statevariables>
		</statevariables>
		<queue>
			<message arrival="22" deadline="infinity" sender="sensor">callSensor()</message>
		</queue>
		<now>20</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="hc_unit">
		<statevariables>
			<variable name="HC_Unit.heaterOn" type="boolean">false</variable>
			<variable name="HC_Unit.coolerOn" type="boolean">false</variable>
			<variable name="HC_Unit.currentRegulation" type="int">0</variable>
		</statevariables>
		<queue>
			<message arrival="25" deadline="infinity" sender="hc_unit">regulateTemp()</message>
		</queue>
		<now>20</now>
		<pc></pc>
		<res></res>
	</rebec>
</state>
<transition source="878_0" destination="880_0" executionTime="20" shift="0"> <messageserver sender="controller" owner="hc_unit" title="SWITCHOFF"/></transition>
<state id="881_0" atomicpropositions="" >
	<rebec name="room">
		<statevariables>
			<variable name="Room.currentTemp" type="int">22</variable>
			<variable name="Room.currentRegulation" type="int">-1</variable>
			<variable name="Room.outside_air" type="int">1</variable>
		</statevariables>
		<queue>
			<message arrival="20" deadline="infinity" sender="hc_unit">setRegulation(0)</message>
			<message arrival="30" deadline="infinity" sender="room">updateStatus()</message>
		</queue>
		<now>20</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="controller">
		<statevariables>
			<variable name="Controller.currentTemp" type="int">22</variable>
			<variable name="Controller.isHeating" type="boolean">false</variable>
			<variable name="Controller.isCooling" type="boolean">false</variable>
		</statevariables>
		<queue>
		</queue>
		<now>20</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="sensor">
		<statevariables>
		</statevariables>
		<queue>
			<message arrival="22" deadline="infinity" sender="sensor">callSensor()</message>
		</queue>
		<now>20</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="hc_unit">
		<statevariables>
			<variable name="HC_Unit.heaterOn" type="boolean">false</variable>
			<variable name="HC_Unit.coolerOn" type="boolean">false</variable>
			<variable name="HC_Unit.currentRegulation" type="int">0</variable>
		</statevariables>
		<queue>
			<message arrival="25" deadline="infinity" sender="hc_unit">regulateTemp()</message>
		</queue>
		<now>20</now>
		<pc></pc>
		<res></res>
	</rebec>
</state>
<transition source="879_0" destination="881_0" executionTime="20" shift="0"> <messageserver sender="hc_unit" owner="hc_unit" title="REGULATETEMP"/></transition>
<transition source="880_0" destination="838_0" executionTime="20" shift="0"> <messageserver sender="hc_unit" owner="room" title="SETREGULATION"/></transition>
<transition source="881_0" destination="285_0" executionTime="20" shift="10"> <messageserver sender="hc_unit" owner="room" title="SETREGULATION"/></transition>
<transition source="791_0" destination="796_0" executionTime="20" shift="0"> <messageserver sender="hc_unit" owner="room" title="SETREGULATION"/></transition>
<transition source="791_0" destination="873_0" executionTime="20" shift="0"> <messageserver sender="sensor" owner="room" title="GETTEMP"/></transition>
<transition source="789_0" destination="797_0" executionTime="20" shift="0"> <messageserver sender="sensor" owner="sensor" title="CALLSENSOR"/></transition>
<state id="882_0" atomicpropositions="" >
	<rebec name="room">
		<statevariables>
			<variable name="Room.currentTemp" type="int">21</variable>
			<variable name="Room.currentRegulation" type="int">1</variable>
			<variable name="Room.outside_air" type="int">0</variable>
		</statevariables>
		<queue>
			<message arrival="30" deadline="infinity" sender="room">updateStatus()</message>
		</queue>
		<now>20</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="controller">
		<statevariables>
			<variable name="Controller.currentTemp" type="int">21</variable>
			<variable name="Controller.isHeating" type="boolean">false</variable>
			<variable name="Controller.isCooling" type="boolean">false</variable>
		</statevariables>
		<queue>
		</queue>
		<now>20</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="sensor">
		<statevariables>
		</statevariables>
		<queue>
			<message arrival="22" deadline="infinity" sender="sensor">callSensor()</message>
		</queue>
		<now>20</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="hc_unit">
		<statevariables>
			<variable name="HC_Unit.heaterOn" type="boolean">false</variable>
			<variable name="HC_Unit.coolerOn" type="boolean">false</variable>
			<variable name="HC_Unit.currentRegulation" type="int">0</variable>
		</statevariables>
		<queue>
			<message arrival="20" deadline="infinity" sender="hc_unit">regulateTemp()</message>
		</queue>
		<now>20</now>
		<pc></pc>
		<res></res>
	</rebec>
</state>
<transition source="775_0" destination="882_0" executionTime="20" shift="0"> <messageserver sender="controller" owner="hc_unit" title="SWITCHOFF"/></transition>
<transition source="775_0" destination="712_0" executionTime="20" shift="0"> <messageserver sender="hc_unit" owner="hc_unit" title="REGULATETEMP"/></transition>
<transition source="777_0" destination="845_0" executionTime="20" shift="0"> <messageserver sender="sensor" owner="sensor" title="CALLSENSOR"/></transition>
<transition source="777_0" destination="782_0" executionTime="20" shift="0"> <messageserver sender="hc_unit" owner="hc_unit" title="REGULATETEMP"/></transition>
<transition source="776_0" destination="844_0" executionTime="20" shift="0"> <messageserver sender="sensor" owner="sensor" title="CALLSENSOR"/></transition>
<transition source="776_0" destination="781_0" executionTime="20" shift="0"> <messageserver sender="hc_unit" owner="hc_unit" title="REGULATETEMP"/></transition>
<state id="883_0" atomicpropositions="" >
	<rebec name="room">
		<statevariables>
			<variable name="Room.currentTemp" type="int">21</variable>
			<variable name="Room.currentRegulation" type="int">1</variable>
			<variable name="Room.outside_air" type="int">0</variable>
		</statevariables>
		<queue>
			<message arrival="20" deadline="infinity" sender="hc_unit">setRegulation(0)</message>
			<message arrival="30" deadline="infinity" sender="room">updateStatus()</message>
		</queue>
		<now>20</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="controller">
		<statevariables>
			<variable name="Controller.currentTemp" type="int">21</variable>
			<variable name="Controller.isHeating" type="boolean">false</variable>
			<variable name="Controller.isCooling" type="boolean">false</variable>
		</statevariables>
		<queue>
		</queue>
		<now>20</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="sensor">
		<statevariables>
		</statevariables>
		<queue>
			<message arrival="22" deadline="infinity" sender="sensor">callSensor()</message>
		</queue>
		<now>20</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="hc_unit">
		<statevariables>
			<variable name="HC_Unit.heaterOn" type="boolean">false</variable>
			<variable name="HC_Unit.coolerOn" type="boolean">false</variable>
			<variable name="HC_Unit.currentRegulation" type="int">0</variable>
		</statevariables>
		<queue>
			<message arrival="25" deadline="infinity" sender="hc_unit">regulateTemp()</message>
		</queue>
		<now>20</now>
		<pc></pc>
		<res></res>
	</rebec>
</state>
<transition source="882_0" destination="883_0" executionTime="20" shift="0"> <messageserver sender="hc_unit" owner="hc_unit" title="REGULATETEMP"/></transition>
<transition source="883_0" destination="277_0" executionTime="20" shift="10"> <messageserver sender="hc_unit" owner="room" title="SETREGULATION"/></transition>
<state id="884_0" atomicpropositions="isHeating," >
	<rebec name="room">
		<statevariables>
			<variable name="Room.currentTemp" type="int">21</variable>
			<variable name="Room.currentRegulation" type="int">1</variable>
			<variable name="Room.outside_air" type="int">0</variable>
		</statevariables>
		<queue>
			<message arrival="22" deadline="infinity" sender="sensor">getTemp()</message>
			<message arrival="30" deadline="infinity" sender="room">updateStatus()</message>
		</queue>
		<now>22</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="controller">
		<statevariables>
			<variable name="Controller.currentTemp" type="int">20</variable>
			<variable name="Controller.isHeating" type="boolean">true</variable>
			<variable name="Controller.isCooling" type="boolean">false</variable>
		</statevariables>
		<queue>
		</queue>
		<now>22</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="sensor">
		<statevariables>
		</statevariables>
		<queue>
			<message arrival="24" deadline="infinity" sender="sensor">callSensor()</message>
		</queue>
		<now>22</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="hc_unit">
		<statevariables>
			<variable name="HC_Unit.heaterOn" type="boolean">true</variable>
			<variable name="HC_Unit.coolerOn" type="boolean">false</variable>
			<variable name="HC_Unit.currentRegulation" type="int">1</variable>
		</statevariables>
		<queue>
			<message arrival="25" deadline="infinity" sender="hc_unit">regulateTemp()</message>
		</queue>
		<now>22</now>
		<pc></pc>
		<res></res>
	</rebec>
</state>
<transition source="682_0" destination="884_0" executionTime="22" shift="0"> <messageserver sender="sensor" owner="sensor" title="CALLSENSOR"/></transition>
<state id="885_0" atomicpropositions="" >
	<rebec name="room">
		<statevariables>
			<variable name="Room.currentTemp" type="int">23</variable>
			<variable name="Room.currentRegulation" type="int">-1</variable>
			<variable name="Room.outside_air" type="int">0</variable>
		</statevariables>
		<queue>
			<message arrival="22" deadline="infinity" sender="sensor">getTemp()</message>
			<message arrival="30" deadline="infinity" sender="room">updateStatus()</message>
		</queue>
		<now>22</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="controller">
		<statevariables>
			<variable name="Controller.currentTemp" type="int">23</variable>
			<variable name="Controller.isHeating" type="boolean">false</variable>
			<variable name="Controller.isCooling" type="boolean">false</variable>
		</statevariables>
		<queue>
		</queue>
		<now>22</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="sensor">
		<statevariables>
		</statevariables>
		<queue>
			<message arrival="24" deadline="infinity" sender="sensor">callSensor()</message>
		</queue>
		<now>22</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="hc_unit">
		<statevariables>
			<variable name="HC_Unit.heaterOn" type="boolean">false</variable>
			<variable name="HC_Unit.coolerOn" type="boolean">false</variable>
			<variable name="HC_Unit.currentRegulation" type="int">0</variable>
		</statevariables>
		<queue>
			<message arrival="25" deadline="infinity" sender="hc_unit">regulateTemp()</message>
		</queue>
		<now>22</now>
		<pc></pc>
		<res></res>
	</rebec>
</state>
<transition source="837_0" destination="885_0" executionTime="22" shift="0"> <messageserver sender="sensor" owner="sensor" title="CALLSENSOR"/></transition>
<state id="886_0" atomicpropositions="isCooling," >
	<rebec name="room">
		<statevariables>
			<variable name="Room.currentTemp" type="int">22</variable>
			<variable name="Room.currentRegulation" type="int">-1</variable>
			<variable name="Room.outside_air" type="int">1</variable>
		</statevariables>
		<queue>
			<message arrival="22" deadline="infinity" sender="sensor">getTemp()</message>
			<message arrival="30" deadline="infinity" sender="room">updateStatus()</message>
		</queue>
		<now>22</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="controller">
		<statevariables>
			<variable name="Controller.currentTemp" type="int">24</variable>
			<variable name="Controller.isHeating" type="boolean">false</variable>
			<variable name="Controller.isCooling" type="boolean">true</variable>
		</statevariables>
		<queue>
		</queue>
		<now>22</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="sensor">
		<statevariables>
		</statevariables>
		<queue>
			<message arrival="24" deadline="infinity" sender="sensor">callSensor()</message>
		</queue>
		<now>22</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="hc_unit">
		<statevariables>
			<variable name="HC_Unit.heaterOn" type="boolean">false</variable>
			<variable name="HC_Unit.coolerOn" type="boolean">true</variable>
			<variable name="HC_Unit.currentRegulation" type="int">-1</variable>
		</statevariables>
		<queue>
			<message arrival="25" deadline="infinity" sender="hc_unit">regulateTemp()</message>
		</queue>
		<now>22</now>
		<pc></pc>
		<res></res>
	</rebec>
</state>
<transition source="833_0" destination="886_0" executionTime="22" shift="0"> <messageserver sender="sensor" owner="sensor" title="CALLSENSOR"/></transition>
<state id="887_0" atomicpropositions="" >
	<rebec name="room">
		<statevariables>
			<variable name="Room.currentTemp" type="int">22</variable>
			<variable name="Room.currentRegulation" type="int">-1</variable>
			<variable name="Room.outside_air" type="int">1</variable>
		</statevariables>
		<queue>
			<message arrival="22" deadline="infinity" sender="sensor">getTemp()</message>
			<message arrival="30" deadline="infinity" sender="room">updateStatus()</message>
		</queue>
		<now>22</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="controller">
		<statevariables>
			<variable name="Controller.currentTemp" type="int">22</variable>
			<variable name="Controller.isHeating" type="boolean">false</variable>
			<variable name="Controller.isCooling" type="boolean">false</variable>
		</statevariables>
		<queue>
		</queue>
		<now>22</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="sensor">
		<statevariables>
		</statevariables>
		<queue>
			<message arrival="24" deadline="infinity" sender="sensor">callSensor()</message>
		</queue>
		<now>22</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="hc_unit">
		<statevariables>
			<variable name="HC_Unit.heaterOn" type="boolean">false</variable>
			<variable name="HC_Unit.coolerOn" type="boolean">false</variable>
			<variable name="HC_Unit.currentRegulation" type="int">0</variable>
		</statevariables>
		<queue>
			<message arrival="25" deadline="infinity" sender="hc_unit">regulateTemp()</message>
		</queue>
		<now>22</now>
		<pc></pc>
		<res></res>
	</rebec>
</state>
<transition source="839_0" destination="887_0" executionTime="22" shift="0"> <messageserver sender="sensor" owner="sensor" title="CALLSENSOR"/></transition>
<state id="888_0" atomicpropositions="isHeating," >
	<rebec name="room">
		<statevariables>
			<variable name="Room.currentTemp" type="int">21</variable>
			<variable name="Room.currentRegulation" type="int">1</variable>
			<variable name="Room.outside_air" type="int">0</variable>
		</statevariables>
		<queue>
			<message arrival="30" deadline="infinity" sender="room">updateStatus()</message>
		</queue>
		<now>22</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="controller">
		<statevariables>
			<variable name="Controller.currentTemp" type="int">20</variable>
			<variable name="Controller.isHeating" type="boolean">true</variable>
			<variable name="Controller.isCooling" type="boolean">false</variable>
		</statevariables>
		<queue>
		</queue>
		<now>22</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="sensor">
		<statevariables>
		</statevariables>
		<queue>
			<message arrival="22" deadline="infinity" sender="room">setCurrent(21)</message>
			<message arrival="24" deadline="infinity" sender="sensor">callSensor()</message>
		</queue>
		<now>22</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="hc_unit">
		<statevariables>
			<variable name="HC_Unit.heaterOn" type="boolean">true</variable>
			<variable name="HC_Unit.coolerOn" type="boolean">false</variable>
			<variable name="HC_Unit.currentRegulation" type="int">1</variable>
		</statevariables>
		<queue>
			<message arrival="25" deadline="infinity" sender="hc_unit">regulateTemp()</message>
		</queue>
		<now>22</now>
		<pc></pc>
		<res></res>
	</rebec>
</state>
<transition source="884_0" destination="888_0" executionTime="22" shift="0"> <messageserver sender="sensor" owner="room" title="GETTEMP"/></transition>
<state id="889_0" atomicpropositions="" >
	<rebec name="room">
		<statevariables>
			<variable name="Room.currentTemp" type="int">23</variable>
			<variable name="Room.currentRegulation" type="int">-1</variable>
			<variable name="Room.outside_air" type="int">0</variable>
		</statevariables>
		<queue>
			<message arrival="30" deadline="infinity" sender="room">updateStatus()</message>
		</queue>
		<now>22</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="controller">
		<statevariables>
			<variable name="Controller.currentTemp" type="int">23</variable>
			<variable name="Controller.isHeating" type="boolean">false</variable>
			<variable name="Controller.isCooling" type="boolean">false</variable>
		</statevariables>
		<queue>
		</queue>
		<now>22</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="sensor">
		<statevariables>
		</statevariables>
		<queue>
			<message arrival="22" deadline="infinity" sender="room">setCurrent(23)</message>
			<message arrival="24" deadline="infinity" sender="sensor">callSensor()</message>
		</queue>
		<now>22</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="hc_unit">
		<statevariables>
			<variable name="HC_Unit.heaterOn" type="boolean">false</variable>
			<variable name="HC_Unit.coolerOn" type="boolean">false</variable>
			<variable name="HC_Unit.currentRegulation" type="int">0</variable>
		</statevariables>
		<queue>
			<message arrival="25" deadline="infinity" sender="hc_unit">regulateTemp()</message>
		</queue>
		<now>22</now>
		<pc></pc>
		<res></res>
	</rebec>
</state>
<transition source="885_0" destination="889_0" executionTime="22" shift="0"> <messageserver sender="sensor" owner="room" title="GETTEMP"/></transition>
<state id="890_0" atomicpropositions="isCooling," >
	<rebec name="room">
		<statevariables>
			<variable name="Room.currentTemp" type="int">22</variable>
			<variable name="Room.currentRegulation" type="int">-1</variable>
			<variable name="Room.outside_air" type="int">1</variable>
		</statevariables>
		<queue>
			<message arrival="30" deadline="infinity" sender="room">updateStatus()</message>
		</queue>
		<now>22</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="controller">
		<statevariables>
			<variable name="Controller.currentTemp" type="int">24</variable>
			<variable name="Controller.isHeating" type="boolean">false</variable>
			<variable name="Controller.isCooling" type="boolean">true</variable>
		</statevariables>
		<queue>
		</queue>
		<now>22</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="sensor">
		<statevariables>
		</statevariables>
		<queue>
			<message arrival="22" deadline="infinity" sender="room">setCurrent(22)</message>
			<message arrival="24" deadline="infinity" sender="sensor">callSensor()</message>
		</queue>
		<now>22</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="hc_unit">
		<statevariables>
			<variable name="HC_Unit.heaterOn" type="boolean">false</variable>
			<variable name="HC_Unit.coolerOn" type="boolean">true</variable>
			<variable name="HC_Unit.currentRegulation" type="int">-1</variable>
		</statevariables>
		<queue>
			<message arrival="25" deadline="infinity" sender="hc_unit">regulateTemp()</message>
		</queue>
		<now>22</now>
		<pc></pc>
		<res></res>
	</rebec>
</state>
<transition source="886_0" destination="890_0" executionTime="22" shift="0"> <messageserver sender="sensor" owner="room" title="GETTEMP"/></transition>
<state id="891_0" atomicpropositions="" >
	<rebec name="room">
		<statevariables>
			<variable name="Room.currentTemp" type="int">22</variable>
			<variable name="Room.currentRegulation" type="int">-1</variable>
			<variable name="Room.outside_air" type="int">1</variable>
		</statevariables>
		<queue>
			<message arrival="30" deadline="infinity" sender="room">updateStatus()</message>
		</queue>
		<now>22</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="controller">
		<statevariables>
			<variable name="Controller.currentTemp" type="int">22</variable>
			<variable name="Controller.isHeating" type="boolean">false</variable>
			<variable name="Controller.isCooling" type="boolean">false</variable>
		</statevariables>
		<queue>
		</queue>
		<now>22</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="sensor">
		<statevariables>
		</statevariables>
		<queue>
			<message arrival="22" deadline="infinity" sender="room">setCurrent(22)</message>
			<message arrival="24" deadline="infinity" sender="sensor">callSensor()</message>
		</queue>
		<now>22</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="hc_unit">
		<statevariables>
			<variable name="HC_Unit.heaterOn" type="boolean">false</variable>
			<variable name="HC_Unit.coolerOn" type="boolean">false</variable>
			<variable name="HC_Unit.currentRegulation" type="int">0</variable>
		</statevariables>
		<queue>
			<message arrival="25" deadline="infinity" sender="hc_unit">regulateTemp()</message>
		</queue>
		<now>22</now>
		<pc></pc>
		<res></res>
	</rebec>
</state>
<transition source="887_0" destination="891_0" executionTime="22" shift="0"> <messageserver sender="sensor" owner="room" title="GETTEMP"/></transition>
<state id="892_0" atomicpropositions="isHeating," >
	<rebec name="room">
		<statevariables>
			<variable name="Room.currentTemp" type="int">21</variable>
			<variable name="Room.currentRegulation" type="int">1</variable>
			<variable name="Room.outside_air" type="int">0</variable>
		</statevariables>
		<queue>
			<message arrival="30" deadline="infinity" sender="room">updateStatus()</message>
		</queue>
		<now>22</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="controller">
		<statevariables>
			<variable name="Controller.currentTemp" type="int">20</variable>
			<variable name="Controller.isHeating" type="boolean">true</variable>
			<variable name="Controller.isCooling" type="boolean">false</variable>
		</statevariables>
		<queue>
			<message arrival="22" deadline="infinity" sender="sensor">setCurrent(21)</message>
		</queue>
		<now>22</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="sensor">
		<statevariables>
		</statevariables>
		<queue>
			<message arrival="24" deadline="infinity" sender="sensor">callSensor()</message>
		</queue>
		<now>22</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="hc_unit">
		<statevariables>
			<variable name="HC_Unit.heaterOn" type="boolean">true</variable>
			<variable name="HC_Unit.coolerOn" type="boolean">false</variable>
			<variable name="HC_Unit.currentRegulation" type="int">1</variable>
		</statevariables>
		<queue>
			<message arrival="25" deadline="infinity" sender="hc_unit">regulateTemp()</message>
		</queue>
		<now>22</now>
		<pc></pc>
		<res></res>
	</rebec>
</state>
<transition source="888_0" destination="892_0" executionTime="22" shift="0"> <messageserver sender="room" owner="sensor" title="SETCURRENT"/></transition>
<state id="893_0" atomicpropositions="" >
	<rebec name="room">
		<statevariables>
			<variable name="Room.currentTemp" type="int">23</variable>
			<variable name="Room.currentRegulation" type="int">-1</variable>
			<variable name="Room.outside_air" type="int">0</variable>
		</statevariables>
		<queue>
			<message arrival="30" deadline="infinity" sender="room">updateStatus()</message>
		</queue>
		<now>22</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="controller">
		<statevariables>
			<variable name="Controller.currentTemp" type="int">23</variable>
			<variable name="Controller.isHeating" type="boolean">false</variable>
			<variable name="Controller.isCooling" type="boolean">false</variable>
		</statevariables>
		<queue>
			<message arrival="22" deadline="infinity" sender="sensor">setCurrent(23)</message>
		</queue>
		<now>22</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="sensor">
		<statevariables>
		</statevariables>
		<queue>
			<message arrival="24" deadline="infinity" sender="sensor">callSensor()</message>
		</queue>
		<now>22</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="hc_unit">
		<statevariables>
			<variable name="HC_Unit.heaterOn" type="boolean">false</variable>
			<variable name="HC_Unit.coolerOn" type="boolean">false</variable>
			<variable name="HC_Unit.currentRegulation" type="int">0</variable>
		</statevariables>
		<queue>
			<message arrival="25" deadline="infinity" sender="hc_unit">regulateTemp()</message>
		</queue>
		<now>22</now>
		<pc></pc>
		<res></res>
	</rebec>
</state>
<transition source="889_0" destination="893_0" executionTime="22" shift="0"> <messageserver sender="room" owner="sensor" title="SETCURRENT"/></transition>
<state id="894_0" atomicpropositions="isCooling," >
	<rebec name="room">
		<statevariables>
			<variable name="Room.currentTemp" type="int">22</variable>
			<variable name="Room.currentRegulation" type="int">-1</variable>
			<variable name="Room.outside_air" type="int">1</variable>
		</statevariables>
		<queue>
			<message arrival="30" deadline="infinity" sender="room">updateStatus()</message>
		</queue>
		<now>22</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="controller">
		<statevariables>
			<variable name="Controller.currentTemp" type="int">24</variable>
			<variable name="Controller.isHeating" type="boolean">false</variable>
			<variable name="Controller.isCooling" type="boolean">true</variable>
		</statevariables>
		<queue>
			<message arrival="22" deadline="infinity" sender="sensor">setCurrent(22)</message>
		</queue>
		<now>22</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="sensor">
		<statevariables>
		</statevariables>
		<queue>
			<message arrival="24" deadline="infinity" sender="sensor">callSensor()</message>
		</queue>
		<now>22</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="hc_unit">
		<statevariables>
			<variable name="HC_Unit.heaterOn" type="boolean">false</variable>
			<variable name="HC_Unit.coolerOn" type="boolean">true</variable>
			<variable name="HC_Unit.currentRegulation" type="int">-1</variable>
		</statevariables>
		<queue>
			<message arrival="25" deadline="infinity" sender="hc_unit">regulateTemp()</message>
		</queue>
		<now>22</now>
		<pc></pc>
		<res></res>
	</rebec>
</state>
<transition source="890_0" destination="894_0" executionTime="22" shift="0"> <messageserver sender="room" owner="sensor" title="SETCURRENT"/></transition>
<state id="895_0" atomicpropositions="" >
	<rebec name="room">
		<statevariables>
			<variable name="Room.currentTemp" type="int">22</variable>
			<variable name="Room.currentRegulation" type="int">-1</variable>
			<variable name="Room.outside_air" type="int">1</variable>
		</statevariables>
		<queue>
			<message arrival="30" deadline="infinity" sender="room">updateStatus()</message>
		</queue>
		<now>22</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="controller">
		<statevariables>
			<variable name="Controller.currentTemp" type="int">22</variable>
			<variable name="Controller.isHeating" type="boolean">false</variable>
			<variable name="Controller.isCooling" type="boolean">false</variable>
		</statevariables>
		<queue>
			<message arrival="22" deadline="infinity" sender="sensor">setCurrent(22)</message>
		</queue>
		<now>22</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="sensor">
		<statevariables>
		</statevariables>
		<queue>
			<message arrival="24" deadline="infinity" sender="sensor">callSensor()</message>
		</queue>
		<now>22</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="hc_unit">
		<statevariables>
			<variable name="HC_Unit.heaterOn" type="boolean">false</variable>
			<variable name="HC_Unit.coolerOn" type="boolean">false</variable>
			<variable name="HC_Unit.currentRegulation" type="int">0</variable>
		</statevariables>
		<queue>
			<message arrival="25" deadline="infinity" sender="hc_unit">regulateTemp()</message>
		</queue>
		<now>22</now>
		<pc></pc>
		<res></res>
	</rebec>
</state>
<transition source="891_0" destination="895_0" executionTime="22" shift="0"> <messageserver sender="room" owner="sensor" title="SETCURRENT"/></transition>
<state id="896_0" atomicpropositions="isHeating," >
	<rebec name="room">
		<statevariables>
			<variable name="Room.currentTemp" type="int">21</variable>
			<variable name="Room.currentRegulation" type="int">1</variable>
			<variable name="Room.outside_air" type="int">0</variable>
		</statevariables>
		<queue>
			<message arrival="30" deadline="infinity" sender="room">updateStatus()</message>
		</queue>
		<now>22</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="controller">
		<statevariables>
			<variable name="Controller.currentTemp" type="int">21</variable>
			<variable name="Controller.isHeating" type="boolean">true</variable>
			<variable name="Controller.isCooling" type="boolean">false</variable>
		</statevariables>
		<queue>
			<message arrival="22" deadline="infinity" sender="controller">updateOutput()</message>
		</queue>
		<now>22</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="sensor">
		<statevariables>
		</statevariables>
		<queue>
			<message arrival="24" deadline="infinity" sender="sensor">callSensor()</message>
		</queue>
		<now>22</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="hc_unit">
		<statevariables>
			<variable name="HC_Unit.heaterOn" type="boolean">true</variable>
			<variable name="HC_Unit.coolerOn" type="boolean">false</variable>
			<variable name="HC_Unit.currentRegulation" type="int">1</variable>
		</statevariables>
		<queue>
			<message arrival="25" deadline="infinity" sender="hc_unit">regulateTemp()</message>
		</queue>
		<now>22</now>
		<pc></pc>
		<res></res>
	</rebec>
</state>
<transition source="892_0" destination="896_0" executionTime="22" shift="0"> <messageserver sender="sensor" owner="controller" title="SETCURRENT"/></transition>
<state id="897_0" atomicpropositions="" >
	<rebec name="room">
		<statevariables>
			<variable name="Room.currentTemp" type="int">23</variable>
			<variable name="Room.currentRegulation" type="int">-1</variable>
			<variable name="Room.outside_air" type="int">0</variable>
		</statevariables>
		<queue>
			<message arrival="30" deadline="infinity" sender="room">updateStatus()</message>
		</queue>
		<now>22</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="controller">
		<statevariables>
			<variable name="Controller.currentTemp" type="int">23</variable>
			<variable name="Controller.isHeating" type="boolean">false</variable>
			<variable name="Controller.isCooling" type="boolean">false</variable>
		</statevariables>
		<queue>
			<message arrival="22" deadline="infinity" sender="controller">updateOutput()</message>
		</queue>
		<now>22</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="sensor">
		<statevariables>
		</statevariables>
		<queue>
			<message arrival="24" deadline="infinity" sender="sensor">callSensor()</message>
		</queue>
		<now>22</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="hc_unit">
		<statevariables>
			<variable name="HC_Unit.heaterOn" type="boolean">false</variable>
			<variable name="HC_Unit.coolerOn" type="boolean">false</variable>
			<variable name="HC_Unit.currentRegulation" type="int">0</variable>
		</statevariables>
		<queue>
			<message arrival="25" deadline="infinity" sender="hc_unit">regulateTemp()</message>
		</queue>
		<now>22</now>
		<pc></pc>
		<res></res>
	</rebec>
</state>
<transition source="893_0" destination="897_0" executionTime="22" shift="0"> <messageserver sender="sensor" owner="controller" title="SETCURRENT"/></transition>
<state id="898_0" atomicpropositions="isCooling," >
	<rebec name="room">
		<statevariables>
			<variable name="Room.currentTemp" type="int">22</variable>
			<variable name="Room.currentRegulation" type="int">-1</variable>
			<variable name="Room.outside_air" type="int">1</variable>
		</statevariables>
		<queue>
			<message arrival="30" deadline="infinity" sender="room">updateStatus()</message>
		</queue>
		<now>22</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="controller">
		<statevariables>
			<variable name="Controller.currentTemp" type="int">22</variable>
			<variable name="Controller.isHeating" type="boolean">false</variable>
			<variable name="Controller.isCooling" type="boolean">true</variable>
		</statevariables>
		<queue>
			<message arrival="22" deadline="infinity" sender="controller">updateOutput()</message>
		</queue>
		<now>22</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="sensor">
		<statevariables>
		</statevariables>
		<queue>
			<message arrival="24" deadline="infinity" sender="sensor">callSensor()</message>
		</queue>
		<now>22</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="hc_unit">
		<statevariables>
			<variable name="HC_Unit.heaterOn" type="boolean">false</variable>
			<variable name="HC_Unit.coolerOn" type="boolean">true</variable>
			<variable name="HC_Unit.currentRegulation" type="int">-1</variable>
		</statevariables>
		<queue>
			<message arrival="25" deadline="infinity" sender="hc_unit">regulateTemp()</message>
		</queue>
		<now>22</now>
		<pc></pc>
		<res></res>
	</rebec>
</state>
<transition source="894_0" destination="898_0" executionTime="22" shift="0"> <messageserver sender="sensor" owner="controller" title="SETCURRENT"/></transition>
<state id="899_0" atomicpropositions="" >
	<rebec name="room">
		<statevariables>
			<variable name="Room.currentTemp" type="int">22</variable>
			<variable name="Room.currentRegulation" type="int">-1</variable>
			<variable name="Room.outside_air" type="int">1</variable>
		</statevariables>
		<queue>
			<message arrival="30" deadline="infinity" sender="room">updateStatus()</message>
		</queue>
		<now>22</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="controller">
		<statevariables>
			<variable name="Controller.currentTemp" type="int">22</variable>
			<variable name="Controller.isHeating" type="boolean">false</variable>
			<variable name="Controller.isCooling" type="boolean">false</variable>
		</statevariables>
		<queue>
			<message arrival="22" deadline="infinity" sender="controller">updateOutput()</message>
		</queue>
		<now>22</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="sensor">
		<statevariables>
		</statevariables>
		<queue>
			<message arrival="24" deadline="infinity" sender="sensor">callSensor()</message>
		</queue>
		<now>22</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="hc_unit">
		<statevariables>
			<variable name="HC_Unit.heaterOn" type="boolean">false</variable>
			<variable name="HC_Unit.coolerOn" type="boolean">false</variable>
			<variable name="HC_Unit.currentRegulation" type="int">0</variable>
		</statevariables>
		<queue>
			<message arrival="25" deadline="infinity" sender="hc_unit">regulateTemp()</message>
		</queue>
		<now>22</now>
		<pc></pc>
		<res></res>
	</rebec>
</state>
<transition source="895_0" destination="899_0" executionTime="22" shift="0"> <messageserver sender="sensor" owner="controller" title="SETCURRENT"/></transition>
<state id="900_0" atomicpropositions="isHeating," >
	<rebec name="room">
		<statevariables>
			<variable name="Room.currentTemp" type="int">21</variable>
			<variable name="Room.currentRegulation" type="int">1</variable>
			<variable name="Room.outside_air" type="int">0</variable>
		</statevariables>
		<queue>
			<message arrival="30" deadline="infinity" sender="room">updateStatus()</message>
		</queue>
		<now>22</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="controller">
		<statevariables>
			<variable name="Controller.currentTemp" type="int">21</variable>
			<variable name="Controller.isHeating" type="boolean">false</variable>
			<variable name="Controller.isCooling" type="boolean">false</variable>
		</statevariables>
		<queue>
		</queue>
		<now>22</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="sensor">
		<statevariables>
		</statevariables>
		<queue>
			<message arrival="24" deadline="infinity" sender="sensor">callSensor()</message>
		</queue>
		<now>22</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="hc_unit">
		<statevariables>
			<variable name="HC_Unit.heaterOn" type="boolean">true</variable>
			<variable name="HC_Unit.coolerOn" type="boolean">false</variable>
			<variable name="HC_Unit.currentRegulation" type="int">1</variable>
		</statevariables>
		<queue>
			<message arrival="22" deadline="infinity" sender="controller">switchoff()</message>
			<message arrival="25" deadline="infinity" sender="hc_unit">regulateTemp()</message>
		</queue>
		<now>22</now>
		<pc></pc>
		<res></res>
	</rebec>
</state>
<transition source="896_0" destination="900_0" executionTime="22" shift="0"> <messageserver sender="controller" owner="controller" title="UPDATEOUTPUT"/></transition>
<state id="901_0" atomicpropositions="" >
	<rebec name="room">
		<statevariables>
			<variable name="Room.currentTemp" type="int">23</variable>
			<variable name="Room.currentRegulation" type="int">-1</variable>
			<variable name="Room.outside_air" type="int">0</variable>
		</statevariables>
		<queue>
			<message arrival="30" deadline="infinity" sender="room">updateStatus()</message>
		</queue>
		<now>22</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="controller">
		<statevariables>
			<variable name="Controller.currentTemp" type="int">23</variable>
			<variable name="Controller.isHeating" type="boolean">false</variable>
			<variable name="Controller.isCooling" type="boolean">false</variable>
		</statevariables>
		<queue>
		</queue>
		<now>22</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="sensor">
		<statevariables>
		</statevariables>
		<queue>
			<message arrival="24" deadline="infinity" sender="sensor">callSensor()</message>
		</queue>
		<now>22</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="hc_unit">
		<statevariables>
			<variable name="HC_Unit.heaterOn" type="boolean">false</variable>
			<variable name="HC_Unit.coolerOn" type="boolean">false</variable>
			<variable name="HC_Unit.currentRegulation" type="int">0</variable>
		</statevariables>
		<queue>
			<message arrival="25" deadline="infinity" sender="hc_unit">regulateTemp()</message>
		</queue>
		<now>22</now>
		<pc></pc>
		<res></res>
	</rebec>
</state>
<state id="902_0" atomicpropositions="" >
	<rebec name="room">
		<statevariables>
			<variable name="Room.currentTemp" type="int">23</variable>
			<variable name="Room.currentRegulation" type="int">-1</variable>
			<variable name="Room.outside_air" type="int">0</variable>
		</statevariables>
		<queue>
			<message arrival="30" deadline="infinity" sender="room">updateStatus()</message>
		</queue>
		<now>24</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="controller">
		<statevariables>
			<variable name="Controller.currentTemp" type="int">23</variable>
			<variable name="Controller.isHeating" type="boolean">false</variable>
			<variable name="Controller.isCooling" type="boolean">false</variable>
		</statevariables>
		<queue>
		</queue>
		<now>24</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="sensor">
		<statevariables>
		</statevariables>
		<queue>
			<message arrival="24" deadline="infinity" sender="sensor">callSensor()</message>
		</queue>
		<now>24</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="hc_unit">
		<statevariables>
			<variable name="HC_Unit.heaterOn" type="boolean">false</variable>
			<variable name="HC_Unit.coolerOn" type="boolean">false</variable>
			<variable name="HC_Unit.currentRegulation" type="int">0</variable>
		</statevariables>
		<queue>
			<message arrival="25" deadline="infinity" sender="hc_unit">regulateTemp()</message>
		</queue>
		<now>24</now>
		<pc></pc>
		<res></res>
	</rebec>
</state>
<transition source="901_0" destination="902_0" executionTime="22" shift="0"> <time value="2"/></transition>
<transition source="897_0" destination="901_0" executionTime="22" shift="0"> <messageserver sender="controller" owner="controller" title="UPDATEOUTPUT"/></transition>
<state id="903_0" atomicpropositions="isCooling," >
	<rebec name="room">
		<statevariables>
			<variable name="Room.currentTemp" type="int">22</variable>
			<variable name="Room.currentRegulation" type="int">-1</variable>
			<variable name="Room.outside_air" type="int">1</variable>
		</statevariables>
		<queue>
			<message arrival="30" deadline="infinity" sender="room">updateStatus()</message>
		</queue>
		<now>22</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="controller">
		<statevariables>
			<variable name="Controller.currentTemp" type="int">22</variable>
			<variable name="Controller.isHeating" type="boolean">false</variable>
			<variable name="Controller.isCooling" type="boolean">false</variable>
		</statevariables>
		<queue>
		</queue>
		<now>22</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="sensor">
		<statevariables>
		</statevariables>
		<queue>
			<message arrival="24" deadline="infinity" sender="sensor">callSensor()</message>
		</queue>
		<now>22</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="hc_unit">
		<statevariables>
			<variable name="HC_Unit.heaterOn" type="boolean">false</variable>
			<variable name="HC_Unit.coolerOn" type="boolean">true</variable>
			<variable name="HC_Unit.currentRegulation" type="int">-1</variable>
		</statevariables>
		<queue>
			<message arrival="22" deadline="infinity" sender="controller">switchoff()</message>
			<message arrival="25" deadline="infinity" sender="hc_unit">regulateTemp()</message>
		</queue>
		<now>22</now>
		<pc></pc>
		<res></res>
	</rebec>
</state>
<transition source="898_0" destination="903_0" executionTime="22" shift="0"> <messageserver sender="controller" owner="controller" title="UPDATEOUTPUT"/></transition>
<state id="904_0" atomicpropositions="" >
	<rebec name="room">
		<statevariables>
			<variable name="Room.currentTemp" type="int">22</variable>
			<variable name="Room.currentRegulation" type="int">-1</variable>
			<variable name="Room.outside_air" type="int">1</variable>
		</statevariables>
		<queue>
			<message arrival="30" deadline="infinity" sender="room">updateStatus()</message>
		</queue>
		<now>22</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="controller">
		<statevariables>
			<variable name="Controller.currentTemp" type="int">22</variable>
			<variable name="Controller.isHeating" type="boolean">false</variable>
			<variable name="Controller.isCooling" type="boolean">false</variable>
		</statevariables>
		<queue>
		</queue>
		<now>22</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="sensor">
		<statevariables>
		</statevariables>
		<queue>
			<message arrival="24" deadline="infinity" sender="sensor">callSensor()</message>
		</queue>
		<now>22</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="hc_unit">
		<statevariables>
			<variable name="HC_Unit.heaterOn" type="boolean">false</variable>
			<variable name="HC_Unit.coolerOn" type="boolean">false</variable>
			<variable name="HC_Unit.currentRegulation" type="int">0</variable>
		</statevariables>
		<queue>
			<message arrival="25" deadline="infinity" sender="hc_unit">regulateTemp()</message>
		</queue>
		<now>22</now>
		<pc></pc>
		<res></res>
	</rebec>
</state>
<state id="905_0" atomicpropositions="" >
	<rebec name="room">
		<statevariables>
			<variable name="Room.currentTemp" type="int">22</variable>
			<variable name="Room.currentRegulation" type="int">-1</variable>
			<variable name="Room.outside_air" type="int">1</variable>
		</statevariables>
		<queue>
			<message arrival="30" deadline="infinity" sender="room">updateStatus()</message>
		</queue>
		<now>24</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="controller">
		<statevariables>
			<variable name="Controller.currentTemp" type="int">22</variable>
			<variable name="Controller.isHeating" type="boolean">false</variable>
			<variable name="Controller.isCooling" type="boolean">false</variable>
		</statevariables>
		<queue>
		</queue>
		<now>24</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="sensor">
		<statevariables>
		</statevariables>
		<queue>
			<message arrival="24" deadline="infinity" sender="sensor">callSensor()</message>
		</queue>
		<now>24</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="hc_unit">
		<statevariables>
			<variable name="HC_Unit.heaterOn" type="boolean">false</variable>
			<variable name="HC_Unit.coolerOn" type="boolean">false</variable>
			<variable name="HC_Unit.currentRegulation" type="int">0</variable>
		</statevariables>
		<queue>
			<message arrival="25" deadline="infinity" sender="hc_unit">regulateTemp()</message>
		</queue>
		<now>24</now>
		<pc></pc>
		<res></res>
	</rebec>
</state>
<transition source="904_0" destination="905_0" executionTime="22" shift="0"> <time value="2"/></transition>
<transition source="899_0" destination="904_0" executionTime="22" shift="0"> <messageserver sender="controller" owner="controller" title="UPDATEOUTPUT"/></transition>
<state id="906_0" atomicpropositions="" >
	<rebec name="room">
		<statevariables>
			<variable name="Room.currentTemp" type="int">21</variable>
			<variable name="Room.currentRegulation" type="int">1</variable>
			<variable name="Room.outside_air" type="int">0</variable>
		</statevariables>
		<queue>
			<message arrival="30" deadline="infinity" sender="room">updateStatus()</message>
		</queue>
		<now>22</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="controller">
		<statevariables>
			<variable name="Controller.currentTemp" type="int">21</variable>
			<variable name="Controller.isHeating" type="boolean">false</variable>
			<variable name="Controller.isCooling" type="boolean">false</variable>
		</statevariables>
		<queue>
		</queue>
		<now>22</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="sensor">
		<statevariables>
		</statevariables>
		<queue>
			<message arrival="24" deadline="infinity" sender="sensor">callSensor()</message>
		</queue>
		<now>22</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="hc_unit">
		<statevariables>
			<variable name="HC_Unit.heaterOn" type="boolean">false</variable>
			<variable name="HC_Unit.coolerOn" type="boolean">false</variable>
			<variable name="HC_Unit.currentRegulation" type="int">0</variable>
		</statevariables>
		<queue>
			<message arrival="25" deadline="infinity" sender="hc_unit">regulateTemp()</message>
		</queue>
		<now>22</now>
		<pc></pc>
		<res></res>
	</rebec>
</state>
<state id="907_0" atomicpropositions="" >
	<rebec name="room">
		<statevariables>
			<variable name="Room.currentTemp" type="int">21</variable>
			<variable name="Room.currentRegulation" type="int">1</variable>
			<variable name="Room.outside_air" type="int">0</variable>
		</statevariables>
		<queue>
			<message arrival="30" deadline="infinity" sender="room">updateStatus()</message>
		</queue>
		<now>24</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="controller">
		<statevariables>
			<variable name="Controller.currentTemp" type="int">21</variable>
			<variable name="Controller.isHeating" type="boolean">false</variable>
			<variable name="Controller.isCooling" type="boolean">false</variable>
		</statevariables>
		<queue>
		</queue>
		<now>24</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="sensor">
		<statevariables>
		</statevariables>
		<queue>
			<message arrival="24" deadline="infinity" sender="sensor">callSensor()</message>
		</queue>
		<now>24</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="hc_unit">
		<statevariables>
			<variable name="HC_Unit.heaterOn" type="boolean">false</variable>
			<variable name="HC_Unit.coolerOn" type="boolean">false</variable>
			<variable name="HC_Unit.currentRegulation" type="int">0</variable>
		</statevariables>
		<queue>
			<message arrival="25" deadline="infinity" sender="hc_unit">regulateTemp()</message>
		</queue>
		<now>24</now>
		<pc></pc>
		<res></res>
	</rebec>
</state>
<transition source="906_0" destination="907_0" executionTime="22" shift="0"> <time value="2"/></transition>
<transition source="900_0" destination="906_0" executionTime="22" shift="0"> <messageserver sender="controller" owner="hc_unit" title="SWITCHOFF"/></transition>
<state id="908_0" atomicpropositions="" >
	<rebec name="room">
		<statevariables>
			<variable name="Room.currentTemp" type="int">21</variable>
			<variable name="Room.currentRegulation" type="int">1</variable>
			<variable name="Room.outside_air" type="int">0</variable>
		</statevariables>
		<queue>
			<message arrival="22" deadline="infinity" sender="sensor">getTemp()</message>
			<message arrival="30" deadline="infinity" sender="room">updateStatus()</message>
		</queue>
		<now>22</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="controller">
		<statevariables>
			<variable name="Controller.currentTemp" type="int">21</variable>
			<variable name="Controller.isHeating" type="boolean">false</variable>
			<variable name="Controller.isCooling" type="boolean">false</variable>
		</statevariables>
		<queue>
		</queue>
		<now>22</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="sensor">
		<statevariables>
		</statevariables>
		<queue>
			<message arrival="24" deadline="infinity" sender="sensor">callSensor()</message>
		</queue>
		<now>22</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="hc_unit">
		<statevariables>
			<variable name="HC_Unit.heaterOn" type="boolean">false</variable>
			<variable name="HC_Unit.coolerOn" type="boolean">false</variable>
			<variable name="HC_Unit.currentRegulation" type="int">0</variable>
		</statevariables>
		<queue>
			<message arrival="25" deadline="infinity" sender="hc_unit">regulateTemp()</message>
		</queue>
		<now>22</now>
		<pc></pc>
		<res></res>
	</rebec>
</state>
<transition source="703_0" destination="908_0" executionTime="22" shift="0"> <messageserver sender="sensor" owner="sensor" title="CALLSENSOR"/></transition>
<transition source="903_0" destination="904_0" executionTime="22" shift="0"> <messageserver sender="controller" owner="hc_unit" title="SWITCHOFF"/></transition>
<state id="909_0" atomicpropositions="" >
	<rebec name="room">
		<statevariables>
			<variable name="Room.currentTemp" type="int">22</variable>
			<variable name="Room.currentRegulation" type="int">1</variable>
			<variable name="Room.outside_air" type="int">-1</variable>
		</statevariables>
		<queue>
			<message arrival="22" deadline="infinity" sender="sensor">getTemp()</message>
			<message arrival="30" deadline="infinity" sender="room">updateStatus()</message>
		</queue>
		<now>22</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="controller">
		<statevariables>
			<variable name="Controller.currentTemp" type="int">22</variable>
			<variable name="Controller.isHeating" type="boolean">false</variable>
			<variable name="Controller.isCooling" type="boolean">false</variable>
		</statevariables>
		<queue>
		</queue>
		<now>22</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="sensor">
		<statevariables>
		</statevariables>
		<queue>
			<message arrival="24" deadline="infinity" sender="sensor">callSensor()</message>
		</queue>
		<now>22</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="hc_unit">
		<statevariables>
			<variable name="HC_Unit.heaterOn" type="boolean">false</variable>
			<variable name="HC_Unit.coolerOn" type="boolean">false</variable>
			<variable name="HC_Unit.currentRegulation" type="int">0</variable>
		</statevariables>
		<queue>
			<message arrival="25" deadline="infinity" sender="hc_unit">regulateTemp()</message>
		</queue>
		<now>22</now>
		<pc></pc>
		<res></res>
	</rebec>
</state>
<transition source="686_0" destination="909_0" executionTime="22" shift="0"> <messageserver sender="sensor" owner="sensor" title="CALLSENSOR"/></transition>
<state id="910_0" atomicpropositions="isHeating," >
	<rebec name="room">
		<statevariables>
			<variable name="Room.currentTemp" type="int">22</variable>
			<variable name="Room.currentRegulation" type="int">1</variable>
			<variable name="Room.outside_air" type="int">-1</variable>
		</statevariables>
		<queue>
			<message arrival="22" deadline="infinity" sender="sensor">getTemp()</message>
			<message arrival="30" deadline="infinity" sender="room">updateStatus()</message>
		</queue>
		<now>22</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="controller">
		<statevariables>
			<variable name="Controller.currentTemp" type="int">20</variable>
			<variable name="Controller.isHeating" type="boolean">true</variable>
			<variable name="Controller.isCooling" type="boolean">false</variable>
		</statevariables>
		<queue>
		</queue>
		<now>22</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="sensor">
		<statevariables>
		</statevariables>
		<queue>
			<message arrival="24" deadline="infinity" sender="sensor">callSensor()</message>
		</queue>
		<now>22</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="hc_unit">
		<statevariables>
			<variable name="HC_Unit.heaterOn" type="boolean">true</variable>
			<variable name="HC_Unit.coolerOn" type="boolean">false</variable>
			<variable name="HC_Unit.currentRegulation" type="int">1</variable>
		</statevariables>
		<queue>
			<message arrival="25" deadline="infinity" sender="hc_unit">regulateTemp()</message>
		</queue>
		<now>22</now>
		<pc></pc>
		<res></res>
	</rebec>
</state>
<transition source="684_0" destination="910_0" executionTime="22" shift="0"> <messageserver sender="sensor" owner="sensor" title="CALLSENSOR"/></transition>
<state id="911_0" atomicpropositions="" >
	<rebec name="room">
		<statevariables>
			<variable name="Room.currentTemp" type="int">22</variable>
			<variable name="Room.currentRegulation" type="int">1</variable>
			<variable name="Room.outside_air" type="int">-1</variable>
		</statevariables>
		<queue>
			<message arrival="30" deadline="infinity" sender="room">updateStatus()</message>
		</queue>
		<now>22</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="controller">
		<statevariables>
			<variable name="Controller.currentTemp" type="int">22</variable>
			<variable name="Controller.isHeating" type="boolean">false</variable>
			<variable name="Controller.isCooling" type="boolean">false</variable>
		</statevariables>
		<queue>
		</queue>
		<now>22</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="sensor">
		<statevariables>
		</statevariables>
		<queue>
			<message arrival="22" deadline="infinity" sender="room">setCurrent(22)</message>
			<message arrival="24" deadline="infinity" sender="sensor">callSensor()</message>
		</queue>
		<now>22</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="hc_unit">
		<statevariables>
			<variable name="HC_Unit.heaterOn" type="boolean">false</variable>
			<variable name="HC_Unit.coolerOn" type="boolean">false</variable>
			<variable name="HC_Unit.currentRegulation" type="int">0</variable>
		</statevariables>
		<queue>
			<message arrival="25" deadline="infinity" sender="hc_unit">regulateTemp()</message>
		</queue>
		<now>22</now>
		<pc></pc>
		<res></res>
	</rebec>
</state>
<transition source="909_0" destination="911_0" executionTime="22" shift="0"> <messageserver sender="sensor" owner="room" title="GETTEMP"/></transition>
<state id="912_0" atomicpropositions="isHeating," >
	<rebec name="room">
		<statevariables>
			<variable name="Room.currentTemp" type="int">22</variable>
			<variable name="Room.currentRegulation" type="int">1</variable>
			<variable name="Room.outside_air" type="int">-1</variable>
		</statevariables>
		<queue>
			<message arrival="30" deadline="infinity" sender="room">updateStatus()</message>
		</queue>
		<now>22</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="controller">
		<statevariables>
			<variable name="Controller.currentTemp" type="int">20</variable>
			<variable name="Controller.isHeating" type="boolean">true</variable>
			<variable name="Controller.isCooling" type="boolean">false</variable>
		</statevariables>
		<queue>
		</queue>
		<now>22</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="sensor">
		<statevariables>
		</statevariables>
		<queue>
			<message arrival="22" deadline="infinity" sender="room">setCurrent(22)</message>
			<message arrival="24" deadline="infinity" sender="sensor">callSensor()</message>
		</queue>
		<now>22</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="hc_unit">
		<statevariables>
			<variable name="HC_Unit.heaterOn" type="boolean">true</variable>
			<variable name="HC_Unit.coolerOn" type="boolean">false</variable>
			<variable name="HC_Unit.currentRegulation" type="int">1</variable>
		</statevariables>
		<queue>
			<message arrival="25" deadline="infinity" sender="hc_unit">regulateTemp()</message>
		</queue>
		<now>22</now>
		<pc></pc>
		<res></res>
	</rebec>
</state>
<transition source="910_0" destination="912_0" executionTime="22" shift="0"> <messageserver sender="sensor" owner="room" title="GETTEMP"/></transition>
<state id="913_0" atomicpropositions="" >
	<rebec name="room">
		<statevariables>
			<variable name="Room.currentTemp" type="int">22</variable>
			<variable name="Room.currentRegulation" type="int">1</variable>
			<variable name="Room.outside_air" type="int">-1</variable>
		</statevariables>
		<queue>
			<message arrival="30" deadline="infinity" sender="room">updateStatus()</message>
		</queue>
		<now>22</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="controller">
		<statevariables>
			<variable name="Controller.currentTemp" type="int">22</variable>
			<variable name="Controller.isHeating" type="boolean">false</variable>
			<variable name="Controller.isCooling" type="boolean">false</variable>
		</statevariables>
		<queue>
			<message arrival="22" deadline="infinity" sender="sensor">setCurrent(22)</message>
		</queue>
		<now>22</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="sensor">
		<statevariables>
		</statevariables>
		<queue>
			<message arrival="24" deadline="infinity" sender="sensor">callSensor()</message>
		</queue>
		<now>22</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="hc_unit">
		<statevariables>
			<variable name="HC_Unit.heaterOn" type="boolean">false</variable>
			<variable name="HC_Unit.coolerOn" type="boolean">false</variable>
			<variable name="HC_Unit.currentRegulation" type="int">0</variable>
		</statevariables>
		<queue>
			<message arrival="25" deadline="infinity" sender="hc_unit">regulateTemp()</message>
		</queue>
		<now>22</now>
		<pc></pc>
		<res></res>
	</rebec>
</state>
<transition source="911_0" destination="913_0" executionTime="22" shift="0"> <messageserver sender="room" owner="sensor" title="SETCURRENT"/></transition>
<state id="914_0" atomicpropositions="isHeating," >
	<rebec name="room">
		<statevariables>
			<variable name="Room.currentTemp" type="int">22</variable>
			<variable name="Room.currentRegulation" type="int">1</variable>
			<variable name="Room.outside_air" type="int">-1</variable>
		</statevariables>
		<queue>
			<message arrival="30" deadline="infinity" sender="room">updateStatus()</message>
		</queue>
		<now>22</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="controller">
		<statevariables>
			<variable name="Controller.currentTemp" type="int">20</variable>
			<variable name="Controller.isHeating" type="boolean">true</variable>
			<variable name="Controller.isCooling" type="boolean">false</variable>
		</statevariables>
		<queue>
			<message arrival="22" deadline="infinity" sender="sensor">setCurrent(22)</message>
		</queue>
		<now>22</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="sensor">
		<statevariables>
		</statevariables>
		<queue>
			<message arrival="24" deadline="infinity" sender="sensor">callSensor()</message>
		</queue>
		<now>22</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="hc_unit">
		<statevariables>
			<variable name="HC_Unit.heaterOn" type="boolean">true</variable>
			<variable name="HC_Unit.coolerOn" type="boolean">false</variable>
			<variable name="HC_Unit.currentRegulation" type="int">1</variable>
		</statevariables>
		<queue>
			<message arrival="25" deadline="infinity" sender="hc_unit">regulateTemp()</message>
		</queue>
		<now>22</now>
		<pc></pc>
		<res></res>
	</rebec>
</state>
<transition source="912_0" destination="914_0" executionTime="22" shift="0"> <messageserver sender="room" owner="sensor" title="SETCURRENT"/></transition>
<state id="915_0" atomicpropositions="" >
	<rebec name="room">
		<statevariables>
			<variable name="Room.currentTemp" type="int">22</variable>
			<variable name="Room.currentRegulation" type="int">1</variable>
			<variable name="Room.outside_air" type="int">-1</variable>
		</statevariables>
		<queue>
			<message arrival="30" deadline="infinity" sender="room">updateStatus()</message>
		</queue>
		<now>22</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="controller">
		<statevariables>
			<variable name="Controller.currentTemp" type="int">22</variable>
			<variable name="Controller.isHeating" type="boolean">false</variable>
			<variable name="Controller.isCooling" type="boolean">false</variable>
		</statevariables>
		<queue>
			<message arrival="22" deadline="infinity" sender="controller">updateOutput()</message>
		</queue>
		<now>22</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="sensor">
		<statevariables>
		</statevariables>
		<queue>
			<message arrival="24" deadline="infinity" sender="sensor">callSensor()</message>
		</queue>
		<now>22</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="hc_unit">
		<statevariables>
			<variable name="HC_Unit.heaterOn" type="boolean">false</variable>
			<variable name="HC_Unit.coolerOn" type="boolean">false</variable>
			<variable name="HC_Unit.currentRegulation" type="int">0</variable>
		</statevariables>
		<queue>
			<message arrival="25" deadline="infinity" sender="hc_unit">regulateTemp()</message>
		</queue>
		<now>22</now>
		<pc></pc>
		<res></res>
	</rebec>
</state>
<transition source="913_0" destination="915_0" executionTime="22" shift="0"> <messageserver sender="sensor" owner="controller" title="SETCURRENT"/></transition>
<state id="916_0" atomicpropositions="isHeating," >
	<rebec name="room">
		<statevariables>
			<variable name="Room.currentTemp" type="int">22</variable>
			<variable name="Room.currentRegulation" type="int">1</variable>
			<variable name="Room.outside_air" type="int">-1</variable>
		</statevariables>
		<queue>
			<message arrival="30" deadline="infinity" sender="room">updateStatus()</message>
		</queue>
		<now>22</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="controller">
		<statevariables>
			<variable name="Controller.currentTemp" type="int">22</variable>
			<variable name="Controller.isHeating" type="boolean">true</variable>
			<variable name="Controller.isCooling" type="boolean">false</variable>
		</statevariables>
		<queue>
			<message arrival="22" deadline="infinity" sender="controller">updateOutput()</message>
		</queue>
		<now>22</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="sensor">
		<statevariables>
		</statevariables>
		<queue>
			<message arrival="24" deadline="infinity" sender="sensor">callSensor()</message>
		</queue>
		<now>22</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="hc_unit">
		<statevariables>
			<variable name="HC_Unit.heaterOn" type="boolean">true</variable>
			<variable name="HC_Unit.coolerOn" type="boolean">false</variable>
			<variable name="HC_Unit.currentRegulation" type="int">1</variable>
		</statevariables>
		<queue>
			<message arrival="25" deadline="infinity" sender="hc_unit">regulateTemp()</message>
		</queue>
		<now>22</now>
		<pc></pc>
		<res></res>
	</rebec>
</state>
<transition source="914_0" destination="916_0" executionTime="22" shift="0"> <messageserver sender="sensor" owner="controller" title="SETCURRENT"/></transition>
<state id="917_0" atomicpropositions="" >
	<rebec name="room">
		<statevariables>
			<variable name="Room.currentTemp" type="int">22</variable>
			<variable name="Room.currentRegulation" type="int">1</variable>
			<variable name="Room.outside_air" type="int">-1</variable>
		</statevariables>
		<queue>
			<message arrival="30" deadline="infinity" sender="room">updateStatus()</message>
		</queue>
		<now>22</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="controller">
		<statevariables>
			<variable name="Controller.currentTemp" type="int">22</variable>
			<variable name="Controller.isHeating" type="boolean">false</variable>
			<variable name="Controller.isCooling" type="boolean">false</variable>
		</statevariables>
		<queue>
		</queue>
		<now>22</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="sensor">
		<statevariables>
		</statevariables>
		<queue>
			<message arrival="24" deadline="infinity" sender="sensor">callSensor()</message>
		</queue>
		<now>22</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="hc_unit">
		<statevariables>
			<variable name="HC_Unit.heaterOn" type="boolean">false</variable>
			<variable name="HC_Unit.coolerOn" type="boolean">false</variable>
			<variable name="HC_Unit.currentRegulation" type="int">0</variable>
		</statevariables>
		<queue>
			<message arrival="25" deadline="infinity" sender="hc_unit">regulateTemp()</message>
		</queue>
		<now>22</now>
		<pc></pc>
		<res></res>
	</rebec>
</state>
<state id="918_0" atomicpropositions="" >
	<rebec name="room">
		<statevariables>
			<variable name="Room.currentTemp" type="int">22</variable>
			<variable name="Room.currentRegulation" type="int">1</variable>
			<variable name="Room.outside_air" type="int">-1</variable>
		</statevariables>
		<queue>
			<message arrival="30" deadline="infinity" sender="room">updateStatus()</message>
		</queue>
		<now>24</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="controller">
		<statevariables>
			<variable name="Controller.currentTemp" type="int">22</variable>
			<variable name="Controller.isHeating" type="boolean">false</variable>
			<variable name="Controller.isCooling" type="boolean">false</variable>
		</statevariables>
		<queue>
		</queue>
		<now>24</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="sensor">
		<statevariables>
		</statevariables>
		<queue>
			<message arrival="24" deadline="infinity" sender="sensor">callSensor()</message>
		</queue>
		<now>24</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="hc_unit">
		<statevariables>
			<variable name="HC_Unit.heaterOn" type="boolean">false</variable>
			<variable name="HC_Unit.coolerOn" type="boolean">false</variable>
			<variable name="HC_Unit.currentRegulation" type="int">0</variable>
		</statevariables>
		<queue>
			<message arrival="25" deadline="infinity" sender="hc_unit">regulateTemp()</message>
		</queue>
		<now>24</now>
		<pc></pc>
		<res></res>
	</rebec>
</state>
<transition source="917_0" destination="918_0" executionTime="22" shift="0"> <time value="2"/></transition>
<transition source="915_0" destination="917_0" executionTime="22" shift="0"> <messageserver sender="controller" owner="controller" title="UPDATEOUTPUT"/></transition>
<state id="919_0" atomicpropositions="isHeating," >
	<rebec name="room">
		<statevariables>
			<variable name="Room.currentTemp" type="int">22</variable>
			<variable name="Room.currentRegulation" type="int">1</variable>
			<variable name="Room.outside_air" type="int">-1</variable>
		</statevariables>
		<queue>
			<message arrival="30" deadline="infinity" sender="room">updateStatus()</message>
		</queue>
		<now>22</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="controller">
		<statevariables>
			<variable name="Controller.currentTemp" type="int">22</variable>
			<variable name="Controller.isHeating" type="boolean">false</variable>
			<variable name="Controller.isCooling" type="boolean">false</variable>
		</statevariables>
		<queue>
		</queue>
		<now>22</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="sensor">
		<statevariables>
		</statevariables>
		<queue>
			<message arrival="24" deadline="infinity" sender="sensor">callSensor()</message>
		</queue>
		<now>22</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="hc_unit">
		<statevariables>
			<variable name="HC_Unit.heaterOn" type="boolean">true</variable>
			<variable name="HC_Unit.coolerOn" type="boolean">false</variable>
			<variable name="HC_Unit.currentRegulation" type="int">1</variable>
		</statevariables>
		<queue>
			<message arrival="22" deadline="infinity" sender="controller">switchoff()</message>
			<message arrival="25" deadline="infinity" sender="hc_unit">regulateTemp()</message>
		</queue>
		<now>22</now>
		<pc></pc>
		<res></res>
	</rebec>
</state>
<transition source="916_0" destination="919_0" executionTime="22" shift="0"> <messageserver sender="controller" owner="controller" title="UPDATEOUTPUT"/></transition>
<state id="920_0" atomicpropositions="" >
	<rebec name="room">
		<statevariables>
			<variable name="Room.currentTemp" type="int">21</variable>
			<variable name="Room.currentRegulation" type="int">1</variable>
			<variable name="Room.outside_air" type="int">0</variable>
		</statevariables>
		<queue>
			<message arrival="30" deadline="infinity" sender="room">updateStatus()</message>
		</queue>
		<now>22</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="controller">
		<statevariables>
			<variable name="Controller.currentTemp" type="int">21</variable>
			<variable name="Controller.isHeating" type="boolean">false</variable>
			<variable name="Controller.isCooling" type="boolean">false</variable>
		</statevariables>
		<queue>
		</queue>
		<now>22</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="sensor">
		<statevariables>
		</statevariables>
		<queue>
			<message arrival="22" deadline="infinity" sender="room">setCurrent(21)</message>
			<message arrival="24" deadline="infinity" sender="sensor">callSensor()</message>
		</queue>
		<now>22</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="hc_unit">
		<statevariables>
			<variable name="HC_Unit.heaterOn" type="boolean">false</variable>
			<variable name="HC_Unit.coolerOn" type="boolean">false</variable>
			<variable name="HC_Unit.currentRegulation" type="int">0</variable>
		</statevariables>
		<queue>
			<message arrival="25" deadline="infinity" sender="hc_unit">regulateTemp()</message>
		</queue>
		<now>22</now>
		<pc></pc>
		<res></res>
	</rebec>
</state>
<transition source="908_0" destination="920_0" executionTime="22" shift="0"> <messageserver sender="sensor" owner="room" title="GETTEMP"/></transition>
<transition source="919_0" destination="917_0" executionTime="22" shift="0"> <messageserver sender="controller" owner="hc_unit" title="SWITCHOFF"/></transition>
<state id="921_0" atomicpropositions="" >
	<rebec name="room">
		<statevariables>
			<variable name="Room.currentTemp" type="int">21</variable>
			<variable name="Room.currentRegulation" type="int">1</variable>
			<variable name="Room.outside_air" type="int">0</variable>
		</statevariables>
		<queue>
			<message arrival="30" deadline="infinity" sender="room">updateStatus()</message>
		</queue>
		<now>22</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="controller">
		<statevariables>
			<variable name="Controller.currentTemp" type="int">21</variable>
			<variable name="Controller.isHeating" type="boolean">false</variable>
			<variable name="Controller.isCooling" type="boolean">false</variable>
		</statevariables>
		<queue>
			<message arrival="22" deadline="infinity" sender="sensor">setCurrent(21)</message>
		</queue>
		<now>22</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="sensor">
		<statevariables>
		</statevariables>
		<queue>
			<message arrival="24" deadline="infinity" sender="sensor">callSensor()</message>
		</queue>
		<now>22</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="hc_unit">
		<statevariables>
			<variable name="HC_Unit.heaterOn" type="boolean">false</variable>
			<variable name="HC_Unit.coolerOn" type="boolean">false</variable>
			<variable name="HC_Unit.currentRegulation" type="int">0</variable>
		</statevariables>
		<queue>
			<message arrival="25" deadline="infinity" sender="hc_unit">regulateTemp()</message>
		</queue>
		<now>22</now>
		<pc></pc>
		<res></res>
	</rebec>
</state>
<transition source="920_0" destination="921_0" executionTime="22" shift="0"> <messageserver sender="room" owner="sensor" title="SETCURRENT"/></transition>
<state id="922_0" atomicpropositions="isCooling," >
	<rebec name="room">
		<statevariables>
			<variable name="Room.currentTemp" type="int">23</variable>
			<variable name="Room.currentRegulation" type="int">-1</variable>
			<variable name="Room.outside_air" type="int">0</variable>
		</statevariables>
		<queue>
			<message arrival="22" deadline="infinity" sender="sensor">getTemp()</message>
			<message arrival="30" deadline="infinity" sender="room">updateStatus()</message>
		</queue>
		<now>22</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="controller">
		<statevariables>
			<variable name="Controller.currentTemp" type="int">24</variable>
			<variable name="Controller.isHeating" type="boolean">false</variable>
			<variable name="Controller.isCooling" type="boolean">true</variable>
		</statevariables>
		<queue>
		</queue>
		<now>22</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="sensor">
		<statevariables>
		</statevariables>
		<queue>
			<message arrival="24" deadline="infinity" sender="sensor">callSensor()</message>
		</queue>
		<now>22</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="hc_unit">
		<statevariables>
			<variable name="HC_Unit.heaterOn" type="boolean">false</variable>
			<variable name="HC_Unit.coolerOn" type="boolean">true</variable>
			<variable name="HC_Unit.currentRegulation" type="int">-1</variable>
		</statevariables>
		<queue>
			<message arrival="25" deadline="infinity" sender="hc_unit">regulateTemp()</message>
		</queue>
		<now>22</now>
		<pc></pc>
		<res></res>
	</rebec>
</state>
<transition source="835_0" destination="922_0" executionTime="22" shift="0"> <messageserver sender="sensor" owner="sensor" title="CALLSENSOR"/></transition>
<state id="923_0" atomicpropositions="" >
	<rebec name="room">
		<statevariables>
			<variable name="Room.currentTemp" type="int">21</variable>
			<variable name="Room.currentRegulation" type="int">1</variable>
			<variable name="Room.outside_air" type="int">0</variable>
		</statevariables>
		<queue>
			<message arrival="30" deadline="infinity" sender="room">updateStatus()</message>
		</queue>
		<now>22</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="controller">
		<statevariables>
			<variable name="Controller.currentTemp" type="int">21</variable>
			<variable name="Controller.isHeating" type="boolean">false</variable>
			<variable name="Controller.isCooling" type="boolean">false</variable>
		</statevariables>
		<queue>
			<message arrival="22" deadline="infinity" sender="controller">updateOutput()</message>
		</queue>
		<now>22</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="sensor">
		<statevariables>
		</statevariables>
		<queue>
			<message arrival="24" deadline="infinity" sender="sensor">callSensor()</message>
		</queue>
		<now>22</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="hc_unit">
		<statevariables>
			<variable name="HC_Unit.heaterOn" type="boolean">false</variable>
			<variable name="HC_Unit.coolerOn" type="boolean">false</variable>
			<variable name="HC_Unit.currentRegulation" type="int">0</variable>
		</statevariables>
		<queue>
			<message arrival="25" deadline="infinity" sender="hc_unit">regulateTemp()</message>
		</queue>
		<now>22</now>
		<pc></pc>
		<res></res>
	</rebec>
</state>
<transition source="921_0" destination="923_0" executionTime="22" shift="0"> <messageserver sender="sensor" owner="controller" title="SETCURRENT"/></transition>
<state id="924_0" atomicpropositions="isCooling," >
	<rebec name="room">
		<statevariables>
			<variable name="Room.currentTemp" type="int">23</variable>
			<variable name="Room.currentRegulation" type="int">-1</variable>
			<variable name="Room.outside_air" type="int">0</variable>
		</statevariables>
		<queue>
			<message arrival="30" deadline="infinity" sender="room">updateStatus()</message>
		</queue>
		<now>22</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="controller">
		<statevariables>
			<variable name="Controller.currentTemp" type="int">24</variable>
			<variable name="Controller.isHeating" type="boolean">false</variable>
			<variable name="Controller.isCooling" type="boolean">true</variable>
		</statevariables>
		<queue>
		</queue>
		<now>22</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="sensor">
		<statevariables>
		</statevariables>
		<queue>
			<message arrival="22" deadline="infinity" sender="room">setCurrent(23)</message>
			<message arrival="24" deadline="infinity" sender="sensor">callSensor()</message>
		</queue>
		<now>22</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="hc_unit">
		<statevariables>
			<variable name="HC_Unit.heaterOn" type="boolean">false</variable>
			<variable name="HC_Unit.coolerOn" type="boolean">true</variable>
			<variable name="HC_Unit.currentRegulation" type="int">-1</variable>
		</statevariables>
		<queue>
			<message arrival="25" deadline="infinity" sender="hc_unit">regulateTemp()</message>
		</queue>
		<now>22</now>
		<pc></pc>
		<res></res>
	</rebec>
</state>
<transition source="922_0" destination="924_0" executionTime="22" shift="0"> <messageserver sender="sensor" owner="room" title="GETTEMP"/></transition>
<transition source="923_0" destination="906_0" executionTime="22" shift="0"> <messageserver sender="controller" owner="controller" title="UPDATEOUTPUT"/></transition>
<state id="925_0" atomicpropositions="isCooling," >
	<rebec name="room">
		<statevariables>
			<variable name="Room.currentTemp" type="int">23</variable>
			<variable name="Room.currentRegulation" type="int">-1</variable>
			<variable name="Room.outside_air" type="int">0</variable>
		</statevariables>
		<queue>
			<message arrival="30" deadline="infinity" sender="room">updateStatus()</message>
		</queue>
		<now>22</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="controller">
		<statevariables>
			<variable name="Controller.currentTemp" type="int">24</variable>
			<variable name="Controller.isHeating" type="boolean">false</variable>
			<variable name="Controller.isCooling" type="boolean">true</variable>
		</statevariables>
		<queue>
			<message arrival="22" deadline="infinity" sender="sensor">setCurrent(23)</message>
		</queue>
		<now>22</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="sensor">
		<statevariables>
		</statevariables>
		<queue>
			<message arrival="24" deadline="infinity" sender="sensor">callSensor()</message>
		</queue>
		<now>22</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="hc_unit">
		<statevariables>
			<variable name="HC_Unit.heaterOn" type="boolean">false</variable>
			<variable name="HC_Unit.coolerOn" type="boolean">true</variable>
			<variable name="HC_Unit.currentRegulation" type="int">-1</variable>
		</statevariables>
		<queue>
			<message arrival="25" deadline="infinity" sender="hc_unit">regulateTemp()</message>
		</queue>
		<now>22</now>
		<pc></pc>
		<res></res>
	</rebec>
</state>
<transition source="924_0" destination="925_0" executionTime="22" shift="0"> <messageserver sender="room" owner="sensor" title="SETCURRENT"/></transition>
<state id="926_0" atomicpropositions="isCooling," >
	<rebec name="room">
		<statevariables>
			<variable name="Room.currentTemp" type="int">23</variable>
			<variable name="Room.currentRegulation" type="int">-1</variable>
			<variable name="Room.outside_air" type="int">0</variable>
		</statevariables>
		<queue>
			<message arrival="30" deadline="infinity" sender="room">updateStatus()</message>
		</queue>
		<now>22</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="controller">
		<statevariables>
			<variable name="Controller.currentTemp" type="int">23</variable>
			<variable name="Controller.isHeating" type="boolean">false</variable>
			<variable name="Controller.isCooling" type="boolean">true</variable>
		</statevariables>
		<queue>
			<message arrival="22" deadline="infinity" sender="controller">updateOutput()</message>
		</queue>
		<now>22</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="sensor">
		<statevariables>
		</statevariables>
		<queue>
			<message arrival="24" deadline="infinity" sender="sensor">callSensor()</message>
		</queue>
		<now>22</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="hc_unit">
		<statevariables>
			<variable name="HC_Unit.heaterOn" type="boolean">false</variable>
			<variable name="HC_Unit.coolerOn" type="boolean">true</variable>
			<variable name="HC_Unit.currentRegulation" type="int">-1</variable>
		</statevariables>
		<queue>
			<message arrival="25" deadline="infinity" sender="hc_unit">regulateTemp()</message>
		</queue>
		<now>22</now>
		<pc></pc>
		<res></res>
	</rebec>
</state>
<transition source="925_0" destination="926_0" executionTime="22" shift="0"> <messageserver sender="sensor" owner="controller" title="SETCURRENT"/></transition>
<state id="927_0" atomicpropositions="isCooling," >
	<rebec name="room">
		<statevariables>
			<variable name="Room.currentTemp" type="int">23</variable>
			<variable name="Room.currentRegulation" type="int">-1</variable>
			<variable name="Room.outside_air" type="int">0</variable>
		</statevariables>
		<queue>
			<message arrival="30" deadline="infinity" sender="room">updateStatus()</message>
		</queue>
		<now>22</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="controller">
		<statevariables>
			<variable name="Controller.currentTemp" type="int">23</variable>
			<variable name="Controller.isHeating" type="boolean">false</variable>
			<variable name="Controller.isCooling" type="boolean">false</variable>
		</statevariables>
		<queue>
		</queue>
		<now>22</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="sensor">
		<statevariables>
		</statevariables>
		<queue>
			<message arrival="24" deadline="infinity" sender="sensor">callSensor()</message>
		</queue>
		<now>22</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="hc_unit">
		<statevariables>
			<variable name="HC_Unit.heaterOn" type="boolean">false</variable>
			<variable name="HC_Unit.coolerOn" type="boolean">true</variable>
			<variable name="HC_Unit.currentRegulation" type="int">-1</variable>
		</statevariables>
		<queue>
			<message arrival="22" deadline="infinity" sender="controller">switchoff()</message>
			<message arrival="25" deadline="infinity" sender="hc_unit">regulateTemp()</message>
		</queue>
		<now>22</now>
		<pc></pc>
		<res></res>
	</rebec>
</state>
<transition source="926_0" destination="927_0" executionTime="22" shift="0"> <messageserver sender="controller" owner="controller" title="UPDATEOUTPUT"/></transition>
<transition source="927_0" destination="901_0" executionTime="22" shift="0"> <messageserver sender="controller" owner="hc_unit" title="SWITCHOFF"/></transition>
<state id="928_0" atomicpropositions="" >
	<rebec name="room">
		<statevariables>
			<variable name="Room.currentTemp" type="int">23</variable>
			<variable name="Room.currentRegulation" type="int">-1</variable>
			<variable name="Room.outside_air" type="int">0</variable>
		</statevariables>
		<queue>
			<message arrival="24" deadline="infinity" sender="sensor">getTemp()</message>
			<message arrival="30" deadline="infinity" sender="room">updateStatus()</message>
		</queue>
		<now>24</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="controller">
		<statevariables>
			<variable name="Controller.currentTemp" type="int">23</variable>
			<variable name="Controller.isHeating" type="boolean">false</variable>
			<variable name="Controller.isCooling" type="boolean">false</variable>
		</statevariables>
		<queue>
		</queue>
		<now>24</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="sensor">
		<statevariables>
		</statevariables>
		<queue>
			<message arrival="26" deadline="infinity" sender="sensor">callSensor()</message>
		</queue>
		<now>24</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="hc_unit">
		<statevariables>
			<variable name="HC_Unit.heaterOn" type="boolean">false</variable>
			<variable name="HC_Unit.coolerOn" type="boolean">false</variable>
			<variable name="HC_Unit.currentRegulation" type="int">0</variable>
		</statevariables>
		<queue>
			<message arrival="25" deadline="infinity" sender="hc_unit">regulateTemp()</message>
		</queue>
		<now>24</now>
		<pc></pc>
		<res></res>
	</rebec>
</state>
<transition source="902_0" destination="928_0" executionTime="24" shift="0"> <messageserver sender="sensor" owner="sensor" title="CALLSENSOR"/></transition>
<state id="929_0" atomicpropositions="" >
	<rebec name="room">
		<statevariables>
			<variable name="Room.currentTemp" type="int">22</variable>
			<variable name="Room.currentRegulation" type="int">-1</variable>
			<variable name="Room.outside_air" type="int">1</variable>
		</statevariables>
		<queue>
			<message arrival="24" deadline="infinity" sender="sensor">getTemp()</message>
			<message arrival="30" deadline="infinity" sender="room">updateStatus()</message>
		</queue>
		<now>24</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="controller">
		<statevariables>
			<variable name="Controller.currentTemp" type="int">22</variable>
			<variable name="Controller.isHeating" type="boolean">false</variable>
			<variable name="Controller.isCooling" type="boolean">false</variable>
		</statevariables>
		<queue>
		</queue>
		<now>24</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="sensor">
		<statevariables>
		</statevariables>
		<queue>
			<message arrival="26" deadline="infinity" sender="sensor">callSensor()</message>
		</queue>
		<now>24</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="hc_unit">
		<statevariables>
			<variable name="HC_Unit.heaterOn" type="boolean">false</variable>
			<variable name="HC_Unit.coolerOn" type="boolean">false</variable>
			<variable name="HC_Unit.currentRegulation" type="int">0</variable>
		</statevariables>
		<queue>
			<message arrival="25" deadline="infinity" sender="hc_unit">regulateTemp()</message>
		</queue>
		<now>24</now>
		<pc></pc>
		<res></res>
	</rebec>
</state>
<transition source="905_0" destination="929_0" executionTime="24" shift="0"> <messageserver sender="sensor" owner="sensor" title="CALLSENSOR"/></transition>
<state id="930_0" atomicpropositions="" >
	<rebec name="room">
		<statevariables>
			<variable name="Room.currentTemp" type="int">22</variable>
			<variable name="Room.currentRegulation" type="int">1</variable>
			<variable name="Room.outside_air" type="int">-1</variable>
		</statevariables>
		<queue>
			<message arrival="24" deadline="infinity" sender="sensor">getTemp()</message>
			<message arrival="30" deadline="infinity" sender="room">updateStatus()</message>
		</queue>
		<now>24</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="controller">
		<statevariables>
			<variable name="Controller.currentTemp" type="int">22</variable>
			<variable name="Controller.isHeating" type="boolean">false</variable>
			<variable name="Controller.isCooling" type="boolean">false</variable>
		</statevariables>
		<queue>
		</queue>
		<now>24</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="sensor">
		<statevariables>
		</statevariables>
		<queue>
			<message arrival="26" deadline="infinity" sender="sensor">callSensor()</message>
		</queue>
		<now>24</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="hc_unit">
		<statevariables>
			<variable name="HC_Unit.heaterOn" type="boolean">false</variable>
			<variable name="HC_Unit.coolerOn" type="boolean">false</variable>
			<variable name="HC_Unit.currentRegulation" type="int">0</variable>
		</statevariables>
		<queue>
			<message arrival="25" deadline="infinity" sender="hc_unit">regulateTemp()</message>
		</queue>
		<now>24</now>
		<pc></pc>
		<res></res>
	</rebec>
</state>
<transition source="918_0" destination="930_0" executionTime="24" shift="0"> <messageserver sender="sensor" owner="sensor" title="CALLSENSOR"/></transition>
<state id="931_0" atomicpropositions="" >
	<rebec name="room">
		<statevariables>
			<variable name="Room.currentTemp" type="int">23</variable>
			<variable name="Room.currentRegulation" type="int">-1</variable>
			<variable name="Room.outside_air" type="int">0</variable>
		</statevariables>
		<queue>
			<message arrival="30" deadline="infinity" sender="room">updateStatus()</message>
		</queue>
		<now>24</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="controller">
		<statevariables>
			<variable name="Controller.currentTemp" type="int">23</variable>
			<variable name="Controller.isHeating" type="boolean">false</variable>
			<variable name="Controller.isCooling" type="boolean">false</variable>
		</statevariables>
		<queue>
		</queue>
		<now>24</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="sensor">
		<statevariables>
		</statevariables>
		<queue>
			<message arrival="24" deadline="infinity" sender="room">setCurrent(23)</message>
			<message arrival="26" deadline="infinity" sender="sensor">callSensor()</message>
		</queue>
		<now>24</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="hc_unit">
		<statevariables>
			<variable name="HC_Unit.heaterOn" type="boolean">false</variable>
			<variable name="HC_Unit.coolerOn" type="boolean">false</variable>
			<variable name="HC_Unit.currentRegulation" type="int">0</variable>
		</statevariables>
		<queue>
			<message arrival="25" deadline="infinity" sender="hc_unit">regulateTemp()</message>
		</queue>
		<now>24</now>
		<pc></pc>
		<res></res>
	</rebec>
</state>
<transition source="928_0" destination="931_0" executionTime="24" shift="0"> <messageserver sender="sensor" owner="room" title="GETTEMP"/></transition>
<state id="932_0" atomicpropositions="" >
	<rebec name="room">
		<statevariables>
			<variable name="Room.currentTemp" type="int">22</variable>
			<variable name="Room.currentRegulation" type="int">-1</variable>
			<variable name="Room.outside_air" type="int">1</variable>
		</statevariables>
		<queue>
			<message arrival="30" deadline="infinity" sender="room">updateStatus()</message>
		</queue>
		<now>24</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="controller">
		<statevariables>
			<variable name="Controller.currentTemp" type="int">22</variable>
			<variable name="Controller.isHeating" type="boolean">false</variable>
			<variable name="Controller.isCooling" type="boolean">false</variable>
		</statevariables>
		<queue>
		</queue>
		<now>24</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="sensor">
		<statevariables>
		</statevariables>
		<queue>
			<message arrival="24" deadline="infinity" sender="room">setCurrent(22)</message>
			<message arrival="26" deadline="infinity" sender="sensor">callSensor()</message>
		</queue>
		<now>24</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="hc_unit">
		<statevariables>
			<variable name="HC_Unit.heaterOn" type="boolean">false</variable>
			<variable name="HC_Unit.coolerOn" type="boolean">false</variable>
			<variable name="HC_Unit.currentRegulation" type="int">0</variable>
		</statevariables>
		<queue>
			<message arrival="25" deadline="infinity" sender="hc_unit">regulateTemp()</message>
		</queue>
		<now>24</now>
		<pc></pc>
		<res></res>
	</rebec>
</state>
<transition source="929_0" destination="932_0" executionTime="24" shift="0"> <messageserver sender="sensor" owner="room" title="GETTEMP"/></transition>
<state id="933_0" atomicpropositions="" >
	<rebec name="room">
		<statevariables>
			<variable name="Room.currentTemp" type="int">22</variable>
			<variable name="Room.currentRegulation" type="int">1</variable>
			<variable name="Room.outside_air" type="int">-1</variable>
		</statevariables>
		<queue>
			<message arrival="30" deadline="infinity" sender="room">updateStatus()</message>
		</queue>
		<now>24</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="controller">
		<statevariables>
			<variable name="Controller.currentTemp" type="int">22</variable>
			<variable name="Controller.isHeating" type="boolean">false</variable>
			<variable name="Controller.isCooling" type="boolean">false</variable>
		</statevariables>
		<queue>
		</queue>
		<now>24</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="sensor">
		<statevariables>
		</statevariables>
		<queue>
			<message arrival="24" deadline="infinity" sender="room">setCurrent(22)</message>
			<message arrival="26" deadline="infinity" sender="sensor">callSensor()</message>
		</queue>
		<now>24</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="hc_unit">
		<statevariables>
			<variable name="HC_Unit.heaterOn" type="boolean">false</variable>
			<variable name="HC_Unit.coolerOn" type="boolean">false</variable>
			<variable name="HC_Unit.currentRegulation" type="int">0</variable>
		</statevariables>
		<queue>
			<message arrival="25" deadline="infinity" sender="hc_unit">regulateTemp()</message>
		</queue>
		<now>24</now>
		<pc></pc>
		<res></res>
	</rebec>
</state>
<transition source="930_0" destination="933_0" executionTime="24" shift="0"> <messageserver sender="sensor" owner="room" title="GETTEMP"/></transition>
<state id="934_0" atomicpropositions="" >
	<rebec name="room">
		<statevariables>
			<variable name="Room.currentTemp" type="int">23</variable>
			<variable name="Room.currentRegulation" type="int">-1</variable>
			<variable name="Room.outside_air" type="int">0</variable>
		</statevariables>
		<queue>
			<message arrival="30" deadline="infinity" sender="room">updateStatus()</message>
		</queue>
		<now>24</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="controller">
		<statevariables>
			<variable name="Controller.currentTemp" type="int">23</variable>
			<variable name="Controller.isHeating" type="boolean">false</variable>
			<variable name="Controller.isCooling" type="boolean">false</variable>
		</statevariables>
		<queue>
			<message arrival="24" deadline="infinity" sender="sensor">setCurrent(23)</message>
		</queue>
		<now>24</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="sensor">
		<statevariables>
		</statevariables>
		<queue>
			<message arrival="26" deadline="infinity" sender="sensor">callSensor()</message>
		</queue>
		<now>24</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="hc_unit">
		<statevariables>
			<variable name="HC_Unit.heaterOn" type="boolean">false</variable>
			<variable name="HC_Unit.coolerOn" type="boolean">false</variable>
			<variable name="HC_Unit.currentRegulation" type="int">0</variable>
		</statevariables>
		<queue>
			<message arrival="25" deadline="infinity" sender="hc_unit">regulateTemp()</message>
		</queue>
		<now>24</now>
		<pc></pc>
		<res></res>
	</rebec>
</state>
<transition source="931_0" destination="934_0" executionTime="24" shift="0"> <messageserver sender="room" owner="sensor" title="SETCURRENT"/></transition>
<state id="935_0" atomicpropositions="" >
	<rebec name="room">
		<statevariables>
			<variable name="Room.currentTemp" type="int">22</variable>
			<variable name="Room.currentRegulation" type="int">-1</variable>
			<variable name="Room.outside_air" type="int">1</variable>
		</statevariables>
		<queue>
			<message arrival="30" deadline="infinity" sender="room">updateStatus()</message>
		</queue>
		<now>24</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="controller">
		<statevariables>
			<variable name="Controller.currentTemp" type="int">22</variable>
			<variable name="Controller.isHeating" type="boolean">false</variable>
			<variable name="Controller.isCooling" type="boolean">false</variable>
		</statevariables>
		<queue>
			<message arrival="24" deadline="infinity" sender="sensor">setCurrent(22)</message>
		</queue>
		<now>24</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="sensor">
		<statevariables>
		</statevariables>
		<queue>
			<message arrival="26" deadline="infinity" sender="sensor">callSensor()</message>
		</queue>
		<now>24</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="hc_unit">
		<statevariables>
			<variable name="HC_Unit.heaterOn" type="boolean">false</variable>
			<variable name="HC_Unit.coolerOn" type="boolean">false</variable>
			<variable name="HC_Unit.currentRegulation" type="int">0</variable>
		</statevariables>
		<queue>
			<message arrival="25" deadline="infinity" sender="hc_unit">regulateTemp()</message>
		</queue>
		<now>24</now>
		<pc></pc>
		<res></res>
	</rebec>
</state>
<transition source="932_0" destination="935_0" executionTime="24" shift="0"> <messageserver sender="room" owner="sensor" title="SETCURRENT"/></transition>
<state id="936_0" atomicpropositions="" >
	<rebec name="room">
		<statevariables>
			<variable name="Room.currentTemp" type="int">22</variable>
			<variable name="Room.currentRegulation" type="int">1</variable>
			<variable name="Room.outside_air" type="int">-1</variable>
		</statevariables>
		<queue>
			<message arrival="30" deadline="infinity" sender="room">updateStatus()</message>
		</queue>
		<now>24</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="controller">
		<statevariables>
			<variable name="Controller.currentTemp" type="int">22</variable>
			<variable name="Controller.isHeating" type="boolean">false</variable>
			<variable name="Controller.isCooling" type="boolean">false</variable>
		</statevariables>
		<queue>
			<message arrival="24" deadline="infinity" sender="sensor">setCurrent(22)</message>
		</queue>
		<now>24</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="sensor">
		<statevariables>
		</statevariables>
		<queue>
			<message arrival="26" deadline="infinity" sender="sensor">callSensor()</message>
		</queue>
		<now>24</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="hc_unit">
		<statevariables>
			<variable name="HC_Unit.heaterOn" type="boolean">false</variable>
			<variable name="HC_Unit.coolerOn" type="boolean">false</variable>
			<variable name="HC_Unit.currentRegulation" type="int">0</variable>
		</statevariables>
		<queue>
			<message arrival="25" deadline="infinity" sender="hc_unit">regulateTemp()</message>
		</queue>
		<now>24</now>
		<pc></pc>
		<res></res>
	</rebec>
</state>
<transition source="933_0" destination="936_0" executionTime="24" shift="0"> <messageserver sender="room" owner="sensor" title="SETCURRENT"/></transition>
<state id="937_0" atomicpropositions="" >
	<rebec name="room">
		<statevariables>
			<variable name="Room.currentTemp" type="int">23</variable>
			<variable name="Room.currentRegulation" type="int">-1</variable>
			<variable name="Room.outside_air" type="int">0</variable>
		</statevariables>
		<queue>
			<message arrival="30" deadline="infinity" sender="room">updateStatus()</message>
		</queue>
		<now>24</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="controller">
		<statevariables>
			<variable name="Controller.currentTemp" type="int">23</variable>
			<variable name="Controller.isHeating" type="boolean">false</variable>
			<variable name="Controller.isCooling" type="boolean">false</variable>
		</statevariables>
		<queue>
			<message arrival="24" deadline="infinity" sender="controller">updateOutput()</message>
		</queue>
		<now>24</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="sensor">
		<statevariables>
		</statevariables>
		<queue>
			<message arrival="26" deadline="infinity" sender="sensor">callSensor()</message>
		</queue>
		<now>24</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="hc_unit">
		<statevariables>
			<variable name="HC_Unit.heaterOn" type="boolean">false</variable>
			<variable name="HC_Unit.coolerOn" type="boolean">false</variable>
			<variable name="HC_Unit.currentRegulation" type="int">0</variable>
		</statevariables>
		<queue>
			<message arrival="25" deadline="infinity" sender="hc_unit">regulateTemp()</message>
		</queue>
		<now>24</now>
		<pc></pc>
		<res></res>
	</rebec>
</state>
<transition source="934_0" destination="937_0" executionTime="24" shift="0"> <messageserver sender="sensor" owner="controller" title="SETCURRENT"/></transition>
<state id="938_0" atomicpropositions="" >
	<rebec name="room">
		<statevariables>
			<variable name="Room.currentTemp" type="int">22</variable>
			<variable name="Room.currentRegulation" type="int">-1</variable>
			<variable name="Room.outside_air" type="int">1</variable>
		</statevariables>
		<queue>
			<message arrival="30" deadline="infinity" sender="room">updateStatus()</message>
		</queue>
		<now>24</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="controller">
		<statevariables>
			<variable name="Controller.currentTemp" type="int">22</variable>
			<variable name="Controller.isHeating" type="boolean">false</variable>
			<variable name="Controller.isCooling" type="boolean">false</variable>
		</statevariables>
		<queue>
			<message arrival="24" deadline="infinity" sender="controller">updateOutput()</message>
		</queue>
		<now>24</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="sensor">
		<statevariables>
		</statevariables>
		<queue>
			<message arrival="26" deadline="infinity" sender="sensor">callSensor()</message>
		</queue>
		<now>24</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="hc_unit">
		<statevariables>
			<variable name="HC_Unit.heaterOn" type="boolean">false</variable>
			<variable name="HC_Unit.coolerOn" type="boolean">false</variable>
			<variable name="HC_Unit.currentRegulation" type="int">0</variable>
		</statevariables>
		<queue>
			<message arrival="25" deadline="infinity" sender="hc_unit">regulateTemp()</message>
		</queue>
		<now>24</now>
		<pc></pc>
		<res></res>
	</rebec>
</state>
<transition source="935_0" destination="938_0" executionTime="24" shift="0"> <messageserver sender="sensor" owner="controller" title="SETCURRENT"/></transition>
<state id="939_0" atomicpropositions="" >
	<rebec name="room">
		<statevariables>
			<variable name="Room.currentTemp" type="int">22</variable>
			<variable name="Room.currentRegulation" type="int">1</variable>
			<variable name="Room.outside_air" type="int">-1</variable>
		</statevariables>
		<queue>
			<message arrival="30" deadline="infinity" sender="room">updateStatus()</message>
		</queue>
		<now>24</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="controller">
		<statevariables>
			<variable name="Controller.currentTemp" type="int">22</variable>
			<variable name="Controller.isHeating" type="boolean">false</variable>
			<variable name="Controller.isCooling" type="boolean">false</variable>
		</statevariables>
		<queue>
			<message arrival="24" deadline="infinity" sender="controller">updateOutput()</message>
		</queue>
		<now>24</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="sensor">
		<statevariables>
		</statevariables>
		<queue>
			<message arrival="26" deadline="infinity" sender="sensor">callSensor()</message>
		</queue>
		<now>24</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="hc_unit">
		<statevariables>
			<variable name="HC_Unit.heaterOn" type="boolean">false</variable>
			<variable name="HC_Unit.coolerOn" type="boolean">false</variable>
			<variable name="HC_Unit.currentRegulation" type="int">0</variable>
		</statevariables>
		<queue>
			<message arrival="25" deadline="infinity" sender="hc_unit">regulateTemp()</message>
		</queue>
		<now>24</now>
		<pc></pc>
		<res></res>
	</rebec>
</state>
<transition source="936_0" destination="939_0" executionTime="24" shift="0"> <messageserver sender="sensor" owner="controller" title="SETCURRENT"/></transition>
<state id="940_0" atomicpropositions="" >
	<rebec name="room">
		<statevariables>
			<variable name="Room.currentTemp" type="int">23</variable>
			<variable name="Room.currentRegulation" type="int">-1</variable>
			<variable name="Room.outside_air" type="int">0</variable>
		</statevariables>
		<queue>
			<message arrival="30" deadline="infinity" sender="room">updateStatus()</message>
		</queue>
		<now>24</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="controller">
		<statevariables>
			<variable name="Controller.currentTemp" type="int">23</variable>
			<variable name="Controller.isHeating" type="boolean">false</variable>
			<variable name="Controller.isCooling" type="boolean">false</variable>
		</statevariables>
		<queue>
		</queue>
		<now>24</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="sensor">
		<statevariables>
		</statevariables>
		<queue>
			<message arrival="26" deadline="infinity" sender="sensor">callSensor()</message>
		</queue>
		<now>24</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="hc_unit">
		<statevariables>
			<variable name="HC_Unit.heaterOn" type="boolean">false</variable>
			<variable name="HC_Unit.coolerOn" type="boolean">false</variable>
			<variable name="HC_Unit.currentRegulation" type="int">0</variable>
		</statevariables>
		<queue>
			<message arrival="25" deadline="infinity" sender="hc_unit">regulateTemp()</message>
		</queue>
		<now>24</now>
		<pc></pc>
		<res></res>
	</rebec>
</state>
<state id="941_0" atomicpropositions="" >
	<rebec name="room">
		<statevariables>
			<variable name="Room.currentTemp" type="int">23</variable>
			<variable name="Room.currentRegulation" type="int">-1</variable>
			<variable name="Room.outside_air" type="int">0</variable>
		</statevariables>
		<queue>
			<message arrival="30" deadline="infinity" sender="room">updateStatus()</message>
		</queue>
		<now>25</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="controller">
		<statevariables>
			<variable name="Controller.currentTemp" type="int">23</variable>
			<variable name="Controller.isHeating" type="boolean">false</variable>
			<variable name="Controller.isCooling" type="boolean">false</variable>
		</statevariables>
		<queue>
		</queue>
		<now>25</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="sensor">
		<statevariables>
		</statevariables>
		<queue>
			<message arrival="26" deadline="infinity" sender="sensor">callSensor()</message>
		</queue>
		<now>25</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="hc_unit">
		<statevariables>
			<variable name="HC_Unit.heaterOn" type="boolean">false</variable>
			<variable name="HC_Unit.coolerOn" type="boolean">false</variable>
			<variable name="HC_Unit.currentRegulation" type="int">0</variable>
		</statevariables>
		<queue>
			<message arrival="25" deadline="infinity" sender="hc_unit">regulateTemp()</message>
		</queue>
		<now>25</now>
		<pc></pc>
		<res></res>
	</rebec>
</state>
<transition source="940_0" destination="941_0" executionTime="24" shift="0"> <time value="1"/></transition>
<transition source="937_0" destination="940_0" executionTime="24" shift="0"> <messageserver sender="controller" owner="controller" title="UPDATEOUTPUT"/></transition>
<state id="942_0" atomicpropositions="" >
	<rebec name="room">
		<statevariables>
			<variable name="Room.currentTemp" type="int">22</variable>
			<variable name="Room.currentRegulation" type="int">-1</variable>
			<variable name="Room.outside_air" type="int">1</variable>
		</statevariables>
		<queue>
			<message arrival="30" deadline="infinity" sender="room">updateStatus()</message>
		</queue>
		<now>24</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="controller">
		<statevariables>
			<variable name="Controller.currentTemp" type="int">22</variable>
			<variable name="Controller.isHeating" type="boolean">false</variable>
			<variable name="Controller.isCooling" type="boolean">false</variable>
		</statevariables>
		<queue>
		</queue>
		<now>24</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="sensor">
		<statevariables>
		</statevariables>
		<queue>
			<message arrival="26" deadline="infinity" sender="sensor">callSensor()</message>
		</queue>
		<now>24</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="hc_unit">
		<statevariables>
			<variable name="HC_Unit.heaterOn" type="boolean">false</variable>
			<variable name="HC_Unit.coolerOn" type="boolean">false</variable>
			<variable name="HC_Unit.currentRegulation" type="int">0</variable>
		</statevariables>
		<queue>
			<message arrival="25" deadline="infinity" sender="hc_unit">regulateTemp()</message>
		</queue>
		<now>24</now>
		<pc></pc>
		<res></res>
	</rebec>
</state>
<state id="943_0" atomicpropositions="" >
	<rebec name="room">
		<statevariables>
			<variable name="Room.currentTemp" type="int">22</variable>
			<variable name="Room.currentRegulation" type="int">-1</variable>
			<variable name="Room.outside_air" type="int">1</variable>
		</statevariables>
		<queue>
			<message arrival="30" deadline="infinity" sender="room">updateStatus()</message>
		</queue>
		<now>25</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="controller">
		<statevariables>
			<variable name="Controller.currentTemp" type="int">22</variable>
			<variable name="Controller.isHeating" type="boolean">false</variable>
			<variable name="Controller.isCooling" type="boolean">false</variable>
		</statevariables>
		<queue>
		</queue>
		<now>25</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="sensor">
		<statevariables>
		</statevariables>
		<queue>
			<message arrival="26" deadline="infinity" sender="sensor">callSensor()</message>
		</queue>
		<now>25</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="hc_unit">
		<statevariables>
			<variable name="HC_Unit.heaterOn" type="boolean">false</variable>
			<variable name="HC_Unit.coolerOn" type="boolean">false</variable>
			<variable name="HC_Unit.currentRegulation" type="int">0</variable>
		</statevariables>
		<queue>
			<message arrival="25" deadline="infinity" sender="hc_unit">regulateTemp()</message>
		</queue>
		<now>25</now>
		<pc></pc>
		<res></res>
	</rebec>
</state>
<transition source="942_0" destination="943_0" executionTime="24" shift="0"> <time value="1"/></transition>
<transition source="938_0" destination="942_0" executionTime="24" shift="0"> <messageserver sender="controller" owner="controller" title="UPDATEOUTPUT"/></transition>
<state id="944_0" atomicpropositions="" >
	<rebec name="room">
		<statevariables>
			<variable name="Room.currentTemp" type="int">22</variable>
			<variable name="Room.currentRegulation" type="int">1</variable>
			<variable name="Room.outside_air" type="int">-1</variable>
		</statevariables>
		<queue>
			<message arrival="30" deadline="infinity" sender="room">updateStatus()</message>
		</queue>
		<now>24</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="controller">
		<statevariables>
			<variable name="Controller.currentTemp" type="int">22</variable>
			<variable name="Controller.isHeating" type="boolean">false</variable>
			<variable name="Controller.isCooling" type="boolean">false</variable>
		</statevariables>
		<queue>
		</queue>
		<now>24</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="sensor">
		<statevariables>
		</statevariables>
		<queue>
			<message arrival="26" deadline="infinity" sender="sensor">callSensor()</message>
		</queue>
		<now>24</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="hc_unit">
		<statevariables>
			<variable name="HC_Unit.heaterOn" type="boolean">false</variable>
			<variable name="HC_Unit.coolerOn" type="boolean">false</variable>
			<variable name="HC_Unit.currentRegulation" type="int">0</variable>
		</statevariables>
		<queue>
			<message arrival="25" deadline="infinity" sender="hc_unit">regulateTemp()</message>
		</queue>
		<now>24</now>
		<pc></pc>
		<res></res>
	</rebec>
</state>
<state id="945_0" atomicpropositions="" >
	<rebec name="room">
		<statevariables>
			<variable name="Room.currentTemp" type="int">22</variable>
			<variable name="Room.currentRegulation" type="int">1</variable>
			<variable name="Room.outside_air" type="int">-1</variable>
		</statevariables>
		<queue>
			<message arrival="30" deadline="infinity" sender="room">updateStatus()</message>
		</queue>
		<now>25</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="controller">
		<statevariables>
			<variable name="Controller.currentTemp" type="int">22</variable>
			<variable name="Controller.isHeating" type="boolean">false</variable>
			<variable name="Controller.isCooling" type="boolean">false</variable>
		</statevariables>
		<queue>
		</queue>
		<now>25</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="sensor">
		<statevariables>
		</statevariables>
		<queue>
			<message arrival="26" deadline="infinity" sender="sensor">callSensor()</message>
		</queue>
		<now>25</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="hc_unit">
		<statevariables>
			<variable name="HC_Unit.heaterOn" type="boolean">false</variable>
			<variable name="HC_Unit.coolerOn" type="boolean">false</variable>
			<variable name="HC_Unit.currentRegulation" type="int">0</variable>
		</statevariables>
		<queue>
			<message arrival="25" deadline="infinity" sender="hc_unit">regulateTemp()</message>
		</queue>
		<now>25</now>
		<pc></pc>
		<res></res>
	</rebec>
</state>
<transition source="944_0" destination="945_0" executionTime="24" shift="0"> <time value="1"/></transition>
<transition source="939_0" destination="944_0" executionTime="24" shift="0"> <messageserver sender="controller" owner="controller" title="UPDATEOUTPUT"/></transition>
<state id="946_0" atomicpropositions="" >
	<rebec name="room">
		<statevariables>
			<variable name="Room.currentTemp" type="int">21</variable>
			<variable name="Room.currentRegulation" type="int">1</variable>
			<variable name="Room.outside_air" type="int">0</variable>
		</statevariables>
		<queue>
			<message arrival="24" deadline="infinity" sender="sensor">getTemp()</message>
			<message arrival="30" deadline="infinity" sender="room">updateStatus()</message>
		</queue>
		<now>24</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="controller">
		<statevariables>
			<variable name="Controller.currentTemp" type="int">21</variable>
			<variable name="Controller.isHeating" type="boolean">false</variable>
			<variable name="Controller.isCooling" type="boolean">false</variable>
		</statevariables>
		<queue>
		</queue>
		<now>24</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="sensor">
		<statevariables>
		</statevariables>
		<queue>
			<message arrival="26" deadline="infinity" sender="sensor">callSensor()</message>
		</queue>
		<now>24</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="hc_unit">
		<statevariables>
			<variable name="HC_Unit.heaterOn" type="boolean">false</variable>
			<variable name="HC_Unit.coolerOn" type="boolean">false</variable>
			<variable name="HC_Unit.currentRegulation" type="int">0</variable>
		</statevariables>
		<queue>
			<message arrival="25" deadline="infinity" sender="hc_unit">regulateTemp()</message>
		</queue>
		<now>24</now>
		<pc></pc>
		<res></res>
	</rebec>
</state>
<transition source="907_0" destination="946_0" executionTime="24" shift="0"> <messageserver sender="sensor" owner="sensor" title="CALLSENSOR"/></transition>
<state id="947_0" atomicpropositions="" >
	<rebec name="room">
		<statevariables>
			<variable name="Room.currentTemp" type="int">21</variable>
			<variable name="Room.currentRegulation" type="int">1</variable>
			<variable name="Room.outside_air" type="int">0</variable>
		</statevariables>
		<queue>
			<message arrival="30" deadline="infinity" sender="room">updateStatus()</message>
		</queue>
		<now>24</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="controller">
		<statevariables>
			<variable name="Controller.currentTemp" type="int">21</variable>
			<variable name="Controller.isHeating" type="boolean">false</variable>
			<variable name="Controller.isCooling" type="boolean">false</variable>
		</statevariables>
		<queue>
		</queue>
		<now>24</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="sensor">
		<statevariables>
		</statevariables>
		<queue>
			<message arrival="24" deadline="infinity" sender="room">setCurrent(21)</message>
			<message arrival="26" deadline="infinity" sender="sensor">callSensor()</message>
		</queue>
		<now>24</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="hc_unit">
		<statevariables>
			<variable name="HC_Unit.heaterOn" type="boolean">false</variable>
			<variable name="HC_Unit.coolerOn" type="boolean">false</variable>
			<variable name="HC_Unit.currentRegulation" type="int">0</variable>
		</statevariables>
		<queue>
			<message arrival="25" deadline="infinity" sender="hc_unit">regulateTemp()</message>
		</queue>
		<now>24</now>
		<pc></pc>
		<res></res>
	</rebec>
</state>
<transition source="946_0" destination="947_0" executionTime="24" shift="0"> <messageserver sender="sensor" owner="room" title="GETTEMP"/></transition>
<state id="948_0" atomicpropositions="" >
	<rebec name="room">
		<statevariables>
			<variable name="Room.currentTemp" type="int">21</variable>
			<variable name="Room.currentRegulation" type="int">1</variable>
			<variable name="Room.outside_air" type="int">0</variable>
		</statevariables>
		<queue>
			<message arrival="30" deadline="infinity" sender="room">updateStatus()</message>
		</queue>
		<now>24</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="controller">
		<statevariables>
			<variable name="Controller.currentTemp" type="int">21</variable>
			<variable name="Controller.isHeating" type="boolean">false</variable>
			<variable name="Controller.isCooling" type="boolean">false</variable>
		</statevariables>
		<queue>
			<message arrival="24" deadline="infinity" sender="sensor">setCurrent(21)</message>
		</queue>
		<now>24</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="sensor">
		<statevariables>
		</statevariables>
		<queue>
			<message arrival="26" deadline="infinity" sender="sensor">callSensor()</message>
		</queue>
		<now>24</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="hc_unit">
		<statevariables>
			<variable name="HC_Unit.heaterOn" type="boolean">false</variable>
			<variable name="HC_Unit.coolerOn" type="boolean">false</variable>
			<variable name="HC_Unit.currentRegulation" type="int">0</variable>
		</statevariables>
		<queue>
			<message arrival="25" deadline="infinity" sender="hc_unit">regulateTemp()</message>
		</queue>
		<now>24</now>
		<pc></pc>
		<res></res>
	</rebec>
</state>
<transition source="947_0" destination="948_0" executionTime="24" shift="0"> <messageserver sender="room" owner="sensor" title="SETCURRENT"/></transition>
<state id="949_0" atomicpropositions="" >
	<rebec name="room">
		<statevariables>
			<variable name="Room.currentTemp" type="int">21</variable>
			<variable name="Room.currentRegulation" type="int">1</variable>
			<variable name="Room.outside_air" type="int">0</variable>
		</statevariables>
		<queue>
			<message arrival="30" deadline="infinity" sender="room">updateStatus()</message>
		</queue>
		<now>24</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="controller">
		<statevariables>
			<variable name="Controller.currentTemp" type="int">21</variable>
			<variable name="Controller.isHeating" type="boolean">false</variable>
			<variable name="Controller.isCooling" type="boolean">false</variable>
		</statevariables>
		<queue>
			<message arrival="24" deadline="infinity" sender="controller">updateOutput()</message>
		</queue>
		<now>24</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="sensor">
		<statevariables>
		</statevariables>
		<queue>
			<message arrival="26" deadline="infinity" sender="sensor">callSensor()</message>
		</queue>
		<now>24</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="hc_unit">
		<statevariables>
			<variable name="HC_Unit.heaterOn" type="boolean">false</variable>
			<variable name="HC_Unit.coolerOn" type="boolean">false</variable>
			<variable name="HC_Unit.currentRegulation" type="int">0</variable>
		</statevariables>
		<queue>
			<message arrival="25" deadline="infinity" sender="hc_unit">regulateTemp()</message>
		</queue>
		<now>24</now>
		<pc></pc>
		<res></res>
	</rebec>
</state>
<transition source="948_0" destination="949_0" executionTime="24" shift="0"> <messageserver sender="sensor" owner="controller" title="SETCURRENT"/></transition>
<state id="950_0" atomicpropositions="" >
	<rebec name="room">
		<statevariables>
			<variable name="Room.currentTemp" type="int">21</variable>
			<variable name="Room.currentRegulation" type="int">1</variable>
			<variable name="Room.outside_air" type="int">0</variable>
		</statevariables>
		<queue>
			<message arrival="30" deadline="infinity" sender="room">updateStatus()</message>
		</queue>
		<now>24</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="controller">
		<statevariables>
			<variable name="Controller.currentTemp" type="int">21</variable>
			<variable name="Controller.isHeating" type="boolean">false</variable>
			<variable name="Controller.isCooling" type="boolean">false</variable>
		</statevariables>
		<queue>
		</queue>
		<now>24</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="sensor">
		<statevariables>
		</statevariables>
		<queue>
			<message arrival="26" deadline="infinity" sender="sensor">callSensor()</message>
		</queue>
		<now>24</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="hc_unit">
		<statevariables>
			<variable name="HC_Unit.heaterOn" type="boolean">false</variable>
			<variable name="HC_Unit.coolerOn" type="boolean">false</variable>
			<variable name="HC_Unit.currentRegulation" type="int">0</variable>
		</statevariables>
		<queue>
			<message arrival="25" deadline="infinity" sender="hc_unit">regulateTemp()</message>
		</queue>
		<now>24</now>
		<pc></pc>
		<res></res>
	</rebec>
</state>
<state id="951_0" atomicpropositions="" >
	<rebec name="room">
		<statevariables>
			<variable name="Room.currentTemp" type="int">21</variable>
			<variable name="Room.currentRegulation" type="int">1</variable>
			<variable name="Room.outside_air" type="int">0</variable>
		</statevariables>
		<queue>
			<message arrival="30" deadline="infinity" sender="room">updateStatus()</message>
		</queue>
		<now>25</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="controller">
		<statevariables>
			<variable name="Controller.currentTemp" type="int">21</variable>
			<variable name="Controller.isHeating" type="boolean">false</variable>
			<variable name="Controller.isCooling" type="boolean">false</variable>
		</statevariables>
		<queue>
		</queue>
		<now>25</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="sensor">
		<statevariables>
		</statevariables>
		<queue>
			<message arrival="26" deadline="infinity" sender="sensor">callSensor()</message>
		</queue>
		<now>25</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="hc_unit">
		<statevariables>
			<variable name="HC_Unit.heaterOn" type="boolean">false</variable>
			<variable name="HC_Unit.coolerOn" type="boolean">false</variable>
			<variable name="HC_Unit.currentRegulation" type="int">0</variable>
		</statevariables>
		<queue>
			<message arrival="25" deadline="infinity" sender="hc_unit">regulateTemp()</message>
		</queue>
		<now>25</now>
		<pc></pc>
		<res></res>
	</rebec>
</state>
<transition source="950_0" destination="951_0" executionTime="24" shift="0"> <time value="1"/></transition>
<transition source="949_0" destination="950_0" executionTime="24" shift="0"> <messageserver sender="controller" owner="controller" title="UPDATEOUTPUT"/></transition>
<state id="952_0" atomicpropositions="" >
	<rebec name="room">
		<statevariables>
			<variable name="Room.currentTemp" type="int">22</variable>
			<variable name="Room.currentRegulation" type="int">1</variable>
			<variable name="Room.outside_air" type="int">-1</variable>
		</statevariables>
		<queue>
			<message arrival="25" deadline="infinity" sender="hc_unit">setRegulation(0)</message>
			<message arrival="30" deadline="infinity" sender="room">updateStatus()</message>
		</queue>
		<now>25</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="controller">
		<statevariables>
			<variable name="Controller.currentTemp" type="int">22</variable>
			<variable name="Controller.isHeating" type="boolean">false</variable>
			<variable name="Controller.isCooling" type="boolean">false</variable>
		</statevariables>
		<queue>
		</queue>
		<now>25</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="sensor">
		<statevariables>
		</statevariables>
		<queue>
			<message arrival="26" deadline="infinity" sender="sensor">callSensor()</message>
		</queue>
		<now>25</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="hc_unit">
		<statevariables>
			<variable name="HC_Unit.heaterOn" type="boolean">false</variable>
			<variable name="HC_Unit.coolerOn" type="boolean">false</variable>
			<variable name="HC_Unit.currentRegulation" type="int">0</variable>
		</statevariables>
		<queue>
			<message arrival="30" deadline="infinity" sender="hc_unit">regulateTemp()</message>
		</queue>
		<now>25</now>
		<pc></pc>
		<res></res>
	</rebec>
</state>
<transition source="945_0" destination="952_0" executionTime="25" shift="0"> <messageserver sender="hc_unit" owner="hc_unit" title="REGULATETEMP"/></transition>
<state id="953_0" atomicpropositions="" >
	<rebec name="room">
		<statevariables>
			<variable name="Room.currentTemp" type="int">22</variable>
			<variable name="Room.currentRegulation" type="int">-1</variable>
			<variable name="Room.outside_air" type="int">1</variable>
		</statevariables>
		<queue>
			<message arrival="25" deadline="infinity" sender="hc_unit">setRegulation(0)</message>
			<message arrival="30" deadline="infinity" sender="room">updateStatus()</message>
		</queue>
		<now>25</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="controller">
		<statevariables>
			<variable name="Controller.currentTemp" type="int">22</variable>
			<variable name="Controller.isHeating" type="boolean">false</variable>
			<variable name="Controller.isCooling" type="boolean">false</variable>
		</statevariables>
		<queue>
		</queue>
		<now>25</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="sensor">
		<statevariables>
		</statevariables>
		<queue>
			<message arrival="26" deadline="infinity" sender="sensor">callSensor()</message>
		</queue>
		<now>25</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="hc_unit">
		<statevariables>
			<variable name="HC_Unit.heaterOn" type="boolean">false</variable>
			<variable name="HC_Unit.coolerOn" type="boolean">false</variable>
			<variable name="HC_Unit.currentRegulation" type="int">0</variable>
		</statevariables>
		<queue>
			<message arrival="30" deadline="infinity" sender="hc_unit">regulateTemp()</message>
		</queue>
		<now>25</now>
		<pc></pc>
		<res></res>
	</rebec>
</state>
<transition source="943_0" destination="953_0" executionTime="25" shift="0"> <messageserver sender="hc_unit" owner="hc_unit" title="REGULATETEMP"/></transition>
<state id="954_0" atomicpropositions="" >
	<rebec name="room">
		<statevariables>
			<variable name="Room.currentTemp" type="int">21</variable>
			<variable name="Room.currentRegulation" type="int">1</variable>
			<variable name="Room.outside_air" type="int">0</variable>
		</statevariables>
		<queue>
			<message arrival="25" deadline="infinity" sender="hc_unit">setRegulation(0)</message>
			<message arrival="30" deadline="infinity" sender="room">updateStatus()</message>
		</queue>
		<now>25</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="controller">
		<statevariables>
			<variable name="Controller.currentTemp" type="int">21</variable>
			<variable name="Controller.isHeating" type="boolean">false</variable>
			<variable name="Controller.isCooling" type="boolean">false</variable>
		</statevariables>
		<queue>
		</queue>
		<now>25</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="sensor">
		<statevariables>
		</statevariables>
		<queue>
			<message arrival="26" deadline="infinity" sender="sensor">callSensor()</message>
		</queue>
		<now>25</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="hc_unit">
		<statevariables>
			<variable name="HC_Unit.heaterOn" type="boolean">false</variable>
			<variable name="HC_Unit.coolerOn" type="boolean">false</variable>
			<variable name="HC_Unit.currentRegulation" type="int">0</variable>
		</statevariables>
		<queue>
			<message arrival="30" deadline="infinity" sender="hc_unit">regulateTemp()</message>
		</queue>
		<now>25</now>
		<pc></pc>
		<res></res>
	</rebec>
</state>
<transition source="951_0" destination="954_0" executionTime="25" shift="0"> <messageserver sender="hc_unit" owner="hc_unit" title="REGULATETEMP"/></transition>
<transition source="952_0" destination="530_0" executionTime="25" shift="10"> <messageserver sender="hc_unit" owner="room" title="SETREGULATION"/></transition>
<transition source="953_0" destination="518_0" executionTime="25" shift="10"> <messageserver sender="hc_unit" owner="room" title="SETREGULATION"/></transition>
<state id="955_0" atomicpropositions="" >
	<rebec name="room">
		<statevariables>
			<variable name="Room.currentTemp" type="int">23</variable>
			<variable name="Room.currentRegulation" type="int">-1</variable>
			<variable name="Room.outside_air" type="int">0</variable>
		</statevariables>
		<queue>
			<message arrival="25" deadline="infinity" sender="hc_unit">setRegulation(0)</message>
			<message arrival="30" deadline="infinity" sender="room">updateStatus()</message>
		</queue>
		<now>25</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="controller">
		<statevariables>
			<variable name="Controller.currentTemp" type="int">23</variable>
			<variable name="Controller.isHeating" type="boolean">false</variable>
			<variable name="Controller.isCooling" type="boolean">false</variable>
		</statevariables>
		<queue>
		</queue>
		<now>25</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="sensor">
		<statevariables>
		</statevariables>
		<queue>
			<message arrival="26" deadline="infinity" sender="sensor">callSensor()</message>
		</queue>
		<now>25</now>
		<pc></pc>
		<res></res>
	</rebec>
	<rebec name="hc_unit">
		<statevariables>
			<variable name="HC_Unit.heaterOn" type="boolean">false</variable>
			<variable name="HC_Unit.coolerOn" type="boolean">false</variable>
			<variable name="HC_Unit.currentRegulation" type="int">0</variable>
		</statevariables>
		<queue>
			<message arrival="30" deadline="infinity" sender="hc_unit">regulateTemp()</message>
		</queue>
		<now>25</now>
		<pc></pc>
		<res></res>
	</rebec>
</state>
<transition source="941_0" destination="955_0" executionTime="25" shift="0"> <messageserver sender="hc_unit" owner="hc_unit" title="REGULATETEMP"/></transition>
<transition source="954_0" destination="516_0" executionTime="25" shift="10"> <messageserver sender="hc_unit" owner="room" title="SETREGULATION"/></transition>
<transition source="955_0" destination="528_0" executionTime="25" shift="10"> <messageserver sender="hc_unit" owner="room" title="SETREGULATION"/></transition>
</transitionsystem>